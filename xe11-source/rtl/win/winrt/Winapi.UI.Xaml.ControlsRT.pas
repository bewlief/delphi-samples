{*******************************************************}
{                                                       }
{           CodeGear Delphi Runtime Library             }
{                                                       }
{ Copyright(c) 2020-2022 Embarcadero Technologies, Inc. }
{              All rights reserved                      }
{                                                       }
{*******************************************************}

unit Winapi.UI.Xaml.ControlsRT;

{$HPPEMIT NOUSINGNAMESPACE}

{$WARN SYMBOL_DEPRECATED OFF}

interface

{$MINENUMSIZE 4}

uses 
  Winapi.Windows, 
  Winapi.WinRT, 
  System.Types, 
  System.Win.WinRT, 
  Winapi.CommonTypes, 
  Winapi.UI, 
  Winapi.Foundation, 
  Winapi.Globalization, 
  Winapi.UI.Xaml.Media, 
  Winapi.UI.Text, 
  Winapi.Media, 
  Winapi.ApplicationModel.Contacts, 
  Winapi.UI.Input.Inking, 
  Winapi.ApplicationModel, 
  Winapi.ApplicationModel.DataTransfer, 
  Winapi.WebRT, 
  Winapi.Devices.Geolocation, 
  Winapi.ServicesRT, 
  Winapi.CommonNames;

{$SCOPEDENUMS ON}

type
  // Alias type definitions for types moved from this unit

  AutoSuggestionBoxTextChangeReason = Winapi.CommonTypes.AutoSuggestionBoxTextChangeReason;
  PAutoSuggestionBoxTextChangeReason = Winapi.CommonTypes.PAutoSuggestionBoxTextChangeReason;
  ContextMenuOpeningEventHandler = Winapi.CommonTypes.ContextMenuOpeningEventHandler;
  PContextMenuOpeningEventHandler = Winapi.CommonTypes.PContextMenuOpeningEventHandler;
  DragItemsStartingEventHandler = Winapi.CommonTypes.DragItemsStartingEventHandler;
  PDragItemsStartingEventHandler = Winapi.CommonTypes.PDragItemsStartingEventHandler;
  IAutoSuggestBox = Winapi.CommonTypes.IAutoSuggestBox;
  PIAutoSuggestBox = Winapi.CommonTypes.PIAutoSuggestBox;
  IAutoSuggestBoxSuggestionChosenEventArgs = Winapi.CommonTypes.IAutoSuggestBoxSuggestionChosenEventArgs;
  PIAutoSuggestBoxSuggestionChosenEventArgs = Winapi.CommonTypes.PIAutoSuggestBoxSuggestionChosenEventArgs;
  IAutoSuggestBoxTextChangedEventArgs = Winapi.CommonTypes.IAutoSuggestBoxTextChangedEventArgs;
  PIAutoSuggestBoxTextChangedEventArgs = Winapi.CommonTypes.PIAutoSuggestBoxTextChangedEventArgs;
  IContextMenuEventArgs = Winapi.CommonTypes.IContextMenuEventArgs;
  PIContextMenuEventArgs = Winapi.CommonTypes.PIContextMenuEventArgs;
  IDataTemplateSelector = Winapi.CommonTypes.IDataTemplateSelector;
  PIDataTemplateSelector = Winapi.CommonTypes.PIDataTemplateSelector;
  IDragItemsStartingEventArgs = Winapi.CommonTypes.IDragItemsStartingEventArgs;
  PIDragItemsStartingEventArgs = Winapi.CommonTypes.PIDragItemsStartingEventArgs;
  IInkCanvas = Winapi.CommonTypes.IInkCanvas;
  PIInkCanvas = Winapi.CommonTypes.PIInkCanvas;
  IInkToolbar = Winapi.CommonTypes.IInkToolbar;
  PIInkToolbar = Winapi.CommonTypes.PIInkToolbar;
  IInkToolbarFlyoutItem = Winapi.CommonTypes.IInkToolbarFlyoutItem;
  PIInkToolbarFlyoutItem = Winapi.CommonTypes.PIInkToolbarFlyoutItem;
  IInkToolbarToggleButton = Winapi.CommonTypes.IInkToolbarToggleButton;
  PIInkToolbarToggleButton = Winapi.CommonTypes.PIInkToolbarToggleButton;
  IInkToolbarToolButton = Winapi.CommonTypes.IInkToolbarToolButton;
  PIInkToolbarToolButton = Winapi.CommonTypes.PIInkToolbarToolButton;
  IItemClickEventArgs = Winapi.CommonTypes.IItemClickEventArgs;
  PIItemClickEventArgs = Winapi.CommonTypes.PIItemClickEventArgs;
  IListViewBase = Winapi.CommonTypes.IListViewBase;
  PIListViewBase = Winapi.CommonTypes.PIListViewBase;
  IMediaElement = Winapi.CommonTypes.IMediaElement;
  PIMediaElement = Winapi.CommonTypes.PIMediaElement;
  IMediaTransportControls = Winapi.CommonTypes.IMediaTransportControls;
  PIMediaTransportControls = Winapi.CommonTypes.PIMediaTransportControls;
  INavigationView = Winapi.CommonTypes.INavigationView;
  PINavigationView = Winapi.CommonTypes.PINavigationView;
  INavigationViewDisplayModeChangedEventArgs = Winapi.CommonTypes.INavigationViewDisplayModeChangedEventArgs;
  PINavigationViewDisplayModeChangedEventArgs = Winapi.CommonTypes.PINavigationViewDisplayModeChangedEventArgs;
  INavigationViewItemInvokedEventArgs = Winapi.CommonTypes.INavigationViewItemInvokedEventArgs;
  PINavigationViewItemInvokedEventArgs = Winapi.CommonTypes.PINavigationViewItemInvokedEventArgs;
  INavigationViewSelectionChangedEventArgs = Winapi.CommonTypes.INavigationViewSelectionChangedEventArgs;
  PINavigationViewSelectionChangedEventArgs = Winapi.CommonTypes.PINavigationViewSelectionChangedEventArgs;
  IncrementalLoadingTrigger = Winapi.CommonTypes.IncrementalLoadingTrigger;
  PIncrementalLoadingTrigger = Winapi.CommonTypes.PIncrementalLoadingTrigger;
  InkToolbarFlyoutItemKind = Winapi.CommonTypes.InkToolbarFlyoutItemKind;
  PInkToolbarFlyoutItemKind = Winapi.CommonTypes.PInkToolbarFlyoutItemKind;
  InkToolbarInitialControls = Winapi.CommonTypes.InkToolbarInitialControls;
  PInkToolbarInitialControls = Winapi.CommonTypes.PInkToolbarInitialControls;
  InkToolbarToggle = Winapi.CommonTypes.InkToolbarToggle;
  PInkToolbarToggle = Winapi.CommonTypes.PInkToolbarToggle;
  InkToolbarTool = Winapi.CommonTypes.InkToolbarTool;
  PInkToolbarTool = Winapi.CommonTypes.PInkToolbarTool;
  INotifyEventArgs = Winapi.CommonTypes.INotifyEventArgs;
  PINotifyEventArgs = Winapi.CommonTypes.PINotifyEventArgs;
  IRatingControl = Winapi.CommonTypes.IRatingControl;
  PIRatingControl = Winapi.CommonTypes.PIRatingControl;
  IRatingItemInfo = Winapi.CommonTypes.IRatingItemInfo;
  PIRatingItemInfo = Winapi.CommonTypes.PIRatingItemInfo;
  IRichEditBox = Winapi.CommonTypes.IRichEditBox;
  PIRichEditBox = Winapi.CommonTypes.PIRichEditBox;
  ISearchBox = Winapi.CommonTypes.ISearchBox;
  PISearchBox = Winapi.CommonTypes.PISearchBox;
  ISearchBoxQueryChangedEventArgs = Winapi.CommonTypes.ISearchBoxQueryChangedEventArgs;
  PISearchBoxQueryChangedEventArgs = Winapi.CommonTypes.PISearchBoxQueryChangedEventArgs;
  ISearchBoxQuerySubmittedEventArgs = Winapi.CommonTypes.ISearchBoxQuerySubmittedEventArgs;
  PISearchBoxQuerySubmittedEventArgs = Winapi.CommonTypes.PISearchBoxQuerySubmittedEventArgs;
  ISearchBoxResultSuggestionChosenEventArgs = Winapi.CommonTypes.ISearchBoxResultSuggestionChosenEventArgs;
  PISearchBoxResultSuggestionChosenEventArgs = Winapi.CommonTypes.PISearchBoxResultSuggestionChosenEventArgs;
  ISearchBoxSuggestionsRequestedEventArgs = Winapi.CommonTypes.ISearchBoxSuggestionsRequestedEventArgs;
  PISearchBoxSuggestionsRequestedEventArgs = Winapi.CommonTypes.PISearchBoxSuggestionsRequestedEventArgs;
  ISplitView = Winapi.CommonTypes.ISplitView;
  PISplitView = Winapi.CommonTypes.PISplitView;
  ISplitViewPaneClosingEventArgs = Winapi.CommonTypes.ISplitViewPaneClosingEventArgs;
  PISplitViewPaneClosingEventArgs = Winapi.CommonTypes.PISplitViewPaneClosingEventArgs;
  IStyleSelector = Winapi.CommonTypes.IStyleSelector;
  PIStyleSelector = Winapi.CommonTypes.PIStyleSelector;
  ISwapChainPanel = Winapi.CommonTypes.ISwapChainPanel;
  PISwapChainPanel = Winapi.CommonTypes.PISwapChainPanel;
  ItemClickEventHandler = Winapi.CommonTypes.ItemClickEventHandler;
  PItemClickEventHandler = Winapi.CommonTypes.PItemClickEventHandler;
  ITwoPaneView = Winapi.CommonTypes.ITwoPaneView;
  PITwoPaneView = Winapi.CommonTypes.PITwoPaneView;
  IVector_1__Maps_IMapElement_Base = Winapi.CommonTypes.IVector_1__Maps_IMapElement_Base;
  IVector_1__Maps_IMapElement = Winapi.CommonTypes.IVector_1__Maps_IMapElement;
  PIVector_1__Maps_IMapElement = Winapi.CommonTypes.PIVector_1__Maps_IMapElement;
  IVector_1__Maps_IMapRouteView_Base = Winapi.CommonTypes.IVector_1__Maps_IMapRouteView_Base;
  IVector_1__Maps_IMapRouteView = Winapi.CommonTypes.IVector_1__Maps_IMapRouteView;
  PIVector_1__Maps_IMapRouteView = Winapi.CommonTypes.PIVector_1__Maps_IMapRouteView;
  IVector_1__Maps_IMapTileSource_Base = Winapi.CommonTypes.IVector_1__Maps_IMapTileSource_Base;
  IVector_1__Maps_IMapTileSource = Winapi.CommonTypes.IVector_1__Maps_IMapTileSource;
  PIVector_1__Maps_IMapTileSource = Winapi.CommonTypes.PIVector_1__Maps_IMapTileSource;
  IVectorView_1__Maps_IMapElement = Winapi.CommonTypes.IVectorView_1__Maps_IMapElement;
  PIVectorView_1__Maps_IMapElement = Winapi.CommonTypes.PIVectorView_1__Maps_IMapElement;
  IVectorView_1__Maps_IMapRouteView = Winapi.CommonTypes.IVectorView_1__Maps_IMapRouteView;
  PIVectorView_1__Maps_IMapRouteView = Winapi.CommonTypes.PIVectorView_1__Maps_IMapRouteView;
  IVectorView_1__Maps_IMapTileSource = Winapi.CommonTypes.IVectorView_1__Maps_IMapTileSource;
  PIVectorView_1__Maps_IMapTileSource = Winapi.CommonTypes.PIVectorView_1__Maps_IMapTileSource;
  IVectorView_1__Primitives_IPopup = Winapi.CommonTypes.IVectorView_1__Primitives_IPopup;
  PIVectorView_1__Primitives_IPopup = Winapi.CommonTypes.PIVectorView_1__Primitives_IPopup;
  IWebView = Winapi.CommonTypes.IWebView;
  PIWebView = Winapi.CommonTypes.PIWebView;
  IWebViewNavigationFailedEventArgs = Winapi.CommonTypes.IWebViewNavigationFailedEventArgs;
  PIWebViewNavigationFailedEventArgs = Winapi.CommonTypes.PIWebViewNavigationFailedEventArgs;
  ListViewSelectionMode = Winapi.CommonTypes.ListViewSelectionMode;
  PListViewSelectionMode = Winapi.CommonTypes.PListViewSelectionMode;
  Maps_IMapControl = Winapi.CommonTypes.Maps_IMapControl;
  PMaps_IMapControl = Winapi.CommonTypes.PMaps_IMapControl;
  Maps_IMapElement = Winapi.CommonTypes.Maps_IMapElement;
  PMaps_IMapElement = Winapi.CommonTypes.PMaps_IMapElement;
  Maps_IMapInputEventArgs = Winapi.CommonTypes.Maps_IMapInputEventArgs;
  PMaps_IMapInputEventArgs = Winapi.CommonTypes.PMaps_IMapInputEventArgs;
  Maps_IMapRouteView = Winapi.CommonTypes.Maps_IMapRouteView;
  PMaps_IMapRouteView = Winapi.CommonTypes.PMaps_IMapRouteView;
  Maps_IMapTileDataSource = Winapi.CommonTypes.Maps_IMapTileDataSource;
  PMaps_IMapTileDataSource = Winapi.CommonTypes.PMaps_IMapTileDataSource;
  Maps_IMapTileSource = Winapi.CommonTypes.Maps_IMapTileSource;
  PMaps_IMapTileSource = Winapi.CommonTypes.PMaps_IMapTileSource;
  Maps_MapAnimationKind = Winapi.CommonTypes.Maps_MapAnimationKind;
  PMaps_MapAnimationKind = Winapi.CommonTypes.PMaps_MapAnimationKind;
  Maps_MapColorScheme = Winapi.CommonTypes.Maps_MapColorScheme;
  PMaps_MapColorScheme = Winapi.CommonTypes.PMaps_MapColorScheme;
  Maps_MapLoadingStatus = Winapi.CommonTypes.Maps_MapLoadingStatus;
  PMaps_MapLoadingStatus = Winapi.CommonTypes.PMaps_MapLoadingStatus;
  Maps_MapStyle = Winapi.CommonTypes.Maps_MapStyle;
  PMaps_MapStyle = Winapi.CommonTypes.PMaps_MapStyle;
  Maps_MapTileLayer = Winapi.CommonTypes.Maps_MapTileLayer;
  PMaps_MapTileLayer = Winapi.CommonTypes.PMaps_MapTileLayer;
  Maps_MapWatermarkMode = Winapi.CommonTypes.Maps_MapWatermarkMode;
  PMaps_MapWatermarkMode = Winapi.CommonTypes.PMaps_MapWatermarkMode;
  Maps_MapZoomLevelRange = Winapi.CommonTypes.Maps_MapZoomLevelRange;
  PMaps_MapZoomLevelRange = Winapi.CommonTypes.PMaps_MapZoomLevelRange;
  NavigationViewDisplayMode = Winapi.CommonTypes.NavigationViewDisplayMode;
  PNavigationViewDisplayMode = Winapi.CommonTypes.PNavigationViewDisplayMode;
  NotifyEventHandler = Winapi.CommonTypes.NotifyEventHandler;
  PNotifyEventHandler = Winapi.CommonTypes.PNotifyEventHandler;
  Primitives_AnimationDirection = Winapi.CommonTypes.Primitives_AnimationDirection;
  PPrimitives_AnimationDirection = Winapi.CommonTypes.PPrimitives_AnimationDirection;
  Primitives_EdgeTransitionLocation = Winapi.CommonTypes.Primitives_EdgeTransitionLocation;
  PPrimitives_EdgeTransitionLocation = Winapi.CommonTypes.PPrimitives_EdgeTransitionLocation;
  Primitives_IPopup = Winapi.CommonTypes.Primitives_IPopup;
  PPrimitives_IPopup = Winapi.CommonTypes.PPrimitives_IPopup;
  Primitives_ISplitViewTemplateSettings = Winapi.CommonTypes.Primitives_ISplitViewTemplateSettings;
  PPrimitives_ISplitViewTemplateSettings = Winapi.CommonTypes.PPrimitives_ISplitViewTemplateSettings;
  ScrollIntoViewAlignment = Winapi.CommonTypes.ScrollIntoViewAlignment;
  PScrollIntoViewAlignment = Winapi.CommonTypes.PScrollIntoViewAlignment;
  SplitViewDisplayMode = Winapi.CommonTypes.SplitViewDisplayMode;
  PSplitViewDisplayMode = Winapi.CommonTypes.PSplitViewDisplayMode;
  SplitViewPanePlacement = Winapi.CommonTypes.SplitViewPanePlacement;
  PSplitViewPanePlacement = Winapi.CommonTypes.PSplitViewPanePlacement;
  TwoPaneViewMode = Winapi.CommonTypes.TwoPaneViewMode;
  PTwoPaneViewMode = Winapi.CommonTypes.PTwoPaneViewMode;
  TwoPaneViewPriority = Winapi.CommonTypes.TwoPaneViewPriority;
  PTwoPaneViewPriority = Winapi.CommonTypes.PTwoPaneViewPriority;
  TwoPaneViewTallModeConfiguration = Winapi.CommonTypes.TwoPaneViewTallModeConfiguration;
  PTwoPaneViewTallModeConfiguration = Winapi.CommonTypes.PTwoPaneViewTallModeConfiguration;
  TwoPaneViewWideModeConfiguration = Winapi.CommonTypes.TwoPaneViewWideModeConfiguration;
  PTwoPaneViewWideModeConfiguration = Winapi.CommonTypes.PTwoPaneViewWideModeConfiguration;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs_Delegate_Base;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs = Winapi.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs;
  PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs_Delegate_Base;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs = Winapi.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs;
  PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs;
  TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs_Delegate_Base;
  TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs = Winapi.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs;
  PTypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs;
  TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs_Delegate_Base;
  TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs = Winapi.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs;
  PTypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs;
  TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs_Delegate_Base;
  TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs = Winapi.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs;
  PTypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs;
  TypedEventHandler_2__ISearchBox__ISearchBoxQueryChangedEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxQueryChangedEventArgs_Delegate_Base;
  TypedEventHandler_2__ISearchBox__ISearchBoxQueryChangedEventArgs = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxQueryChangedEventArgs;
  PTypedEventHandler_2__ISearchBox__ISearchBoxQueryChangedEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__ISearchBox__ISearchBoxQueryChangedEventArgs;
  TypedEventHandler_2__ISearchBox__ISearchBoxQuerySubmittedEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxQuerySubmittedEventArgs_Delegate_Base;
  TypedEventHandler_2__ISearchBox__ISearchBoxQuerySubmittedEventArgs = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxQuerySubmittedEventArgs;
  PTypedEventHandler_2__ISearchBox__ISearchBoxQuerySubmittedEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__ISearchBox__ISearchBoxQuerySubmittedEventArgs;
  TypedEventHandler_2__ISearchBox__ISearchBoxResultSuggestionChosenEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxResultSuggestionChosenEventArgs_Delegate_Base;
  TypedEventHandler_2__ISearchBox__ISearchBoxResultSuggestionChosenEventArgs = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxResultSuggestionChosenEventArgs;
  PTypedEventHandler_2__ISearchBox__ISearchBoxResultSuggestionChosenEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__ISearchBox__ISearchBoxResultSuggestionChosenEventArgs;
  TypedEventHandler_2__ISearchBox__ISearchBoxSuggestionsRequestedEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxSuggestionsRequestedEventArgs_Delegate_Base;
  TypedEventHandler_2__ISearchBox__ISearchBoxSuggestionsRequestedEventArgs = Winapi.CommonTypes.TypedEventHandler_2__ISearchBox__ISearchBoxSuggestionsRequestedEventArgs;
  PTypedEventHandler_2__ISearchBox__ISearchBoxSuggestionsRequestedEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__ISearchBox__ISearchBoxSuggestionsRequestedEventArgs;
  TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs_Delegate_Base;
  TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs = Winapi.CommonTypes.TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs;
  PTypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs;
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapInputEventArgs_Delegate_Base = Winapi.CommonTypes.TypedEventHandler_2__Maps_IMapControl__Maps_IMapInputEventArgs_Delegate_Base;
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapInputEventArgs = Winapi.CommonTypes.TypedEventHandler_2__Maps_IMapControl__Maps_IMapInputEventArgs;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapInputEventArgs = Winapi.CommonTypes.PTypedEventHandler_2__Maps_IMapControl__Maps_IMapInputEventArgs;
  WebViewNavigationFailedEventHandler = Winapi.CommonTypes.WebViewNavigationFailedEventHandler;
  PWebViewNavigationFailedEventHandler = Winapi.CommonTypes.PWebViewNavigationFailedEventHandler;

  // Forward declarations for interfaces

  // Windows.UI.Xaml.Controls.IAppBar
  IAppBar = interface;
  PIAppBar = ^IAppBar;

  // Windows.UI.Xaml.Controls.IIconElement
  IIconElement = interface;
  PIIconElement = ^IIconElement;

  // Windows.UI.Xaml.Controls.IAppBarButton
  IAppBarButton = interface;
  PIAppBarButton = ^IAppBarButton;

  // Windows.UI.Xaml.Controls.IAppBarToggleButton
  IAppBarToggleButton = interface;
  PIAppBarToggleButton = ^IAppBarToggleButton;

  // Windows.UI.Xaml.Controls.IButton
  IButton = interface;
  PIButton = ^IButton;

  // Windows.UI.Xaml.Controls.Primitives.IButtonBase
  Primitives_IButtonBase = interface;
  PPrimitives_IButtonBase = ^Primitives_IButtonBase;

  // Windows.UI.Xaml.Controls.Primitives.ICalendarViewTemplateSettings
  Primitives_ICalendarViewTemplateSettings = interface;
  PPrimitives_ICalendarViewTemplateSettings = ^Primitives_ICalendarViewTemplateSettings;

  // Windows.UI.Xaml.Controls.ICalendarViewDayItem
  ICalendarViewDayItem = interface;
  PICalendarViewDayItem = ^ICalendarViewDayItem;

  // Windows.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs
  ICalendarViewDayItemChangingEventArgs = interface;
  PICalendarViewDayItemChangingEventArgs = ^ICalendarViewDayItemChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarView,Windows.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs = interface;
  PTypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs = ^TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs;

  // Windows.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs
  ICalendarViewSelectedDatesChangedEventArgs = interface;
  PICalendarViewSelectedDatesChangedEventArgs = ^ICalendarViewSelectedDatesChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarView,Windows.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs = interface;
  PTypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs = ^TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs;

  // Windows.UI.Xaml.Controls.ICalendarView
  ICalendarView = interface;
  PICalendarView = ^ICalendarView;

  // Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler
  CalendarViewDayItemChangingEventHandler = interface;
  PCalendarViewDayItemChangingEventHandler = ^CalendarViewDayItemChangingEventHandler;

  // Windows.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs
  ICalendarDatePickerDateChangedEventArgs = interface;
  PICalendarDatePickerDateChangedEventArgs = ^ICalendarDatePickerDateChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarDatePicker,Windows.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs>
  TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs = interface;
  PTypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs = ^TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs;

  // Windows.UI.Xaml.Controls.ICalendarDatePicker
  ICalendarDatePicker = interface;
  PICalendarDatePicker = ^ICalendarDatePicker;

  // Windows.UI.Xaml.Controls.ICaptureElement
  ICaptureElement = interface;
  PICaptureElement = ^ICaptureElement;

  // Windows.UI.Xaml.Controls.ICheckBox
  ICheckBox = interface;
  PICheckBox = ^ICheckBox;

  // Windows.UI.Xaml.Controls.Primitives.IColorPickerSlider
  Primitives_IColorPickerSlider = interface;
  PPrimitives_IColorPickerSlider = ^Primitives_IColorPickerSlider;

  // Windows.UI.Xaml.Controls.IColorChangedEventArgs
  IColorChangedEventArgs = interface;
  PIColorChangedEventArgs = ^IColorChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Primitives.IColorSpectrum,Windows.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs = interface;
  PTypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs = ^TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.IColorSpectrum
  Primitives_IColorSpectrum = interface;
  PPrimitives_IColorSpectrum = ^Primitives_IColorSpectrum;

  // Windows.UI.Xaml.Controls.Primitives.IComboBoxTemplateSettings
  Primitives_IComboBoxTemplateSettings = interface;
  PPrimitives_IComboBoxTemplateSettings = ^Primitives_IComboBoxTemplateSettings;

  // Windows.UI.Xaml.Controls.IComboBox
  IComboBox = interface;
  PIComboBox = ^IComboBox;

  // Windows.UI.Xaml.Controls.IComboBoxItem
  IComboBoxItem = interface;
  PIComboBoxItem = ^IComboBoxItem;

  // Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs
  IDatePickerValueChangedEventArgs = interface;
  PIDatePickerValueChangedEventArgs = ^IDatePickerValueChangedEventArgs;

  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs>
  EventHandler_1__IDatePickerValueChangedEventArgs = interface;
  PEventHandler_1__IDatePickerValueChangedEventArgs = ^EventHandler_1__IDatePickerValueChangedEventArgs;

  // Windows.UI.Xaml.Controls.IDatePicker
  IDatePicker = interface;
  PIDatePicker = ^IDatePicker;

  // Windows.UI.Xaml.Controls.IFlipView
  IFlipView = interface;
  PIFlipView = ^IFlipView;

  // Windows.UI.Xaml.Controls.IFlipViewItem
  IFlipViewItem = interface;
  PIFlipViewItem = ^IFlipViewItem;

  // Windows.UI.Xaml.Controls.IFlyoutPresenter
  IFlyoutPresenter = interface;
  PIFlyoutPresenter = ^IFlyoutPresenter;

  // Windows.UI.Xaml.Controls.IGridView
  IGridView = interface;
  PIGridView = ^IGridView;

  // Windows.UI.Xaml.Controls.IGridViewHeaderItem
  IGridViewHeaderItem = interface;
  PIGridViewHeaderItem = ^IGridViewHeaderItem;

  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemTemplateSettings
  Primitives_IGridViewItemTemplateSettings = interface;
  PPrimitives_IGridViewItemTemplateSettings = ^Primitives_IGridViewItemTemplateSettings;

  // Windows.UI.Xaml.Controls.IGridViewItem
  IGridViewItem = interface;
  PIGridViewItem = ^IGridViewItem;

  // Windows.UI.Xaml.Controls.IGroupItem
  IGroupItem = interface;
  PIGroupItem = ^IGroupItem;

  // Windows.UI.Xaml.Controls.IHubSection
  IHubSection = interface;
  PIHubSection = ^IHubSection;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IHubSection>
  IIterator_1__IHubSection = interface;
  PIIterator_1__IHubSection = ^IIterator_1__IHubSection;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IHubSection>
  IIterable_1__IHubSection = interface;
  PIIterable_1__IHubSection = ^IIterable_1__IHubSection;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IHubSection>
  IVectorView_1__IHubSection = interface;
  PIVectorView_1__IHubSection = ^IVectorView_1__IHubSection;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IHubSection>
  IVector_1__IHubSection = interface;
  PIVector_1__IHubSection = ^IVector_1__IHubSection;

  // Windows.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs
  IHubSectionHeaderClickEventArgs = interface;
  PIHubSectionHeaderClickEventArgs = ^IHubSectionHeaderClickEventArgs;

  // Windows.UI.Xaml.Controls.HubSectionHeaderClickEventHandler
  HubSectionHeaderClickEventHandler = interface;
  PHubSectionHeaderClickEventHandler = ^HubSectionHeaderClickEventHandler;

  // Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgs
  ISectionsInViewChangedEventArgs = interface;
  PISectionsInViewChangedEventArgs = ^ISectionsInViewChangedEventArgs;

  // Windows.UI.Xaml.Controls.SectionsInViewChangedEventHandler
  SectionsInViewChangedEventHandler = interface;
  PSectionsInViewChangedEventHandler = ^SectionsInViewChangedEventHandler;

  // Windows.UI.Xaml.Controls.IHub
  IHub = interface;
  PIHub = ^IHub;

  // Windows.UI.Xaml.Controls.IHyperlinkButton
  IHyperlinkButton = interface;
  PIHyperlinkButton = ^IHyperlinkButton;

  // Windows.UI.Xaml.Controls.IImage
  IImage = interface;
  PIImage = ^IImage;

  // Windows.UI.Xaml.Controls.IItemsPanelTemplate
  IItemsPanelTemplate = interface;
  PIItemsPanelTemplate = ^IItemsPanelTemplate;

  // Windows.UI.Xaml.Controls.Primitives.IItemsChangedEventArgs
  Primitives_IItemsChangedEventArgs = interface;
  PPrimitives_IItemsChangedEventArgs = ^Primitives_IItemsChangedEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler
  Primitives_ItemsChangedEventHandler = interface;
  PPrimitives_ItemsChangedEventHandler = ^Primitives_ItemsChangedEventHandler;

  // Windows.UI.Xaml.Controls.IUIElementCollection
  IUIElementCollection = interface;
  PIUIElementCollection = ^IUIElementCollection;

  // Windows.UI.Xaml.Controls.IPanel
  IPanel = interface;
  PIPanel = ^IPanel;

  // Windows.UI.Xaml.Controls.IItemContainerGenerator
  IItemContainerGenerator = interface;
  PIItemContainerGenerator = ^IItemContainerGenerator;

  // Windows.UI.Xaml.Controls.IGroupStyle
  IGroupStyle = interface;
  PIGroupStyle = ^IGroupStyle;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IIterator_1__IGroupStyle = interface;
  PIIterator_1__IGroupStyle = ^IIterator_1__IGroupStyle;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IIterable_1__IGroupStyle = interface;
  PIIterable_1__IGroupStyle = ^IIterable_1__IGroupStyle;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IVectorView_1__IGroupStyle = interface;
  PIVectorView_1__IGroupStyle = ^IVectorView_1__IGroupStyle;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IVector_1__IGroupStyle = interface;
  PIVector_1__IGroupStyle = ^IVector_1__IGroupStyle;

  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.IGroupStyle>
  VectorChangedEventHandler_1__IGroupStyle = interface;
  PVectorChangedEventHandler_1__IGroupStyle = ^VectorChangedEventHandler_1__IGroupStyle;

  // Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IObservableVector_1__IGroupStyle = interface;
  PIObservableVector_1__IGroupStyle = ^IObservableVector_1__IGroupStyle;

  // Windows.UI.Xaml.Controls.IGroupStyleSelector
  IGroupStyleSelector = interface;
  PIGroupStyleSelector = ^IGroupStyleSelector;

  // Windows.UI.Xaml.Controls.IItemsControl
  IItemsControl = interface;
  PIItemsControl = ^IItemsControl;

  // Windows.UI.Xaml.Controls.IListBox
  IListBox = interface;
  PIListBox = ^IListBox;

  // Windows.UI.Xaml.Controls.IListBoxItem
  IListBoxItem = interface;
  PIListBoxItem = ^IListBoxItem;

  // Windows.UI.Xaml.Controls.IListView
  IListView = interface;
  PIListView = ^IListView;

  // Windows.UI.Xaml.Controls.IListViewBaseHeaderItem
  IListViewBaseHeaderItem = interface;
  PIListViewBaseHeaderItem = ^IListViewBaseHeaderItem;

  // Windows.UI.Xaml.Controls.IListViewHeaderItem
  IListViewHeaderItem = interface;
  PIListViewHeaderItem = ^IListViewHeaderItem;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemTemplateSettings
  Primitives_IListViewItemTemplateSettings = interface;
  PPrimitives_IListViewItemTemplateSettings = ^Primitives_IListViewItemTemplateSettings;

  // Windows.UI.Xaml.Controls.IListViewItem
  IListViewItem = interface;
  PIListViewItem = ^IListViewItem;

  // Windows.UI.Xaml.Controls.IMediaPlayerElement
  IMediaPlayerElement = interface;
  PIMediaPlayerElement = ^IMediaPlayerElement;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItemBase
  IMenuFlyoutItemBase = interface;
  PIMenuFlyoutItemBase = ^IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterator_1__IMenuFlyoutItemBase = interface;
  PIIterator_1__IMenuFlyoutItemBase = ^IIterator_1__IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterable_1__IMenuFlyoutItemBase = interface;
  PIIterable_1__IMenuFlyoutItemBase = ^IIterable_1__IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVectorView_1__IMenuFlyoutItemBase = interface;
  PIVectorView_1__IMenuFlyoutItemBase = ^IVectorView_1__IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVector_1__IMenuFlyoutItemBase = interface;
  PIVector_1__IMenuFlyoutItemBase = ^IVector_1__IMenuFlyoutItemBase;

  // Windows.UI.Xaml.Controls.IMenuBarItem
  IMenuBarItem = interface;
  PIMenuBarItem = ^IMenuBarItem;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IIterator_1__IMenuBarItem = interface;
  PIIterator_1__IMenuBarItem = ^IIterator_1__IMenuBarItem;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IIterable_1__IMenuBarItem = interface;
  PIIterable_1__IMenuBarItem = ^IIterable_1__IMenuBarItem;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IVectorView_1__IMenuBarItem = interface;
  PIVectorView_1__IMenuBarItem = ^IVectorView_1__IMenuBarItem;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IVector_1__IMenuBarItem = interface;
  PIVector_1__IMenuBarItem = ^IVector_1__IMenuBarItem;

  // Windows.UI.Xaml.Controls.IMenuBar
  IMenuBar = interface;
  PIMenuBar = ^IMenuBar;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItem
  IMenuFlyoutItem = interface;
  PIMenuFlyoutItem = ^IMenuFlyoutItem;

  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenter
  IMenuFlyoutPresenter = interface;
  PIMenuFlyoutPresenter = ^IMenuFlyoutPresenter;

  // Windows.UI.Xaml.Controls.INavigationViewItem
  INavigationViewItem = interface;
  PINavigationViewItem = ^INavigationViewItem;

  // Windows.UI.Xaml.Controls.IPasswordBox
  IPasswordBox = interface;
  PIPasswordBox = ^IPasswordBox;

  // Windows.UI.Xaml.Controls.IPersonPicture
  IPersonPicture = interface;
  PIPersonPicture = ^IPersonPicture;

  // Windows.UI.Xaml.Controls.ISelectionChangedEventArgs
  ISelectionChangedEventArgs = interface;
  PISelectionChangedEventArgs = ^ISelectionChangedEventArgs;

  // Windows.UI.Xaml.Controls.SelectionChangedEventHandler
  SelectionChangedEventHandler = interface;
  PSelectionChangedEventHandler = ^SelectionChangedEventHandler;

  // Windows.UI.Xaml.Controls.IPivotItem
  IPivotItem = interface;
  PIPivotItem = ^IPivotItem;

  // Windows.UI.Xaml.Controls.IPivotItemEventArgs
  IPivotItemEventArgs = interface;
  PIPivotItemEventArgs = ^IPivotItemEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPivot,Windows.UI.Xaml.Controls.IPivotItemEventArgs>
  TypedEventHandler_2__IPivot__IPivotItemEventArgs = interface;
  PTypedEventHandler_2__IPivot__IPivotItemEventArgs = ^TypedEventHandler_2__IPivot__IPivotItemEventArgs;

  // Windows.UI.Xaml.Controls.IPivot
  IPivot = interface;
  PIPivot = ^IPivot;

  // Windows.UI.Xaml.Controls.Primitives.IProgressBarTemplateSettings
  Primitives_IProgressBarTemplateSettings = interface;
  PPrimitives_IProgressBarTemplateSettings = ^Primitives_IProgressBarTemplateSettings;

  // Windows.UI.Xaml.Controls.IProgressBar
  IProgressBar = interface;
  PIProgressBar = ^IProgressBar;

  // Windows.UI.Xaml.Controls.Primitives.IProgressRingTemplateSettings
  Primitives_IProgressRingTemplateSettings = interface;
  PPrimitives_IProgressRingTemplateSettings = ^Primitives_IProgressRingTemplateSettings;

  // Windows.UI.Xaml.Controls.IProgressRing
  IProgressRing = interface;
  PIProgressRing = ^IProgressRing;

  // Windows.UI.Xaml.Controls.IRadioButton
  IRadioButton = interface;
  PIRadioButton = ^IRadioButton;

  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs
  Primitives_IRangeBaseValueChangedEventArgs = interface;
  PPrimitives_IRangeBaseValueChangedEventArgs = ^Primitives_IRangeBaseValueChangedEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler
  Primitives_RangeBaseValueChangedEventHandler = interface;
  PPrimitives_RangeBaseValueChangedEventHandler = ^Primitives_RangeBaseValueChangedEventHandler;

  // Windows.UI.Xaml.Controls.Primitives.IRangeBase
  Primitives_IRangeBase = interface;
  PPrimitives_IRangeBase = ^Primitives_IRangeBase;

  // Windows.UI.Xaml.Controls.Primitives.IRepeatButton
  Primitives_IRepeatButton = interface;
  PPrimitives_IRepeatButton = ^Primitives_IRepeatButton;

  // Windows.UI.Xaml.Controls.IRichTextBlockOverflow
  IRichTextBlockOverflow = interface;
  PIRichTextBlockOverflow = ^IRichTextBlockOverflow;

  // Windows.UI.Xaml.Controls.IRichTextBlock
  IRichTextBlock = interface;
  PIRichTextBlock = ^IRichTextBlock;

  // Windows.UI.Xaml.Controls.Primitives.IScrollEventArgs
  Primitives_IScrollEventArgs = interface;
  PPrimitives_IScrollEventArgs = ^Primitives_IScrollEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.ScrollEventHandler
  Primitives_ScrollEventHandler = interface;
  PPrimitives_ScrollEventHandler = ^Primitives_ScrollEventHandler;

  // Windows.UI.Xaml.Controls.Primitives.IScrollBar
  Primitives_IScrollBar = interface;
  PPrimitives_IScrollBar = ^Primitives_IScrollBar;

  // Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs
  IScrollViewerViewChangedEventArgs = interface;
  PIScrollViewerViewChangedEventArgs = ^IScrollViewerViewChangedEventArgs;

  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs>
  EventHandler_1__IScrollViewerViewChangedEventArgs = interface;
  PEventHandler_1__IScrollViewerViewChangedEventArgs = ^EventHandler_1__IScrollViewerViewChangedEventArgs;

  // Windows.UI.Xaml.Controls.IScrollViewer
  IScrollViewer = interface;
  PIScrollViewer = ^IScrollViewer;

  // Windows.UI.Xaml.Controls.Primitives.ISelector
  Primitives_ISelector = interface;
  PPrimitives_ISelector = ^Primitives_ISelector;

  // Windows.UI.Xaml.Controls.ISemanticZoomLocation
  ISemanticZoomLocation = interface;
  PISemanticZoomLocation = ^ISemanticZoomLocation;

  // Windows.UI.Xaml.Controls.ISemanticZoomInformation
  ISemanticZoomInformation = interface;
  PISemanticZoomInformation = ^ISemanticZoomInformation;

  // Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs
  ISemanticZoomViewChangedEventArgs = interface;
  PISemanticZoomViewChangedEventArgs = ^ISemanticZoomViewChangedEventArgs;

  // Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler
  SemanticZoomViewChangedEventHandler = interface;
  PSemanticZoomViewChangedEventHandler = ^SemanticZoomViewChangedEventHandler;

  // Windows.UI.Xaml.Controls.ISemanticZoom
  ISemanticZoom = interface;
  PISemanticZoom = ^ISemanticZoom;

  // Windows.UI.Xaml.Controls.Primitives.ISettingsFlyoutTemplateSettings
  Primitives_ISettingsFlyoutTemplateSettings = interface;
  PPrimitives_ISettingsFlyoutTemplateSettings = ^Primitives_ISettingsFlyoutTemplateSettings;

  // Windows.UI.Xaml.Controls.IBackClickEventArgs
  IBackClickEventArgs = interface;
  PIBackClickEventArgs = ^IBackClickEventArgs;

  // Windows.UI.Xaml.Controls.BackClickEventHandler
  BackClickEventHandler = interface;
  PBackClickEventHandler = ^BackClickEventHandler;

  // Windows.UI.Xaml.Controls.ISettingsFlyout
  ISettingsFlyout = interface;
  PISettingsFlyout = ^ISettingsFlyout;

  // Windows.UI.Xaml.Controls.ISlider
  ISlider = interface;
  PISlider = ^ISlider;

  // Windows.UI.Xaml.Controls.ITextBlock
  ITextBlock = interface;
  PITextBlock = ^ITextBlock;

  // Windows.UI.Xaml.Controls.ITextChangedEventArgs
  ITextChangedEventArgs = interface;
  PITextChangedEventArgs = ^ITextChangedEventArgs;

  // Windows.UI.Xaml.Controls.TextChangedEventHandler
  TextChangedEventHandler = interface;
  PTextChangedEventHandler = ^TextChangedEventHandler;

  // Windows.UI.Xaml.Controls.ITextBox
  ITextBox = interface;
  PITextBox = ^ITextBox;

  // Windows.UI.Xaml.Controls.Primitives.IDragStartedEventArgs
  Primitives_IDragStartedEventArgs = interface;
  PPrimitives_IDragStartedEventArgs = ^Primitives_IDragStartedEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.DragStartedEventHandler
  Primitives_DragStartedEventHandler = interface;
  PPrimitives_DragStartedEventHandler = ^Primitives_DragStartedEventHandler;

  // Windows.UI.Xaml.Controls.Primitives.IDragDeltaEventArgs
  Primitives_IDragDeltaEventArgs = interface;
  PPrimitives_IDragDeltaEventArgs = ^Primitives_IDragDeltaEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.DragDeltaEventHandler
  Primitives_DragDeltaEventHandler = interface;
  PPrimitives_DragDeltaEventHandler = ^Primitives_DragDeltaEventHandler;

  // Windows.UI.Xaml.Controls.Primitives.IDragCompletedEventArgs
  Primitives_IDragCompletedEventArgs = interface;
  PPrimitives_IDragCompletedEventArgs = ^Primitives_IDragCompletedEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.DragCompletedEventHandler
  Primitives_DragCompletedEventHandler = interface;
  PPrimitives_DragCompletedEventHandler = ^Primitives_DragCompletedEventHandler;

  // Windows.UI.Xaml.Controls.Primitives.IThumb
  Primitives_IThumb = interface;
  PPrimitives_IThumb = ^Primitives_IThumb;

  // Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs
  ITimePickerValueChangedEventArgs = interface;
  PITimePickerValueChangedEventArgs = ^ITimePickerValueChangedEventArgs;

  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs>
  EventHandler_1__ITimePickerValueChangedEventArgs = interface;
  PEventHandler_1__ITimePickerValueChangedEventArgs = ^EventHandler_1__ITimePickerValueChangedEventArgs;

  // Windows.UI.Xaml.Controls.ITimePicker
  ITimePicker = interface;
  PITimePicker = ^ITimePicker;

  // Windows.UI.Xaml.Controls.Primitives.IToggleButton
  Primitives_IToggleButton = interface;
  PPrimitives_IToggleButton = ^Primitives_IToggleButton;

  // Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem
  IToggleMenuFlyoutItem = interface;
  PIToggleMenuFlyoutItem = ^IToggleMenuFlyoutItem;

  // Windows.UI.Xaml.Controls.Primitives.IToggleSwitchTemplateSettings
  Primitives_IToggleSwitchTemplateSettings = interface;
  PPrimitives_IToggleSwitchTemplateSettings = ^Primitives_IToggleSwitchTemplateSettings;

  // Windows.UI.Xaml.Controls.IToggleSwitch
  IToggleSwitch = interface;
  PIToggleSwitch = ^IToggleSwitch;

  // Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettings
  ITreeViewItemTemplateSettings = interface;
  PITreeViewItemTemplateSettings = ^ITreeViewItemTemplateSettings;

  // Windows.UI.Xaml.Controls.ITreeViewItem
  ITreeViewItem = interface;
  PITreeViewItem = ^ITreeViewItem;

  // Windows.UI.Xaml.Controls.ITreeViewList
  ITreeViewList = interface;
  PITreeViewList = ^ITreeViewList;

  // Windows.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs
  ICleanUpVirtualizedItemEventArgs = interface;
  PICleanUpVirtualizedItemEventArgs = ^ICleanUpVirtualizedItemEventArgs;

  // Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler
  CleanUpVirtualizedItemEventHandler = interface;
  PCleanUpVirtualizedItemEventHandler = ^CleanUpVirtualizedItemEventHandler;

  // Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs
  IAnchorRequestedEventArgs = interface;
  PIAnchorRequestedEventArgs = ^IAnchorRequestedEventArgs;

  // Windows.UI.Xaml.Controls.IAppBar2
  IAppBar2 = interface;
  PIAppBar2 = ^IAppBar2;

  // Windows.UI.Xaml.Controls.Primitives.IAppBarTemplateSettings
  Primitives_IAppBarTemplateSettings = interface;
  PPrimitives_IAppBarTemplateSettings = ^Primitives_IAppBarTemplateSettings;

  // Windows.UI.Xaml.Controls.IAppBar3
  IAppBar3 = interface;
  PIAppBar3 = ^IAppBar3;

  // Windows.UI.Xaml.Controls.IAppBar4
  IAppBar4 = interface;
  PIAppBar4 = ^IAppBar4;

  // Windows.UI.Xaml.Controls.IAppBarButton3
  IAppBarButton3 = interface;
  PIAppBarButton3 = ^IAppBarButton3;

  // Windows.UI.Xaml.Controls.IAppBarButton4
  IAppBarButton4 = interface;
  PIAppBarButton4 = ^IAppBarButton4;

  // Windows.UI.Xaml.Controls.Primitives.IAppBarButtonTemplateSettings
  Primitives_IAppBarButtonTemplateSettings = interface;
  PPrimitives_IAppBarButtonTemplateSettings = ^Primitives_IAppBarButtonTemplateSettings;

  // Windows.UI.Xaml.Controls.IAppBarButton5
  IAppBarButton5 = interface;
  PIAppBarButton5 = ^IAppBarButton5;

  // Windows.UI.Xaml.Controls.IAppBarButtonFactory
  IAppBarButtonFactory = interface;
  PIAppBarButtonFactory = ^IAppBarButtonFactory;

  // Windows.UI.Xaml.Controls.IAppBarButtonStatics
  IAppBarButtonStatics = interface;
  PIAppBarButtonStatics = ^IAppBarButtonStatics;

  // Windows.UI.Xaml.Controls.IAppBarButtonStatics3
  IAppBarButtonStatics3 = interface;
  PIAppBarButtonStatics3 = ^IAppBarButtonStatics3;

  // Windows.UI.Xaml.Controls.IAppBarButtonStatics4
  IAppBarButtonStatics4 = interface;
  PIAppBarButtonStatics4 = ^IAppBarButtonStatics4;

  // Windows.UI.Xaml.Controls.IAppBarElementContainer
  IAppBarElementContainer = interface;
  PIAppBarElementContainer = ^IAppBarElementContainer;

  // Windows.UI.Xaml.Controls.IAppBarElementContainerFactory
  IAppBarElementContainerFactory = interface;
  PIAppBarElementContainerFactory = ^IAppBarElementContainerFactory;

  // Windows.UI.Xaml.Controls.IAppBarElementContainerStatics
  IAppBarElementContainerStatics = interface;
  PIAppBarElementContainerStatics = ^IAppBarElementContainerStatics;

  // Windows.UI.Xaml.Controls.IAppBarFactory
  IAppBarFactory = interface;
  PIAppBarFactory = ^IAppBarFactory;

  // Windows.UI.Xaml.Controls.IAppBarOverrides
  IAppBarOverrides = interface;
  PIAppBarOverrides = ^IAppBarOverrides;

  // Windows.UI.Xaml.Controls.IAppBarOverrides3
  IAppBarOverrides3 = interface;
  PIAppBarOverrides3 = ^IAppBarOverrides3;

  // Windows.UI.Xaml.Controls.IAppBarSeparator
  IAppBarSeparator = interface;
  PIAppBarSeparator = ^IAppBarSeparator;

  // Windows.UI.Xaml.Controls.IAppBarSeparatorFactory
  IAppBarSeparatorFactory = interface;
  PIAppBarSeparatorFactory = ^IAppBarSeparatorFactory;

  // Windows.UI.Xaml.Controls.IAppBarSeparatorStatics
  IAppBarSeparatorStatics = interface;
  PIAppBarSeparatorStatics = ^IAppBarSeparatorStatics;

  // Windows.UI.Xaml.Controls.IAppBarSeparatorStatics3
  IAppBarSeparatorStatics3 = interface;
  PIAppBarSeparatorStatics3 = ^IAppBarSeparatorStatics3;

  // Windows.UI.Xaml.Controls.IAppBarStatics
  IAppBarStatics = interface;
  PIAppBarStatics = ^IAppBarStatics;

  // Windows.UI.Xaml.Controls.IAppBarStatics2
  IAppBarStatics2 = interface;
  PIAppBarStatics2 = ^IAppBarStatics2;

  // Windows.UI.Xaml.Controls.IAppBarStatics4
  IAppBarStatics4 = interface;
  PIAppBarStatics4 = ^IAppBarStatics4;

  // Windows.UI.Xaml.Controls.IAppBarToggleButton3
  IAppBarToggleButton3 = interface;
  PIAppBarToggleButton3 = ^IAppBarToggleButton3;

  // Windows.UI.Xaml.Controls.IAppBarToggleButton4
  IAppBarToggleButton4 = interface;
  PIAppBarToggleButton4 = ^IAppBarToggleButton4;

  // Windows.UI.Xaml.Controls.Primitives.IAppBarToggleButtonTemplateSettings
  Primitives_IAppBarToggleButtonTemplateSettings = interface;
  PPrimitives_IAppBarToggleButtonTemplateSettings = ^Primitives_IAppBarToggleButtonTemplateSettings;

  // Windows.UI.Xaml.Controls.IAppBarToggleButton5
  IAppBarToggleButton5 = interface;
  PIAppBarToggleButton5 = ^IAppBarToggleButton5;

  // Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory
  IAppBarToggleButtonFactory = interface;
  PIAppBarToggleButtonFactory = ^IAppBarToggleButtonFactory;

  // Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics
  IAppBarToggleButtonStatics = interface;
  PIAppBarToggleButtonStatics = ^IAppBarToggleButtonStatics;

  // Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics3
  IAppBarToggleButtonStatics3 = interface;
  PIAppBarToggleButtonStatics3 = ^IAppBarToggleButtonStatics3;

  // Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics4
  IAppBarToggleButtonStatics4 = interface;
  PIAppBarToggleButtonStatics4 = ^IAppBarToggleButtonStatics4;

  // Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs
  IAutoSuggestBoxQuerySubmittedEventArgs = interface;
  PIAutoSuggestBoxQuerySubmittedEventArgs = ^IAutoSuggestBoxQuerySubmittedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IAutoSuggestBox,Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs>
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs = interface;
  PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs = ^TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs;

  // Windows.UI.Xaml.Controls.IAutoSuggestBox2
  IAutoSuggestBox2 = interface;
  PIAutoSuggestBox2 = ^IAutoSuggestBox2;

  // Windows.UI.Xaml.Controls.IAutoSuggestBox3
  IAutoSuggestBox3 = interface;
  PIAutoSuggestBox3 = ^IAutoSuggestBox3;

  // Windows.UI.Xaml.Controls.IAutoSuggestBox4
  IAutoSuggestBox4 = interface;
  PIAutoSuggestBox4 = ^IAutoSuggestBox4;

  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics
  IAutoSuggestBoxStatics = interface;
  PIAutoSuggestBoxStatics = ^IAutoSuggestBoxStatics;

  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics2
  IAutoSuggestBoxStatics2 = interface;
  PIAutoSuggestBoxStatics2 = ^IAutoSuggestBoxStatics2;

  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics3
  IAutoSuggestBoxStatics3 = interface;
  PIAutoSuggestBoxStatics3 = ^IAutoSuggestBoxStatics3;

  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics4
  IAutoSuggestBoxStatics4 = interface;
  PIAutoSuggestBoxStatics4 = ^IAutoSuggestBoxStatics4;

  // Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics
  IAutoSuggestBoxTextChangedEventArgsStatics = interface;
  PIAutoSuggestBoxTextChangedEventArgsStatics = ^IAutoSuggestBoxTextChangedEventArgsStatics;

  // Windows.UI.Xaml.Controls.IBitmapIcon
  IBitmapIcon = interface;
  PIBitmapIcon = ^IBitmapIcon;

  // Windows.UI.Xaml.Controls.IBitmapIcon2
  IBitmapIcon2 = interface;
  PIBitmapIcon2 = ^IBitmapIcon2;

  // Windows.UI.Xaml.Controls.IBitmapIconFactory
  IBitmapIconFactory = interface;
  PIBitmapIconFactory = ^IBitmapIconFactory;

  // Windows.UI.Xaml.Controls.IBitmapIconSource
  IBitmapIconSource = interface;
  PIBitmapIconSource = ^IBitmapIconSource;

  // Windows.UI.Xaml.Controls.IBitmapIconSourceFactory
  IBitmapIconSourceFactory = interface;
  PIBitmapIconSourceFactory = ^IBitmapIconSourceFactory;

  // Windows.UI.Xaml.Controls.IBitmapIconSourceStatics
  IBitmapIconSourceStatics = interface;
  PIBitmapIconSourceStatics = ^IBitmapIconSourceStatics;

  // Windows.UI.Xaml.Controls.IBitmapIconStatics
  IBitmapIconStatics = interface;
  PIBitmapIconStatics = ^IBitmapIconStatics;

  // Windows.UI.Xaml.Controls.IBitmapIconStatics2
  IBitmapIconStatics2 = interface;
  PIBitmapIconStatics2 = ^IBitmapIconStatics2;

  // Windows.UI.Xaml.Controls.IBorder
  IBorder = interface;
  PIBorder = ^IBorder;

  // Windows.UI.Xaml.Controls.IBorder2
  IBorder2 = interface;
  PIBorder2 = ^IBorder2;

  // Windows.UI.Xaml.Controls.IBorderStatics
  IBorderStatics = interface;
  PIBorderStatics = ^IBorderStatics;

  // Windows.UI.Xaml.Controls.IBorderStatics2
  IBorderStatics2 = interface;
  PIBorderStatics2 = ^IBorderStatics2;

  // Windows.UI.Xaml.Controls.IButtonFactory
  IButtonFactory = interface;
  PIButtonFactory = ^IButtonFactory;

  // Windows.UI.Xaml.Controls.IButtonStaticsWithFlyout
  IButtonStaticsWithFlyout = interface;
  PIButtonStaticsWithFlyout = ^IButtonStaticsWithFlyout;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase
  Primitives_IFlyoutBase = interface;
  PPrimitives_IFlyoutBase = ^Primitives_IFlyoutBase;

  // Windows.UI.Xaml.Controls.IButtonWithFlyout
  IButtonWithFlyout = interface;
  PIButtonWithFlyout = ^IButtonWithFlyout;

  // Windows.UI.Xaml.Controls.ICalendarDatePicker2
  ICalendarDatePicker2 = interface;
  PICalendarDatePicker2 = ^ICalendarDatePicker2;

  // Windows.UI.Xaml.Controls.ICalendarDatePicker3
  ICalendarDatePicker3 = interface;
  PICalendarDatePicker3 = ^ICalendarDatePicker3;

  // Windows.UI.Xaml.Controls.ICalendarDatePickerFactory
  ICalendarDatePickerFactory = interface;
  PICalendarDatePickerFactory = ^ICalendarDatePickerFactory;

  // Windows.UI.Xaml.Controls.ICalendarDatePickerStatics
  ICalendarDatePickerStatics = interface;
  PICalendarDatePickerStatics = ^ICalendarDatePickerStatics;

  // Windows.UI.Xaml.Controls.ICalendarDatePickerStatics2
  ICalendarDatePickerStatics2 = interface;
  PICalendarDatePickerStatics2 = ^ICalendarDatePickerStatics2;

  // Windows.UI.Xaml.Controls.ICalendarDatePickerStatics3
  ICalendarDatePickerStatics3 = interface;
  PICalendarDatePickerStatics3 = ^ICalendarDatePickerStatics3;

  // Windows.UI.Xaml.Controls.ICalendarViewDayItemFactory
  ICalendarViewDayItemFactory = interface;
  PICalendarViewDayItemFactory = ^ICalendarViewDayItemFactory;

  // Windows.UI.Xaml.Controls.ICalendarViewDayItemStatics
  ICalendarViewDayItemStatics = interface;
  PICalendarViewDayItemStatics = ^ICalendarViewDayItemStatics;

  // Windows.UI.Xaml.Controls.ICalendarViewFactory
  ICalendarViewFactory = interface;
  PICalendarViewFactory = ^ICalendarViewFactory;

  // Windows.UI.Xaml.Controls.ICalendarViewStatics
  ICalendarViewStatics = interface;
  PICalendarViewStatics = ^ICalendarViewStatics;

  // Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs
  ICandidateWindowBoundsChangedEventArgs = interface;
  PICandidateWindowBoundsChangedEventArgs = ^ICandidateWindowBoundsChangedEventArgs;

  // Windows.UI.Xaml.Controls.ICanvas
  ICanvas = interface;
  PICanvas = ^ICanvas;

  // Windows.UI.Xaml.Controls.ICanvasFactory
  ICanvasFactory = interface;
  PICanvasFactory = ^ICanvasFactory;

  // Windows.UI.Xaml.Controls.ICanvasStatics
  ICanvasStatics = interface;
  PICanvasStatics = ^ICanvasStatics;

  // Windows.UI.Xaml.Controls.ICaptureElementStatics
  ICaptureElementStatics = interface;
  PICaptureElementStatics = ^ICaptureElementStatics;

  // Windows.UI.Xaml.Controls.ICheckBoxFactory
  ICheckBoxFactory = interface;
  PICheckBoxFactory = ^ICheckBoxFactory;

  // Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs
  IChoosingGroupHeaderContainerEventArgs = interface;
  PIChoosingGroupHeaderContainerEventArgs = ^IChoosingGroupHeaderContainerEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.ISelectorItem
  Primitives_ISelectorItem = interface;
  PPrimitives_ISelectorItem = ^Primitives_ISelectorItem;

  // Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs
  IChoosingItemContainerEventArgs = interface;
  PIChoosingItemContainerEventArgs = ^IChoosingItemContainerEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IColorPicker,Windows.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__IColorPicker__IColorChangedEventArgs = interface;
  PTypedEventHandler_2__IColorPicker__IColorChangedEventArgs = ^TypedEventHandler_2__IColorPicker__IColorChangedEventArgs;

  // Windows.UI.Xaml.Controls.IColorPicker
  IColorPicker = interface;
  PIColorPicker = ^IColorPicker;

  // Windows.UI.Xaml.Controls.IColorPickerFactory
  IColorPickerFactory = interface;
  PIColorPickerFactory = ^IColorPickerFactory;

  // Windows.UI.Xaml.Controls.IColorPickerStatics
  IColorPickerStatics = interface;
  PIColorPickerStatics = ^IColorPickerStatics;

  // Windows.UI.Xaml.Controls.IColumnDefinition
  IColumnDefinition = interface;
  PIColumnDefinition = ^IColumnDefinition;

  // Windows.UI.Xaml.Controls.IColumnDefinitionStatics
  IColumnDefinitionStatics = interface;
  PIColumnDefinitionStatics = ^IColumnDefinitionStatics;

  // Windows.UI.Xaml.Controls.IComboBox2
  IComboBox2 = interface;
  PIComboBox2 = ^IComboBox2;

  // Windows.UI.Xaml.Controls.IComboBox3
  IComboBox3 = interface;
  PIComboBox3 = ^IComboBox3;

  // Windows.UI.Xaml.Controls.IComboBox4
  IComboBox4 = interface;
  PIComboBox4 = ^IComboBox4;

  // Windows.UI.Xaml.Controls.IComboBox5
  IComboBox5 = interface;
  PIComboBox5 = ^IComboBox5;

  // Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs
  IComboBoxTextSubmittedEventArgs = interface;
  PIComboBoxTextSubmittedEventArgs = ^IComboBoxTextSubmittedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IComboBox,Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs>
  TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs = interface;
  PTypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs = ^TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs;

  // Windows.UI.Xaml.Controls.IComboBox6
  IComboBox6 = interface;
  PIComboBox6 = ^IComboBox6;

  // Windows.UI.Xaml.Controls.IComboBoxFactory
  IComboBoxFactory = interface;
  PIComboBoxFactory = ^IComboBoxFactory;

  // Windows.UI.Xaml.Controls.IComboBoxItemFactory
  IComboBoxItemFactory = interface;
  PIComboBoxItemFactory = ^IComboBoxItemFactory;

  // Windows.UI.Xaml.Controls.IComboBoxOverrides
  IComboBoxOverrides = interface;
  PIComboBoxOverrides = ^IComboBoxOverrides;

  // Windows.UI.Xaml.Controls.IComboBoxStatics
  IComboBoxStatics = interface;
  PIComboBoxStatics = ^IComboBoxStatics;

  // Windows.UI.Xaml.Controls.IComboBoxStatics2
  IComboBoxStatics2 = interface;
  PIComboBoxStatics2 = ^IComboBoxStatics2;

  // Windows.UI.Xaml.Controls.IComboBoxStatics3
  IComboBoxStatics3 = interface;
  PIComboBoxStatics3 = ^IComboBoxStatics3;

  // Windows.UI.Xaml.Controls.IComboBoxStatics4
  IComboBoxStatics4 = interface;
  PIComboBoxStatics4 = ^IComboBoxStatics4;

  // Windows.UI.Xaml.Controls.IComboBoxStatics5
  IComboBoxStatics5 = interface;
  PIComboBoxStatics5 = ^IComboBoxStatics5;

  // Windows.UI.Xaml.Controls.IComboBoxStatics6
  IComboBoxStatics6 = interface;
  PIComboBoxStatics6 = ^IComboBoxStatics6;

  // Windows.UI.Xaml.Controls.ICommandBarElement
  ICommandBarElement = interface;
  PICommandBarElement = ^ICommandBarElement;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IIterator_1__ICommandBarElement = interface;
  PIIterator_1__ICommandBarElement = ^IIterator_1__ICommandBarElement;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IIterable_1__ICommandBarElement = interface;
  PIIterable_1__ICommandBarElement = ^IIterable_1__ICommandBarElement;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IVectorView_1__ICommandBarElement = interface;
  PIVectorView_1__ICommandBarElement = ^IVectorView_1__ICommandBarElement;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IVector_1__ICommandBarElement = interface;
  PIVector_1__ICommandBarElement = ^IVector_1__ICommandBarElement;

  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  VectorChangedEventHandler_1__ICommandBarElement = interface;
  PVectorChangedEventHandler_1__ICommandBarElement = ^VectorChangedEventHandler_1__ICommandBarElement;

  // Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IObservableVector_1__ICommandBarElement = interface;
  PIObservableVector_1__ICommandBarElement = ^IObservableVector_1__ICommandBarElement;

  // Windows.UI.Xaml.Controls.ICommandBar
  ICommandBar = interface;
  PICommandBar = ^ICommandBar;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings
  Primitives_ICommandBarTemplateSettings = interface;
  PPrimitives_ICommandBarTemplateSettings = ^Primitives_ICommandBarTemplateSettings;

  // Windows.UI.Xaml.Controls.ICommandBar2
  ICommandBar2 = interface;
  PICommandBar2 = ^ICommandBar2;

  // Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs
  IDynamicOverflowItemsChangingEventArgs = interface;
  PIDynamicOverflowItemsChangingEventArgs = ^IDynamicOverflowItemsChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICommandBar,Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs>
  TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs = interface;
  PTypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs = ^TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs;

  // Windows.UI.Xaml.Controls.ICommandBar3
  ICommandBar3 = interface;
  PICommandBar3 = ^ICommandBar3;

  // Windows.UI.Xaml.Controls.ICommandBarElement2
  ICommandBarElement2 = interface;
  PICommandBarElement2 = ^ICommandBarElement2;

  // Windows.UI.Xaml.Controls.ICommandBarFactory
  ICommandBarFactory = interface;
  PICommandBarFactory = ^ICommandBarFactory;

  // Windows.UI.Xaml.Controls.ICommandBarFlyout
  ICommandBarFlyout = interface;
  PICommandBarFlyout = ^ICommandBarFlyout;

  // Windows.UI.Xaml.Controls.ICommandBarFlyoutFactory
  ICommandBarFlyoutFactory = interface;
  PICommandBarFlyoutFactory = ^ICommandBarFlyoutFactory;

  // Windows.UI.Xaml.Controls.ICommandBarOverflowPresenter
  ICommandBarOverflowPresenter = interface;
  PICommandBarOverflowPresenter = ^ICommandBarOverflowPresenter;

  // Windows.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory
  ICommandBarOverflowPresenterFactory = interface;
  PICommandBarOverflowPresenterFactory = ^ICommandBarOverflowPresenterFactory;

  // Windows.UI.Xaml.Controls.ICommandBarStatics
  ICommandBarStatics = interface;
  PICommandBarStatics = ^ICommandBarStatics;

  // Windows.UI.Xaml.Controls.ICommandBarStatics2
  ICommandBarStatics2 = interface;
  PICommandBarStatics2 = ^ICommandBarStatics2;

  // Windows.UI.Xaml.Controls.ICommandBarStatics3
  ICommandBarStatics3 = interface;
  PICommandBarStatics3 = ^ICommandBarStatics3;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs>
  TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs = interface;
  PTypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs = ^TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs;

  // Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs
  IContainerContentChangingEventArgs = interface;
  PIContainerContentChangingEventArgs = ^IContainerContentChangingEventArgs;

  // Windows.UI.Xaml.Controls.IContentControl
  IContentControl = interface;
  PIContentControl = ^IContentControl;

  // Windows.UI.Xaml.Controls.IContentControl2
  IContentControl2 = interface;
  PIContentControl2 = ^IContentControl2;

  // Windows.UI.Xaml.Controls.IContentControlFactory
  IContentControlFactory = interface;
  PIContentControlFactory = ^IContentControlFactory;

  // Windows.UI.Xaml.Controls.IContentControlOverrides
  IContentControlOverrides = interface;
  PIContentControlOverrides = ^IContentControlOverrides;

  // Windows.UI.Xaml.Controls.IContentControlStatics
  IContentControlStatics = interface;
  PIContentControlStatics = ^IContentControlStatics;

  // Windows.UI.Xaml.Controls.IContentDialogClosingDeferral
  IContentDialogClosingDeferral = interface;
  PIContentDialogClosingDeferral = ^IContentDialogClosingDeferral;

  // Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs
  IContentDialogClosingEventArgs = interface;
  PIContentDialogClosingEventArgs = ^IContentDialogClosingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs;

  // Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs
  IContentDialogClosedEventArgs = interface;
  PIContentDialogClosedEventArgs = ^IContentDialogClosedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs;

  // Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs
  IContentDialogOpenedEventArgs = interface;
  PIContentDialogOpenedEventArgs = ^IContentDialogOpenedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs;

  // Windows.UI.Xaml.Controls.IContentDialogButtonClickDeferral
  IContentDialogButtonClickDeferral = interface;
  PIContentDialogButtonClickDeferral = ^IContentDialogButtonClickDeferral;

  // Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs
  IContentDialogButtonClickEventArgs = interface;
  PIContentDialogButtonClickEventArgs = ^IContentDialogButtonClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs;

  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.ContentDialogResult>
  AsyncOperationCompletedHandler_1__ContentDialogResult = interface;
  PAsyncOperationCompletedHandler_1__ContentDialogResult = ^AsyncOperationCompletedHandler_1__ContentDialogResult;

  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.ContentDialogResult>
  IAsyncOperation_1__ContentDialogResult = interface;
  PIAsyncOperation_1__ContentDialogResult = ^IAsyncOperation_1__ContentDialogResult;

  // Windows.UI.Xaml.Controls.IContentDialog
  IContentDialog = interface;
  PIContentDialog = ^IContentDialog;

  // Windows.UI.Xaml.Controls.IContentDialog2
  IContentDialog2 = interface;
  PIContentDialog2 = ^IContentDialog2;

  // Windows.UI.Xaml.Controls.IContentDialog3
  IContentDialog3 = interface;
  PIContentDialog3 = ^IContentDialog3;

  // Windows.UI.Xaml.Controls.IContentDialogFactory
  IContentDialogFactory = interface;
  PIContentDialogFactory = ^IContentDialogFactory;

  // Windows.UI.Xaml.Controls.IContentDialogStatics
  IContentDialogStatics = interface;
  PIContentDialogStatics = ^IContentDialogStatics;

  // Windows.UI.Xaml.Controls.IContentDialogStatics2
  IContentDialogStatics2 = interface;
  PIContentDialogStatics2 = ^IContentDialogStatics2;

  // Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs
  IContentLinkChangedEventArgs = interface;
  PIContentLinkChangedEventArgs = ^IContentLinkChangedEventArgs;

  // Windows.UI.Xaml.Controls.IContentPresenter
  IContentPresenter = interface;
  PIContentPresenter = ^IContentPresenter;

  // Windows.UI.Xaml.Controls.IContentPresenter2
  IContentPresenter2 = interface;
  PIContentPresenter2 = ^IContentPresenter2;

  // Windows.UI.Xaml.Controls.IContentPresenter3
  IContentPresenter3 = interface;
  PIContentPresenter3 = ^IContentPresenter3;

  // Windows.UI.Xaml.Controls.IContentPresenter4
  IContentPresenter4 = interface;
  PIContentPresenter4 = ^IContentPresenter4;

  // Windows.UI.Xaml.Controls.IContentPresenter5
  IContentPresenter5 = interface;
  PIContentPresenter5 = ^IContentPresenter5;

  // Windows.UI.Xaml.Controls.IContentPresenterFactory
  IContentPresenterFactory = interface;
  PIContentPresenterFactory = ^IContentPresenterFactory;

  // Windows.UI.Xaml.Controls.IContentPresenterOverrides
  IContentPresenterOverrides = interface;
  PIContentPresenterOverrides = ^IContentPresenterOverrides;

  // Windows.UI.Xaml.Controls.IContentPresenterStatics
  IContentPresenterStatics = interface;
  PIContentPresenterStatics = ^IContentPresenterStatics;

  // Windows.UI.Xaml.Controls.IContentPresenterStatics2
  IContentPresenterStatics2 = interface;
  PIContentPresenterStatics2 = ^IContentPresenterStatics2;

  // Windows.UI.Xaml.Controls.IContentPresenterStatics3
  IContentPresenterStatics3 = interface;
  PIContentPresenterStatics3 = ^IContentPresenterStatics3;

  // Windows.UI.Xaml.Controls.IContentPresenterStatics4
  IContentPresenterStatics4 = interface;
  PIContentPresenterStatics4 = ^IContentPresenterStatics4;

  // Windows.UI.Xaml.Controls.IContentPresenterStatics5
  IContentPresenterStatics5 = interface;
  PIContentPresenterStatics5 = ^IContentPresenterStatics5;

  // Windows.UI.Xaml.Controls.IControlTemplate
  IControlTemplate = interface;
  PIControlTemplate = ^IControlTemplate;

  // Windows.UI.Xaml.Controls.IControl
  IControl = interface;
  PIControl = ^IControl;

  // Windows.UI.Xaml.Controls.IControl2
  IControl2 = interface;
  PIControl2 = ^IControl2;

  // Windows.UI.Xaml.Controls.IControl3
  IControl3 = interface;
  PIControl3 = ^IControl3;

  // Windows.UI.Xaml.Controls.IFocusEngagedEventArgs
  IFocusEngagedEventArgs = interface;
  PIFocusEngagedEventArgs = ^IFocusEngagedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IControl,Windows.UI.Xaml.Controls.IFocusEngagedEventArgs>
  TypedEventHandler_2__IControl__IFocusEngagedEventArgs = interface;
  PTypedEventHandler_2__IControl__IFocusEngagedEventArgs = ^TypedEventHandler_2__IControl__IFocusEngagedEventArgs;

  // Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs
  IFocusDisengagedEventArgs = interface;
  PIFocusDisengagedEventArgs = ^IFocusDisengagedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IControl,Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs>
  TypedEventHandler_2__IControl__IFocusDisengagedEventArgs = interface;
  PTypedEventHandler_2__IControl__IFocusDisengagedEventArgs = ^TypedEventHandler_2__IControl__IFocusDisengagedEventArgs;

  // Windows.UI.Xaml.Controls.IControl4
  IControl4 = interface;
  PIControl4 = ^IControl4;

  // Windows.UI.Xaml.Controls.IControl5
  IControl5 = interface;
  PIControl5 = ^IControl5;

  // Windows.UI.Xaml.Controls.IControl7
  IControl7 = interface;
  PIControl7 = ^IControl7;

  // Windows.UI.Xaml.Controls.IControlFactory
  IControlFactory = interface;
  PIControlFactory = ^IControlFactory;

  // Windows.UI.Xaml.Controls.IControlOverrides
  IControlOverrides = interface;
  PIControlOverrides = ^IControlOverrides;

  // Windows.UI.Xaml.Controls.IControlOverrides6
  IControlOverrides6 = interface;
  PIControlOverrides6 = ^IControlOverrides6;

  // Windows.UI.Xaml.Controls.IControlProtected
  IControlProtected = interface;
  PIControlProtected = ^IControlProtected;

  // Windows.UI.Xaml.Controls.IControlStatics
  IControlStatics = interface;
  PIControlStatics = ^IControlStatics;

  // Windows.UI.Xaml.Controls.IControlStatics2
  IControlStatics2 = interface;
  PIControlStatics2 = ^IControlStatics2;

  // Windows.UI.Xaml.Controls.IControlStatics3
  IControlStatics3 = interface;
  PIControlStatics3 = ^IControlStatics3;

  // Windows.UI.Xaml.Controls.IControlStatics4
  IControlStatics4 = interface;
  PIControlStatics4 = ^IControlStatics4;

  // Windows.UI.Xaml.Controls.IControlStatics5
  IControlStatics5 = interface;
  PIControlStatics5 = ^IControlStatics5;

  // Windows.UI.Xaml.Controls.IControlStatics7
  IControlStatics7 = interface;
  PIControlStatics7 = ^IControlStatics7;

  // Windows.UI.Xaml.Controls.IDataTemplateSelector2
  IDataTemplateSelector2 = interface;
  PIDataTemplateSelector2 = ^IDataTemplateSelector2;

  // Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory
  IDataTemplateSelectorFactory = interface;
  PIDataTemplateSelectorFactory = ^IDataTemplateSelectorFactory;

  // Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides
  IDataTemplateSelectorOverrides = interface;
  PIDataTemplateSelectorOverrides = ^IDataTemplateSelectorOverrides;

  // Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2
  IDataTemplateSelectorOverrides2 = interface;
  PIDataTemplateSelectorOverrides2 = ^IDataTemplateSelectorOverrides2;

  // Windows.UI.Xaml.Controls.IDatePickedEventArgs
  IDatePickedEventArgs = interface;
  PIDatePickedEventArgs = ^IDatePickedEventArgs;

  // Windows.UI.Xaml.Controls.IDatePicker2
  IDatePicker2 = interface;
  PIDatePicker2 = ^IDatePicker2;

  // Windows.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs
  IDatePickerSelectedValueChangedEventArgs = interface;
  PIDatePickerSelectedValueChangedEventArgs = ^IDatePickerSelectedValueChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IDatePicker,Windows.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs = interface;
  PTypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs = ^TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs;

  // Windows.UI.Xaml.Controls.IDatePicker3
  IDatePicker3 = interface;
  PIDatePicker3 = ^IDatePicker3;

  // Windows.UI.Xaml.Controls.IDatePickerFactory
  IDatePickerFactory = interface;
  PIDatePickerFactory = ^IDatePickerFactory;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IDatePickerFlyout,Windows.UI.Xaml.Controls.IDatePickedEventArgs>
  TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs = interface;
  PTypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs = ^TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs;

  // Windows.UI.Xaml.Controls.IDatePickerFlyout
  IDatePickerFlyout = interface;
  PIDatePickerFlyout = ^IDatePickerFlyout;

  // Windows.UI.Xaml.Controls.IDatePickerFlyout2
  IDatePickerFlyout2 = interface;
  PIDatePickerFlyout2 = ^IDatePickerFlyout2;

  // Windows.UI.Xaml.Controls.IDatePickerFlyoutItem
  IDatePickerFlyoutItem = interface;
  PIDatePickerFlyoutItem = ^IDatePickerFlyoutItem;

  // Windows.UI.Xaml.Controls.IDatePickerFlyoutItemStatics
  IDatePickerFlyoutItemStatics = interface;
  PIDatePickerFlyoutItemStatics = ^IDatePickerFlyoutItemStatics;

  // Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter
  IDatePickerFlyoutPresenter = interface;
  PIDatePickerFlyoutPresenter = ^IDatePickerFlyoutPresenter;

  // Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter2
  IDatePickerFlyoutPresenter2 = interface;
  PIDatePickerFlyoutPresenter2 = ^IDatePickerFlyoutPresenter2;

  // Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics2
  IDatePickerFlyoutPresenterStatics2 = interface;
  PIDatePickerFlyoutPresenterStatics2 = ^IDatePickerFlyoutPresenterStatics2;

  // Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics
  IDatePickerFlyoutStatics = interface;
  PIDatePickerFlyoutStatics = ^IDatePickerFlyoutStatics;

  // Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics2
  IDatePickerFlyoutStatics2 = interface;
  PIDatePickerFlyoutStatics2 = ^IDatePickerFlyoutStatics2;

  // Windows.UI.Xaml.Controls.IDatePickerStatics
  IDatePickerStatics = interface;
  PIDatePickerStatics = ^IDatePickerStatics;

  // Windows.UI.Xaml.Controls.IDatePickerStatics2
  IDatePickerStatics2 = interface;
  PIDatePickerStatics2 = ^IDatePickerStatics2;

  // Windows.UI.Xaml.Controls.IDatePickerStatics3
  IDatePickerStatics3 = interface;
  PIDatePickerStatics3 = ^IDatePickerStatics3;

  // Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs
  IDragItemsCompletedEventArgs = interface;
  PIDragItemsCompletedEventArgs = ^IDragItemsCompletedEventArgs;

  // Windows.UI.Xaml.Controls.IDropDownButton
  IDropDownButton = interface;
  PIDropDownButton = ^IDropDownButton;

  // Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeer
  IDropDownButtonAutomationPeer = interface;
  PIDropDownButtonAutomationPeer = ^IDropDownButtonAutomationPeer;

  // Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeerFactory
  IDropDownButtonAutomationPeerFactory = interface;
  PIDropDownButtonAutomationPeerFactory = ^IDropDownButtonAutomationPeerFactory;

  // Windows.UI.Xaml.Controls.IDropDownButtonFactory
  IDropDownButtonFactory = interface;
  PIDropDownButtonFactory = ^IDropDownButtonFactory;

  // Windows.UI.Xaml.Controls.IFlipView2
  IFlipView2 = interface;
  PIFlipView2 = ^IFlipView2;

  // Windows.UI.Xaml.Controls.IFlipViewFactory
  IFlipViewFactory = interface;
  PIFlipViewFactory = ^IFlipViewFactory;

  // Windows.UI.Xaml.Controls.IFlipViewItemFactory
  IFlipViewItemFactory = interface;
  PIFlipViewItemFactory = ^IFlipViewItemFactory;

  // Windows.UI.Xaml.Controls.IFlipViewStatics2
  IFlipViewStatics2 = interface;
  PIFlipViewStatics2 = ^IFlipViewStatics2;

  // Windows.UI.Xaml.Controls.IFlyout
  IFlyout = interface;
  PIFlyout = ^IFlyout;

  // Windows.UI.Xaml.Controls.IFlyoutFactory
  IFlyoutFactory = interface;
  PIFlyoutFactory = ^IFlyoutFactory;

  // Windows.UI.Xaml.Controls.IFlyoutPresenter2
  IFlyoutPresenter2 = interface;
  PIFlyoutPresenter2 = ^IFlyoutPresenter2;

  // Windows.UI.Xaml.Controls.IFlyoutPresenterFactory
  IFlyoutPresenterFactory = interface;
  PIFlyoutPresenterFactory = ^IFlyoutPresenterFactory;

  // Windows.UI.Xaml.Controls.IFlyoutPresenterStatics2
  IFlyoutPresenterStatics2 = interface;
  PIFlyoutPresenterStatics2 = ^IFlyoutPresenterStatics2;

  // Windows.UI.Xaml.Controls.IFlyoutStatics
  IFlyoutStatics = interface;
  PIFlyoutStatics = ^IFlyoutStatics;

  // Windows.UI.Xaml.Controls.IFocusEngagedEventArgs2
  IFocusEngagedEventArgs2 = interface;
  PIFocusEngagedEventArgs2 = ^IFocusEngagedEventArgs2;

  // Windows.UI.Xaml.Controls.IFontIcon
  IFontIcon = interface;
  PIFontIcon = ^IFontIcon;

  // Windows.UI.Xaml.Controls.IFontIcon2
  IFontIcon2 = interface;
  PIFontIcon2 = ^IFontIcon2;

  // Windows.UI.Xaml.Controls.IFontIcon3
  IFontIcon3 = interface;
  PIFontIcon3 = ^IFontIcon3;

  // Windows.UI.Xaml.Controls.IFontIconFactory
  IFontIconFactory = interface;
  PIFontIconFactory = ^IFontIconFactory;

  // Windows.UI.Xaml.Controls.IFontIconSource
  IFontIconSource = interface;
  PIFontIconSource = ^IFontIconSource;

  // Windows.UI.Xaml.Controls.IFontIconSourceFactory
  IFontIconSourceFactory = interface;
  PIFontIconSourceFactory = ^IFontIconSourceFactory;

  // Windows.UI.Xaml.Controls.IFontIconSourceStatics
  IFontIconSourceStatics = interface;
  PIFontIconSourceStatics = ^IFontIconSourceStatics;

  // Windows.UI.Xaml.Controls.IFontIconStatics
  IFontIconStatics = interface;
  PIFontIconStatics = ^IFontIconStatics;

  // Windows.UI.Xaml.Controls.IFontIconStatics2
  IFontIconStatics2 = interface;
  PIFontIconStatics2 = ^IFontIconStatics2;

  // Windows.UI.Xaml.Controls.IFontIconStatics3
  IFontIconStatics3 = interface;
  PIFontIconStatics3 = ^IFontIconStatics3;

  // Windows.UI.Xaml.Controls.IFrame
  IFrame = interface;
  PIFrame = ^IFrame;

  // Windows.UI.Xaml.Controls.IFrame2
  IFrame2 = interface;
  PIFrame2 = ^IFrame2;

  // Windows.UI.Xaml.Controls.IFrame3
  IFrame3 = interface;
  PIFrame3 = ^IFrame3;

  // Windows.UI.Xaml.Controls.IFrame4
  IFrame4 = interface;
  PIFrame4 = ^IFrame4;

  // Windows.UI.Xaml.Controls.IFrame5
  IFrame5 = interface;
  PIFrame5 = ^IFrame5;

  // Windows.UI.Xaml.Controls.IFrameFactory
  IFrameFactory = interface;
  PIFrameFactory = ^IFrameFactory;

  // Windows.UI.Xaml.Controls.IFrameStatics
  IFrameStatics = interface;
  PIFrameStatics = ^IFrameStatics;

  // Windows.UI.Xaml.Controls.IFrameStatics2
  IFrameStatics2 = interface;
  PIFrameStatics2 = ^IFrameStatics2;

  // Windows.UI.Xaml.Controls.IFrameStatics5
  IFrameStatics5 = interface;
  PIFrameStatics5 = ^IFrameStatics5;

  // Windows.UI.Xaml.Controls.IRowDefinition
  IRowDefinition = interface;
  PIRowDefinition = ^IRowDefinition;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IIterator_1__IRowDefinition = interface;
  PIIterator_1__IRowDefinition = ^IIterator_1__IRowDefinition;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IIterable_1__IRowDefinition = interface;
  PIIterable_1__IRowDefinition = ^IIterable_1__IRowDefinition;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IVectorView_1__IRowDefinition = interface;
  PIVectorView_1__IRowDefinition = ^IVectorView_1__IRowDefinition;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IVector_1__IRowDefinition = interface;
  PIVector_1__IRowDefinition = ^IVector_1__IRowDefinition;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IIterator_1__IColumnDefinition = interface;
  PIIterator_1__IColumnDefinition = ^IIterator_1__IColumnDefinition;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IIterable_1__IColumnDefinition = interface;
  PIIterable_1__IColumnDefinition = ^IIterable_1__IColumnDefinition;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IVectorView_1__IColumnDefinition = interface;
  PIVectorView_1__IColumnDefinition = ^IVectorView_1__IColumnDefinition;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IVector_1__IColumnDefinition = interface;
  PIVector_1__IColumnDefinition = ^IVector_1__IColumnDefinition;

  // Windows.UI.Xaml.Controls.IGrid
  IGrid = interface;
  PIGrid = ^IGrid;

  // Windows.UI.Xaml.Controls.IGrid2
  IGrid2 = interface;
  PIGrid2 = ^IGrid2;

  // Windows.UI.Xaml.Controls.IGrid3
  IGrid3 = interface;
  PIGrid3 = ^IGrid3;

  // Windows.UI.Xaml.Controls.IGrid4
  IGrid4 = interface;
  PIGrid4 = ^IGrid4;

  // Windows.UI.Xaml.Controls.IGridFactory
  IGridFactory = interface;
  PIGridFactory = ^IGridFactory;

  // Windows.UI.Xaml.Controls.IGridStatics
  IGridStatics = interface;
  PIGridStatics = ^IGridStatics;

  // Windows.UI.Xaml.Controls.IGridStatics2
  IGridStatics2 = interface;
  PIGridStatics2 = ^IGridStatics2;

  // Windows.UI.Xaml.Controls.IGridStatics3
  IGridStatics3 = interface;
  PIGridStatics3 = ^IGridStatics3;

  // Windows.UI.Xaml.Controls.IGridStatics4
  IGridStatics4 = interface;
  PIGridStatics4 = ^IGridStatics4;

  // Windows.UI.Xaml.Controls.IGridViewFactory
  IGridViewFactory = interface;
  PIGridViewFactory = ^IGridViewFactory;

  // Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory
  IGridViewHeaderItemFactory = interface;
  PIGridViewHeaderItemFactory = ^IGridViewHeaderItemFactory;

  // Windows.UI.Xaml.Controls.IGridViewItemFactory
  IGridViewItemFactory = interface;
  PIGridViewItemFactory = ^IGridViewItemFactory;

  // Windows.UI.Xaml.Controls.IGroupItemFactory
  IGroupItemFactory = interface;
  PIGroupItemFactory = ^IGroupItemFactory;

  // Windows.UI.Xaml.Controls.IGroupStyle2
  IGroupStyle2 = interface;
  PIGroupStyle2 = ^IGroupStyle2;

  // Windows.UI.Xaml.Controls.IGroupStyleFactory
  IGroupStyleFactory = interface;
  PIGroupStyleFactory = ^IGroupStyleFactory;

  // Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory
  IGroupStyleSelectorFactory = interface;
  PIGroupStyleSelectorFactory = ^IGroupStyleSelectorFactory;

  // Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides
  IGroupStyleSelectorOverrides = interface;
  PIGroupStyleSelectorOverrides = ^IGroupStyleSelectorOverrides;

  // Windows.UI.Xaml.Controls.IHandwritingPanelClosedEventArgs
  IHandwritingPanelClosedEventArgs = interface;
  PIHandwritingPanelClosedEventArgs = ^IHandwritingPanelClosedEventArgs;

  // Windows.UI.Xaml.Controls.IHandwritingPanelOpenedEventArgs
  IHandwritingPanelOpenedEventArgs = interface;
  PIHandwritingPanelOpenedEventArgs = ^IHandwritingPanelOpenedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IHandwritingView,Windows.UI.Xaml.Controls.IHandwritingPanelOpenedEventArgs>
  TypedEventHandler_2__IHandwritingView__IHandwritingPanelOpenedEventArgs = interface;
  PTypedEventHandler_2__IHandwritingView__IHandwritingPanelOpenedEventArgs = ^TypedEventHandler_2__IHandwritingView__IHandwritingPanelOpenedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IHandwritingView,Windows.UI.Xaml.Controls.IHandwritingPanelClosedEventArgs>
  TypedEventHandler_2__IHandwritingView__IHandwritingPanelClosedEventArgs = interface;
  PTypedEventHandler_2__IHandwritingView__IHandwritingPanelClosedEventArgs = ^TypedEventHandler_2__IHandwritingView__IHandwritingPanelClosedEventArgs;

  // Windows.UI.Xaml.Controls.IHandwritingView
  IHandwritingView = interface;
  PIHandwritingView = ^IHandwritingView;

  // Windows.UI.Xaml.Controls.IHandwritingViewFactory
  IHandwritingViewFactory = interface;
  PIHandwritingViewFactory = ^IHandwritingViewFactory;

  // Windows.UI.Xaml.Controls.IHandwritingViewStatics
  IHandwritingViewStatics = interface;
  PIHandwritingViewStatics = ^IHandwritingViewStatics;

  // Windows.UI.Xaml.Controls.IHubFactory
  IHubFactory = interface;
  PIHubFactory = ^IHubFactory;

  // Windows.UI.Xaml.Controls.IHubSectionFactory
  IHubSectionFactory = interface;
  PIHubSectionFactory = ^IHubSectionFactory;

  // Windows.UI.Xaml.Controls.IHubSectionStatics
  IHubSectionStatics = interface;
  PIHubSectionStatics = ^IHubSectionStatics;

  // Windows.UI.Xaml.Controls.IHubStatics
  IHubStatics = interface;
  PIHubStatics = ^IHubStatics;

  // Windows.UI.Xaml.Controls.IHyperlinkButtonFactory
  IHyperlinkButtonFactory = interface;
  PIHyperlinkButtonFactory = ^IHyperlinkButtonFactory;

  // Windows.UI.Xaml.Controls.IHyperlinkButtonStatics
  IHyperlinkButtonStatics = interface;
  PIHyperlinkButtonStatics = ^IHyperlinkButtonStatics;

  // Windows.UI.Xaml.Controls.IIconElementFactory
  IIconElementFactory = interface;
  PIIconElementFactory = ^IIconElementFactory;

  // Windows.UI.Xaml.Controls.IIconElementStatics
  IIconElementStatics = interface;
  PIIconElementStatics = ^IIconElementStatics;

  // Windows.UI.Xaml.Controls.IIconSource
  IIconSource = interface;
  PIIconSource = ^IIconSource;

  // Windows.UI.Xaml.Controls.IIconSourceElement
  IIconSourceElement = interface;
  PIIconSourceElement = ^IIconSourceElement;

  // Windows.UI.Xaml.Controls.IIconSourceElementFactory
  IIconSourceElementFactory = interface;
  PIIconSourceElementFactory = ^IIconSourceElementFactory;

  // Windows.UI.Xaml.Controls.IIconSourceElementStatics
  IIconSourceElementStatics = interface;
  PIIconSourceElementStatics = ^IIconSourceElementStatics;

  // Windows.UI.Xaml.Controls.IIconSourceFactory
  IIconSourceFactory = interface;
  PIIconSourceFactory = ^IIconSourceFactory;

  // Windows.UI.Xaml.Controls.IIconSourceStatics
  IIconSourceStatics = interface;
  PIIconSourceStatics = ^IIconSourceStatics;

  // Windows.UI.Xaml.Controls.IImage2
  IImage2 = interface;
  PIImage2 = ^IImage2;

  // Windows.UI.Xaml.Controls.IImage3
  IImage3 = interface;
  PIImage3 = ^IImage3;

  // Windows.UI.Xaml.Controls.IImageStatics
  IImageStatics = interface;
  PIImageStatics = ^IImageStatics;

  // Windows.UI.Xaml.Controls.IInkCanvasFactory
  IInkCanvasFactory = interface;
  PIInkCanvasFactory = ^IInkCanvasFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarStencilButton
  IInkToolbarStencilButton = interface;
  PIInkToolbarStencilButton = ^IInkToolbarStencilButton;

  // Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs
  IInkToolbarIsStencilButtonCheckedChangedEventArgs = interface;
  PIInkToolbarIsStencilButtonCheckedChangedEventArgs = ^IInkToolbarIsStencilButtonCheckedChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IInkToolbar,Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs>
  TypedEventHandler_2__IInkToolbar__IInkToolbarIsStencilButtonCheckedChangedEventArgs = interface;
  PTypedEventHandler_2__IInkToolbar__IInkToolbarIsStencilButtonCheckedChangedEventArgs = ^TypedEventHandler_2__IInkToolbar__IInkToolbarIsStencilButtonCheckedChangedEventArgs;

  // Windows.UI.Xaml.Controls.IInkToolbarMenuButton
  IInkToolbarMenuButton = interface;
  PIInkToolbarMenuButton = ^IInkToolbarMenuButton;

  // Windows.UI.Xaml.Controls.IInkToolbar2
  IInkToolbar2 = interface;
  PIInkToolbar2 = ^IInkToolbar2;

  // Windows.UI.Xaml.Controls.IInkToolbar3
  IInkToolbar3 = interface;
  PIInkToolbar3 = ^IInkToolbar3;

  // Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButton
  IInkToolbarBallpointPenButton = interface;
  PIInkToolbarBallpointPenButton = ^IInkToolbarBallpointPenButton;

  // Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButtonFactory
  IInkToolbarBallpointPenButtonFactory = interface;
  PIInkToolbarBallpointPenButtonFactory = ^IInkToolbarBallpointPenButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomPen
  IInkToolbarCustomPen = interface;
  PIInkToolbarCustomPen = ^IInkToolbarCustomPen;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenButton
  IInkToolbarCustomPenButton = interface;
  PIInkToolbarCustomPenButton = ^IInkToolbarCustomPenButton;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonFactory
  IInkToolbarCustomPenButtonFactory = interface;
  PIInkToolbarCustomPenButtonFactory = ^IInkToolbarCustomPenButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonStatics
  IInkToolbarCustomPenButtonStatics = interface;
  PIInkToolbarCustomPenButtonStatics = ^IInkToolbarCustomPenButtonStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenFactory
  IInkToolbarCustomPenFactory = interface;
  PIInkToolbarCustomPenFactory = ^IInkToolbarCustomPenFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenOverrides
  IInkToolbarCustomPenOverrides = interface;
  PIInkToolbarCustomPenOverrides = ^IInkToolbarCustomPenOverrides;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButton
  IInkToolbarCustomToggleButton = interface;
  PIInkToolbarCustomToggleButton = ^IInkToolbarCustomToggleButton;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButtonFactory
  IInkToolbarCustomToggleButtonFactory = interface;
  PIInkToolbarCustomToggleButtonFactory = ^IInkToolbarCustomToggleButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomToolButton
  IInkToolbarCustomToolButton = interface;
  PIInkToolbarCustomToolButton = ^IInkToolbarCustomToolButton;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonFactory
  IInkToolbarCustomToolButtonFactory = interface;
  PIInkToolbarCustomToolButtonFactory = ^IInkToolbarCustomToolButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonStatics
  IInkToolbarCustomToolButtonStatics = interface;
  PIInkToolbarCustomToolButtonStatics = ^IInkToolbarCustomToolButtonStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarEraserButton
  IInkToolbarEraserButton = interface;
  PIInkToolbarEraserButton = ^IInkToolbarEraserButton;

  // Windows.UI.Xaml.Controls.IInkToolbarEraserButton2
  IInkToolbarEraserButton2 = interface;
  PIInkToolbarEraserButton2 = ^IInkToolbarEraserButton2;

  // Windows.UI.Xaml.Controls.IInkToolbarEraserButtonFactory
  IInkToolbarEraserButtonFactory = interface;
  PIInkToolbarEraserButtonFactory = ^IInkToolbarEraserButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarEraserButtonStatics2
  IInkToolbarEraserButtonStatics2 = interface;
  PIInkToolbarEraserButtonStatics2 = ^IInkToolbarEraserButtonStatics2;

  // Windows.UI.Xaml.Controls.IInkToolbarFactory
  IInkToolbarFactory = interface;
  PIInkToolbarFactory = ^IInkToolbarFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemFactory
  IInkToolbarFlyoutItemFactory = interface;
  PIInkToolbarFlyoutItemFactory = ^IInkToolbarFlyoutItemFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemStatics
  IInkToolbarFlyoutItemStatics = interface;
  PIInkToolbarFlyoutItemStatics = ^IInkToolbarFlyoutItemStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarHighlighterButton
  IInkToolbarHighlighterButton = interface;
  PIInkToolbarHighlighterButton = ^IInkToolbarHighlighterButton;

  // Windows.UI.Xaml.Controls.IInkToolbarHighlighterButtonFactory
  IInkToolbarHighlighterButtonFactory = interface;
  PIInkToolbarHighlighterButtonFactory = ^IInkToolbarHighlighterButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarMenuButtonFactory
  IInkToolbarMenuButtonFactory = interface;
  PIInkToolbarMenuButtonFactory = ^IInkToolbarMenuButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarMenuButtonStatics
  IInkToolbarMenuButtonStatics = interface;
  PIInkToolbarMenuButtonStatics = ^IInkToolbarMenuButtonStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarPenButton
  IInkToolbarPenButton = interface;
  PIInkToolbarPenButton = ^IInkToolbarPenButton;

  // Windows.UI.Xaml.Controls.IInkToolbarPenButtonFactory
  IInkToolbarPenButtonFactory = interface;
  PIInkToolbarPenButtonFactory = ^IInkToolbarPenButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarPenButtonStatics
  IInkToolbarPenButtonStatics = interface;
  PIInkToolbarPenButtonStatics = ^IInkToolbarPenButtonStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControl
  IInkToolbarPenConfigurationControl = interface;
  PIInkToolbarPenConfigurationControl = ^IInkToolbarPenConfigurationControl;

  // Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlFactory
  IInkToolbarPenConfigurationControlFactory = interface;
  PIInkToolbarPenConfigurationControlFactory = ^IInkToolbarPenConfigurationControlFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlStatics
  IInkToolbarPenConfigurationControlStatics = interface;
  PIInkToolbarPenConfigurationControlStatics = ^IInkToolbarPenConfigurationControlStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarPencilButton
  IInkToolbarPencilButton = interface;
  PIInkToolbarPencilButton = ^IInkToolbarPencilButton;

  // Windows.UI.Xaml.Controls.IInkToolbarPencilButtonFactory
  IInkToolbarPencilButtonFactory = interface;
  PIInkToolbarPencilButtonFactory = ^IInkToolbarPencilButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarRulerButton
  IInkToolbarRulerButton = interface;
  PIInkToolbarRulerButton = ^IInkToolbarRulerButton;

  // Windows.UI.Xaml.Controls.IInkToolbarRulerButtonFactory
  IInkToolbarRulerButtonFactory = interface;
  PIInkToolbarRulerButtonFactory = ^IInkToolbarRulerButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarRulerButtonStatics
  IInkToolbarRulerButtonStatics = interface;
  PIInkToolbarRulerButtonStatics = ^IInkToolbarRulerButtonStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarStatics
  IInkToolbarStatics = interface;
  PIInkToolbarStatics = ^IInkToolbarStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarStatics2
  IInkToolbarStatics2 = interface;
  PIInkToolbarStatics2 = ^IInkToolbarStatics2;

  // Windows.UI.Xaml.Controls.IInkToolbarStatics3
  IInkToolbarStatics3 = interface;
  PIInkToolbarStatics3 = ^IInkToolbarStatics3;

  // Windows.UI.Xaml.Controls.IInkToolbarStencilButtonFactory
  IInkToolbarStencilButtonFactory = interface;
  PIInkToolbarStencilButtonFactory = ^IInkToolbarStencilButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarStencilButtonStatics
  IInkToolbarStencilButtonStatics = interface;
  PIInkToolbarStencilButtonStatics = ^IInkToolbarStencilButtonStatics;

  // Windows.UI.Xaml.Controls.IInkToolbarToggleButtonFactory
  IInkToolbarToggleButtonFactory = interface;
  PIInkToolbarToggleButtonFactory = ^IInkToolbarToggleButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarToolButtonFactory
  IInkToolbarToolButtonFactory = interface;
  PIInkToolbarToolButtonFactory = ^IInkToolbarToolButtonFactory;

  // Windows.UI.Xaml.Controls.IInkToolbarToolButtonStatics
  IInkToolbarToolButtonStatics = interface;
  PIInkToolbarToolButtonStatics = ^IInkToolbarToolButtonStatics;

  // Windows.UI.Xaml.Controls.IInsertionPanel
  IInsertionPanel = interface;
  PIInsertionPanel = ^IInsertionPanel;

  // Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs
  IIsTextTrimmedChangedEventArgs = interface;
  PIIsTextTrimmedChangedEventArgs = ^IIsTextTrimmedChangedEventArgs;

  // Windows.UI.Xaml.Controls.IItemContainerMapping
  IItemContainerMapping = interface;
  PIItemContainerMapping = ^IItemContainerMapping;

  // Windows.UI.Xaml.Controls.IItemsControl2
  IItemsControl2 = interface;
  PIItemsControl2 = ^IItemsControl2;

  // Windows.UI.Xaml.Controls.IItemsControl3
  IItemsControl3 = interface;
  PIItemsControl3 = ^IItemsControl3;

  // Windows.UI.Xaml.Controls.IItemsControlFactory
  IItemsControlFactory = interface;
  PIItemsControlFactory = ^IItemsControlFactory;

  // Windows.UI.Xaml.Controls.IItemsControlOverrides
  IItemsControlOverrides = interface;
  PIItemsControlOverrides = ^IItemsControlOverrides;

  // Windows.UI.Xaml.Controls.IItemsControlStatics
  IItemsControlStatics = interface;
  PIItemsControlStatics = ^IItemsControlStatics;

  // Windows.UI.Xaml.Controls.IItemsPickedEventArgs
  IItemsPickedEventArgs = interface;
  PIItemsPickedEventArgs = ^IItemsPickedEventArgs;

  // Windows.UI.Xaml.Controls.IItemsPresenter
  IItemsPresenter = interface;
  PIItemsPresenter = ^IItemsPresenter;

  // Windows.UI.Xaml.Controls.IItemsPresenter2
  IItemsPresenter2 = interface;
  PIItemsPresenter2 = ^IItemsPresenter2;

  // Windows.UI.Xaml.Controls.IItemsPresenterStatics
  IItemsPresenterStatics = interface;
  PIItemsPresenterStatics = ^IItemsPresenterStatics;

  // Windows.UI.Xaml.Controls.IItemsPresenterStatics2
  IItemsPresenterStatics2 = interface;
  PIItemsPresenterStatics2 = ^IItemsPresenterStatics2;

  // Windows.UI.Xaml.Controls.IItemsStackPanel
  IItemsStackPanel = interface;
  PIItemsStackPanel = ^IItemsStackPanel;

  // Windows.UI.Xaml.Controls.IItemsStackPanel2
  IItemsStackPanel2 = interface;
  PIItemsStackPanel2 = ^IItemsStackPanel2;

  // Windows.UI.Xaml.Controls.IItemsStackPanelStatics
  IItemsStackPanelStatics = interface;
  PIItemsStackPanelStatics = ^IItemsStackPanelStatics;

  // Windows.UI.Xaml.Controls.IItemsStackPanelStatics2
  IItemsStackPanelStatics2 = interface;
  PIItemsStackPanelStatics2 = ^IItemsStackPanelStatics2;

  // Windows.UI.Xaml.Controls.IItemsWrapGrid
  IItemsWrapGrid = interface;
  PIItemsWrapGrid = ^IItemsWrapGrid;

  // Windows.UI.Xaml.Controls.IItemsWrapGrid2
  IItemsWrapGrid2 = interface;
  PIItemsWrapGrid2 = ^IItemsWrapGrid2;

  // Windows.UI.Xaml.Controls.IItemsWrapGridStatics
  IItemsWrapGridStatics = interface;
  PIItemsWrapGridStatics = ^IItemsWrapGridStatics;

  // Windows.UI.Xaml.Controls.IItemsWrapGridStatics2
  IItemsWrapGridStatics2 = interface;
  PIItemsWrapGridStatics2 = ^IItemsWrapGridStatics2;

  // Windows.UI.Xaml.Controls.IListBox2
  IListBox2 = interface;
  PIListBox2 = ^IListBox2;

  // Windows.UI.Xaml.Controls.IListBoxFactory
  IListBoxFactory = interface;
  PIListBoxFactory = ^IListBoxFactory;

  // Windows.UI.Xaml.Controls.IListBoxItemFactory
  IListBoxItemFactory = interface;
  PIListBoxItemFactory = ^IListBoxItemFactory;

  // Windows.UI.Xaml.Controls.IListBoxStatics
  IListBoxStatics = interface;
  PIListBoxStatics = ^IListBoxStatics;

  // Windows.UI.Xaml.Controls.IListBoxStatics2
  IListBoxStatics2 = interface;
  PIListBoxStatics2 = ^IListBoxStatics2;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListPickerFlyout,Windows.UI.Xaml.Controls.IItemsPickedEventArgs>
  TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs = interface;
  PTypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs = ^TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs;

  // Windows.UI.Xaml.Controls.IListPickerFlyout
  IListPickerFlyout = interface;
  PIListPickerFlyout = ^IListPickerFlyout;

  // Windows.UI.Xaml.Controls.IListPickerFlyoutPresenter
  IListPickerFlyoutPresenter = interface;
  PIListPickerFlyoutPresenter = ^IListPickerFlyoutPresenter;

  // Windows.UI.Xaml.Controls.IListPickerFlyoutStatics
  IListPickerFlyoutStatics = interface;
  PIListPickerFlyoutStatics = ^IListPickerFlyoutStatics;

  // Windows.UI.Xaml.Controls.IListViewBase2
  IListViewBase2 = interface;
  PIListViewBase2 = ^IListViewBase2;

  // Windows.UI.Xaml.Controls.IListViewBase3
  IListViewBase3 = interface;
  PIListViewBase3 = ^IListViewBase3;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs>
  TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs = interface;
  PTypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs = ^TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs>
  TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs = interface;
  PTypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs = ^TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs>
  TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs = interface;
  PTypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs = ^TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs;

  // Windows.UI.Xaml.Controls.IListViewBase4
  IListViewBase4 = interface;
  PIListViewBase4 = ^IListViewBase4;

  // Windows.UI.Xaml.Controls.IListViewBase5
  IListViewBase5 = interface;
  PIListViewBase5 = ^IListViewBase5;

  // Windows.UI.Xaml.Controls.IListViewBase6
  IListViewBase6 = interface;
  PIListViewBase6 = ^IListViewBase6;

  // Windows.UI.Xaml.Controls.IListViewBaseFactory
  IListViewBaseFactory = interface;
  PIListViewBaseFactory = ^IListViewBaseFactory;

  // Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory
  IListViewBaseHeaderItemFactory = interface;
  PIListViewBaseHeaderItemFactory = ^IListViewBaseHeaderItemFactory;

  // Windows.UI.Xaml.Controls.IListViewBaseStatics
  IListViewBaseStatics = interface;
  PIListViewBaseStatics = ^IListViewBaseStatics;

  // Windows.UI.Xaml.Controls.IListViewBaseStatics2
  IListViewBaseStatics2 = interface;
  PIListViewBaseStatics2 = ^IListViewBaseStatics2;

  // Windows.UI.Xaml.Controls.IListViewBaseStatics3
  IListViewBaseStatics3 = interface;
  PIListViewBaseStatics3 = ^IListViewBaseStatics3;

  // Windows.UI.Xaml.Controls.IListViewBaseStatics4
  IListViewBaseStatics4 = interface;
  PIListViewBaseStatics4 = ^IListViewBaseStatics4;

  // Windows.UI.Xaml.Controls.IListViewBaseStatics5
  IListViewBaseStatics5 = interface;
  PIListViewBaseStatics5 = ^IListViewBaseStatics5;

  // Windows.UI.Xaml.Controls.IListViewFactory
  IListViewFactory = interface;
  PIListViewFactory = ^IListViewFactory;

  // Windows.UI.Xaml.Controls.IListViewHeaderItemFactory
  IListViewHeaderItemFactory = interface;
  PIListViewHeaderItemFactory = ^IListViewHeaderItemFactory;

  // Windows.UI.Xaml.Controls.IListViewItemFactory
  IListViewItemFactory = interface;
  PIListViewItemFactory = ^IListViewItemFactory;

  // Windows.UI.Xaml.Controls.IListViewPersistenceHelper
  IListViewPersistenceHelper = interface;
  PIListViewPersistenceHelper = ^IListViewPersistenceHelper;

  // Windows.UI.Xaml.Controls.ListViewItemToKeyHandler
  ListViewItemToKeyHandler = interface;
  PListViewItemToKeyHandler = ^ListViewItemToKeyHandler;

  // Windows.UI.Xaml.Controls.ListViewKeyToItemHandler
  ListViewKeyToItemHandler = interface;
  PListViewKeyToItemHandler = ^ListViewKeyToItemHandler;

  // Windows.UI.Xaml.Controls.IListViewPersistenceHelperStatics
  IListViewPersistenceHelperStatics = interface;
  PIListViewPersistenceHelperStatics = ^IListViewPersistenceHelperStatics;

  // Windows.UI.Xaml.Controls.IMediaElement2
  IMediaElement2 = interface;
  PIMediaElement2 = ^IMediaElement2;

  // Windows.UI.Xaml.Controls.IMediaElement3
  IMediaElement3 = interface;
  PIMediaElement3 = ^IMediaElement3;

  // Windows.UI.Xaml.Controls.IMediaElementStatics
  IMediaElementStatics = interface;
  PIMediaElementStatics = ^IMediaElementStatics;

  // Windows.UI.Xaml.Controls.IMediaElementStatics2
  IMediaElementStatics2 = interface;
  PIMediaElementStatics2 = ^IMediaElementStatics2;

  // Windows.UI.Xaml.Controls.IMediaPlayerElementFactory
  IMediaPlayerElementFactory = interface;
  PIMediaPlayerElementFactory = ^IMediaPlayerElementFactory;

  // Windows.UI.Xaml.Controls.IMediaPlayerElementStatics
  IMediaPlayerElementStatics = interface;
  PIMediaPlayerElementStatics = ^IMediaPlayerElementStatics;

  // Windows.UI.Xaml.Controls.IMediaPlayerPresenter
  IMediaPlayerPresenter = interface;
  PIMediaPlayerPresenter = ^IMediaPlayerPresenter;

  // Windows.UI.Xaml.Controls.IMediaPlayerPresenterFactory
  IMediaPlayerPresenterFactory = interface;
  PIMediaPlayerPresenterFactory = ^IMediaPlayerPresenterFactory;

  // Windows.UI.Xaml.Controls.IMediaPlayerPresenterStatics
  IMediaPlayerPresenterStatics = interface;
  PIMediaPlayerPresenterStatics = ^IMediaPlayerPresenterStatics;

  // Windows.UI.Xaml.Controls.IMediaTransportControls2
  IMediaTransportControls2 = interface;
  PIMediaTransportControls2 = ^IMediaTransportControls2;

  // Windows.UI.Xaml.Controls.IMediaTransportControls3
  IMediaTransportControls3 = interface;
  PIMediaTransportControls3 = ^IMediaTransportControls3;

  // Windows.UI.Xaml.Controls.IMediaTransportControls4
  IMediaTransportControls4 = interface;
  PIMediaTransportControls4 = ^IMediaTransportControls4;

  // Windows.UI.Xaml.Controls.IMediaTransportControlsFactory
  IMediaTransportControlsFactory = interface;
  PIMediaTransportControlsFactory = ^IMediaTransportControlsFactory;

  // Windows.UI.Xaml.Controls.IMediaTransportControlsHelper
  IMediaTransportControlsHelper = interface;
  PIMediaTransportControlsHelper = ^IMediaTransportControlsHelper;

  // Windows.UI.Xaml.Controls.IMediaTransportControlsHelperStatics
  IMediaTransportControlsHelperStatics = interface;
  PIMediaTransportControlsHelperStatics = ^IMediaTransportControlsHelperStatics;

  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics
  IMediaTransportControlsStatics = interface;
  PIMediaTransportControlsStatics = ^IMediaTransportControlsStatics;

  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics2
  IMediaTransportControlsStatics2 = interface;
  PIMediaTransportControlsStatics2 = ^IMediaTransportControlsStatics2;

  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics3
  IMediaTransportControlsStatics3 = interface;
  PIMediaTransportControlsStatics3 = ^IMediaTransportControlsStatics3;

  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics4
  IMediaTransportControlsStatics4 = interface;
  PIMediaTransportControlsStatics4 = ^IMediaTransportControlsStatics4;

  // Windows.UI.Xaml.Controls.IMenuBarFactory
  IMenuBarFactory = interface;
  PIMenuBarFactory = ^IMenuBarFactory;

  // Windows.UI.Xaml.Controls.IMenuBarItemFactory
  IMenuBarItemFactory = interface;
  PIMenuBarItemFactory = ^IMenuBarItemFactory;

  // Windows.UI.Xaml.Controls.IMenuBarItemFlyout
  IMenuBarItemFlyout = interface;
  PIMenuBarItemFlyout = ^IMenuBarItemFlyout;

  // Windows.UI.Xaml.Controls.IMenuBarItemFlyoutFactory
  IMenuBarItemFlyoutFactory = interface;
  PIMenuBarItemFlyoutFactory = ^IMenuBarItemFlyoutFactory;

  // Windows.UI.Xaml.Controls.IMenuBarItemStatics
  IMenuBarItemStatics = interface;
  PIMenuBarItemStatics = ^IMenuBarItemStatics;

  // Windows.UI.Xaml.Controls.IMenuBarStatics
  IMenuBarStatics = interface;
  PIMenuBarStatics = ^IMenuBarStatics;

  // Windows.UI.Xaml.Controls.IMenuFlyout
  IMenuFlyout = interface;
  PIMenuFlyout = ^IMenuFlyout;

  // Windows.UI.Xaml.Controls.IMenuFlyout2
  IMenuFlyout2 = interface;
  PIMenuFlyout2 = ^IMenuFlyout2;

  // Windows.UI.Xaml.Controls.IMenuFlyoutFactory
  IMenuFlyoutFactory = interface;
  PIMenuFlyoutFactory = ^IMenuFlyoutFactory;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItem2
  IMenuFlyoutItem2 = interface;
  PIMenuFlyoutItem2 = ^IMenuFlyoutItem2;

  // Windows.UI.Xaml.Controls.Primitives.IMenuFlyoutItemTemplateSettings
  Primitives_IMenuFlyoutItemTemplateSettings = interface;
  PPrimitives_IMenuFlyoutItemTemplateSettings = ^Primitives_IMenuFlyoutItemTemplateSettings;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItem3
  IMenuFlyoutItem3 = interface;
  PIMenuFlyoutItem3 = ^IMenuFlyoutItem3;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory
  IMenuFlyoutItemBaseFactory = interface;
  PIMenuFlyoutItemBaseFactory = ^IMenuFlyoutItemBaseFactory;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory
  IMenuFlyoutItemFactory = interface;
  PIMenuFlyoutItemFactory = ^IMenuFlyoutItemFactory;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics
  IMenuFlyoutItemStatics = interface;
  PIMenuFlyoutItemStatics = ^IMenuFlyoutItemStatics;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics2
  IMenuFlyoutItemStatics2 = interface;
  PIMenuFlyoutItemStatics2 = ^IMenuFlyoutItemStatics2;

  // Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics3
  IMenuFlyoutItemStatics3 = interface;
  PIMenuFlyoutItemStatics3 = ^IMenuFlyoutItemStatics3;

  // Windows.UI.Xaml.Controls.Primitives.IMenuFlyoutPresenterTemplateSettings
  Primitives_IMenuFlyoutPresenterTemplateSettings = interface;
  PPrimitives_IMenuFlyoutPresenterTemplateSettings = ^Primitives_IMenuFlyoutPresenterTemplateSettings;

  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenter2
  IMenuFlyoutPresenter2 = interface;
  PIMenuFlyoutPresenter2 = ^IMenuFlyoutPresenter2;

  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenter3
  IMenuFlyoutPresenter3 = interface;
  PIMenuFlyoutPresenter3 = ^IMenuFlyoutPresenter3;

  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory
  IMenuFlyoutPresenterFactory = interface;
  PIMenuFlyoutPresenterFactory = ^IMenuFlyoutPresenterFactory;

  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenterStatics3
  IMenuFlyoutPresenterStatics3 = interface;
  PIMenuFlyoutPresenterStatics3 = ^IMenuFlyoutPresenterStatics3;

  // Windows.UI.Xaml.Controls.IMenuFlyoutSeparator
  IMenuFlyoutSeparator = interface;
  PIMenuFlyoutSeparator = ^IMenuFlyoutSeparator;

  // Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory
  IMenuFlyoutSeparatorFactory = interface;
  PIMenuFlyoutSeparatorFactory = ^IMenuFlyoutSeparatorFactory;

  // Windows.UI.Xaml.Controls.IMenuFlyoutStatics
  IMenuFlyoutStatics = interface;
  PIMenuFlyoutStatics = ^IMenuFlyoutStatics;

  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItem
  IMenuFlyoutSubItem = interface;
  PIMenuFlyoutSubItem = ^IMenuFlyoutSubItem;

  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2
  IMenuFlyoutSubItem2 = interface;
  PIMenuFlyoutSubItem2 = ^IMenuFlyoutSubItem2;

  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics
  IMenuFlyoutSubItemStatics = interface;
  PIMenuFlyoutSubItemStatics = ^IMenuFlyoutSubItemStatics;

  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics2
  IMenuFlyoutSubItemStatics2 = interface;
  PIMenuFlyoutSubItemStatics2 = ^IMenuFlyoutSubItemStatics2;

  // Windows.UI.Xaml.Controls.INavigate
  INavigate = interface;
  PINavigate = ^INavigate;

  // Windows.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs
  INavigationViewBackRequestedEventArgs = interface;
  PINavigationViewBackRequestedEventArgs = ^INavigationViewBackRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.INavigationView,Windows.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs = interface;
  PTypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs = ^TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs;

  // Windows.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs
  INavigationViewPaneClosingEventArgs = interface;
  PINavigationViewPaneClosingEventArgs = ^INavigationViewPaneClosingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.INavigationView,Windows.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs = interface;
  PTypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs = ^TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs;

  // Windows.UI.Xaml.Controls.INavigationView2
  INavigationView2 = interface;
  PINavigationView2 = ^INavigationView2;

  // Windows.UI.Xaml.Controls.INavigationViewTemplateSettings
  INavigationViewTemplateSettings = interface;
  PINavigationViewTemplateSettings = ^INavigationViewTemplateSettings;

  // Windows.UI.Xaml.Controls.INavigationView3
  INavigationView3 = interface;
  PINavigationView3 = ^INavigationView3;

  // Windows.UI.Xaml.Controls.INavigationViewFactory
  INavigationViewFactory = interface;
  PINavigationViewFactory = ^INavigationViewFactory;

  // Windows.UI.Xaml.Controls.INavigationViewItem2
  INavigationViewItem2 = interface;
  PINavigationViewItem2 = ^INavigationViewItem2;

  // Windows.UI.Xaml.Controls.INavigationViewItemBase
  INavigationViewItemBase = interface;
  PINavigationViewItemBase = ^INavigationViewItemBase;

  // Windows.UI.Xaml.Controls.INavigationViewItemBaseFactory
  INavigationViewItemBaseFactory = interface;
  PINavigationViewItemBaseFactory = ^INavigationViewItemBaseFactory;

  // Windows.UI.Xaml.Controls.INavigationViewItemFactory
  INavigationViewItemFactory = interface;
  PINavigationViewItemFactory = ^INavigationViewItemFactory;

  // Windows.UI.Xaml.Controls.INavigationViewItemHeader
  INavigationViewItemHeader = interface;
  PINavigationViewItemHeader = ^INavigationViewItemHeader;

  // Windows.UI.Xaml.Controls.INavigationViewItemHeaderFactory
  INavigationViewItemHeaderFactory = interface;
  PINavigationViewItemHeaderFactory = ^INavigationViewItemHeaderFactory;

  // Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2
  INavigationViewItemInvokedEventArgs2 = interface;
  PINavigationViewItemInvokedEventArgs2 = ^INavigationViewItemInvokedEventArgs2;

  // Windows.UI.Xaml.Controls.INavigationViewItemSeparator
  INavigationViewItemSeparator = interface;
  PINavigationViewItemSeparator = ^INavigationViewItemSeparator;

  // Windows.UI.Xaml.Controls.INavigationViewItemSeparatorFactory
  INavigationViewItemSeparatorFactory = interface;
  PINavigationViewItemSeparatorFactory = ^INavigationViewItemSeparatorFactory;

  // Windows.UI.Xaml.Controls.INavigationViewItemStatics
  INavigationViewItemStatics = interface;
  PINavigationViewItemStatics = ^INavigationViewItemStatics;

  // Windows.UI.Xaml.Controls.INavigationViewItemStatics2
  INavigationViewItemStatics2 = interface;
  PINavigationViewItemStatics2 = ^INavigationViewItemStatics2;

  // Windows.UI.Xaml.Controls.INavigationViewList
  INavigationViewList = interface;
  PINavigationViewList = ^INavigationViewList;

  // Windows.UI.Xaml.Controls.INavigationViewListFactory
  INavigationViewListFactory = interface;
  PINavigationViewListFactory = ^INavigationViewListFactory;

  // Windows.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2
  INavigationViewSelectionChangedEventArgs2 = interface;
  PINavigationViewSelectionChangedEventArgs2 = ^INavigationViewSelectionChangedEventArgs2;

  // Windows.UI.Xaml.Controls.INavigationViewStatics
  INavigationViewStatics = interface;
  PINavigationViewStatics = ^INavigationViewStatics;

  // Windows.UI.Xaml.Controls.INavigationViewStatics2
  INavigationViewStatics2 = interface;
  PINavigationViewStatics2 = ^INavigationViewStatics2;

  // Windows.UI.Xaml.Controls.INavigationViewStatics3
  INavigationViewStatics3 = interface;
  PINavigationViewStatics3 = ^INavigationViewStatics3;

  // Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory
  INavigationViewTemplateSettingsFactory = interface;
  PINavigationViewTemplateSettingsFactory = ^INavigationViewTemplateSettingsFactory;

  // Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics
  INavigationViewTemplateSettingsStatics = interface;
  PINavigationViewTemplateSettingsStatics = ^INavigationViewTemplateSettingsStatics;

  // Windows.UI.Xaml.Controls.INotifyEventArgs2
  INotifyEventArgs2 = interface;
  PINotifyEventArgs2 = ^INotifyEventArgs2;

  // Windows.UI.Xaml.Controls.IPage
  IPage = interface;
  PIPage = ^IPage;

  // Windows.UI.Xaml.Controls.IPageFactory
  IPageFactory = interface;
  PIPageFactory = ^IPageFactory;

  // Windows.UI.Xaml.Controls.IPageOverrides
  IPageOverrides = interface;
  PIPageOverrides = ^IPageOverrides;

  // Windows.UI.Xaml.Controls.IPageStatics
  IPageStatics = interface;
  PIPageStatics = ^IPageStatics;

  // Windows.UI.Xaml.Controls.IPanel2
  IPanel2 = interface;
  PIPanel2 = ^IPanel2;

  // Windows.UI.Xaml.Controls.IPanelFactory
  IPanelFactory = interface;
  PIPanelFactory = ^IPanelFactory;

  // Windows.UI.Xaml.Controls.IPanelStatics
  IPanelStatics = interface;
  PIPanelStatics = ^IPanelStatics;

  // Windows.UI.Xaml.Controls.IParallaxView
  IParallaxView = interface;
  PIParallaxView = ^IParallaxView;

  // Windows.UI.Xaml.Controls.IParallaxViewFactory
  IParallaxViewFactory = interface;
  PIParallaxViewFactory = ^IParallaxViewFactory;

  // Windows.UI.Xaml.Controls.IParallaxViewStatics
  IParallaxViewStatics = interface;
  PIParallaxViewStatics = ^IParallaxViewStatics;

  // Windows.UI.Xaml.Controls.ITextControlPasteEventArgs
  ITextControlPasteEventArgs = interface;
  PITextControlPasteEventArgs = ^ITextControlPasteEventArgs;

  // Windows.UI.Xaml.Controls.TextControlPasteEventHandler
  TextControlPasteEventHandler = interface;
  PTextControlPasteEventHandler = ^TextControlPasteEventHandler;

  // Windows.UI.Xaml.Controls.IPasswordBox2
  IPasswordBox2 = interface;
  PIPasswordBox2 = ^IPasswordBox2;

  // Windows.UI.Xaml.Controls.IPasswordBox3
  IPasswordBox3 = interface;
  PIPasswordBox3 = ^IPasswordBox3;

  // Windows.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs
  IPasswordBoxPasswordChangingEventArgs = interface;
  PIPasswordBoxPasswordChangingEventArgs = ^IPasswordBoxPasswordChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPasswordBox,Windows.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs>
  TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs = interface;
  PTypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs = ^TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs;

  // Windows.UI.Xaml.Controls.IPasswordBox4
  IPasswordBox4 = interface;
  PIPasswordBox4 = ^IPasswordBox4;

  // Windows.UI.Xaml.Controls.IPasswordBox5
  IPasswordBox5 = interface;
  PIPasswordBox5 = ^IPasswordBox5;

  // Windows.UI.Xaml.Controls.IPasswordBoxStatics
  IPasswordBoxStatics = interface;
  PIPasswordBoxStatics = ^IPasswordBoxStatics;

  // Windows.UI.Xaml.Controls.IPasswordBoxStatics2
  IPasswordBoxStatics2 = interface;
  PIPasswordBoxStatics2 = ^IPasswordBoxStatics2;

  // Windows.UI.Xaml.Controls.IPasswordBoxStatics3
  IPasswordBoxStatics3 = interface;
  PIPasswordBoxStatics3 = ^IPasswordBoxStatics3;

  // Windows.UI.Xaml.Controls.IPasswordBoxStatics5
  IPasswordBoxStatics5 = interface;
  PIPasswordBoxStatics5 = ^IPasswordBoxStatics5;

  // Windows.UI.Xaml.Controls.IPathIcon
  IPathIcon = interface;
  PIPathIcon = ^IPathIcon;

  // Windows.UI.Xaml.Controls.IPathIconFactory
  IPathIconFactory = interface;
  PIPathIconFactory = ^IPathIconFactory;

  // Windows.UI.Xaml.Controls.IPathIconSource
  IPathIconSource = interface;
  PIPathIconSource = ^IPathIconSource;

  // Windows.UI.Xaml.Controls.IPathIconSourceFactory
  IPathIconSourceFactory = interface;
  PIPathIconSourceFactory = ^IPathIconSourceFactory;

  // Windows.UI.Xaml.Controls.IPathIconSourceStatics
  IPathIconSourceStatics = interface;
  PIPathIconSourceStatics = ^IPathIconSourceStatics;

  // Windows.UI.Xaml.Controls.IPathIconStatics
  IPathIconStatics = interface;
  PIPathIconStatics = ^IPathIconStatics;

  // Windows.UI.Xaml.Controls.IPersonPictureFactory
  IPersonPictureFactory = interface;
  PIPersonPictureFactory = ^IPersonPictureFactory;

  // Windows.UI.Xaml.Controls.IPersonPictureStatics
  IPersonPictureStatics = interface;
  PIPersonPictureStatics = ^IPersonPictureStatics;

  // Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs
  IPickerConfirmedEventArgs = interface;
  PIPickerConfirmedEventArgs = ^IPickerConfirmedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPickerFlyout,Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs>
  TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs = interface;
  PTypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs = ^TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs;

  // Windows.UI.Xaml.Controls.IPickerFlyout
  IPickerFlyout = interface;
  PIPickerFlyout = ^IPickerFlyout;

  // Windows.UI.Xaml.Controls.IPickerFlyoutPresenter
  IPickerFlyoutPresenter = interface;
  PIPickerFlyoutPresenter = ^IPickerFlyoutPresenter;

  // Windows.UI.Xaml.Controls.IPickerFlyoutStatics
  IPickerFlyoutStatics = interface;
  PIPickerFlyoutStatics = ^IPickerFlyoutStatics;

  // Windows.UI.Xaml.Controls.IPivot2
  IPivot2 = interface;
  PIPivot2 = ^IPivot2;

  // Windows.UI.Xaml.Controls.IPivot3
  IPivot3 = interface;
  PIPivot3 = ^IPivot3;

  // Windows.UI.Xaml.Controls.IPivotFactory
  IPivotFactory = interface;
  PIPivotFactory = ^IPivotFactory;

  // Windows.UI.Xaml.Controls.IPivotItemFactory
  IPivotItemFactory = interface;
  PIPivotItemFactory = ^IPivotItemFactory;

  // Windows.UI.Xaml.Controls.IPivotItemStatics
  IPivotItemStatics = interface;
  PIPivotItemStatics = ^IPivotItemStatics;

  // Windows.UI.Xaml.Controls.IPivotStatics
  IPivotStatics = interface;
  PIPivotStatics = ^IPivotStatics;

  // Windows.UI.Xaml.Controls.IPivotStatics2
  IPivotStatics2 = interface;
  PIPivotStatics2 = ^IPivotStatics2;

  // Windows.UI.Xaml.Controls.IPivotStatics3
  IPivotStatics3 = interface;
  PIPivotStatics3 = ^IPivotStatics3;

  // Windows.UI.Xaml.Controls.IProgressBarFactory
  IProgressBarFactory = interface;
  PIProgressBarFactory = ^IProgressBarFactory;

  // Windows.UI.Xaml.Controls.IProgressBarStatics
  IProgressBarStatics = interface;
  PIProgressBarStatics = ^IProgressBarStatics;

  // Windows.UI.Xaml.Controls.IProgressRingStatics
  IProgressRingStatics = interface;
  PIProgressRingStatics = ^IProgressRingStatics;

  // Windows.UI.Xaml.Controls.IRadioButtonFactory
  IRadioButtonFactory = interface;
  PIRadioButtonFactory = ^IRadioButtonFactory;

  // Windows.UI.Xaml.Controls.IRadioButtonStatics
  IRadioButtonStatics = interface;
  PIRadioButtonStatics = ^IRadioButtonStatics;

  // Windows.UI.Xaml.Controls.IRatingControlFactory
  IRatingControlFactory = interface;
  PIRatingControlFactory = ^IRatingControlFactory;

  // Windows.UI.Xaml.Controls.IRatingControlStatics
  IRatingControlStatics = interface;
  PIRatingControlStatics = ^IRatingControlStatics;

  // Windows.UI.Xaml.Controls.IRatingItemFontInfo
  IRatingItemFontInfo = interface;
  PIRatingItemFontInfo = ^IRatingItemFontInfo;

  // Windows.UI.Xaml.Controls.IRatingItemFontInfoFactory
  IRatingItemFontInfoFactory = interface;
  PIRatingItemFontInfoFactory = ^IRatingItemFontInfoFactory;

  // Windows.UI.Xaml.Controls.IRatingItemFontInfoStatics
  IRatingItemFontInfoStatics = interface;
  PIRatingItemFontInfoStatics = ^IRatingItemFontInfoStatics;

  // Windows.UI.Xaml.Controls.IRatingItemImageInfo
  IRatingItemImageInfo = interface;
  PIRatingItemImageInfo = ^IRatingItemImageInfo;

  // Windows.UI.Xaml.Controls.IRatingItemImageInfoFactory
  IRatingItemImageInfoFactory = interface;
  PIRatingItemImageInfoFactory = ^IRatingItemImageInfoFactory;

  // Windows.UI.Xaml.Controls.IRatingItemImageInfoStatics
  IRatingItemImageInfoStatics = interface;
  PIRatingItemImageInfoStatics = ^IRatingItemImageInfoStatics;

  // Windows.UI.Xaml.Controls.IRatingItemInfoFactory
  IRatingItemInfoFactory = interface;
  PIRatingItemInfoFactory = ^IRatingItemInfoFactory;

  // Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs
  IRefreshRequestedEventArgs = interface;
  PIRefreshRequestedEventArgs = ^IRefreshRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRefreshVisualizer,Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs = interface;
  PTypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs = ^TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs;

  // Windows.UI.Xaml.Controls.IRefreshStateChangedEventArgs
  IRefreshStateChangedEventArgs = interface;
  PIRefreshStateChangedEventArgs = ^IRefreshStateChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRefreshVisualizer,Windows.UI.Xaml.Controls.IRefreshStateChangedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs = interface;
  PTypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs = ^TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs;

  // Windows.UI.Xaml.Controls.IRefreshVisualizer
  IRefreshVisualizer = interface;
  PIRefreshVisualizer = ^IRefreshVisualizer;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRefreshContainer,Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs = interface;
  PTypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs = ^TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs;

  // Windows.UI.Xaml.Controls.IRefreshContainer
  IRefreshContainer = interface;
  PIRefreshContainer = ^IRefreshContainer;

  // Windows.UI.Xaml.Controls.IRefreshContainerFactory
  IRefreshContainerFactory = interface;
  PIRefreshContainerFactory = ^IRefreshContainerFactory;

  // Windows.UI.Xaml.Controls.IRefreshContainerStatics
  IRefreshContainerStatics = interface;
  PIRefreshContainerStatics = ^IRefreshContainerStatics;

  // Windows.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs
  IRefreshInteractionRatioChangedEventArgs = interface;
  PIRefreshInteractionRatioChangedEventArgs = ^IRefreshInteractionRatioChangedEventArgs;

  // Windows.UI.Xaml.Controls.IRefreshVisualizerFactory
  IRefreshVisualizerFactory = interface;
  PIRefreshVisualizerFactory = ^IRefreshVisualizerFactory;

  // Windows.UI.Xaml.Controls.IRefreshVisualizerStatics
  IRefreshVisualizerStatics = interface;
  PIRefreshVisualizerStatics = ^IRefreshVisualizerStatics;

  // Windows.UI.Xaml.Controls.IRelativePanel
  IRelativePanel = interface;
  PIRelativePanel = ^IRelativePanel;

  // Windows.UI.Xaml.Controls.IRelativePanel2
  IRelativePanel2 = interface;
  PIRelativePanel2 = ^IRelativePanel2;

  // Windows.UI.Xaml.Controls.IRelativePanelFactory
  IRelativePanelFactory = interface;
  PIRelativePanelFactory = ^IRelativePanelFactory;

  // Windows.UI.Xaml.Controls.IRelativePanelStatics
  IRelativePanelStatics = interface;
  PIRelativePanelStatics = ^IRelativePanelStatics;

  // Windows.UI.Xaml.Controls.IRelativePanelStatics2
  IRelativePanelStatics2 = interface;
  PIRelativePanelStatics2 = ^IRelativePanelStatics2;

  // Windows.UI.Xaml.Controls.IRichEditBox2
  IRichEditBox2 = interface;
  PIRichEditBox2 = ^IRichEditBox2;

  // Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs
  ITextCompositionStartedEventArgs = interface;
  PITextCompositionStartedEventArgs = ^ITextCompositionStartedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs;

  // Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs
  ITextCompositionChangedEventArgs = interface;
  PITextCompositionChangedEventArgs = ^ITextCompositionChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs;

  // Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs
  ITextCompositionEndedEventArgs = interface;
  PITextCompositionEndedEventArgs = ^ITextCompositionEndedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs = ^TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs;

  // Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs
  IRichEditBoxTextChangingEventArgs = interface;
  PIRichEditBoxTextChangingEventArgs = ^IRichEditBoxTextChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs = ^TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs;

  // Windows.UI.Xaml.Controls.IRichEditBox3
  IRichEditBox3 = interface;
  PIRichEditBox3 = ^IRichEditBox3;

  // Windows.UI.Xaml.Controls.IRichEditBox4
  IRichEditBox4 = interface;
  PIRichEditBox4 = ^IRichEditBox4;

  // Windows.UI.Xaml.Controls.IRichEditBox5
  IRichEditBox5 = interface;
  PIRichEditBox5 = ^IRichEditBox5;

  // Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs
  ITextControlCopyingToClipboardEventArgs = interface;
  PITextControlCopyingToClipboardEventArgs = ^ITextControlCopyingToClipboardEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs;

  // Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs
  ITextControlCuttingToClipboardEventArgs = interface;
  PITextControlCuttingToClipboardEventArgs = ^ITextControlCuttingToClipboardEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs;

  // Windows.UI.Xaml.Controls.IRichEditBox6
  IRichEditBox6 = interface;
  PIRichEditBox6 = ^IRichEditBox6;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__IContentLinkChangedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__IContentLinkChangedEventArgs = ^TypedEventHandler_2__IRichEditBox__IContentLinkChangedEventArgs;

  // Windows.UI.Xaml.Controls.IRichEditBox7
  IRichEditBox7 = interface;
  PIRichEditBox7 = ^IRichEditBox7;

  // Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs
  IRichEditBoxSelectionChangingEventArgs = interface;
  PIRichEditBoxSelectionChangingEventArgs = ^IRichEditBoxSelectionChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs = ^TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs;

  // Windows.UI.Xaml.Controls.IRichEditBox8
  IRichEditBox8 = interface;
  PIRichEditBox8 = ^IRichEditBox8;

  // Windows.UI.Xaml.Controls.IRichEditBoxFactory
  IRichEditBoxFactory = interface;
  PIRichEditBoxFactory = ^IRichEditBoxFactory;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics
  IRichEditBoxStatics = interface;
  PIRichEditBoxStatics = ^IRichEditBoxStatics;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics2
  IRichEditBoxStatics2 = interface;
  PIRichEditBoxStatics2 = ^IRichEditBoxStatics2;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics3
  IRichEditBoxStatics3 = interface;
  PIRichEditBoxStatics3 = ^IRichEditBoxStatics3;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics4
  IRichEditBoxStatics4 = interface;
  PIRichEditBoxStatics4 = ^IRichEditBoxStatics4;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics5
  IRichEditBoxStatics5 = interface;
  PIRichEditBoxStatics5 = ^IRichEditBoxStatics5;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics6
  IRichEditBoxStatics6 = interface;
  PIRichEditBoxStatics6 = ^IRichEditBoxStatics6;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics7
  IRichEditBoxStatics7 = interface;
  PIRichEditBoxStatics7 = ^IRichEditBoxStatics7;

  // Windows.UI.Xaml.Controls.IRichEditBoxStatics8
  IRichEditBoxStatics8 = interface;
  PIRichEditBoxStatics8 = ^IRichEditBoxStatics8;

  // Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs2
  IRichEditBoxTextChangingEventArgs2 = interface;
  PIRichEditBoxTextChangingEventArgs2 = ^IRichEditBoxTextChangingEventArgs2;

  // Windows.UI.Xaml.Controls.IRichTextBlock2
  IRichTextBlock2 = interface;
  PIRichTextBlock2 = ^IRichTextBlock2;

  // Windows.UI.Xaml.Controls.IRichTextBlock3
  IRichTextBlock3 = interface;
  PIRichTextBlock3 = ^IRichTextBlock3;

  // Windows.UI.Xaml.Controls.IRichTextBlock4
  IRichTextBlock4 = interface;
  PIRichTextBlock4 = ^IRichTextBlock4;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichTextBlock,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs = interface;
  PTypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs = ^TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs;

  // Windows.UI.Xaml.Controls.IRichTextBlock5
  IRichTextBlock5 = interface;
  PIRichTextBlock5 = ^IRichTextBlock5;

  // Windows.UI.Xaml.Controls.IRichTextBlock6
  IRichTextBlock6 = interface;
  PIRichTextBlock6 = ^IRichTextBlock6;

  // Windows.UI.Xaml.Controls.IRichTextBlockOverflow2
  IRichTextBlockOverflow2 = interface;
  PIRichTextBlockOverflow2 = ^IRichTextBlockOverflow2;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichTextBlockOverflow,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs = interface;
  PTypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs = ^TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs;

  // Windows.UI.Xaml.Controls.IRichTextBlockOverflow3
  IRichTextBlockOverflow3 = interface;
  PIRichTextBlockOverflow3 = ^IRichTextBlockOverflow3;

  // Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics
  IRichTextBlockOverflowStatics = interface;
  PIRichTextBlockOverflowStatics = ^IRichTextBlockOverflowStatics;

  // Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics2
  IRichTextBlockOverflowStatics2 = interface;
  PIRichTextBlockOverflowStatics2 = ^IRichTextBlockOverflowStatics2;

  // Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics3
  IRichTextBlockOverflowStatics3 = interface;
  PIRichTextBlockOverflowStatics3 = ^IRichTextBlockOverflowStatics3;

  // Windows.UI.Xaml.Controls.IRichTextBlockStatics
  IRichTextBlockStatics = interface;
  PIRichTextBlockStatics = ^IRichTextBlockStatics;

  // Windows.UI.Xaml.Controls.IRichTextBlockStatics2
  IRichTextBlockStatics2 = interface;
  PIRichTextBlockStatics2 = ^IRichTextBlockStatics2;

  // Windows.UI.Xaml.Controls.IRichTextBlockStatics3
  IRichTextBlockStatics3 = interface;
  PIRichTextBlockStatics3 = ^IRichTextBlockStatics3;

  // Windows.UI.Xaml.Controls.IRichTextBlockStatics4
  IRichTextBlockStatics4 = interface;
  PIRichTextBlockStatics4 = ^IRichTextBlockStatics4;

  // Windows.UI.Xaml.Controls.IRichTextBlockStatics5
  IRichTextBlockStatics5 = interface;
  PIRichTextBlockStatics5 = ^IRichTextBlockStatics5;

  // Windows.UI.Xaml.Controls.IRichTextBlockStatics6
  IRichTextBlockStatics6 = interface;
  PIRichTextBlockStatics6 = ^IRichTextBlockStatics6;

  // Windows.UI.Xaml.Controls.IRowDefinitionStatics
  IRowDefinitionStatics = interface;
  PIRowDefinitionStatics = ^IRowDefinitionStatics;

  // Windows.UI.Xaml.Controls.IScrollAnchorProvider
  IScrollAnchorProvider = interface;
  PIScrollAnchorProvider = ^IScrollAnchorProvider;

  // Windows.UI.Xaml.Controls.IScrollContentPresenter
  IScrollContentPresenter = interface;
  PIScrollContentPresenter = ^IScrollContentPresenter;

  // Windows.UI.Xaml.Controls.IScrollContentPresenter2
  IScrollContentPresenter2 = interface;
  PIScrollContentPresenter2 = ^IScrollContentPresenter2;

  // Windows.UI.Xaml.Controls.IScrollContentPresenterStatics2
  IScrollContentPresenterStatics2 = interface;
  PIScrollContentPresenterStatics2 = ^IScrollContentPresenterStatics2;

  // Windows.UI.Xaml.Controls.IScrollViewerView
  IScrollViewerView = interface;
  PIScrollViewerView = ^IScrollViewerView;

  // Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs
  IScrollViewerViewChangingEventArgs = interface;
  PIScrollViewerViewChangingEventArgs = ^IScrollViewerViewChangingEventArgs;

  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs>
  EventHandler_1__IScrollViewerViewChangingEventArgs = interface;
  PEventHandler_1__IScrollViewerViewChangingEventArgs = ^EventHandler_1__IScrollViewerViewChangingEventArgs;

  // Windows.UI.Xaml.Controls.IScrollViewer2
  IScrollViewer2 = interface;
  PIScrollViewer2 = ^IScrollViewer2;

  // Windows.UI.Xaml.Controls.IScrollViewer3
  IScrollViewer3 = interface;
  PIScrollViewer3 = ^IScrollViewer3;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IScrollViewer,Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs>
  TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs = interface;
  PTypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs = ^TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs;

  // Windows.UI.Xaml.Controls.IScrollViewer4
  IScrollViewer4 = interface;
  PIScrollViewer4 = ^IScrollViewer4;

  // Windows.UI.Xaml.Controls.IScrollViewerStatics
  IScrollViewerStatics = interface;
  PIScrollViewerStatics = ^IScrollViewerStatics;

  // Windows.UI.Xaml.Controls.IScrollViewerStatics2
  IScrollViewerStatics2 = interface;
  PIScrollViewerStatics2 = ^IScrollViewerStatics2;

  // Windows.UI.Xaml.Controls.IScrollViewerStatics4
  IScrollViewerStatics4 = interface;
  PIScrollViewerStatics4 = ^IScrollViewerStatics4;

  // Windows.UI.Xaml.Controls.ISearchBoxFactory
  ISearchBoxFactory = interface;
  PISearchBoxFactory = ^ISearchBoxFactory;

  // Windows.UI.Xaml.Controls.ISearchBoxStatics
  ISearchBoxStatics = interface;
  PISearchBoxStatics = ^ISearchBoxStatics;

  // Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory
  ISectionsInViewChangedEventArgsFactory = interface;
  PISectionsInViewChangedEventArgsFactory = ^ISectionsInViewChangedEventArgsFactory;

  // Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory
  ISelectionChangedEventArgsFactory = interface;
  PISelectionChangedEventArgsFactory = ^ISelectionChangedEventArgsFactory;

  // Windows.UI.Xaml.Controls.ISemanticZoomStatics
  ISemanticZoomStatics = interface;
  PISemanticZoomStatics = ^ISemanticZoomStatics;

  // Windows.UI.Xaml.Controls.ISettingsFlyoutFactory
  ISettingsFlyoutFactory = interface;
  PISettingsFlyoutFactory = ^ISettingsFlyoutFactory;

  // Windows.UI.Xaml.Controls.ISettingsFlyoutStatics
  ISettingsFlyoutStatics = interface;
  PISettingsFlyoutStatics = ^ISettingsFlyoutStatics;

  // Windows.UI.Xaml.Controls.ISlider2
  ISlider2 = interface;
  PISlider2 = ^ISlider2;

  // Windows.UI.Xaml.Controls.ISliderFactory
  ISliderFactory = interface;
  PISliderFactory = ^ISliderFactory;

  // Windows.UI.Xaml.Controls.ISliderStatics
  ISliderStatics = interface;
  PISliderStatics = ^ISliderStatics;

  // Windows.UI.Xaml.Controls.ISliderStatics2
  ISliderStatics2 = interface;
  PISliderStatics2 = ^ISliderStatics2;

  // Windows.UI.Xaml.Controls.ISplitButtonClickEventArgs
  ISplitButtonClickEventArgs = interface;
  PISplitButtonClickEventArgs = ^ISplitButtonClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ISplitButton,Windows.UI.Xaml.Controls.ISplitButtonClickEventArgs>
  TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs = interface;
  PTypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs = ^TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs;

  // Windows.UI.Xaml.Controls.ISplitButton
  ISplitButton = interface;
  PISplitButton = ^ISplitButton;

  // Windows.UI.Xaml.Controls.ISplitButtonAutomationPeer
  ISplitButtonAutomationPeer = interface;
  PISplitButtonAutomationPeer = ^ISplitButtonAutomationPeer;

  // Windows.UI.Xaml.Controls.ISplitButtonAutomationPeerFactory
  ISplitButtonAutomationPeerFactory = interface;
  PISplitButtonAutomationPeerFactory = ^ISplitButtonAutomationPeerFactory;

  // Windows.UI.Xaml.Controls.ISplitButtonFactory
  ISplitButtonFactory = interface;
  PISplitButtonFactory = ^ISplitButtonFactory;

  // Windows.UI.Xaml.Controls.ISplitButtonStatics
  ISplitButtonStatics = interface;
  PISplitButtonStatics = ^ISplitButtonStatics;

  // Windows.UI.Xaml.Controls.ISplitView2
  ISplitView2 = interface;
  PISplitView2 = ^ISplitView2;

  // Windows.UI.Xaml.Controls.ISplitView3
  ISplitView3 = interface;
  PISplitView3 = ^ISplitView3;

  // Windows.UI.Xaml.Controls.ISplitViewFactory
  ISplitViewFactory = interface;
  PISplitViewFactory = ^ISplitViewFactory;

  // Windows.UI.Xaml.Controls.ISplitViewStatics
  ISplitViewStatics = interface;
  PISplitViewStatics = ^ISplitViewStatics;

  // Windows.UI.Xaml.Controls.ISplitViewStatics2
  ISplitViewStatics2 = interface;
  PISplitViewStatics2 = ^ISplitViewStatics2;

  // Windows.UI.Xaml.Controls.IStackPanel
  IStackPanel = interface;
  PIStackPanel = ^IStackPanel;

  // Windows.UI.Xaml.Controls.IStackPanel2
  IStackPanel2 = interface;
  PIStackPanel2 = ^IStackPanel2;

  // Windows.UI.Xaml.Controls.IStackPanel4
  IStackPanel4 = interface;
  PIStackPanel4 = ^IStackPanel4;

  // Windows.UI.Xaml.Controls.IStackPanel5
  IStackPanel5 = interface;
  PIStackPanel5 = ^IStackPanel5;

  // Windows.UI.Xaml.Controls.IStackPanelFactory
  IStackPanelFactory = interface;
  PIStackPanelFactory = ^IStackPanelFactory;

  // Windows.UI.Xaml.Controls.IStackPanelStatics
  IStackPanelStatics = interface;
  PIStackPanelStatics = ^IStackPanelStatics;

  // Windows.UI.Xaml.Controls.IStackPanelStatics2
  IStackPanelStatics2 = interface;
  PIStackPanelStatics2 = ^IStackPanelStatics2;

  // Windows.UI.Xaml.Controls.IStackPanelStatics4
  IStackPanelStatics4 = interface;
  PIStackPanelStatics4 = ^IStackPanelStatics4;

  // Windows.UI.Xaml.Controls.IStackPanelStatics5
  IStackPanelStatics5 = interface;
  PIStackPanelStatics5 = ^IStackPanelStatics5;

  // Windows.UI.Xaml.Controls.IStyleSelectorFactory
  IStyleSelectorFactory = interface;
  PIStyleSelectorFactory = ^IStyleSelectorFactory;

  // Windows.UI.Xaml.Controls.IStyleSelectorOverrides
  IStyleSelectorOverrides = interface;
  PIStyleSelectorOverrides = ^IStyleSelectorOverrides;

  // Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel
  ISwapChainBackgroundPanel = interface;
  PISwapChainBackgroundPanel = ^ISwapChainBackgroundPanel;

  // Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2
  ISwapChainBackgroundPanel2 = interface;
  PISwapChainBackgroundPanel2 = ^ISwapChainBackgroundPanel2;

  // Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory
  ISwapChainBackgroundPanelFactory = interface;
  PISwapChainBackgroundPanelFactory = ^ISwapChainBackgroundPanelFactory;

  // Windows.UI.Xaml.Controls.ISwapChainPanelFactory
  ISwapChainPanelFactory = interface;
  PISwapChainPanelFactory = ^ISwapChainPanelFactory;

  // Windows.UI.Xaml.Controls.ISwapChainPanelStatics
  ISwapChainPanelStatics = interface;
  PISwapChainPanelStatics = ^ISwapChainPanelStatics;

  // Windows.UI.Xaml.Controls.ISwipeItems
  ISwipeItems = interface;
  PISwipeItems = ^ISwipeItems;

  // Windows.UI.Xaml.Controls.ISwipeControl
  ISwipeControl = interface;
  PISwipeControl = ^ISwipeControl;

  // Windows.UI.Xaml.Controls.ISwipeControlFactory
  ISwipeControlFactory = interface;
  PISwipeControlFactory = ^ISwipeControlFactory;

  // Windows.UI.Xaml.Controls.ISwipeControlStatics
  ISwipeControlStatics = interface;
  PISwipeControlStatics = ^ISwipeControlStatics;

  // Windows.UI.Xaml.Controls.ISwipeItemInvokedEventArgs
  ISwipeItemInvokedEventArgs = interface;
  PISwipeItemInvokedEventArgs = ^ISwipeItemInvokedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ISwipeItem,Windows.UI.Xaml.Controls.ISwipeItemInvokedEventArgs>
  TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs = interface;
  PTypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs = ^TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs;

  // Windows.UI.Xaml.Controls.ISwipeItem
  ISwipeItem = interface;
  PISwipeItem = ^ISwipeItem;

  // Windows.UI.Xaml.Controls.ISwipeItemFactory
  ISwipeItemFactory = interface;
  PISwipeItemFactory = ^ISwipeItemFactory;

  // Windows.UI.Xaml.Controls.ISwipeItemStatics
  ISwipeItemStatics = interface;
  PISwipeItemStatics = ^ISwipeItemStatics;

  // Windows.UI.Xaml.Controls.ISwipeItemsFactory
  ISwipeItemsFactory = interface;
  PISwipeItemsFactory = ^ISwipeItemsFactory;

  // Windows.UI.Xaml.Controls.ISwipeItemsStatics
  ISwipeItemsStatics = interface;
  PISwipeItemsStatics = ^ISwipeItemsStatics;

  // Windows.UI.Xaml.Controls.ISymbolIcon
  ISymbolIcon = interface;
  PISymbolIcon = ^ISymbolIcon;

  // Windows.UI.Xaml.Controls.ISymbolIconFactory
  ISymbolIconFactory = interface;
  PISymbolIconFactory = ^ISymbolIconFactory;

  // Windows.UI.Xaml.Controls.ISymbolIconSource
  ISymbolIconSource = interface;
  PISymbolIconSource = ^ISymbolIconSource;

  // Windows.UI.Xaml.Controls.ISymbolIconSourceFactory
  ISymbolIconSourceFactory = interface;
  PISymbolIconSourceFactory = ^ISymbolIconSourceFactory;

  // Windows.UI.Xaml.Controls.ISymbolIconSourceStatics
  ISymbolIconSourceStatics = interface;
  PISymbolIconSourceStatics = ^ISymbolIconSourceStatics;

  // Windows.UI.Xaml.Controls.ISymbolIconStatics
  ISymbolIconStatics = interface;
  PISymbolIconStatics = ^ISymbolIconStatics;

  // Windows.UI.Xaml.Controls.ITextBlock2
  ITextBlock2 = interface;
  PITextBlock2 = ^ITextBlock2;

  // Windows.UI.Xaml.Controls.ITextBlock3
  ITextBlock3 = interface;
  PITextBlock3 = ^ITextBlock3;

  // Windows.UI.Xaml.Controls.ITextBlock4
  ITextBlock4 = interface;
  PITextBlock4 = ^ITextBlock4;

  // Windows.UI.Xaml.Controls.ITextBlock5
  ITextBlock5 = interface;
  PITextBlock5 = ^ITextBlock5;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBlock,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs = interface;
  PTypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs = ^TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs;

  // Windows.UI.Xaml.Controls.ITextBlock6
  ITextBlock6 = interface;
  PITextBlock6 = ^ITextBlock6;

  // Windows.UI.Xaml.Controls.ITextBlock7
  ITextBlock7 = interface;
  PITextBlock7 = ^ITextBlock7;

  // Windows.UI.Xaml.Controls.ITextBlockStatics
  ITextBlockStatics = interface;
  PITextBlockStatics = ^ITextBlockStatics;

  // Windows.UI.Xaml.Controls.ITextBlockStatics2
  ITextBlockStatics2 = interface;
  PITextBlockStatics2 = ^ITextBlockStatics2;

  // Windows.UI.Xaml.Controls.ITextBlockStatics3
  ITextBlockStatics3 = interface;
  PITextBlockStatics3 = ^ITextBlockStatics3;

  // Windows.UI.Xaml.Controls.ITextBlockStatics5
  ITextBlockStatics5 = interface;
  PITextBlockStatics5 = ^ITextBlockStatics5;

  // Windows.UI.Xaml.Controls.ITextBlockStatics6
  ITextBlockStatics6 = interface;
  PITextBlockStatics6 = ^ITextBlockStatics6;

  // Windows.UI.Xaml.Controls.ITextBlockStatics7
  ITextBlockStatics7 = interface;
  PITextBlockStatics7 = ^ITextBlockStatics7;

  // Windows.UI.Xaml.Controls.ITextBox2
  ITextBox2 = interface;
  PITextBox2 = ^ITextBox2;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs = ^TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs = ^TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs = ^TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs = ^TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs;

  // Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs
  ITextBoxTextChangingEventArgs = interface;
  PITextBoxTextChangingEventArgs = ^ITextBoxTextChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs = ^TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs;

  // Windows.UI.Xaml.Controls.ITextBox3
  ITextBox3 = interface;
  PITextBox3 = ^ITextBox3;

  // Windows.UI.Xaml.Controls.ITextBox4
  ITextBox4 = interface;
  PITextBox4 = ^ITextBox4;

  // Windows.UI.Xaml.Controls.ITextBox5
  ITextBox5 = interface;
  PITextBox5 = ^ITextBox5;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs = ^TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs = ^TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs;

  // Windows.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs
  ITextBoxBeforeTextChangingEventArgs = interface;
  PITextBoxBeforeTextChangingEventArgs = ^ITextBoxBeforeTextChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs = ^TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs;

  // Windows.UI.Xaml.Controls.ITextBox6
  ITextBox6 = interface;
  PITextBox6 = ^ITextBox6;

  // Windows.UI.Xaml.Controls.ITextBox7
  ITextBox7 = interface;
  PITextBox7 = ^ITextBox7;

  // Windows.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs
  ITextBoxSelectionChangingEventArgs = interface;
  PITextBoxSelectionChangingEventArgs = ^ITextBoxSelectionChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs = ^TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs;

  // Windows.UI.Xaml.Controls.ITextBox8
  ITextBox8 = interface;
  PITextBox8 = ^ITextBox8;

  // Windows.UI.Xaml.Controls.ITextBoxFactory
  ITextBoxFactory = interface;
  PITextBoxFactory = ^ITextBoxFactory;

  // Windows.UI.Xaml.Controls.ITextBoxStatics
  ITextBoxStatics = interface;
  PITextBoxStatics = ^ITextBoxStatics;

  // Windows.UI.Xaml.Controls.ITextBoxStatics2
  ITextBoxStatics2 = interface;
  PITextBoxStatics2 = ^ITextBoxStatics2;

  // Windows.UI.Xaml.Controls.ITextBoxStatics3
  ITextBoxStatics3 = interface;
  PITextBoxStatics3 = ^ITextBoxStatics3;

  // Windows.UI.Xaml.Controls.ITextBoxStatics5
  ITextBoxStatics5 = interface;
  PITextBoxStatics5 = ^ITextBoxStatics5;

  // Windows.UI.Xaml.Controls.ITextBoxStatics6
  ITextBoxStatics6 = interface;
  PITextBoxStatics6 = ^ITextBoxStatics6;

  // Windows.UI.Xaml.Controls.ITextBoxStatics7
  ITextBoxStatics7 = interface;
  PITextBoxStatics7 = ^ITextBoxStatics7;

  // Windows.UI.Xaml.Controls.ITextBoxStatics8
  ITextBoxStatics8 = interface;
  PITextBoxStatics8 = ^ITextBoxStatics8;

  // Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs2
  ITextBoxTextChangingEventArgs2 = interface;
  PITextBoxTextChangingEventArgs2 = ^ITextBoxTextChangingEventArgs2;

  // Windows.UI.Xaml.Controls.ITextCommandBarFlyout
  ITextCommandBarFlyout = interface;
  PITextCommandBarFlyout = ^ITextCommandBarFlyout;

  // Windows.UI.Xaml.Controls.ITextCommandBarFlyoutFactory
  ITextCommandBarFlyoutFactory = interface;
  PITextCommandBarFlyoutFactory = ^ITextCommandBarFlyoutFactory;

  // Windows.UI.Xaml.Controls.ITimePickedEventArgs
  ITimePickedEventArgs = interface;
  PITimePickedEventArgs = ^ITimePickedEventArgs;

  // Windows.UI.Xaml.Controls.ITimePicker2
  ITimePicker2 = interface;
  PITimePicker2 = ^ITimePicker2;

  // Windows.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs
  ITimePickerSelectedValueChangedEventArgs = interface;
  PITimePickerSelectedValueChangedEventArgs = ^ITimePickerSelectedValueChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITimePicker,Windows.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs = interface;
  PTypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs = ^TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs;

  // Windows.UI.Xaml.Controls.ITimePicker3
  ITimePicker3 = interface;
  PITimePicker3 = ^ITimePicker3;

  // Windows.UI.Xaml.Controls.ITimePickerFactory
  ITimePickerFactory = interface;
  PITimePickerFactory = ^ITimePickerFactory;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITimePickerFlyout,Windows.UI.Xaml.Controls.ITimePickedEventArgs>
  TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs = interface;
  PTypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs = ^TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs;

  // Windows.UI.Xaml.Controls.ITimePickerFlyout
  ITimePickerFlyout = interface;
  PITimePickerFlyout = ^ITimePickerFlyout;

  // Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter
  ITimePickerFlyoutPresenter = interface;
  PITimePickerFlyoutPresenter = ^ITimePickerFlyoutPresenter;

  // Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter2
  ITimePickerFlyoutPresenter2 = interface;
  PITimePickerFlyoutPresenter2 = ^ITimePickerFlyoutPresenter2;

  // Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics2
  ITimePickerFlyoutPresenterStatics2 = interface;
  PITimePickerFlyoutPresenterStatics2 = ^ITimePickerFlyoutPresenterStatics2;

  // Windows.UI.Xaml.Controls.ITimePickerFlyoutStatics
  ITimePickerFlyoutStatics = interface;
  PITimePickerFlyoutStatics = ^ITimePickerFlyoutStatics;

  // Windows.UI.Xaml.Controls.ITimePickerStatics
  ITimePickerStatics = interface;
  PITimePickerStatics = ^ITimePickerStatics;

  // Windows.UI.Xaml.Controls.ITimePickerStatics2
  ITimePickerStatics2 = interface;
  PITimePickerStatics2 = ^ITimePickerStatics2;

  // Windows.UI.Xaml.Controls.ITimePickerStatics3
  ITimePickerStatics3 = interface;
  PITimePickerStatics3 = ^ITimePickerStatics3;

  // Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory
  IToggleMenuFlyoutItemFactory = interface;
  PIToggleMenuFlyoutItemFactory = ^IToggleMenuFlyoutItemFactory;

  // Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics
  IToggleMenuFlyoutItemStatics = interface;
  PIToggleMenuFlyoutItemStatics = ^IToggleMenuFlyoutItemStatics;

  // Windows.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs
  IToggleSplitButtonIsCheckedChangedEventArgs = interface;
  PIToggleSplitButtonIsCheckedChangedEventArgs = ^IToggleSplitButtonIsCheckedChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IToggleSplitButton,Windows.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs>
  TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs = interface;
  PTypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs = ^TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs;

  // Windows.UI.Xaml.Controls.IToggleSplitButton
  IToggleSplitButton = interface;
  PIToggleSplitButton = ^IToggleSplitButton;

  // Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeer
  IToggleSplitButtonAutomationPeer = interface;
  PIToggleSplitButtonAutomationPeer = ^IToggleSplitButtonAutomationPeer;

  // Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory
  IToggleSplitButtonAutomationPeerFactory = interface;
  PIToggleSplitButtonAutomationPeerFactory = ^IToggleSplitButtonAutomationPeerFactory;

  // Windows.UI.Xaml.Controls.IToggleSplitButtonFactory
  IToggleSplitButtonFactory = interface;
  PIToggleSplitButtonFactory = ^IToggleSplitButtonFactory;

  // Windows.UI.Xaml.Controls.IToggleSwitchOverrides
  IToggleSwitchOverrides = interface;
  PIToggleSwitchOverrides = ^IToggleSwitchOverrides;

  // Windows.UI.Xaml.Controls.IToggleSwitchStatics
  IToggleSwitchStatics = interface;
  PIToggleSwitchStatics = ^IToggleSwitchStatics;

  // Windows.UI.Xaml.Controls.Primitives.IToolTipTemplateSettings
  Primitives_IToolTipTemplateSettings = interface;
  PPrimitives_IToolTipTemplateSettings = ^Primitives_IToolTipTemplateSettings;

  // Windows.UI.Xaml.Controls.IToolTip
  IToolTip = interface;
  PIToolTip = ^IToolTip;

  // Windows.UI.Xaml.Controls.IToolTip2
  IToolTip2 = interface;
  PIToolTip2 = ^IToolTip2;

  // Windows.UI.Xaml.Controls.IToolTipFactory
  IToolTipFactory = interface;
  PIToolTipFactory = ^IToolTipFactory;

  // Windows.UI.Xaml.Controls.IToolTipService
  IToolTipService = interface;
  PIToolTipService = ^IToolTipService;

  // Windows.UI.Xaml.Controls.IToolTipServiceStatics
  IToolTipServiceStatics = interface;
  PIToolTipServiceStatics = ^IToolTipServiceStatics;

  // Windows.UI.Xaml.Controls.IToolTipStatics
  IToolTipStatics = interface;
  PIToolTipStatics = ^IToolTipStatics;

  // Windows.UI.Xaml.Controls.IToolTipStatics2
  IToolTipStatics2 = interface;
  PIToolTipStatics2 = ^IToolTipStatics2;

  // Windows.UI.Xaml.Controls.ITreeViewNode
  ITreeViewNode = interface;
  PITreeViewNode = ^ITreeViewNode;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IIterator_1__ITreeViewNode = interface;
  PIIterator_1__ITreeViewNode = ^IIterator_1__ITreeViewNode;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IIterable_1__ITreeViewNode = interface;
  PIIterable_1__ITreeViewNode = ^IIterable_1__ITreeViewNode;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IVectorView_1__ITreeViewNode = interface;
  PIVectorView_1__ITreeViewNode = ^IVectorView_1__ITreeViewNode;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IVector_1__ITreeViewNode = interface;
  PIVector_1__ITreeViewNode = ^IVector_1__ITreeViewNode;

  // Windows.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs
  ITreeViewItemInvokedEventArgs = interface;
  PITreeViewItemInvokedEventArgs = ^ITreeViewItemInvokedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs;

  // Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs
  ITreeViewExpandingEventArgs = interface;
  PITreeViewExpandingEventArgs = ^ITreeViewExpandingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs;

  // Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs
  ITreeViewCollapsedEventArgs = interface;
  PITreeViewCollapsedEventArgs = ^ITreeViewCollapsedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs;

  // Windows.UI.Xaml.Controls.ITreeView
  ITreeView = interface;
  PITreeView = ^ITreeView;

  // Windows.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs
  ITreeViewDragItemsStartingEventArgs = interface;
  PITreeViewDragItemsStartingEventArgs = ^ITreeViewDragItemsStartingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs;

  // Windows.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs
  ITreeViewDragItemsCompletedEventArgs = interface;
  PITreeViewDragItemsCompletedEventArgs = ^ITreeViewDragItemsCompletedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs;

  // Windows.UI.Xaml.Controls.ITreeView2
  ITreeView2 = interface;
  PITreeView2 = ^ITreeView2;

  // Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2
  ITreeViewCollapsedEventArgs2 = interface;
  PITreeViewCollapsedEventArgs2 = ^ITreeViewCollapsedEventArgs2;

  // Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs2
  ITreeViewExpandingEventArgs2 = interface;
  PITreeViewExpandingEventArgs2 = ^ITreeViewExpandingEventArgs2;

  // Windows.UI.Xaml.Controls.ITreeViewFactory
  ITreeViewFactory = interface;
  PITreeViewFactory = ^ITreeViewFactory;

  // Windows.UI.Xaml.Controls.ITreeViewItem2
  ITreeViewItem2 = interface;
  PITreeViewItem2 = ^ITreeViewItem2;

  // Windows.UI.Xaml.Controls.ITreeViewItemFactory
  ITreeViewItemFactory = interface;
  PITreeViewItemFactory = ^ITreeViewItemFactory;

  // Windows.UI.Xaml.Controls.ITreeViewItemStatics
  ITreeViewItemStatics = interface;
  PITreeViewItemStatics = ^ITreeViewItemStatics;

  // Windows.UI.Xaml.Controls.ITreeViewItemStatics2
  ITreeViewItemStatics2 = interface;
  PITreeViewItemStatics2 = ^ITreeViewItemStatics2;

  // Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory
  ITreeViewItemTemplateSettingsFactory = interface;
  PITreeViewItemTemplateSettingsFactory = ^ITreeViewItemTemplateSettingsFactory;

  // Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics
  ITreeViewItemTemplateSettingsStatics = interface;
  PITreeViewItemTemplateSettingsStatics = ^ITreeViewItemTemplateSettingsStatics;

  // Windows.UI.Xaml.Controls.ITreeViewListFactory
  ITreeViewListFactory = interface;
  PITreeViewListFactory = ^ITreeViewListFactory;

  // Windows.UI.Xaml.Controls.ITreeViewNodeFactory
  ITreeViewNodeFactory = interface;
  PITreeViewNodeFactory = ^ITreeViewNodeFactory;

  // Windows.UI.Xaml.Controls.ITreeViewNodeStatics
  ITreeViewNodeStatics = interface;
  PITreeViewNodeStatics = ^ITreeViewNodeStatics;

  // Windows.UI.Xaml.Controls.ITreeViewStatics
  ITreeViewStatics = interface;
  PITreeViewStatics = ^ITreeViewStatics;

  // Windows.UI.Xaml.Controls.ITreeViewStatics2
  ITreeViewStatics2 = interface;
  PITreeViewStatics2 = ^ITreeViewStatics2;

  // Windows.UI.Xaml.Controls.ITwoPaneViewFactory
  ITwoPaneViewFactory = interface;
  PITwoPaneViewFactory = ^ITwoPaneViewFactory;

  // Windows.UI.Xaml.Controls.ITwoPaneViewStatics
  ITwoPaneViewStatics = interface;
  PITwoPaneViewStatics = ^ITwoPaneViewStatics;

  // Windows.UI.Xaml.Controls.IUserControl
  IUserControl = interface;
  PIUserControl = ^IUserControl;

  // Windows.UI.Xaml.Controls.IUserControlFactory
  IUserControlFactory = interface;
  PIUserControlFactory = ^IUserControlFactory;

  // Windows.UI.Xaml.Controls.IUserControlStatics
  IUserControlStatics = interface;
  PIUserControlStatics = ^IUserControlStatics;

  // Windows.UI.Xaml.Controls.IVariableSizedWrapGrid
  IVariableSizedWrapGrid = interface;
  PIVariableSizedWrapGrid = ^IVariableSizedWrapGrid;

  // Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics
  IVariableSizedWrapGridStatics = interface;
  PIVariableSizedWrapGridStatics = ^IVariableSizedWrapGridStatics;

  // Windows.UI.Xaml.Controls.IViewbox
  IViewbox = interface;
  PIViewbox = ^IViewbox;

  // Windows.UI.Xaml.Controls.IViewboxStatics
  IViewboxStatics = interface;
  PIViewboxStatics = ^IViewboxStatics;

  // Windows.UI.Xaml.Controls.IVirtualizingPanel
  IVirtualizingPanel = interface;
  PIVirtualizingPanel = ^IVirtualizingPanel;

  // Windows.UI.Xaml.Controls.IVirtualizingPanelFactory
  IVirtualizingPanelFactory = interface;
  PIVirtualizingPanelFactory = ^IVirtualizingPanelFactory;

  // Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides
  IVirtualizingPanelOverrides = interface;
  PIVirtualizingPanelOverrides = ^IVirtualizingPanelOverrides;

  // Windows.UI.Xaml.Controls.IVirtualizingPanelProtected
  IVirtualizingPanelProtected = interface;
  PIVirtualizingPanelProtected = ^IVirtualizingPanelProtected;

  // Windows.UI.Xaml.Controls.IVirtualizingStackPanel
  IVirtualizingStackPanel = interface;
  PIVirtualizingStackPanel = ^IVirtualizingStackPanel;

  // Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides
  IVirtualizingStackPanelOverrides = interface;
  PIVirtualizingStackPanelOverrides = ^IVirtualizingStackPanelOverrides;

  // Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics
  IVirtualizingStackPanelStatics = interface;
  PIVirtualizingStackPanelStatics = ^IVirtualizingStackPanelStatics;

  // Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs
  IWebViewNavigationStartingEventArgs = interface;
  PIWebViewNavigationStartingEventArgs = ^IWebViewNavigationStartingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs = ^TypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs;

  // Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs
  IWebViewContentLoadingEventArgs = interface;
  PIWebViewContentLoadingEventArgs = ^IWebViewContentLoadingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs>
  TypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs = ^TypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs;

  // Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs
  IWebViewDOMContentLoadedEventArgs = interface;
  PIWebViewDOMContentLoadedEventArgs = ^IWebViewDOMContentLoadedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs;

  // Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs
  IWebViewNavigationCompletedEventArgs = interface;
  PIWebViewNavigationCompletedEventArgs = ^IWebViewNavigationCompletedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs;

  // Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs
  IWebViewLongRunningScriptDetectedEventArgs = interface;
  PIWebViewLongRunningScriptDetectedEventArgs = ^IWebViewLongRunningScriptDetectedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewLongRunningScriptDetectedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewLongRunningScriptDetectedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewLongRunningScriptDetectedEventArgs;

  // Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs
  IWebViewUnviewableContentIdentifiedEventArgs = interface;
  PIWebViewUnviewableContentIdentifiedEventArgs = ^IWebViewUnviewableContentIdentifiedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewUnviewableContentIdentifiedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewUnviewableContentIdentifiedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewUnviewableContentIdentifiedEventArgs;

  // Windows.UI.Xaml.Controls.IWebView2
  IWebView2 = interface;
  PIWebView2 = ^IWebView2;

  // Windows.UI.Xaml.Controls.IWebView3
  IWebView3 = interface;
  PIWebView3 = ^IWebView3;

  // Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest
  IWebViewDeferredPermissionRequest = interface;
  PIWebViewDeferredPermissionRequest = ^IWebViewDeferredPermissionRequest;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IIterator_1__IWebViewDeferredPermissionRequest = interface;
  PIIterator_1__IWebViewDeferredPermissionRequest = ^IIterator_1__IWebViewDeferredPermissionRequest;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IIterable_1__IWebViewDeferredPermissionRequest = interface;
  PIIterable_1__IWebViewDeferredPermissionRequest = ^IIterable_1__IWebViewDeferredPermissionRequest;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IVectorView_1__IWebViewDeferredPermissionRequest = interface;
  PIVectorView_1__IWebViewDeferredPermissionRequest = ^IVectorView_1__IWebViewDeferredPermissionRequest;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IVector_1__IWebViewDeferredPermissionRequest = interface;
  PIVector_1__IWebViewDeferredPermissionRequest = ^IVector_1__IWebViewDeferredPermissionRequest;

  // Windows.UI.Xaml.Controls.IWebViewSettings
  IWebViewSettings = interface;
  PIWebViewSettings = ^IWebViewSettings;

  // Windows.UI.Xaml.Controls.IWebViewUnsupportedUriSchemeIdentifiedEventArgs
  IWebViewUnsupportedUriSchemeIdentifiedEventArgs = interface;
  PIWebViewUnsupportedUriSchemeIdentifiedEventArgs = ^IWebViewUnsupportedUriSchemeIdentifiedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewUnsupportedUriSchemeIdentifiedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewUnsupportedUriSchemeIdentifiedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewUnsupportedUriSchemeIdentifiedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewUnsupportedUriSchemeIdentifiedEventArgs;

  // Windows.UI.Xaml.Controls.IWebViewNewWindowRequestedEventArgs
  IWebViewNewWindowRequestedEventArgs = interface;
  PIWebViewNewWindowRequestedEventArgs = ^IWebViewNewWindowRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNewWindowRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNewWindowRequestedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewNewWindowRequestedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewNewWindowRequestedEventArgs;

  // Windows.UI.Xaml.Controls.IWebViewPermissionRequest
  IWebViewPermissionRequest = interface;
  PIWebViewPermissionRequest = ^IWebViewPermissionRequest;

  // Windows.UI.Xaml.Controls.IWebViewPermissionRequestedEventArgs
  IWebViewPermissionRequestedEventArgs = interface;
  PIWebViewPermissionRequestedEventArgs = ^IWebViewPermissionRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewPermissionRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewPermissionRequestedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewPermissionRequestedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewPermissionRequestedEventArgs;

  // Windows.UI.Xaml.Controls.IWebView4
  IWebView4 = interface;
  PIWebView4 = ^IWebView4;

  // Windows.UI.Xaml.Controls.IWebView5
  IWebView5 = interface;
  PIWebView5 = ^IWebView5;

  // Windows.UI.Xaml.Controls.IWebViewSeparateProcessLostEventArgs
  IWebViewSeparateProcessLostEventArgs = interface;
  PIWebViewSeparateProcessLostEventArgs = ^IWebViewSeparateProcessLostEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewSeparateProcessLostEventArgs>
  TypedEventHandler_2__IWebView__IWebViewSeparateProcessLostEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewSeparateProcessLostEventArgs = ^TypedEventHandler_2__IWebView__IWebViewSeparateProcessLostEventArgs;

  // Windows.UI.Xaml.Controls.IWebView6
  IWebView6 = interface;
  PIWebView6 = ^IWebView6;

  // Windows.UI.Xaml.Controls.IWebViewWebResourceRequestedEventArgs
  IWebViewWebResourceRequestedEventArgs = interface;
  PIWebViewWebResourceRequestedEventArgs = ^IWebViewWebResourceRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewWebResourceRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewWebResourceRequestedEventArgs = interface;
  PTypedEventHandler_2__IWebView__IWebViewWebResourceRequestedEventArgs = ^TypedEventHandler_2__IWebView__IWebViewWebResourceRequestedEventArgs;

  // Windows.UI.Xaml.Controls.IWebView7
  IWebView7 = interface;
  PIWebView7 = ^IWebView7;

  // Windows.UI.Xaml.Controls.IWebViewBrush
  IWebViewBrush = interface;
  PIWebViewBrush = ^IWebViewBrush;

  // Windows.UI.Xaml.Controls.IWebViewBrushStatics
  IWebViewBrushStatics = interface;
  PIWebViewBrushStatics = ^IWebViewBrushStatics;

  // Windows.UI.Xaml.Controls.IWebViewFactory4
  IWebViewFactory4 = interface;
  PIWebViewFactory4 = ^IWebViewFactory4;

  // Windows.UI.Xaml.Controls.IWebViewStatics
  IWebViewStatics = interface;
  PIWebViewStatics = ^IWebViewStatics;

  // Windows.UI.Xaml.Controls.IWebViewStatics2
  IWebViewStatics2 = interface;
  PIWebViewStatics2 = ^IWebViewStatics2;

  // Windows.UI.Xaml.Controls.IWebViewStatics3
  IWebViewStatics3 = interface;
  PIWebViewStatics3 = ^IWebViewStatics3;

  // Windows.UI.Xaml.Controls.IWebViewStatics4
  IWebViewStatics4 = interface;
  PIWebViewStatics4 = ^IWebViewStatics4;

  // Windows.UI.Xaml.Controls.IWebViewStatics5
  IWebViewStatics5 = interface;
  PIWebViewStatics5 = ^IWebViewStatics5;

  // Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs2
  IWebViewUnviewableContentIdentifiedEventArgs2 = interface;
  PIWebViewUnviewableContentIdentifiedEventArgs2 = ^IWebViewUnviewableContentIdentifiedEventArgs2;

  // Windows.UI.Xaml.Controls.IWrapGrid
  IWrapGrid = interface;
  PIWrapGrid = ^IWrapGrid;

  // Windows.UI.Xaml.Controls.IWrapGridStatics
  IWrapGridStatics = interface;
  PIWrapGridStatics = ^IWrapGridStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral
  Maps_IMapTileBitmapRequestDeferral = interface;
  PMaps_IMapTileBitmapRequestDeferral = ^Maps_IMapTileBitmapRequestDeferral;

  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest
  Maps_IMapTileBitmapRequest = interface;
  PMaps_IMapTileBitmapRequest = ^Maps_IMapTileBitmapRequest;

  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs
  Maps_IMapTileBitmapRequestedEventArgs = interface;
  PMaps_IMapTileBitmapRequestedEventArgs = ^Maps_IMapTileBitmapRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs>
  TypedEventHandler_2__Maps_ICustomMapTileDataSource__Maps_IMapTileBitmapRequestedEventArgs = interface;
  PTypedEventHandler_2__Maps_ICustomMapTileDataSource__Maps_IMapTileBitmapRequestedEventArgs = ^TypedEventHandler_2__Maps_ICustomMapTileDataSource__Maps_IMapTileBitmapRequestedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource
  Maps_ICustomMapTileDataSource = interface;
  PMaps_ICustomMapTileDataSource = ^Maps_ICustomMapTileDataSource;

  // Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory
  Maps_ICustomMapTileDataSourceFactory = interface;
  PMaps_ICustomMapTileDataSourceFactory = ^Maps_ICustomMapTileDataSourceFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral
  Maps_IMapTileUriRequestDeferral = interface;
  PMaps_IMapTileUriRequestDeferral = ^Maps_IMapTileUriRequestDeferral;

  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest
  Maps_IMapTileUriRequest = interface;
  PMaps_IMapTileUriRequest = ^Maps_IMapTileUriRequest;

  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs
  Maps_IMapTileUriRequestedEventArgs = interface;
  PMaps_IMapTileUriRequestedEventArgs = ^Maps_IMapTileUriRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs>
  TypedEventHandler_2__Maps_IHttpMapTileDataSource__Maps_IMapTileUriRequestedEventArgs = interface;
  PTypedEventHandler_2__Maps_IHttpMapTileDataSource__Maps_IMapTileUriRequestedEventArgs = ^TypedEventHandler_2__Maps_IHttpMapTileDataSource__Maps_IMapTileUriRequestedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource
  Maps_IHttpMapTileDataSource = interface;
  PMaps_IHttpMapTileDataSource = ^Maps_IHttpMapTileDataSource;

  // Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory
  Maps_IHttpMapTileDataSourceFactory = interface;
  PMaps_IHttpMapTileDataSourceFactory = ^Maps_IHttpMapTileDataSourceFactory;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs>
  TypedEventHandler_2__Maps_ILocalMapTileDataSource__Maps_IMapTileUriRequestedEventArgs = interface;
  PTypedEventHandler_2__Maps_ILocalMapTileDataSource__Maps_IMapTileUriRequestedEventArgs = ^TypedEventHandler_2__Maps_ILocalMapTileDataSource__Maps_IMapTileUriRequestedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource
  Maps_ILocalMapTileDataSource = interface;
  PMaps_ILocalMapTileDataSource = ^Maps_ILocalMapTileDataSource;

  // Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory
  Maps_ILocalMapTileDataSourceFactory = interface;
  PMaps_ILocalMapTileDataSourceFactory = ^Maps_ILocalMapTileDataSourceFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapCamera
  Maps_IMapCamera = interface;
  PMaps_IMapCamera = ^Maps_IMapCamera;

  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs
  Maps_IMapActualCameraChangedEventArgs = interface;
  PMaps_IMapActualCameraChangedEventArgs = ^Maps_IMapActualCameraChangedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2
  Maps_IMapActualCameraChangedEventArgs2 = interface;
  PMaps_IMapActualCameraChangedEventArgs2 = ^Maps_IMapActualCameraChangedEventArgs2;

  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs
  Maps_IMapActualCameraChangingEventArgs = interface;
  PMaps_IMapActualCameraChangingEventArgs = ^Maps_IMapActualCameraChangingEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2
  Maps_IMapActualCameraChangingEventArgs2 = interface;
  PMaps_IMapActualCameraChangingEventArgs2 = ^Maps_IMapActualCameraChangingEventArgs2;

  // Windows.UI.Xaml.Controls.Maps.IMapBillboard
  Maps_IMapBillboard = interface;
  PMaps_IMapBillboard = ^Maps_IMapBillboard;

  // Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory
  Maps_IMapBillboardFactory = interface;
  PMaps_IMapBillboardFactory = ^Maps_IMapBillboardFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics
  Maps_IMapBillboardStatics = interface;
  PMaps_IMapBillboardStatics = ^Maps_IMapBillboardStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapCameraFactory
  Maps_IMapCameraFactory = interface;
  PMaps_IMapCameraFactory = ^Maps_IMapCameraFactory;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapElement>
  IIterator_1__Maps_IMapElement = interface;
  PIIterator_1__Maps_IMapElement = ^IIterator_1__Maps_IMapElement;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapElement>
  IIterable_1__Maps_IMapElement = interface;
  PIIterable_1__Maps_IMapElement = ^IIterable_1__Maps_IMapElement;

  // Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs
  Maps_IMapContextRequestedEventArgs = interface;
  PMaps_IMapContextRequestedEventArgs = ^Maps_IMapContextRequestedEventArgs;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapRouteView>
  IIterator_1__Maps_IMapRouteView = interface;
  PIIterator_1__Maps_IMapRouteView = ^IIterator_1__Maps_IMapRouteView;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapRouteView>
  IIterable_1__Maps_IMapRouteView = interface;
  PIIterable_1__Maps_IMapRouteView = ^IIterable_1__Maps_IMapRouteView;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapTileSource>
  IIterator_1__Maps_IMapTileSource = interface;
  PIIterator_1__Maps_IMapTileSource = ^IIterator_1__Maps_IMapTileSource;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapTileSource>
  IIterable_1__Maps_IMapTileSource = interface;
  PIIterable_1__Maps_IMapTileSource = ^IIterable_1__Maps_IMapTileSource;

  // Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs
  Maps_IMapTargetCameraChangedEventArgs = interface;
  PMaps_IMapTargetCameraChangedEventArgs = ^Maps_IMapTargetCameraChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapScene,Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapScene__Maps_IMapTargetCameraChangedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapScene__Maps_IMapTargetCameraChangedEventArgs = ^TypedEventHandler_2__Maps_IMapScene__Maps_IMapTargetCameraChangedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapScene
  Maps_IMapScene = interface;
  PMaps_IMapScene = ^Maps_IMapScene;

  // Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
  Maps_IMapCustomExperience = interface;
  PMaps_IMapCustomExperience = ^Maps_IMapCustomExperience;

  // Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs
  Maps_IMapElementClickEventArgs = interface;
  PMaps_IMapElementClickEventArgs = ^Maps_IMapElementClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementClickEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapElementClickEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementClickEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs
  Maps_IMapElementPointerEnteredEventArgs = interface;
  PMaps_IMapElementPointerEnteredEventArgs = ^Maps_IMapElementPointerEnteredEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerEnteredEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerEnteredEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerEnteredEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs
  Maps_IMapElementPointerExitedEventArgs = interface;
  PMaps_IMapElementPointerExitedEventArgs = ^Maps_IMapElementPointerExitedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerExitedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerExitedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerExitedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangingEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangingEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapTargetCameraChangedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapTargetCameraChangedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapTargetCameraChangedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs
  Maps_IMapCustomExperienceChangedEventArgs = interface;
  PMaps_IMapCustomExperienceChangedEventArgs = ^Maps_IMapCustomExperienceChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapCustomExperienceChangedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapCustomExperienceChangedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapCustomExperienceChangedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControl2
  Maps_IMapControl2 = interface;
  PMaps_IMapControl2 = ^Maps_IMapControl2;

  // Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs
  Maps_IMapRightTappedEventArgs = interface;
  PMaps_IMapRightTappedEventArgs = ^Maps_IMapRightTappedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapRightTappedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapRightTappedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapRightTappedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControl3
  Maps_IMapControl3 = interface;
  PMaps_IMapControl3 = ^Maps_IMapControl3;

  // Windows.UI.Xaml.Controls.Maps.IMapControl4
  Maps_IMapControl4 = interface;
  PMaps_IMapControl4 = ^Maps_IMapControl4;

  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
  Maps_IMapStyleSheet = interface;
  PMaps_IMapStyleSheet = ^Maps_IMapStyleSheet;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapContextRequestedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapContextRequestedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapContextRequestedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControl5
  Maps_IMapControl5 = interface;
  PMaps_IMapControl5 = ^Maps_IMapControl5;

  // Windows.UI.Xaml.Controls.Maps.IMapLayer
  Maps_IMapLayer = interface;
  PMaps_IMapLayer = ^Maps_IMapLayer;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IIterator_1__Maps_IMapLayer = interface;
  PIIterator_1__Maps_IMapLayer = ^IIterator_1__Maps_IMapLayer;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IIterable_1__Maps_IMapLayer = interface;
  PIIterable_1__Maps_IMapLayer = ^IIterable_1__Maps_IMapLayer;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IVectorView_1__Maps_IMapLayer = interface;
  PIVectorView_1__Maps_IMapLayer = ^IVectorView_1__Maps_IMapLayer;

  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IVector_1__Maps_IMapLayer = interface;
  PIVector_1__Maps_IMapLayer = ^IVector_1__Maps_IMapLayer;

  // Windows.UI.Xaml.Controls.Maps.IMapControl6
  Maps_IMapControl6 = interface;
  PMaps_IMapControl6 = ^Maps_IMapControl6;

  // Windows.UI.Xaml.Controls.Maps.IMapControl7
  Maps_IMapControl7 = interface;
  PMaps_IMapControl7 = ^Maps_IMapControl7;

  // Windows.UI.Xaml.Controls.Maps.IMapControl8
  Maps_IMapControl8 = interface;
  PMaps_IMapControl8 = ^Maps_IMapControl8;

  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs
  Maps_IMapControlBusinessLandmarkClickEventArgs = interface;
  PMaps_IMapControlBusinessLandmarkClickEventArgs = ^Maps_IMapControlBusinessLandmarkClickEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs
  Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs = interface;
  PMaps_IMapControlBusinessLandmarkPointerEnteredEventArgs = ^Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs
  Maps_IMapControlBusinessLandmarkPointerExitedEventArgs = interface;
  PMaps_IMapControlBusinessLandmarkPointerExitedEventArgs = ^Maps_IMapControlBusinessLandmarkPointerExitedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs
  Maps_IMapControlBusinessLandmarkRightTappedEventArgs = interface;
  PMaps_IMapControlBusinessLandmarkRightTappedEventArgs = ^Maps_IMapControlBusinessLandmarkRightTappedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkClickEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkClickEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkClickEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs
  Maps_IMapControlTransitFeatureClickEventArgs = interface;
  PMaps_IMapControlTransitFeatureClickEventArgs = ^Maps_IMapControlTransitFeatureClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureClickEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureClickEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkRightTappedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkRightTappedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkRightTappedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs
  Maps_IMapControlTransitFeatureRightTappedEventArgs = interface;
  PMaps_IMapControlTransitFeatureRightTappedEventArgs = ^Maps_IMapControlTransitFeatureRightTappedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureRightTappedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureRightTappedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureRightTappedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper
  Maps_IMapControlDataHelper = interface;
  PMaps_IMapControlDataHelper = ^Maps_IMapControlDataHelper;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs
  Maps_IMapControlTransitFeaturePointerEnteredEventArgs = interface;
  PMaps_IMapControlTransitFeaturePointerEnteredEventArgs = ^Maps_IMapControlTransitFeaturePointerEnteredEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerEnteredEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerEnteredEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerEnteredEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerExitedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerExitedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerExitedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs
  Maps_IMapControlTransitFeaturePointerExitedEventArgs = interface;
  PMaps_IMapControlTransitFeaturePointerExitedEventArgs = ^Maps_IMapControlTransitFeaturePointerExitedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerExitedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerExitedEventArgs = ^TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerExitedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2
  Maps_IMapControlDataHelper2 = interface;
  PMaps_IMapControlDataHelper2 = ^Maps_IMapControlDataHelper2;

  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory
  Maps_IMapControlDataHelperFactory = interface;
  PMaps_IMapControlDataHelperFactory = ^Maps_IMapControlDataHelperFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics
  Maps_IMapControlDataHelperStatics = interface;
  PMaps_IMapControlDataHelperStatics = ^Maps_IMapControlDataHelperStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics
  Maps_IMapControlStatics = interface;
  PMaps_IMapControlStatics = ^Maps_IMapControlStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics2
  Maps_IMapControlStatics2 = interface;
  PMaps_IMapControlStatics2 = ^Maps_IMapControlStatics2;

  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics4
  Maps_IMapControlStatics4 = interface;
  PMaps_IMapControlStatics4 = ^Maps_IMapControlStatics4;

  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics5
  Maps_IMapControlStatics5 = interface;
  PMaps_IMapControlStatics5 = ^Maps_IMapControlStatics5;

  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics6
  Maps_IMapControlStatics6 = interface;
  PMaps_IMapControlStatics6 = ^Maps_IMapControlStatics6;

  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics7
  Maps_IMapControlStatics7 = interface;
  PMaps_IMapControlStatics7 = ^Maps_IMapControlStatics7;

  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics8
  Maps_IMapControlStatics8 = interface;
  PMaps_IMapControlStatics8 = ^Maps_IMapControlStatics8;

  // Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory
  Maps_IMapCustomExperienceFactory = interface;
  PMaps_IMapCustomExperienceFactory = ^Maps_IMapCustomExperienceFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapElement2
  Maps_IMapElement2 = interface;
  PMaps_IMapElement2 = ^Maps_IMapElement2;

  // Windows.UI.Xaml.Controls.Maps.IMapElement3
  Maps_IMapElement3 = interface;
  PMaps_IMapElement3 = ^Maps_IMapElement3;

  // Windows.UI.Xaml.Controls.Maps.IMapModel3D
  Maps_IMapModel3D = interface;
  PMaps_IMapModel3D = ^Maps_IMapModel3D;

  // Windows.UI.Xaml.Controls.Maps.IMapElement3D
  Maps_IMapElement3D = interface;
  PMaps_IMapElement3D = ^Maps_IMapElement3D;

  // Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics
  Maps_IMapElement3DStatics = interface;
  PMaps_IMapElement3DStatics = ^Maps_IMapElement3DStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapElement4
  Maps_IMapElement4 = interface;
  PMaps_IMapElement4 = ^Maps_IMapElement4;

  // Windows.UI.Xaml.Controls.Maps.IMapElementFactory
  Maps_IMapElementFactory = interface;
  PMaps_IMapElementFactory = ^Maps_IMapElementFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics
  Maps_IMapElementStatics = interface;
  PMaps_IMapElementStatics = ^Maps_IMapElementStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics2
  Maps_IMapElementStatics2 = interface;
  PMaps_IMapElementStatics2 = ^Maps_IMapElementStatics2;

  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics3
  Maps_IMapElementStatics3 = interface;
  PMaps_IMapElementStatics3 = ^Maps_IMapElementStatics3;

  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics4
  Maps_IMapElementStatics4 = interface;
  PMaps_IMapElementStatics4 = ^Maps_IMapElementStatics4;

  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs
  Maps_IMapElementsLayerClickEventArgs = interface;
  PMaps_IMapElementsLayerClickEventArgs = ^Maps_IMapElementsLayerClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerClickEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerClickEventArgs = ^TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerClickEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs
  Maps_IMapElementsLayerPointerEnteredEventArgs = interface;
  PMaps_IMapElementsLayerPointerEnteredEventArgs = ^Maps_IMapElementsLayerPointerEnteredEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerEnteredEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerEnteredEventArgs = ^TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerEnteredEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs
  Maps_IMapElementsLayerPointerExitedEventArgs = interface;
  PMaps_IMapElementsLayerPointerExitedEventArgs = ^Maps_IMapElementsLayerPointerExitedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerExitedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerExitedEventArgs = ^TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerExitedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs
  Maps_IMapElementsLayerContextRequestedEventArgs = interface;
  PMaps_IMapElementsLayerContextRequestedEventArgs = ^Maps_IMapElementsLayerContextRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerContextRequestedEventArgs = interface;
  PTypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerContextRequestedEventArgs = ^TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerContextRequestedEventArgs;

  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayer
  Maps_IMapElementsLayer = interface;
  PMaps_IMapElementsLayer = ^Maps_IMapElementsLayer;

  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics
  Maps_IMapElementsLayerStatics = interface;
  PMaps_IMapElementsLayerStatics = ^Maps_IMapElementsLayerStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapIcon
  Maps_IMapIcon = interface;
  PMaps_IMapIcon = ^Maps_IMapIcon;

  // Windows.UI.Xaml.Controls.Maps.IMapIcon2
  Maps_IMapIcon2 = interface;
  PMaps_IMapIcon2 = ^Maps_IMapIcon2;

  // Windows.UI.Xaml.Controls.Maps.IMapIconStatics
  Maps_IMapIconStatics = interface;
  PMaps_IMapIconStatics = ^Maps_IMapIconStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapIconStatics2
  Maps_IMapIconStatics2 = interface;
  PMaps_IMapIconStatics2 = ^Maps_IMapIconStatics2;

  // Windows.UI.Xaml.Controls.Maps.IMapItemsControl
  Maps_IMapItemsControl = interface;
  PMaps_IMapItemsControl = ^Maps_IMapItemsControl;

  // Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics
  Maps_IMapItemsControlStatics = interface;
  PMaps_IMapItemsControlStatics = ^Maps_IMapItemsControlStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapLayerFactory
  Maps_IMapLayerFactory = interface;
  PMaps_IMapLayerFactory = ^Maps_IMapLayerFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapLayerStatics
  Maps_IMapLayerStatics = interface;
  PMaps_IMapLayerStatics = ^Maps_IMapLayerStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory
  Maps_IMapModel3DFactory = interface;
  PMaps_IMapModel3DFactory = ^Maps_IMapModel3DFactory;

  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.IMapModel3D>
  AsyncOperationCompletedHandler_1__Maps_IMapModel3D = interface;
  PAsyncOperationCompletedHandler_1__Maps_IMapModel3D = ^AsyncOperationCompletedHandler_1__Maps_IMapModel3D;

  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.IMapModel3D>
  IAsyncOperation_1__Maps_IMapModel3D = interface;
  PIAsyncOperation_1__Maps_IMapModel3D = ^IAsyncOperation_1__Maps_IMapModel3D;

  // Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics
  Maps_IMapModel3DStatics = interface;
  PMaps_IMapModel3DStatics = ^Maps_IMapModel3DStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapPolygon
  Maps_IMapPolygon = interface;
  PMaps_IMapPolygon = ^Maps_IMapPolygon;

  // Windows.UI.Xaml.Controls.Maps.IMapPolygon2
  Maps_IMapPolygon2 = interface;
  PMaps_IMapPolygon2 = ^Maps_IMapPolygon2;

  // Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics
  Maps_IMapPolygonStatics = interface;
  PMaps_IMapPolygonStatics = ^Maps_IMapPolygonStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapPolyline
  Maps_IMapPolyline = interface;
  PMaps_IMapPolyline = ^Maps_IMapPolyline;

  // Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics
  Maps_IMapPolylineStatics = interface;
  PMaps_IMapPolylineStatics = ^Maps_IMapPolylineStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory
  Maps_IMapRouteViewFactory = interface;
  PMaps_IMapRouteViewFactory = ^Maps_IMapRouteViewFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapSceneStatics
  Maps_IMapSceneStatics = interface;
  PMaps_IMapSceneStatics = ^Maps_IMapSceneStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics
  Maps_IMapStyleSheetEntriesStatics = interface;
  PMaps_IMapStyleSheetEntriesStatics = ^Maps_IMapStyleSheetEntriesStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics
  Maps_IMapStyleSheetEntryStatesStatics = interface;
  PMaps_IMapStyleSheetEntryStatesStatics = ^Maps_IMapStyleSheetEntryStatesStatics;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapStyleSheet>
  IIterator_1__Maps_IMapStyleSheet = interface;
  PIIterator_1__Maps_IMapStyleSheet = ^IIterator_1__Maps_IMapStyleSheet;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapStyleSheet>
  IIterable_1__Maps_IMapStyleSheet = interface;
  PIIterable_1__Maps_IMapStyleSheet = ^IIterable_1__Maps_IMapStyleSheet;

  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics
  Maps_IMapStyleSheetStatics = interface;
  PMaps_IMapStyleSheetStatics = ^Maps_IMapStyleSheetStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2
  Maps_IMapTargetCameraChangedEventArgs2 = interface;
  PMaps_IMapTargetCameraChangedEventArgs2 = ^Maps_IMapTargetCameraChangedEventArgs2;

  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2
  Maps_IMapTileBitmapRequestedEventArgs2 = interface;
  PMaps_IMapTileBitmapRequestedEventArgs2 = ^Maps_IMapTileBitmapRequestedEventArgs2;

  // Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory
  Maps_IMapTileDataSourceFactory = interface;
  PMaps_IMapTileDataSourceFactory = ^Maps_IMapTileDataSourceFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapTileSource2
  Maps_IMapTileSource2 = interface;
  PMaps_IMapTileSource2 = ^Maps_IMapTileSource2;

  // Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory
  Maps_IMapTileSourceFactory = interface;
  PMaps_IMapTileSourceFactory = ^Maps_IMapTileSourceFactory;

  // Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics
  Maps_IMapTileSourceStatics = interface;
  PMaps_IMapTileSourceStatics = ^Maps_IMapTileSourceStatics;

  // Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2
  Maps_IMapTileSourceStatics2 = interface;
  PMaps_IMapTileSourceStatics2 = ^Maps_IMapTileSourceStatics2;

  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2
  Maps_IMapTileUriRequestedEventArgs2 = interface;
  PMaps_IMapTileUriRequestedEventArgs2 = ^Maps_IMapTileUriRequestedEventArgs2;

  // Windows.UI.Xaml.Controls.Maps.IStreetsideExperience
  Maps_IStreetsideExperience = interface;
  PMaps_IStreetsideExperience = ^Maps_IStreetsideExperience;

  // Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama
  Maps_IStreetsidePanorama = interface;
  PMaps_IStreetsidePanorama = ^Maps_IStreetsidePanorama;

  // Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory
  Maps_IStreetsideExperienceFactory = interface;
  PMaps_IStreetsideExperienceFactory = ^Maps_IStreetsideExperienceFactory;

  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama>
  AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama = interface;
  PAsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama = ^AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama;

  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama>
  IAsyncOperation_1__Maps_IStreetsidePanorama = interface;
  PIAsyncOperation_1__Maps_IStreetsidePanorama = ^IAsyncOperation_1__Maps_IStreetsidePanorama;

  // Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics
  Maps_IStreetsidePanoramaStatics = interface;
  PMaps_IStreetsidePanoramaStatics = ^Maps_IStreetsidePanoramaStatics;

  // Windows.UI.Xaml.Controls.Primitives.IAppBarTemplateSettings2
  Primitives_IAppBarTemplateSettings2 = interface;
  PPrimitives_IAppBarTemplateSettings2 = ^Primitives_IAppBarTemplateSettings2;

  // Windows.UI.Xaml.Controls.Primitives.IButtonBaseFactory
  Primitives_IButtonBaseFactory = interface;
  PPrimitives_IButtonBaseFactory = ^Primitives_IButtonBaseFactory;

  // Windows.UI.Xaml.Controls.Primitives.IButtonBaseStatics
  Primitives_IButtonBaseStatics = interface;
  PPrimitives_IButtonBaseStatics = ^Primitives_IButtonBaseStatics;

  // Windows.UI.Xaml.Controls.Primitives.ICalendarPanel
  Primitives_ICalendarPanel = interface;
  PPrimitives_ICalendarPanel = ^Primitives_ICalendarPanel;

  // Windows.UI.Xaml.Controls.Primitives.ICarouselPanel
  Primitives_ICarouselPanel = interface;
  PPrimitives_ICarouselPanel = ^Primitives_ICarouselPanel;

  // Windows.UI.Xaml.Controls.Primitives.ICarouselPanelFactory
  Primitives_ICarouselPanelFactory = interface;
  PPrimitives_ICarouselPanelFactory = ^Primitives_ICarouselPanelFactory;

  // Windows.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory
  Primitives_IColorPickerSliderFactory = interface;
  PPrimitives_IColorPickerSliderFactory = ^Primitives_IColorPickerSliderFactory;

  // Windows.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics
  Primitives_IColorPickerSliderStatics = interface;
  PPrimitives_IColorPickerSliderStatics = ^Primitives_IColorPickerSliderStatics;

  // Windows.UI.Xaml.Controls.Primitives.IColorSpectrumFactory
  Primitives_IColorSpectrumFactory = interface;
  PPrimitives_IColorSpectrumFactory = ^Primitives_IColorSpectrumFactory;

  // Windows.UI.Xaml.Controls.Primitives.IColorSpectrumStatics
  Primitives_IColorSpectrumStatics = interface;
  PPrimitives_IColorSpectrumStatics = ^Primitives_IColorSpectrumStatics;

  // Windows.UI.Xaml.Controls.Primitives.IComboBoxTemplateSettings2
  Primitives_IComboBoxTemplateSettings2 = interface;
  PPrimitives_IComboBoxTemplateSettings2 = ^Primitives_IComboBoxTemplateSettings2;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings
  Primitives_ICommandBarFlyoutCommandBarTemplateSettings = interface;
  PPrimitives_ICommandBarFlyoutCommandBarTemplateSettings = ^Primitives_ICommandBarFlyoutCommandBarTemplateSettings;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar
  Primitives_ICommandBarFlyoutCommandBar = interface;
  PPrimitives_ICommandBarFlyoutCommandBar = ^Primitives_ICommandBarFlyoutCommandBar;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory
  Primitives_ICommandBarFlyoutCommandBarFactory = interface;
  PPrimitives_ICommandBarFlyoutCommandBarFactory = ^Primitives_ICommandBarFlyoutCommandBarFactory;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings2
  Primitives_ICommandBarTemplateSettings2 = interface;
  PPrimitives_ICommandBarTemplateSettings2 = ^Primitives_ICommandBarTemplateSettings2;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings3
  Primitives_ICommandBarTemplateSettings3 = interface;
  PPrimitives_ICommandBarTemplateSettings3 = ^Primitives_ICommandBarTemplateSettings3;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings4
  Primitives_ICommandBarTemplateSettings4 = interface;
  PPrimitives_ICommandBarTemplateSettings4 = ^Primitives_ICommandBarTemplateSettings4;

  // Windows.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory
  Primitives_IDragCompletedEventArgsFactory = interface;
  PPrimitives_IDragCompletedEventArgsFactory = ^Primitives_IDragCompletedEventArgsFactory;

  // Windows.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory
  Primitives_IDragDeltaEventArgsFactory = interface;
  PPrimitives_IDragDeltaEventArgsFactory = ^Primitives_IDragDeltaEventArgsFactory;

  // Windows.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory
  Primitives_IDragStartedEventArgsFactory = interface;
  PPrimitives_IDragStartedEventArgsFactory = ^Primitives_IDragStartedEventArgsFactory;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs
  Primitives_IFlyoutBaseClosingEventArgs = interface;
  PPrimitives_IFlyoutBaseClosingEventArgs = ^Primitives_IFlyoutBaseClosingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Primitives.IFlyoutBase,Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs>
  TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs = interface;
  PTypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs = ^TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2
  Primitives_IFlyoutBase2 = interface;
  PPrimitives_IFlyoutBase2 = ^Primitives_IFlyoutBase2;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase3
  Primitives_IFlyoutBase3 = interface;
  PPrimitives_IFlyoutBase3 = ^Primitives_IFlyoutBase3;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase4
  Primitives_IFlyoutBase4 = interface;
  PPrimitives_IFlyoutBase4 = ^Primitives_IFlyoutBase4;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptions
  Primitives_IFlyoutShowOptions = interface;
  PPrimitives_IFlyoutShowOptions = ^Primitives_IFlyoutShowOptions;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase5
  Primitives_IFlyoutBase5 = interface;
  PPrimitives_IFlyoutBase5 = ^Primitives_IFlyoutBase5;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase6
  Primitives_IFlyoutBase6 = interface;
  PPrimitives_IFlyoutBase6 = ^Primitives_IFlyoutBase6;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory
  Primitives_IFlyoutBaseFactory = interface;
  PPrimitives_IFlyoutBaseFactory = ^Primitives_IFlyoutBaseFactory;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides
  Primitives_IFlyoutBaseOverrides = interface;
  PPrimitives_IFlyoutBaseOverrides = ^Primitives_IFlyoutBaseOverrides;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4
  Primitives_IFlyoutBaseOverrides4 = interface;
  PPrimitives_IFlyoutBaseOverrides4 = ^Primitives_IFlyoutBaseOverrides4;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics
  Primitives_IFlyoutBaseStatics = interface;
  PPrimitives_IFlyoutBaseStatics = ^Primitives_IFlyoutBaseStatics;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics2
  Primitives_IFlyoutBaseStatics2 = interface;
  PPrimitives_IFlyoutBaseStatics2 = ^Primitives_IFlyoutBaseStatics2;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics3
  Primitives_IFlyoutBaseStatics3 = interface;
  PPrimitives_IFlyoutBaseStatics3 = ^Primitives_IFlyoutBaseStatics3;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics5
  Primitives_IFlyoutBaseStatics5 = interface;
  PPrimitives_IFlyoutBaseStatics5 = ^Primitives_IFlyoutBaseStatics5;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics6
  Primitives_IFlyoutBaseStatics6 = interface;
  PPrimitives_IFlyoutBaseStatics6 = ^Primitives_IFlyoutBaseStatics6;

  // Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory
  Primitives_IFlyoutShowOptionsFactory = interface;
  PPrimitives_IFlyoutShowOptionsFactory = ^Primitives_IFlyoutShowOptionsFactory;

  // Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelper
  Primitives_IGeneratorPositionHelper = interface;
  PPrimitives_IGeneratorPositionHelper = ^Primitives_IGeneratorPositionHelper;

  // Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelperStatics
  Primitives_IGeneratorPositionHelperStatics = interface;
  PPrimitives_IGeneratorPositionHelperStatics = ^Primitives_IGeneratorPositionHelperStatics;

  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenter
  Primitives_IGridViewItemPresenter = interface;
  PPrimitives_IGridViewItemPresenter = ^Primitives_IGridViewItemPresenter;

  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory
  Primitives_IGridViewItemPresenterFactory = interface;
  PPrimitives_IGridViewItemPresenterFactory = ^Primitives_IGridViewItemPresenterFactory;

  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenterStatics
  Primitives_IGridViewItemPresenterStatics = interface;
  PPrimitives_IGridViewItemPresenterStatics = ^Primitives_IGridViewItemPresenterStatics;

  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverter
  Primitives_IJumpListItemBackgroundConverter = interface;
  PPrimitives_IJumpListItemBackgroundConverter = ^Primitives_IJumpListItemBackgroundConverter;

  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverterStatics
  Primitives_IJumpListItemBackgroundConverterStatics = interface;
  PPrimitives_IJumpListItemBackgroundConverterStatics = ^Primitives_IJumpListItemBackgroundConverterStatics;

  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverter
  Primitives_IJumpListItemForegroundConverter = interface;
  PPrimitives_IJumpListItemForegroundConverter = ^Primitives_IJumpListItemForegroundConverter;

  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverterStatics
  Primitives_IJumpListItemForegroundConverterStatics = interface;
  PPrimitives_IJumpListItemForegroundConverterStatics = ^Primitives_IJumpListItemForegroundConverterStatics;

  // Windows.UI.Xaml.Controls.Primitives.ILayoutInformation
  Primitives_ILayoutInformation = interface;
  PPrimitives_ILayoutInformation = ^Primitives_ILayoutInformation;

  // Windows.UI.Xaml.Controls.Primitives.ILayoutInformationStatics
  Primitives_ILayoutInformationStatics = interface;
  PPrimitives_ILayoutInformationStatics = ^Primitives_ILayoutInformationStatics;

  // Windows.UI.Xaml.Controls.Primitives.ILayoutInformationStatics2
  Primitives_ILayoutInformationStatics2 = interface;
  PPrimitives_ILayoutInformationStatics2 = ^Primitives_ILayoutInformationStatics2;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter
  Primitives_IListViewItemPresenter = interface;
  PPrimitives_IListViewItemPresenter = ^Primitives_IListViewItemPresenter;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter2
  Primitives_IListViewItemPresenter2 = interface;
  PPrimitives_IListViewItemPresenter2 = ^Primitives_IListViewItemPresenter2;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter3
  Primitives_IListViewItemPresenter3 = interface;
  PPrimitives_IListViewItemPresenter3 = ^Primitives_IListViewItemPresenter3;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory
  Primitives_IListViewItemPresenterFactory = interface;
  PPrimitives_IListViewItemPresenterFactory = ^Primitives_IListViewItemPresenterFactory;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics
  Primitives_IListViewItemPresenterStatics = interface;
  PPrimitives_IListViewItemPresenterStatics = ^Primitives_IListViewItemPresenterStatics;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics2
  Primitives_IListViewItemPresenterStatics2 = interface;
  PPrimitives_IListViewItemPresenterStatics2 = ^Primitives_IListViewItemPresenterStatics2;

  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics3
  Primitives_IListViewItemPresenterStatics3 = interface;
  PPrimitives_IListViewItemPresenterStatics3 = ^Primitives_IListViewItemPresenterStatics3;

  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelector
  Primitives_ILoopingSelector = interface;
  PPrimitives_ILoopingSelector = ^Primitives_ILoopingSelector;

  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorItem
  Primitives_ILoopingSelectorItem = interface;
  PPrimitives_ILoopingSelectorItem = ^Primitives_ILoopingSelectorItem;

  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorPanel
  Primitives_ILoopingSelectorPanel = interface;
  PPrimitives_ILoopingSelectorPanel = ^Primitives_ILoopingSelectorPanel;

  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorStatics
  Primitives_ILoopingSelectorStatics = interface;
  PPrimitives_ILoopingSelectorStatics = ^Primitives_ILoopingSelectorStatics;

  // Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter
  Primitives_INavigationViewItemPresenter = interface;
  PPrimitives_INavigationViewItemPresenter = ^Primitives_INavigationViewItemPresenter;

  // Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory
  Primitives_INavigationViewItemPresenterFactory = interface;
  PPrimitives_INavigationViewItemPresenterFactory = ^Primitives_INavigationViewItemPresenterFactory;

  // Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics
  Primitives_INavigationViewItemPresenterStatics = interface;
  PPrimitives_INavigationViewItemPresenterStatics = ^Primitives_INavigationViewItemPresenterStatics;

  // Windows.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanel
  Primitives_IOrientedVirtualizingPanel = interface;
  PPrimitives_IOrientedVirtualizingPanel = ^Primitives_IOrientedVirtualizingPanel;

  // Windows.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory
  Primitives_IOrientedVirtualizingPanelFactory = interface;
  PPrimitives_IOrientedVirtualizingPanelFactory = ^Primitives_IOrientedVirtualizingPanelFactory;

  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBase
  Primitives_IPickerFlyoutBase = interface;
  PPrimitives_IPickerFlyoutBase = ^Primitives_IPickerFlyoutBase;

  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory
  Primitives_IPickerFlyoutBaseFactory = interface;
  PPrimitives_IPickerFlyoutBaseFactory = ^Primitives_IPickerFlyoutBaseFactory;

  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseOverrides
  Primitives_IPickerFlyoutBaseOverrides = interface;
  PPrimitives_IPickerFlyoutBaseOverrides = ^Primitives_IPickerFlyoutBaseOverrides;

  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseStatics
  Primitives_IPickerFlyoutBaseStatics = interface;
  PPrimitives_IPickerFlyoutBaseStatics = ^Primitives_IPickerFlyoutBaseStatics;

  // Windows.UI.Xaml.Controls.Primitives.IPivotHeaderItem
  Primitives_IPivotHeaderItem = interface;
  PPrimitives_IPivotHeaderItem = ^Primitives_IPivotHeaderItem;

  // Windows.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory
  Primitives_IPivotHeaderItemFactory = interface;
  PPrimitives_IPivotHeaderItemFactory = ^Primitives_IPivotHeaderItemFactory;

  // Windows.UI.Xaml.Controls.Primitives.IPivotHeaderPanel
  Primitives_IPivotHeaderPanel = interface;
  PPrimitives_IPivotHeaderPanel = ^Primitives_IPivotHeaderPanel;

  // Windows.UI.Xaml.Controls.Primitives.IPivotPanel
  Primitives_IPivotPanel = interface;
  PPrimitives_IPivotPanel = ^Primitives_IPivotPanel;

  // Windows.UI.Xaml.Controls.Primitives.IPopup2
  Primitives_IPopup2 = interface;
  PPrimitives_IPopup2 = ^Primitives_IPopup2;

  // Windows.UI.Xaml.Controls.Primitives.IPopup3
  Primitives_IPopup3 = interface;
  PPrimitives_IPopup3 = ^Primitives_IPopup3;

  // Windows.UI.Xaml.Controls.Primitives.IPopupStatics
  Primitives_IPopupStatics = interface;
  PPrimitives_IPopupStatics = ^Primitives_IPopupStatics;

  // Windows.UI.Xaml.Controls.Primitives.IPopupStatics2
  Primitives_IPopupStatics2 = interface;
  PPrimitives_IPopupStatics2 = ^Primitives_IPopupStatics2;

  // Windows.UI.Xaml.Controls.Primitives.IPopupStatics3
  Primitives_IPopupStatics3 = interface;
  PPrimitives_IPopupStatics3 = ^Primitives_IPopupStatics3;

  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseFactory
  Primitives_IRangeBaseFactory = interface;
  PPrimitives_IRangeBaseFactory = ^Primitives_IRangeBaseFactory;

  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides
  Primitives_IRangeBaseOverrides = interface;
  PPrimitives_IRangeBaseOverrides = ^Primitives_IRangeBaseOverrides;

  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseStatics
  Primitives_IRangeBaseStatics = interface;
  PPrimitives_IRangeBaseStatics = ^Primitives_IRangeBaseStatics;

  // Windows.UI.Xaml.Controls.Primitives.IRepeatButtonStatics
  Primitives_IRepeatButtonStatics = interface;
  PPrimitives_IRepeatButtonStatics = ^Primitives_IRepeatButtonStatics;

  // Windows.UI.Xaml.Controls.Primitives.IScrollBarStatics
  Primitives_IScrollBarStatics = interface;
  PPrimitives_IScrollBarStatics = ^Primitives_IScrollBarStatics;

  // Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  Primitives_IScrollSnapPointsInfo = interface;
  PPrimitives_IScrollSnapPointsInfo = ^Primitives_IScrollSnapPointsInfo;

  // Windows.UI.Xaml.Controls.Primitives.ISelectorFactory
  Primitives_ISelectorFactory = interface;
  PPrimitives_ISelectorFactory = ^Primitives_ISelectorFactory;

  // Windows.UI.Xaml.Controls.Primitives.ISelectorItemFactory
  Primitives_ISelectorItemFactory = interface;
  PPrimitives_ISelectorItemFactory = ^Primitives_ISelectorItemFactory;

  // Windows.UI.Xaml.Controls.Primitives.ISelectorItemStatics
  Primitives_ISelectorItemStatics = interface;
  PPrimitives_ISelectorItemStatics = ^Primitives_ISelectorItemStatics;

  // Windows.UI.Xaml.Controls.Primitives.ISelectorStatics
  Primitives_ISelectorStatics = interface;
  PPrimitives_ISelectorStatics = ^Primitives_ISelectorStatics;

  // Windows.UI.Xaml.Controls.Primitives.IThumbStatics
  Primitives_IThumbStatics = interface;
  PPrimitives_IThumbStatics = ^Primitives_IThumbStatics;

  // Windows.UI.Xaml.Controls.Primitives.ITickBar
  Primitives_ITickBar = interface;
  PPrimitives_ITickBar = ^Primitives_ITickBar;

  // Windows.UI.Xaml.Controls.Primitives.ITickBarStatics
  Primitives_ITickBarStatics = interface;
  PPrimitives_ITickBarStatics = ^Primitives_ITickBarStatics;

  // Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory
  Primitives_IToggleButtonFactory = interface;
  PPrimitives_IToggleButtonFactory = ^Primitives_IToggleButtonFactory;

  // Windows.UI.Xaml.Controls.Primitives.IToggleButtonOverrides
  Primitives_IToggleButtonOverrides = interface;
  PPrimitives_IToggleButtonOverrides = ^Primitives_IToggleButtonOverrides;

  // Windows.UI.Xaml.Controls.Primitives.IToggleButtonStatics
  Primitives_IToggleButtonStatics = interface;
  PPrimitives_IToggleButtonStatics = ^Primitives_IToggleButtonStatics;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Primitives.IPopup>
  IIterator_1__Primitives_IPopup = interface;
  PIIterator_1__Primitives_IPopup = ^IIterator_1__Primitives_IPopup;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Primitives.IPopup>
  IIterable_1__Primitives_IPopup = interface;
  PIIterable_1__Primitives_IPopup = ^IIterable_1__Primitives_IPopup;

  // Windows.UI.Xaml.Controls Enums

  // Windows.UI.Xaml.Controls.AppBarClosedDisplayMode
  AppBarClosedDisplayMode = (
    Compact = 0,
    Minimal = 1,
    Hidden = 2
  );
  PAppBarClosedDisplayMode = ^AppBarClosedDisplayMode;

  // Windows.UI.Xaml.Controls.BackgroundSizing
  BackgroundSizing = (
    InnerBorderEdge = 0,
    OuterBorderEdge = 1
  );
  PBackgroundSizing = ^BackgroundSizing;

  // Windows.UI.Xaml.Controls.CalendarViewDisplayMode
  CalendarViewDisplayMode = (
    Month = 0,
    Year = 1,
    Decade = 2
  );
  PCalendarViewDisplayMode = ^CalendarViewDisplayMode;

  // Windows.UI.Xaml.Controls.CalendarViewSelectionMode
  CalendarViewSelectionMode = (
    None = 0,
    Single = 1,
    Multiple = 2
  );
  PCalendarViewSelectionMode = ^CalendarViewSelectionMode;

  // Windows.UI.Xaml.Controls.CandidateWindowAlignment
  CandidateWindowAlignment = (
    Default = 0,
    BottomEdge = 1
  );
  PCandidateWindowAlignment = ^CandidateWindowAlignment;

  // Windows.UI.Xaml.Controls.CharacterCasing
  CharacterCasing = (
    Normal = 0,
    Lower = 1,
    Upper = 2
  );
  PCharacterCasing = ^CharacterCasing;

  // Windows.UI.Xaml.Controls.ClickMode
  ClickMode = (
    Release = 0,
    Press = 1,
    Hover = 2
  );
  PClickMode = ^ClickMode;

  // Windows.UI.Xaml.Controls.ColorPickerHsvChannel
  ColorPickerHsvChannel = (
    Hue = 0,
    Saturation = 1,
    Value = 2,
    Alpha = 3
  );
  PColorPickerHsvChannel = ^ColorPickerHsvChannel;

  // Windows.UI.Xaml.Controls.ColorSpectrumComponents
  ColorSpectrumComponents = (
    HueValue = 0,
    ValueHue = 1,
    HueSaturation = 2,
    SaturationHue = 3,
    SaturationValue = 4,
    ValueSaturation = 5
  );
  PColorSpectrumComponents = ^ColorSpectrumComponents;

  // Windows.UI.Xaml.Controls.ColorSpectrumShape
  ColorSpectrumShape = (
    Box = 0,
    Ring = 1
  );
  PColorSpectrumShape = ^ColorSpectrumShape;

  // Windows.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger
  ComboBoxSelectionChangedTrigger = (
    Committed = 0,
    Always = 1
  );
  PComboBoxSelectionChangedTrigger = ^ComboBoxSelectionChangedTrigger;

  // Windows.UI.Xaml.Controls.CommandBarDefaultLabelPosition
  CommandBarDefaultLabelPosition = (
    Bottom = 0,
    Right = 1,
    Collapsed = 2
  );
  PCommandBarDefaultLabelPosition = ^CommandBarDefaultLabelPosition;

  // Windows.UI.Xaml.Controls.CommandBarDynamicOverflowAction
  CommandBarDynamicOverflowAction = (
    AddingToOverflow = 0,
    RemovingFromOverflow = 1
  );
  PCommandBarDynamicOverflowAction = ^CommandBarDynamicOverflowAction;

  // Windows.UI.Xaml.Controls.CommandBarLabelPosition
  CommandBarLabelPosition = (
    Default = 0,
    Collapsed = 1
  );
  PCommandBarLabelPosition = ^CommandBarLabelPosition;

  // Windows.UI.Xaml.Controls.CommandBarOverflowButtonVisibility
  CommandBarOverflowButtonVisibility = (
    Auto = 0,
    Visible = 1,
    Collapsed = 2
  );
  PCommandBarOverflowButtonVisibility = ^CommandBarOverflowButtonVisibility;

  // Windows.UI.Xaml.Controls.ContentDialogButton
  ContentDialogButton = (
    None = 0,
    Primary = 1,
    Secondary = 2,
    Close = 3
  );
  PContentDialogButton = ^ContentDialogButton;

  // Windows.UI.Xaml.Controls.ContentDialogPlacement
  ContentDialogPlacement = (
    Popup = 0,
    InPlace = 1
  );
  PContentDialogPlacement = ^ContentDialogPlacement;

  // Windows.UI.Xaml.Controls.ContentDialogResult
  ContentDialogResult = (
    None = 0,
    Primary = 1,
    Secondary = 2
  );
  PContentDialogResult = ^ContentDialogResult;

  // Windows.UI.Xaml.Controls.ContentLinkChangeKind
  ContentLinkChangeKind = (
    Inserted = 0,
    Removed = 1,
    Edited = 2
  );
  PContentLinkChangeKind = ^ContentLinkChangeKind;

  // Windows.UI.Xaml.Controls.DisabledFormattingAccelerators
  DisabledFormattingAccelerators = (
    None = 0,
    Bold = 1,
    Italic = 2,
    Underline = 4,
    All = -1
  );
  PDisabledFormattingAccelerators = ^DisabledFormattingAccelerators;

  // Windows.UI.Xaml.Controls.HandwritingPanelPlacementAlignment
  HandwritingPanelPlacementAlignment = (
    Auto = 0,
    TopLeft = 1,
    TopRight = 2,
    BottomLeft = 3,
    BottomRight = 4
  );
  PHandwritingPanelPlacementAlignment = ^HandwritingPanelPlacementAlignment;

  // Windows.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement
  InkToolbarButtonFlyoutPlacement = (
    Auto = 0,
    Top = 1,
    Bottom = 2,
    Left = 3,
    Right = 4
  );
  PInkToolbarButtonFlyoutPlacement = ^InkToolbarButtonFlyoutPlacement;

  // Windows.UI.Xaml.Controls.InkToolbarMenuKind
  InkToolbarMenuKind = (
    Stencil = 0
  );
  PInkToolbarMenuKind = ^InkToolbarMenuKind;

  // Windows.UI.Xaml.Controls.InkToolbarStencilKind
  InkToolbarStencilKind = (
    Ruler = 0,
    Protractor = 1
  );
  PInkToolbarStencilKind = ^InkToolbarStencilKind;

  // Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode
  ItemsUpdatingScrollMode = (
    KeepItemsInView = 0,
    KeepScrollOffset = 1,
    KeepLastItemInView = 2
  );
  PItemsUpdatingScrollMode = ^ItemsUpdatingScrollMode;

  // Windows.UI.Xaml.Controls.LightDismissOverlayMode
  LightDismissOverlayMode = (
    Auto = 0,
    &On = 1,
    Off = 2
  );
  PLightDismissOverlayMode = ^LightDismissOverlayMode;

  // Windows.UI.Xaml.Controls.ListPickerFlyoutSelectionMode
  ListPickerFlyoutSelectionMode = (
    Single = 0,
    Multiple = 1
  );
  PListPickerFlyoutSelectionMode = ^ListPickerFlyoutSelectionMode;

  // Windows.UI.Xaml.Controls.ListViewReorderMode
  ListViewReorderMode = (
    Disabled = 0,
    Enabled = 1
  );
  PListViewReorderMode = ^ListViewReorderMode;

  // Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason
  Maps_MapCameraChangeReason = (
    System = 0,
    UserInteraction = 1,
    Programmatic = 2
  );
  PMaps_MapCameraChangeReason = ^Maps_MapCameraChangeReason;

  // Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
  Maps_MapElementCollisionBehavior = (
    Hide = 0,
    RemainVisible = 1
  );
  PMaps_MapElementCollisionBehavior = ^Maps_MapElementCollisionBehavior;

  // Windows.UI.Xaml.Controls.Maps.MapInteractionMode
  Maps_MapInteractionMode = (
    Auto = 0,
    Disabled = 1,
    GestureOnly = 2,
    PointerAndKeyboard = 2,
    ControlOnly = 3,
    GestureAndControl = 4,
    PointerKeyboardAndControl = 4,
    PointerOnly = 5
  );
  PMaps_MapInteractionMode = ^Maps_MapInteractionMode;

  // Windows.UI.Xaml.Controls.Maps.MapModel3DShadingOption
  Maps_MapModel3DShadingOption = (
    Default = 0,
    Flat = 1,
    Smooth = 2
  );
  PMaps_MapModel3DShadingOption = ^Maps_MapModel3DShadingOption;

  // Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode
  Maps_MapPanInteractionMode = (
    Auto = 0,
    Disabled = 1
  );
  PMaps_MapPanInteractionMode = ^Maps_MapPanInteractionMode;

  // Windows.UI.Xaml.Controls.Maps.MapProjection
  Maps_MapProjection = (
    WebMercator = 0,
    Globe = 1
  );
  PMaps_MapProjection = ^Maps_MapProjection;

  // Windows.UI.Xaml.Controls.Maps.MapTileAnimationState
  Maps_MapTileAnimationState = (
    Stopped = 0,
    Paused = 1,
    Playing = 2
  );
  PMaps_MapTileAnimationState = ^Maps_MapTileAnimationState;

  // Windows.UI.Xaml.Controls.Maps.MapVisibleRegionKind
  Maps_MapVisibleRegionKind = (
    &Near = 0,
    Full = 1
  );
  PMaps_MapVisibleRegionKind = ^Maps_MapVisibleRegionKind;

  // Windows.UI.Xaml.Controls.NavigationViewBackButtonVisible
  NavigationViewBackButtonVisible = (
    Collapsed = 0,
    Visible = 1,
    Auto = 2
  );
  PNavigationViewBackButtonVisible = ^NavigationViewBackButtonVisible;

  // Windows.UI.Xaml.Controls.NavigationViewOverflowLabelMode
  NavigationViewOverflowLabelMode = (
    MoreLabel = 0,
    NoLabel = 1
  );
  PNavigationViewOverflowLabelMode = ^NavigationViewOverflowLabelMode;

  // Windows.UI.Xaml.Controls.NavigationViewPaneDisplayMode
  NavigationViewPaneDisplayMode = (
    Auto = 0,
    Left = 1,
    Top = 2,
    LeftCompact = 3,
    LeftMinimal = 4
  );
  PNavigationViewPaneDisplayMode = ^NavigationViewPaneDisplayMode;

  // Windows.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
  NavigationViewSelectionFollowsFocus = (
    Disabled = 0,
    Enabled = 1
  );
  PNavigationViewSelectionFollowsFocus = ^NavigationViewSelectionFollowsFocus;

  // Windows.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
  NavigationViewShoulderNavigationEnabled = (
    WhenSelectionFollowsFocus = 0,
    Always = 1,
    Never = 2
  );
  PNavigationViewShoulderNavigationEnabled = ^NavigationViewShoulderNavigationEnabled;

  // Windows.UI.Xaml.Controls.Orientation
  Orientation = (
    Vertical = 0,
    Horizontal = 1
  );
  POrientation = ^Orientation;

  // Windows.UI.Xaml.Controls.PanelScrollingDirection
  PanelScrollingDirection = (
    None = 0,
    Forward = 1,
    Backward = 2
  );
  PPanelScrollingDirection = ^PanelScrollingDirection;

  // Windows.UI.Xaml.Controls.ParallaxSourceOffsetKind
  ParallaxSourceOffsetKind = (
    Absolute = 0,
    Relative = 1
  );
  PParallaxSourceOffsetKind = ^ParallaxSourceOffsetKind;

  // Windows.UI.Xaml.Controls.PasswordRevealMode
  PasswordRevealMode = (
    Peek = 0,
    Hidden = 1,
    Visible = 2
  );
  PPasswordRevealMode = ^PasswordRevealMode;

  // Windows.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement
  PivotHeaderFocusVisualPlacement = (
    ItemHeaders = 0,
    SelectedItemHeader = 1
  );
  PPivotHeaderFocusVisualPlacement = ^PivotHeaderFocusVisualPlacement;

  // Windows.UI.Xaml.Controls.PivotSlideInAnimationGroup
  PivotSlideInAnimationGroup = (
    Default = 0,
    GroupOne = 1,
    GroupTwo = 2,
    GroupThree = 3
  );
  PPivotSlideInAnimationGroup = ^PivotSlideInAnimationGroup;

  // Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation
  Primitives_ComponentResourceLocation = (
    Application = 0,
    Nested = 1
  );
  PPrimitives_ComponentResourceLocation = ^Primitives_ComponentResourceLocation;

  // Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode
  Primitives_FlyoutPlacementMode = (
    Top = 0,
    Bottom = 1,
    Left = 2,
    Right = 3,
    Full = 4,
    TopEdgeAlignedLeft = 5,
    TopEdgeAlignedRight = 6,
    BottomEdgeAlignedLeft = 7,
    BottomEdgeAlignedRight = 8,
    LeftEdgeAlignedTop = 9,
    LeftEdgeAlignedBottom = 10,
    RightEdgeAlignedTop = 11,
    RightEdgeAlignedBottom = 12,
    Auto = 13
  );
  PPrimitives_FlyoutPlacementMode = ^Primitives_FlyoutPlacementMode;

  // Windows.UI.Xaml.Controls.Primitives.FlyoutShowMode
  Primitives_FlyoutShowMode = (
    Auto = 0,
    Standard = 1,
    Transient = 2,
    TransientWithDismissOnPointerMoveAway = 3
  );
  PPrimitives_FlyoutShowMode = ^Primitives_FlyoutShowMode;

  // Windows.UI.Xaml.Controls.Primitives.GeneratorDirection
  Primitives_GeneratorDirection = (
    Forward = 0,
    Backward = 1
  );
  PPrimitives_GeneratorDirection = ^Primitives_GeneratorDirection;

  // Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement
  Primitives_GroupHeaderPlacement = (
    Top = 0,
    Left = 1
  );
  PPrimitives_GroupHeaderPlacement = ^Primitives_GroupHeaderPlacement;

  // Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode
  Primitives_ListViewItemPresenterCheckMode = (
    &Inline = 0,
    Overlay = 1
  );
  PPrimitives_ListViewItemPresenterCheckMode = ^Primitives_ListViewItemPresenterCheckMode;

  // Windows.UI.Xaml.Controls.Primitives.PlacementMode
  Primitives_PlacementMode = (
    Bottom = 2,
    Left = 9,
    Mouse = 7,
    Right = 4,
    Top = 10
  );
  PPrimitives_PlacementMode = ^Primitives_PlacementMode;

  // Windows.UI.Xaml.Controls.Primitives.ScrollEventType
  Primitives_ScrollEventType = (
    SmallDecrement = 0,
    SmallIncrement = 1,
    LargeDecrement = 2,
    LargeIncrement = 3,
    ThumbPosition = 4,
    ThumbTrack = 5,
    First = 6,
    Last = 7,
    EndScroll = 8
  );
  PPrimitives_ScrollEventType = ^Primitives_ScrollEventType;

  // Windows.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode
  Primitives_ScrollingIndicatorMode = (
    None = 0,
    TouchIndicator = 1,
    MouseIndicator = 2
  );
  PPrimitives_ScrollingIndicatorMode = ^Primitives_ScrollingIndicatorMode;

  // Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo
  Primitives_SliderSnapsTo = (
    StepValues = 0,
    Ticks = 1
  );
  PPrimitives_SliderSnapsTo = ^Primitives_SliderSnapsTo;

  // Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment
  Primitives_SnapPointsAlignment = (
    &Near = 0,
    Center = 1,
    &Far = 2
  );
  PPrimitives_SnapPointsAlignment = ^Primitives_SnapPointsAlignment;

  // Windows.UI.Xaml.Controls.Primitives.TickPlacement
  Primitives_TickPlacement = (
    None = 0,
    TopLeft = 1,
    BottomRight = 2,
    Outside = 3,
    &Inline = 4
  );
  PPrimitives_TickPlacement = ^Primitives_TickPlacement;

  // Windows.UI.Xaml.Controls.RefreshPullDirection
  RefreshPullDirection = (
    LeftToRight = 0,
    TopToBottom = 1,
    RightToLeft = 2,
    BottomToTop = 3
  );
  PRefreshPullDirection = ^RefreshPullDirection;

  // Windows.UI.Xaml.Controls.RefreshVisualizerOrientation
  RefreshVisualizerOrientation = (
    Auto = 0,
    Normal = 1,
    Rotate90DegreesCounterclockwise = 2,
    Rotate270DegreesCounterclockwise = 3
  );
  PRefreshVisualizerOrientation = ^RefreshVisualizerOrientation;

  // Windows.UI.Xaml.Controls.RefreshVisualizerState
  RefreshVisualizerState = (
    Idle = 0,
    Peeking = 1,
    Interacting = 2,
    Pending = 3,
    Refreshing = 4
  );
  PRefreshVisualizerState = ^RefreshVisualizerState;

  // Windows.UI.Xaml.Controls.RequiresPointer
  RequiresPointer = (
    Never = 0,
    WhenEngaged = 1,
    WhenFocused = 2
  );
  PRequiresPointer = ^RequiresPointer;

  // Windows.UI.Xaml.Controls.RichEditClipboardFormat
  RichEditClipboardFormat = (
    AllFormats = 0,
    PlainText = 1
  );
  PRichEditClipboardFormat = ^RichEditClipboardFormat;

  // Windows.UI.Xaml.Controls.ScrollBarVisibility
  ScrollBarVisibility = (
    Disabled = 0,
    Auto = 1,
    Hidden = 2,
    Visible = 3
  );
  PScrollBarVisibility = ^ScrollBarVisibility;

  // Windows.UI.Xaml.Controls.ScrollMode
  ScrollMode = (
    Disabled = 0,
    Enabled = 1,
    Auto = 2
  );
  PScrollMode = ^ScrollMode;

  // Windows.UI.Xaml.Controls.SelectionMode
  SelectionMode = (
    Single = 0,
    Multiple = 1,
    Extended = 2
  );
  PSelectionMode = ^SelectionMode;

  // Windows.UI.Xaml.Controls.SnapPointsType
  SnapPointsType = (
    None = 0,
    Optional = 1,
    Mandatory = 2,
    OptionalSingle = 3,
    MandatorySingle = 4
  );
  PSnapPointsType = ^SnapPointsType;

  // Windows.UI.Xaml.Controls.StretchDirection
  StretchDirection = (
    UpOnly = 0,
    DownOnly = 1,
    Both = 2
  );
  PStretchDirection = ^StretchDirection;

  // Windows.UI.Xaml.Controls.SwipeBehaviorOnInvoked
  SwipeBehaviorOnInvoked = (
    Auto = 0,
    Close = 1,
    RemainOpen = 2
  );
  PSwipeBehaviorOnInvoked = ^SwipeBehaviorOnInvoked;

  // Windows.UI.Xaml.Controls.SwipeMode
  SwipeMode = (
    Reveal = 0,
    Execute = 1
  );
  PSwipeMode = ^SwipeMode;

  // Windows.UI.Xaml.Controls.Symbol
  Symbol = (
    Previous = 57600,
    Next = 57601,
    Play = 57602,
    Pause = 57603,
    Edit = 57604,
    Save = 57605,
    Clear = 57606,
    Delete = 57607,
    Remove = 57608,
    Add = 57609,
    Cancel = 57610,
    Accept = 57611,
    More = 57612,
    Redo = 57613,
    Undo = 57614,
    Home = 57615,
    Up = 57616,
    Forward = 57617,
    Back = 57618,
    Favorite = 57619,
    Camera = 57620,
    Setting = 57621,
    Video = 57622,
    Sync = 57623,
    Download = 57624,
    Mail = 57625,
    Find = 57626,
    Help = 57627,
    Upload = 57628,
    Emoji = 57629,
    TwoPage = 57630,
    LeaveChat = 57631,
    MailForward = 57632,
    Clock = 57633,
    Send = 57634,
    Crop = 57635,
    RotateCamera = 57636,
    People = 57637,
    OpenPane = 57638,
    ClosePane = 57639,
    World = 57640,
    Flag = 57641,
    PreviewLink = 57642,
    Globe = 57643,
    Trim = 57644,
    AttachCamera = 57645,
    ZoomIn = 57646,
    Bookmarks = 57647,
    Document = 57648,
    ProtectedDocument = 57649,
    Page = 57650,
    Bullets = 57651,
    Comment = 57652,
    MailFilled = 57653,
    ContactInfo = 57654,
    HangUp = 57655,
    ViewAll = 57656,
    MapPin = 57657,
    Phone = 57658,
    VideoChat = 57659,
    Switch = 57660,
    Contact = 57661,
    Rename = 57662,
    Pin = 57665,
    MusicInfo = 57666,
    Go = 57667,
    Keyboard = 57668,
    DockLeft = 57669,
    DockRight = 57670,
    DockBottom = 57671,
    Remote = 57672,
    Refresh = 57673,
    Rotate = 57674,
    Shuffle = 57675,
    List = 57676,
    Shop = 57677,
    SelectAll = 57678,
    Orientation = 57679,
    Import = 57680,
    ImportAll = 57681,
    BrowsePhotos = 57685,
    WebCam = 57686,
    Pictures = 57688,
    SaveLocal = 57689,
    Caption = 57690,
    Stop = 57691,
    ShowResults = 57692,
    Volume = 57693,
    Repair = 57694,
    &Message = 57695,
    Page2 = 57696,
    CalendarDay = 57697,
    CalendarWeek = 57698,
    Calendar = 57699,
    Character = 57700,
    MailReplyAll = 57701,
    Read = 57702,
    Link = 57703,
    Account = 57704,
    ShowBcc = 57705,
    HideBcc = 57706,
    Cut = 57707,
    Attach = 57708,
    Paste = 57709,
    Filter = 57710,
    Copy = 57711,
    Emoji2 = 57712,
    Important = 57713,
    MailReply = 57714,
    SlideShow = 57715,
    Sort = 57716,
    Manage = 57720,
    AllApps = 57721,
    DisconnectDrive = 57722,
    MapDrive = 57723,
    NewWindow = 57724,
    OpenWith = 57725,
    ContactPresence = 57729,
    Priority = 57730,
    GoToToday = 57732,
    Font = 57733,
    FontColor = 57734,
    Contact2 = 57735,
    Folder = 57736,
    Audio = 57737,
    Placeholder = 57738,
    View = 57739,
    SetLockScreen = 57740,
    SetTile = 57741,
    ClosedCaption = 57744,
    StopSlideShow = 57745,
    Permissions = 57746,
    Highlight = 57747,
    DisableUpdates = 57748,
    UnFavorite = 57749,
    UnPin = 57750,
    OpenLocal = 57751,
    Mute = 57752,
    Italic = 57753,
    Underline = 57754,
    Bold = 57755,
    MoveToFolder = 57756,
    LikeDislike = 57757,
    Dislike = 57758,
    Like = 57759,
    AlignRight = 57760,
    AlignCenter = 57761,
    AlignLeft = 57762,
    Zoom = 57763,
    ZoomOut = 57764,
    OpenFile = 57765,
    OtherUser = 57766,
    Admin = 57767,
    Street = 57795,
    Map = 57796,
    ClearSelection = 57797,
    FontDecrease = 57798,
    FontIncrease = 57799,
    FontSize = 57800,
    CellPhone = 57801,
    ReShare = 57802,
    Tag = 57803,
    RepeatOne = 57804,
    RepeatAll = 57805,
    OutlineStar = 57806,
    SolidStar = 57807,
    Calculator = 57808,
    Directions = 57809,
    Target = 57810,
    &Library = 57811,
    PhoneBook = 57812,
    Memo = 57813,
    Microphone = 57814,
    PostUpdate = 57815,
    BackToWindow = 57816,
    FullScreen = 57817,
    NewFolder = 57818,
    CalendarReply = 57819,
    UnSyncFolder = 57821,
    ReportHacked = 57822,
    SyncFolder = 57823,
    BlockContact = 57824,
    SwitchApps = 57825,
    AddFriend = 57826,
    TouchPointer = 57827,
    GoToStart = 57828,
    ZeroBars = 57829,
    OneBar = 57830,
    TwoBars = 57831,
    ThreeBars = 57832,
    FourBars = 57833,
    Scan = 58004,
    Preview = 58005,
    GlobalNavigationButton = 59136,
    Share = 59181,
    Print = 59209,
    XboxOneConsole = 59792
  );
  PSymbol = ^Symbol;

  // Windows.UI.Xaml.Controls.TreeViewSelectionMode
  TreeViewSelectionMode = (
    None = 0,
    Single = 1,
    Multiple = 2
  );
  PTreeViewSelectionMode = ^TreeViewSelectionMode;

  // Windows.UI.Xaml.Controls.VirtualizationMode
  VirtualizationMode = (
    Standard = 0,
    Recycling = 1
  );
  PVirtualizationMode = ^VirtualizationMode;

  // Windows.UI.Xaml.Controls.WebViewExecutionMode
  WebViewExecutionMode = (
    SameThread = 0,
    SeparateThread = 1,
    SeparateProcess = 2
  );
  PWebViewExecutionMode = ^WebViewExecutionMode;

  // Windows.UI.Xaml.Controls.WebViewPermissionState
  WebViewPermissionState = (
    Unknown = 0,
    Defer = 1,
    Allow = 2,
    Deny = 3
  );
  PWebViewPermissionState = ^WebViewPermissionState;

  // Windows.UI.Xaml.Controls.WebViewPermissionType
  WebViewPermissionType = (
    Geolocation = 0,
    UnlimitedIndexedDBQuota = 1,
    Media = 2,
    PointerLock = 3,
    WebNotifications = 4,
    Screen = 5,
    ImmersiveView = 6
  );
  PWebViewPermissionType = ^WebViewPermissionType;

  // Windows.UI.Xaml.Controls.ZoomMode
  ZoomMode = (
    Disabled = 0,
    Enabled = 1
  );
  PZoomMode = ^ZoomMode;

  // Windows.UI.Xaml.Controls Records
  // Windows.UI.Xaml.Controls.Primitives.GeneratorPosition
  Primitives_GeneratorPosition = record
    Index: Integer;
    Offset: Integer;
  end;
  PPrimitives_GeneratorPosition = ^Primitives_GeneratorPosition;

  // Windows.UI.Xaml.Controls Interfaces

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBar
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBar)]
  IAppBar = interface(IInspectable)
  ['{7B0FC253-86A5-4B43-9872-0B8A6234B74B}']
    function get_IsOpen: Boolean; safecall;
    procedure put_IsOpen(value: Boolean); safecall;
    function get_IsSticky: Boolean; safecall;
    procedure put_IsSticky(value: Boolean); safecall;
    function add_Opened(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_Closed(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    property IsOpen: Boolean read get_IsOpen write put_IsOpen;
    property IsSticky: Boolean read get_IsSticky write put_IsSticky;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconElement
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconElement)]
  IIconElement = interface(IInspectable)
  ['{9AF0803B-D04C-467A-BBD5-9B81F02D9A56}']
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    property Foreground: IBrush read get_Foreground write put_Foreground;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarButton)]
  IAppBarButton = interface(IInspectable)
  ['{4459A451-69E8-440C-9896-4BB4F5F642D1}']
    function get_Label: HSTRING; safecall;
    procedure put_Label(value: HSTRING); safecall;
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
    property &Label: HSTRING read get_Label write put_Label;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButton = interface(IInspectable)
  ['{2E914438-FD53-4B8D-858B-3644269F8E4D}']
    function get_Label: HSTRING; safecall;
    procedure put_Label(value: HSTRING); safecall;
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
    property &Label: HSTRING read get_Label write put_Label;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Button)]
  IButton = interface(IInspectable)
  ['{280335AE-5570-46C7-8E0B-602BE71229A2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IButtonBase
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ButtonBase)]
  Primitives_IButtonBase = interface(IInspectable)
  ['{FA002C1A-494E-46CF-91D4-E14A8D798674}']
    function get_ClickMode: ClickMode; safecall;
    procedure put_ClickMode(value: ClickMode); safecall;
    function get_IsPointerOver: Boolean; safecall;
    function get_IsPressed: Boolean; safecall;
    function get_Command: Input_ICommand; safecall;
    procedure put_Command(value: Input_ICommand); safecall;
    function get_CommandParameter: IInspectable; safecall;
    procedure put_CommandParameter(value: IInspectable); safecall;
    function add_Click(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Click(token: EventRegistrationToken); safecall;
    property ClickMode_: ClickMode read get_ClickMode write put_ClickMode;
    property Command: Input_ICommand read get_Command write put_Command;
    property CommandParameter: IInspectable read get_CommandParameter write put_CommandParameter;
    property IsPointerOver: Boolean read get_IsPointerOver;
    property IsPressed: Boolean read get_IsPressed;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICalendarViewTemplateSettings
  Primitives_ICalendarViewTemplateSettings = interface(IInspectable)
  ['{56C71483-64E1-477C-8A0B-CB2F3334B9B0}']
    function get_MinViewWidth: Double; safecall;
    function get_HeaderText: HSTRING; safecall;
    function get_WeekDay1: HSTRING; safecall;
    function get_WeekDay2: HSTRING; safecall;
    function get_WeekDay3: HSTRING; safecall;
    function get_WeekDay4: HSTRING; safecall;
    function get_WeekDay5: HSTRING; safecall;
    function get_WeekDay6: HSTRING; safecall;
    function get_WeekDay7: HSTRING; safecall;
    function get_HasMoreContentAfter: Boolean; safecall;
    function get_HasMoreContentBefore: Boolean; safecall;
    function get_HasMoreViews: Boolean; safecall;
    function get_ClipRect: TRectF; safecall;
    function get_CenterX: Double; safecall;
    function get_CenterY: Double; safecall;
    property CenterX: Double read get_CenterX;
    property CenterY: Double read get_CenterY;
    property ClipRect: TRectF read get_ClipRect;
    property HasMoreContentAfter: Boolean read get_HasMoreContentAfter;
    property HasMoreContentBefore: Boolean read get_HasMoreContentBefore;
    property HasMoreViews: Boolean read get_HasMoreViews;
    property HeaderText: HSTRING read get_HeaderText;
    property MinViewWidth: Double read get_MinViewWidth;
    property WeekDay1: HSTRING read get_WeekDay1;
    property WeekDay2: HSTRING read get_WeekDay2;
    property WeekDay3: HSTRING read get_WeekDay3;
    property WeekDay4: HSTRING read get_WeekDay4;
    property WeekDay5: HSTRING read get_WeekDay5;
    property WeekDay6: HSTRING read get_WeekDay6;
    property WeekDay7: HSTRING read get_WeekDay7;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarViewDayItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarViewDayItem)]
  ICalendarViewDayItem = interface(IInspectable)
  ['{0FDB2DC5-32C1-4B8F-BEFC-017B555B32D2}']
    function get_IsBlackout: Boolean; safecall;
    procedure put_IsBlackout(value: Boolean); safecall;
    function get_Date: DateTime; safecall;
    procedure SetDensityColors(colors: IIterable_1__Color); safecall;
    property Date: DateTime read get_Date;
    property IsBlackout: Boolean read get_IsBlackout write put_IsBlackout;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs
  ICalendarViewDayItemChangingEventArgs = interface(IInspectable)
  ['{73146666-1FB1-44F9-B7AD-4DE859ECC565}']
    function get_InRecycleQueue: Boolean; safecall;
    function get_Item: ICalendarViewDayItem; safecall;
    function get_Phase: Cardinal; safecall;
    procedure RegisterUpdateCallback(callback: TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs); overload; safecall;
    procedure RegisterUpdateCallback(callbackPhase: Cardinal; callback: TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs); overload; safecall;
    property InRecycleQueue: Boolean read get_InRecycleQueue;
    property Item: ICalendarViewDayItem read get_Item;
    property Phase: Cardinal read get_Phase;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarView,Windows.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{6A74874E-F6B3-5C39-9E5F-1751B782BB32}']
    procedure Invoke(sender: ICalendarView; args: ICalendarViewDayItemChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarView,Windows.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs = interface(TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs_Delegate_Base)
  ['{431FB4BE-C6F7-59AF-8DD0-4879B329EF1E}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs
  ICalendarViewSelectedDatesChangedEventArgs = interface(IInspectable)
  ['{EE6069F6-13EF-4896-8FFC-5302B1B17539}']
    function get_AddedDates: IVectorView_1__DateTime; safecall;
    function get_RemovedDates: IVectorView_1__DateTime; safecall;
    property AddedDates: IVectorView_1__DateTime read get_AddedDates;
    property RemovedDates: IVectorView_1__DateTime read get_RemovedDates;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarView,Windows.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{D22361EE-5234-5D25-A53B-79A5FF6A03B8}']
    procedure Invoke(sender: ICalendarView; args: ICalendarViewSelectedDatesChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarView,Windows.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs = interface(TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs_Delegate_Base)
  ['{8A7C69EE-99B2-5328-8517-E88B133333BD}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarView
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarView)]
  ICalendarView = interface(IInspectable)
  ['{CD639203-DFB5-4312-AC07-C0391824607B}']
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_DayOfWeekFormat: HSTRING; safecall;
    procedure put_DayOfWeekFormat(value: HSTRING); safecall;
    function get_IsGroupLabelVisible: Boolean; safecall;
    procedure put_IsGroupLabelVisible(value: Boolean); safecall;
    function get_DisplayMode: CalendarViewDisplayMode; safecall;
    procedure put_DisplayMode(value: CalendarViewDisplayMode); safecall;
    function get_FirstDayOfWeek: DayOfWeek; safecall;
    procedure put_FirstDayOfWeek(value: DayOfWeek); safecall;
    function get_IsOutOfScopeEnabled: Boolean; safecall;
    procedure put_IsOutOfScopeEnabled(value: Boolean); safecall;
    function get_IsTodayHighlighted: Boolean; safecall;
    procedure put_IsTodayHighlighted(value: Boolean); safecall;
    function get_MaxDate: DateTime; safecall;
    procedure put_MaxDate(value: DateTime); safecall;
    function get_MinDate: DateTime; safecall;
    procedure put_MinDate(value: DateTime); safecall;
    function get_NumberOfWeeksInView: Integer; safecall;
    procedure put_NumberOfWeeksInView(value: Integer); safecall;
    function get_SelectedDates: IVector_1__DateTime; safecall;
    function get_SelectionMode: CalendarViewSelectionMode; safecall;
    procedure put_SelectionMode(value: CalendarViewSelectionMode); safecall;
    function get_TemplateSettings: Primitives_ICalendarViewTemplateSettings; safecall;
    function get_FocusBorderBrush: IBrush; safecall;
    procedure put_FocusBorderBrush(value: IBrush); safecall;
    function get_SelectedHoverBorderBrush: IBrush; safecall;
    procedure put_SelectedHoverBorderBrush(value: IBrush); safecall;
    function get_SelectedPressedBorderBrush: IBrush; safecall;
    procedure put_SelectedPressedBorderBrush(value: IBrush); safecall;
    function get_SelectedBorderBrush: IBrush; safecall;
    procedure put_SelectedBorderBrush(value: IBrush); safecall;
    function get_HoverBorderBrush: IBrush; safecall;
    procedure put_HoverBorderBrush(value: IBrush); safecall;
    function get_PressedBorderBrush: IBrush; safecall;
    procedure put_PressedBorderBrush(value: IBrush); safecall;
    function get_CalendarItemBorderBrush: IBrush; safecall;
    procedure put_CalendarItemBorderBrush(value: IBrush); safecall;
    function get_OutOfScopeBackground: IBrush; safecall;
    procedure put_OutOfScopeBackground(value: IBrush); safecall;
    function get_CalendarItemBackground: IBrush; safecall;
    procedure put_CalendarItemBackground(value: IBrush); safecall;
    function get_PressedForeground: IBrush; safecall;
    procedure put_PressedForeground(value: IBrush); safecall;
    function get_TodayForeground: IBrush; safecall;
    procedure put_TodayForeground(value: IBrush); safecall;
    function get_BlackoutForeground: IBrush; safecall;
    procedure put_BlackoutForeground(value: IBrush); safecall;
    function get_SelectedForeground: IBrush; safecall;
    procedure put_SelectedForeground(value: IBrush); safecall;
    function get_OutOfScopeForeground: IBrush; safecall;
    procedure put_OutOfScopeForeground(value: IBrush); safecall;
    function get_CalendarItemForeground: IBrush; safecall;
    procedure put_CalendarItemForeground(value: IBrush); safecall;
    function get_DayItemFontFamily: IFontFamily; safecall;
    procedure put_DayItemFontFamily(value: IFontFamily); safecall;
    function get_DayItemFontSize: Double; safecall;
    procedure put_DayItemFontSize(value: Double); safecall;
    function get_DayItemFontStyle: FontStyle; safecall;
    procedure put_DayItemFontStyle(value: FontStyle); safecall;
    function get_DayItemFontWeight: FontWeight; safecall;
    procedure put_DayItemFontWeight(value: FontWeight); safecall;
    function get_TodayFontWeight: FontWeight; safecall;
    procedure put_TodayFontWeight(value: FontWeight); safecall;
    function get_FirstOfMonthLabelFontFamily: IFontFamily; safecall;
    procedure put_FirstOfMonthLabelFontFamily(value: IFontFamily); safecall;
    function get_FirstOfMonthLabelFontSize: Double; safecall;
    procedure put_FirstOfMonthLabelFontSize(value: Double); safecall;
    function get_FirstOfMonthLabelFontStyle: FontStyle; safecall;
    procedure put_FirstOfMonthLabelFontStyle(value: FontStyle); safecall;
    function get_FirstOfMonthLabelFontWeight: FontWeight; safecall;
    procedure put_FirstOfMonthLabelFontWeight(value: FontWeight); safecall;
    function get_MonthYearItemFontFamily: IFontFamily; safecall;
    procedure put_MonthYearItemFontFamily(value: IFontFamily); safecall;
    function get_MonthYearItemFontSize: Double; safecall;
    procedure put_MonthYearItemFontSize(value: Double); safecall;
    function get_MonthYearItemFontStyle: FontStyle; safecall;
    procedure put_MonthYearItemFontStyle(value: FontStyle); safecall;
    function get_MonthYearItemFontWeight: FontWeight; safecall;
    procedure put_MonthYearItemFontWeight(value: FontWeight); safecall;
    function get_FirstOfYearDecadeLabelFontFamily: IFontFamily; safecall;
    procedure put_FirstOfYearDecadeLabelFontFamily(value: IFontFamily); safecall;
    function get_FirstOfYearDecadeLabelFontSize: Double; safecall;
    procedure put_FirstOfYearDecadeLabelFontSize(value: Double); safecall;
    function get_FirstOfYearDecadeLabelFontStyle: FontStyle; safecall;
    procedure put_FirstOfYearDecadeLabelFontStyle(value: FontStyle); safecall;
    function get_FirstOfYearDecadeLabelFontWeight: FontWeight; safecall;
    procedure put_FirstOfYearDecadeLabelFontWeight(value: FontWeight); safecall;
    function get_HorizontalDayItemAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalDayItemAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalDayItemAlignment: VerticalAlignment; safecall;
    procedure put_VerticalDayItemAlignment(value: VerticalAlignment); safecall;
    function get_HorizontalFirstOfMonthLabelAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalFirstOfMonthLabelAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalFirstOfMonthLabelAlignment: VerticalAlignment; safecall;
    procedure put_VerticalFirstOfMonthLabelAlignment(value: VerticalAlignment); safecall;
    function get_CalendarItemBorderThickness: Thickness; safecall;
    procedure put_CalendarItemBorderThickness(value: Thickness); safecall;
    function get_CalendarViewDayItemStyle: IStyle; safecall;
    procedure put_CalendarViewDayItemStyle(value: IStyle); safecall;
    function add_CalendarViewDayItemChanging(handler: TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_CalendarViewDayItemChanging(token: EventRegistrationToken); safecall;
    function add_SelectedDatesChanged(handler: TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectedDatesChanged(token: EventRegistrationToken); safecall;
    procedure SetDisplayDate(date: DateTime); safecall;
    procedure SetYearDecadeDisplayDimensions(columns: Integer; rows: Integer); safecall;
    property BlackoutForeground: IBrush read get_BlackoutForeground write put_BlackoutForeground;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property CalendarItemBackground: IBrush read get_CalendarItemBackground write put_CalendarItemBackground;
    property CalendarItemBorderBrush: IBrush read get_CalendarItemBorderBrush write put_CalendarItemBorderBrush;
    property CalendarItemBorderThickness: Thickness read get_CalendarItemBorderThickness write put_CalendarItemBorderThickness;
    property CalendarItemForeground: IBrush read get_CalendarItemForeground write put_CalendarItemForeground;
    property CalendarViewDayItemStyle: IStyle read get_CalendarViewDayItemStyle write put_CalendarViewDayItemStyle;
    property DayItemFontFamily: IFontFamily read get_DayItemFontFamily write put_DayItemFontFamily;
    property DayItemFontSize: Double read get_DayItemFontSize write put_DayItemFontSize;
    property DayItemFontStyle: FontStyle read get_DayItemFontStyle write put_DayItemFontStyle;
    property DayItemFontWeight: FontWeight read get_DayItemFontWeight write put_DayItemFontWeight;
    property DayOfWeekFormat: HSTRING read get_DayOfWeekFormat write put_DayOfWeekFormat;
    property DisplayMode: CalendarViewDisplayMode read get_DisplayMode write put_DisplayMode;
    property FirstDayOfWeek: DayOfWeek read get_FirstDayOfWeek write put_FirstDayOfWeek;
    property FirstOfMonthLabelFontFamily: IFontFamily read get_FirstOfMonthLabelFontFamily write put_FirstOfMonthLabelFontFamily;
    property FirstOfMonthLabelFontSize: Double read get_FirstOfMonthLabelFontSize write put_FirstOfMonthLabelFontSize;
    property FirstOfMonthLabelFontStyle: FontStyle read get_FirstOfMonthLabelFontStyle write put_FirstOfMonthLabelFontStyle;
    property FirstOfMonthLabelFontWeight: FontWeight read get_FirstOfMonthLabelFontWeight write put_FirstOfMonthLabelFontWeight;
    property FirstOfYearDecadeLabelFontFamily: IFontFamily read get_FirstOfYearDecadeLabelFontFamily write put_FirstOfYearDecadeLabelFontFamily;
    property FirstOfYearDecadeLabelFontSize: Double read get_FirstOfYearDecadeLabelFontSize write put_FirstOfYearDecadeLabelFontSize;
    property FirstOfYearDecadeLabelFontStyle: FontStyle read get_FirstOfYearDecadeLabelFontStyle write put_FirstOfYearDecadeLabelFontStyle;
    property FirstOfYearDecadeLabelFontWeight: FontWeight read get_FirstOfYearDecadeLabelFontWeight write put_FirstOfYearDecadeLabelFontWeight;
    property FocusBorderBrush: IBrush read get_FocusBorderBrush write put_FocusBorderBrush;
    property HorizontalDayItemAlignment: HorizontalAlignment read get_HorizontalDayItemAlignment write put_HorizontalDayItemAlignment;
    property HorizontalFirstOfMonthLabelAlignment: HorizontalAlignment read get_HorizontalFirstOfMonthLabelAlignment write put_HorizontalFirstOfMonthLabelAlignment;
    property HoverBorderBrush: IBrush read get_HoverBorderBrush write put_HoverBorderBrush;
    property IsGroupLabelVisible: Boolean read get_IsGroupLabelVisible write put_IsGroupLabelVisible;
    property IsOutOfScopeEnabled: Boolean read get_IsOutOfScopeEnabled write put_IsOutOfScopeEnabled;
    property IsTodayHighlighted: Boolean read get_IsTodayHighlighted write put_IsTodayHighlighted;
    property MaxDate: DateTime read get_MaxDate write put_MaxDate;
    property MinDate: DateTime read get_MinDate write put_MinDate;
    property MonthYearItemFontFamily: IFontFamily read get_MonthYearItemFontFamily write put_MonthYearItemFontFamily;
    property MonthYearItemFontSize: Double read get_MonthYearItemFontSize write put_MonthYearItemFontSize;
    property MonthYearItemFontStyle: FontStyle read get_MonthYearItemFontStyle write put_MonthYearItemFontStyle;
    property MonthYearItemFontWeight: FontWeight read get_MonthYearItemFontWeight write put_MonthYearItemFontWeight;
    property NumberOfWeeksInView: Integer read get_NumberOfWeeksInView write put_NumberOfWeeksInView;
    property OutOfScopeBackground: IBrush read get_OutOfScopeBackground write put_OutOfScopeBackground;
    property OutOfScopeForeground: IBrush read get_OutOfScopeForeground write put_OutOfScopeForeground;
    property PressedBorderBrush: IBrush read get_PressedBorderBrush write put_PressedBorderBrush;
    property PressedForeground: IBrush read get_PressedForeground write put_PressedForeground;
    property SelectedBorderBrush: IBrush read get_SelectedBorderBrush write put_SelectedBorderBrush;
    property SelectedDates: IVector_1__DateTime read get_SelectedDates;
    property SelectedForeground: IBrush read get_SelectedForeground write put_SelectedForeground;
    property SelectedHoverBorderBrush: IBrush read get_SelectedHoverBorderBrush write put_SelectedHoverBorderBrush;
    property SelectedPressedBorderBrush: IBrush read get_SelectedPressedBorderBrush write put_SelectedPressedBorderBrush;
    property SelectionMode: CalendarViewSelectionMode read get_SelectionMode write put_SelectionMode;
    property TemplateSettings: Primitives_ICalendarViewTemplateSettings read get_TemplateSettings;
    property TodayFontWeight: FontWeight read get_TodayFontWeight write put_TodayFontWeight;
    property TodayForeground: IBrush read get_TodayForeground write put_TodayForeground;
    property VerticalDayItemAlignment: VerticalAlignment read get_VerticalDayItemAlignment write put_VerticalDayItemAlignment;
    property VerticalFirstOfMonthLabelAlignment: VerticalAlignment read get_VerticalFirstOfMonthLabelAlignment write put_VerticalFirstOfMonthLabelAlignment;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler
  CalendarViewDayItemChangingEventHandler = interface(IUnknown)
  ['{8D745891-4DE3-49CB-974B-083871A3AFE6}']
    procedure Invoke(sender: ICalendarView; e: ICalendarViewDayItemChangingEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs
  ICalendarDatePickerDateChangedEventArgs = interface(IInspectable)
  ['{60D90DB2-5010-46BA-842D-A4152C6504E7}']
    function get_NewDate: IReference_1__DateTime; safecall;
    function get_OldDate: IReference_1__DateTime; safecall;
    property NewDate: IReference_1__DateTime read get_NewDate;
    property OldDate: IReference_1__DateTime read get_OldDate;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarDatePicker,Windows.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs>
  TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{5FF44775-026E-51DB-B462-44C19C45A777}']
    procedure Invoke(sender: ICalendarDatePicker; args: ICalendarDatePickerDateChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICalendarDatePicker,Windows.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs>
  TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs = interface(TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs_Delegate_Base)
  ['{A5026BA2-71B8-5736-B767-2D826198747E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePicker
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePicker = interface(IInspectable)
  ['{63C9C16F-668C-4491-9444-D45D8BF4FA29}']
    function get_Date: IReference_1__DateTime; safecall;
    procedure put_Date(value: IReference_1__DateTime); safecall;
    function get_IsCalendarOpen: Boolean; safecall;
    procedure put_IsCalendarOpen(value: Boolean); safecall;
    function get_DateFormat: HSTRING; safecall;
    procedure put_DateFormat(value: HSTRING); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_CalendarViewStyle: IStyle; safecall;
    procedure put_CalendarViewStyle(value: IStyle); safecall;
    function get_MinDate: DateTime; safecall;
    procedure put_MinDate(value: DateTime); safecall;
    function get_MaxDate: DateTime; safecall;
    procedure put_MaxDate(value: DateTime); safecall;
    function get_IsTodayHighlighted: Boolean; safecall;
    procedure put_IsTodayHighlighted(value: Boolean); safecall;
    function get_DisplayMode: CalendarViewDisplayMode; safecall;
    procedure put_DisplayMode(value: CalendarViewDisplayMode); safecall;
    function get_FirstDayOfWeek: DayOfWeek; safecall;
    procedure put_FirstDayOfWeek(value: DayOfWeek); safecall;
    function get_DayOfWeekFormat: HSTRING; safecall;
    procedure put_DayOfWeekFormat(value: HSTRING); safecall;
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_IsOutOfScopeEnabled: Boolean; safecall;
    procedure put_IsOutOfScopeEnabled(value: Boolean); safecall;
    function get_IsGroupLabelVisible: Boolean; safecall;
    procedure put_IsGroupLabelVisible(value: Boolean); safecall;
    function add_CalendarViewDayItemChanging(handler: CalendarViewDayItemChangingEventHandler): EventRegistrationToken; safecall;
    procedure remove_CalendarViewDayItemChanging(token: EventRegistrationToken); safecall;
    function add_DateChanged(handler: TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DateChanged(token: EventRegistrationToken); safecall;
    function add_Opened(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_Closed(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    procedure SetDisplayDate(date: DateTime); safecall;
    procedure SetYearDecadeDisplayDimensions(columns: Integer; rows: Integer); safecall;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property CalendarViewStyle: IStyle read get_CalendarViewStyle write put_CalendarViewStyle;
    property Date: IReference_1__DateTime read get_Date write put_Date;
    property DateFormat: HSTRING read get_DateFormat write put_DateFormat;
    property DayOfWeekFormat: HSTRING read get_DayOfWeekFormat write put_DayOfWeekFormat;
    property DisplayMode: CalendarViewDisplayMode read get_DisplayMode write put_DisplayMode;
    property FirstDayOfWeek: DayOfWeek read get_FirstDayOfWeek write put_FirstDayOfWeek;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsCalendarOpen: Boolean read get_IsCalendarOpen write put_IsCalendarOpen;
    property IsGroupLabelVisible: Boolean read get_IsGroupLabelVisible write put_IsGroupLabelVisible;
    property IsOutOfScopeEnabled: Boolean read get_IsOutOfScopeEnabled write put_IsOutOfScopeEnabled;
    property IsTodayHighlighted: Boolean read get_IsTodayHighlighted write put_IsTodayHighlighted;
    property MaxDate: DateTime read get_MaxDate write put_MaxDate;
    property MinDate: DateTime read get_MinDate write put_MinDate;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICaptureElement
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CaptureElement)]
  ICaptureElement = interface(IInspectable)
  ['{31A5C0E7-F307-4D4A-B626-E978863F5B74}']
    function get_Source: Capture_IMediaCapture; safecall;
    procedure put_Source(value: Capture_IMediaCapture); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    property Source: Capture_IMediaCapture read get_Source write put_Source;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICheckBox
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CheckBox)]
  ICheckBox = interface(IInspectable)
  ['{2294C894-7E2A-4B70-B088-8F5D814875BA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IColorPickerSlider
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ColorPickerSlider)]
  Primitives_IColorPickerSlider = interface(IInspectable)
  ['{94394D83-E0DF-4C5F-BBCD-8155F4020440}']
    function get_ColorChannel: ColorPickerHsvChannel; safecall;
    procedure put_ColorChannel(value: ColorPickerHsvChannel); safecall;
    property ColorChannel: ColorPickerHsvChannel read get_ColorChannel write put_ColorChannel;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IColorChangedEventArgs
  IColorChangedEventArgs = interface(IInspectable)
  ['{34F7201F-AAD0-4C3A-B97B-2ABF36455539}']
    function get_OldColor: Color; safecall;
    function get_NewColor: Color; safecall;
    property NewColor: Color read get_NewColor;
    property OldColor: Color read get_OldColor;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Primitives.IColorSpectrum,Windows.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{650CFA09-70C2-5151-A2CD-27570FB9556B}']
    procedure Invoke(sender: Primitives_IColorSpectrum; args: IColorChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Primitives.IColorSpectrum,Windows.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs = interface(TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs_Delegate_Base)
  ['{08A42A31-CA8F-523E-A83B-E88CEF87422A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IColorSpectrum
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ColorSpectrum)]
  Primitives_IColorSpectrum = interface(IInspectable)
  ['{CE46F271-F509-4F98-8288-E4942FB385DF}']
    function get_Color: Color; safecall;
    procedure put_Color(value: Color); safecall;
    function get_HsvColor: Numerics_Vector4; safecall;
    procedure put_HsvColor(value: Numerics_Vector4); safecall;
    function get_MinHue: Integer; safecall;
    procedure put_MinHue(value: Integer); safecall;
    function get_MaxHue: Integer; safecall;
    procedure put_MaxHue(value: Integer); safecall;
    function get_MinSaturation: Integer; safecall;
    procedure put_MinSaturation(value: Integer); safecall;
    function get_MaxSaturation: Integer; safecall;
    procedure put_MaxSaturation(value: Integer); safecall;
    function get_MinValue: Integer; safecall;
    procedure put_MinValue(value: Integer); safecall;
    function get_MaxValue: Integer; safecall;
    procedure put_MaxValue(value: Integer); safecall;
    function get_Shape: ColorSpectrumShape; safecall;
    procedure put_Shape(value: ColorSpectrumShape); safecall;
    function get_Components: ColorSpectrumComponents; safecall;
    procedure put_Components(value: ColorSpectrumComponents); safecall;
    function add_ColorChanged(handler: TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ColorChanged(token: EventRegistrationToken); safecall;
    property Color_: Color read get_Color write put_Color;
    property Components: ColorSpectrumComponents read get_Components write put_Components;
    property HsvColor: Numerics_Vector4 read get_HsvColor write put_HsvColor;
    property MaxHue: Integer read get_MaxHue write put_MaxHue;
    property MaxSaturation: Integer read get_MaxSaturation write put_MaxSaturation;
    property MaxValue: Integer read get_MaxValue write put_MaxValue;
    property MinHue: Integer read get_MinHue write put_MinHue;
    property MinSaturation: Integer read get_MinSaturation write put_MinSaturation;
    property MinValue: Integer read get_MinValue write put_MinValue;
    property Shape: ColorSpectrumShape read get_Shape write put_Shape;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IComboBoxTemplateSettings
  Primitives_IComboBoxTemplateSettings = interface(IInspectable)
  ['{83285C4E-17F6-4AA3-B61B-E87C718604EA}']
    function get_DropDownOpenedHeight: Double; safecall;
    function get_DropDownClosedHeight: Double; safecall;
    function get_DropDownOffset: Double; safecall;
    function get_SelectedItemDirection: Primitives_AnimationDirection; safecall;
    property DropDownClosedHeight: Double read get_DropDownClosedHeight;
    property DropDownOffset: Double read get_DropDownOffset;
    property DropDownOpenedHeight: Double read get_DropDownOpenedHeight;
    property SelectedItemDirection: Primitives_AnimationDirection read get_SelectedItemDirection;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBox
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBox = interface(IInspectable)
  ['{B9A8D05C-AC97-47F1-A5F4-3F9F4D4B116C}']
    function get_IsDropDownOpen: Boolean; safecall;
    procedure put_IsDropDownOpen(value: Boolean); safecall;
    function get_IsEditable: Boolean; safecall;
    function get_IsSelectionBoxHighlighted: Boolean; safecall;
    function get_MaxDropDownHeight: Double; safecall;
    procedure put_MaxDropDownHeight(value: Double); safecall;
    function get_SelectionBoxItem: IInspectable; safecall;
    function get_SelectionBoxItemTemplate: IDataTemplate; safecall;
    function get_TemplateSettings: Primitives_IComboBoxTemplateSettings; safecall;
    function add_DropDownClosed(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DropDownClosed(token: EventRegistrationToken); safecall;
    function add_DropDownOpened(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DropDownOpened(token: EventRegistrationToken); safecall;
    property IsDropDownOpen: Boolean read get_IsDropDownOpen write put_IsDropDownOpen;
    property IsEditable: Boolean read get_IsEditable;
    property IsSelectionBoxHighlighted: Boolean read get_IsSelectionBoxHighlighted;
    property MaxDropDownHeight: Double read get_MaxDropDownHeight write put_MaxDropDownHeight;
    property SelectionBoxItem: IInspectable read get_SelectionBoxItem;
    property SelectionBoxItemTemplate: IDataTemplate read get_SelectionBoxItemTemplate;
    property TemplateSettings: Primitives_IComboBoxTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBoxItem)]
  IComboBoxItem = interface(IInspectable)
  ['{993FD6D2-2AAE-4F3B-B44D-5648F4D06114}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs
  IDatePickerValueChangedEventArgs = interface(IInspectable)
  ['{1AE661B2-B1B4-4273-96E0-19DAFF187446}']
    function get_OldDate: DateTime; safecall;
    function get_NewDate: DateTime; safecall;
    property NewDate: DateTime read get_NewDate;
    property OldDate: DateTime read get_OldDate;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs>
  EventHandler_1__IDatePickerValueChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{18A84F8E-C1EC-5B25-AC98-818267E6F9A4}']
    procedure Invoke(sender: IInspectable; args: IDatePickerValueChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs>
  EventHandler_1__IDatePickerValueChangedEventArgs = interface(EventHandler_1__IDatePickerValueChangedEventArgs_Delegate_Base)
  ['{224CFB60-7870-5E5E-BE6F-E7F16D2B1C6A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePicker
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePicker)]
  IDatePicker = interface(IInspectable)
  ['{06DA3946-08B8-4103-8B8A-093EFD6A7657}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_Date: DateTime; safecall;
    procedure put_Date(value: DateTime); safecall;
    function get_DayVisible: Boolean; safecall;
    procedure put_DayVisible(value: Boolean); safecall;
    function get_MonthVisible: Boolean; safecall;
    procedure put_MonthVisible(value: Boolean); safecall;
    function get_YearVisible: Boolean; safecall;
    procedure put_YearVisible(value: Boolean); safecall;
    function get_DayFormat: HSTRING; safecall;
    procedure put_DayFormat(value: HSTRING); safecall;
    function get_MonthFormat: HSTRING; safecall;
    procedure put_MonthFormat(value: HSTRING); safecall;
    function get_YearFormat: HSTRING; safecall;
    procedure put_YearFormat(value: HSTRING); safecall;
    function get_MinYear: DateTime; safecall;
    procedure put_MinYear(value: DateTime); safecall;
    function get_MaxYear: DateTime; safecall;
    procedure put_MaxYear(value: DateTime); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function add_DateChanged(handler: EventHandler_1__IDatePickerValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DateChanged(token: EventRegistrationToken); safecall;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property Date: DateTime read get_Date write put_Date;
    property DayFormat: HSTRING read get_DayFormat write put_DayFormat;
    property DayVisible: Boolean read get_DayVisible write put_DayVisible;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property MaxYear: DateTime read get_MaxYear write put_MaxYear;
    property MinYear: DateTime read get_MinYear write put_MinYear;
    property MonthFormat: HSTRING read get_MonthFormat write put_MonthFormat;
    property MonthVisible: Boolean read get_MonthVisible write put_MonthVisible;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property YearFormat: HSTRING read get_YearFormat write put_YearFormat;
    property YearVisible: Boolean read get_YearVisible write put_YearVisible;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlipView
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlipView)]
  IFlipView = interface(IInspectable)
  ['{A1582F68-3D7D-4D3B-B71D-488EED1E3493}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlipViewItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlipViewItem)]
  IFlipViewItem = interface(IInspectable)
  ['{56196565-CE2B-4BDA-A36B-82A2B8B0D4C0}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlyoutPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlyoutPresenter)]
  IFlyoutPresenter = interface(IInspectable)
  ['{827D5B79-E37B-46A5-8D44-63A11A580E83}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridView
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GridView)]
  IGridView = interface(IInspectable)
  ['{026AE934-B67E-4D80-8F72-8AA64B4D827B}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridViewHeaderItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GridViewHeaderItem)]
  IGridViewHeaderItem = interface(IInspectable)
  ['{72D75D7E-5DC3-4FFC-9B1C-939B5C37161C}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemTemplateSettings
  Primitives_IGridViewItemTemplateSettings = interface(IInspectable)
  ['{9E30BAAF-165D-4267-A45E-1A43A75706AC}']
    function get_DragItemsCount: Integer; safecall;
    property DragItemsCount: Integer read get_DragItemsCount;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridViewItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GridViewItem)]
  IGridViewItem = interface(IInspectable)
  ['{7D9901F1-E7C1-4E83-B470-C9D6D7BDA9F5}']
    function get_TemplateSettings: Primitives_IGridViewItemTemplateSettings; safecall;
    property TemplateSettings: Primitives_IGridViewItemTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GroupItem)]
  IGroupItem = interface(IInspectable)
  ['{4AE8D5D1-7228-4A16-A61F-88C0E8F45C76}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHubSection
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HubSection)]
  IHubSection = interface(IInspectable)
  ['{A4E66CB7-7FDD-4FE0-AB49-C246639DCCF9}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_ContentTemplate: IDataTemplate; safecall;
    procedure put_ContentTemplate(value: IDataTemplate); safecall;
    function get_IsHeaderInteractive: Boolean; safecall;
    procedure put_IsHeaderInteractive(value: Boolean); safecall;
    property ContentTemplate: IDataTemplate read get_ContentTemplate write put_ContentTemplate;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsHeaderInteractive: Boolean read get_IsHeaderInteractive write put_IsHeaderInteractive;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IHubSection>
  IIterator_1__IHubSection_Base = interface(IInspectable)
  ['{4F845272-F53E-5652-B008-A8FBF1E091EF}']
    function get_Current: IHubSection; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIHubSection): Cardinal; safecall;
    property Current: IHubSection read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IHubSection>
  IIterator_1__IHubSection = interface(IIterator_1__IHubSection_Base)
  ['{6EE40BE8-A9DE-5204-BA06-BFF447D90A1B}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IHubSection>
  IIterable_1__IHubSection_Base = interface(IInspectable)
  ['{558C4082-463A-5C3D-B51E-10921B4A4D6C}']
    function First: IIterator_1__IHubSection; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IHubSection>
  IIterable_1__IHubSection = interface(IIterable_1__IHubSection_Base)
  ['{69806CEA-165A-59F9-B9CB-E1726345DF1F}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IHubSection>
  IVectorView_1__IHubSection = interface(IInspectable)
  ['{A6C3B9BB-5AD4-5696-9F50-044B4712960E}']
    function GetAt(index: Cardinal): IHubSection; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IHubSection; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIHubSection): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IHubSection>
  IVector_1__IHubSection_Base = interface(IInspectable)
  ['{8E47087A-3CE3-57DC-A583-7DB9BF188FC4}']
    function GetAt(index: Cardinal): IHubSection; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IHubSection; safecall;
    function IndexOf(value: IHubSection; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IHubSection); safecall;
    procedure InsertAt(index: Cardinal; value: IHubSection); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IHubSection); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIHubSection): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIHubSection); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IHubSection>
  IVector_1__IHubSection = interface(IVector_1__IHubSection_Base)
  ['{64B7902A-B91D-5003-A371-E1899CC2E816}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HubSectionHeaderClickEventArgs)]
  IHubSectionHeaderClickEventArgs = interface(IInspectable)
  ['{E1C5EF04-1EDD-4112-AEEB-996C96400698}']
    function get_Section: IHubSection; safecall;
    property Section: IHubSection read get_Section;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.HubSectionHeaderClickEventHandler
  HubSectionHeaderClickEventHandler = interface(IUnknown)
  ['{AFE17B9B-9C63-4583-88E4-C59019B7F49D}']
    procedure Invoke(sender: IInspectable; e: IHubSectionHeaderClickEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SectionsInViewChangedEventArgs)]
  ISectionsInViewChangedEventArgs = interface(IInspectable)
  ['{DD49EE6B-D165-430F-A37D-B807064F85E1}']
    function get_AddedSections: IVector_1__IHubSection; safecall;
    function get_RemovedSections: IVector_1__IHubSection; safecall;
    property AddedSections: IVector_1__IHubSection read get_AddedSections;
    property RemovedSections: IVector_1__IHubSection read get_RemovedSections;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.SectionsInViewChangedEventHandler
  SectionsInViewChangedEventHandler = interface(IUnknown)
  ['{6BECAA6A-63F8-47FF-B6AC-76E7DA247D67}']
    procedure Invoke(sender: IInspectable; e: ISectionsInViewChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHub
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Hub)]
  IHub = interface(IInspectable)
  ['{AE692E82-7314-4F51-AB11-2AF1ED4A19F8}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_DefaultSectionIndex: Integer; safecall;
    procedure put_DefaultSectionIndex(value: Integer); safecall;
    function get_Sections: IVector_1__IHubSection; safecall;
    function get_SectionsInView: IVector_1__IHubSection; safecall;
    function get_SectionHeaders: IObservableVector_1__IInspectable; safecall;
    function add_SectionHeaderClick(handler: HubSectionHeaderClickEventHandler): EventRegistrationToken; safecall;
    procedure remove_SectionHeaderClick(token: EventRegistrationToken); safecall;
    function add_SectionsInViewChanged(handler: SectionsInViewChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SectionsInViewChanged(token: EventRegistrationToken); safecall;
    procedure ScrollToSection(section: IHubSection); safecall;
    property DefaultSectionIndex: Integer read get_DefaultSectionIndex write put_DefaultSectionIndex;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property SectionHeaders: IObservableVector_1__IInspectable read get_SectionHeaders;
    property Sections: IVector_1__IHubSection read get_Sections;
    property SectionsInView: IVector_1__IHubSection read get_SectionsInView;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHyperlinkButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HyperlinkButton)]
  IHyperlinkButton = interface(IInspectable)
  ['{CCEBACA3-3B5C-4F4C-9BFD-86887BC79772}']
    function get_NavigateUri: IUriRuntimeClass; safecall;
    procedure put_NavigateUri(value: IUriRuntimeClass); safecall;
    property NavigateUri: IUriRuntimeClass read get_NavigateUri write put_NavigateUri;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IImage
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Image)]
  IImage = interface(IInspectable)
  ['{495B7402-9AF3-4E50-AA90-03388F3086D2}']
    function get_Source: IImageSource; safecall;
    procedure put_Source(value: IImageSource); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_NineGrid: Thickness; safecall;
    procedure put_NineGrid(value: Thickness); safecall;
    function get_PlayToSource: PlayTo_IPlayToSource; safecall;
    function add_ImageFailed(handler: ExceptionRoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ImageFailed(token: EventRegistrationToken); safecall;
    function add_ImageOpened(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ImageOpened(token: EventRegistrationToken); safecall;
    property NineGrid: Thickness read get_NineGrid write put_NineGrid;
    property PlayToSource: PlayTo_IPlayToSource read get_PlayToSource;
    property Source: IImageSource read get_Source write put_Source;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsPanelTemplate
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsPanelTemplate)]
  IItemsPanelTemplate = interface(IInspectable)
  ['{14EAD768-34B2-4B97-BF3C-E8D73230A2AA}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IItemsChangedEventArgs
  Primitives_IItemsChangedEventArgs = interface(IInspectable)
  ['{E8B45568-7D10-421E-BE29-81839A91DE20}']
    function get_Action: Integer; safecall;
    function get_Position: Primitives_GeneratorPosition; safecall;
    function get_OldPosition: Primitives_GeneratorPosition; safecall;
    function get_ItemCount: Integer; safecall;
    function get_ItemUICount: Integer; safecall;
    property Action: Integer read get_Action;
    property ItemCount: Integer read get_ItemCount;
    property ItemUICount: Integer read get_ItemUICount;
    property OldPosition: Primitives_GeneratorPosition read get_OldPosition;
    property Position: Primitives_GeneratorPosition read get_Position;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler
  Primitives_ItemsChangedEventHandler = interface(IUnknown)
  ['{178257BE-A304-482F-8BF0-B9D2E39612A3}']
    procedure Invoke(sender: IInspectable; e: Primitives_IItemsChangedEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IUIElementCollection
  IUIElementCollection = interface(IInspectable)
  ['{D6602D54-88F6-43F6-85D8-A9D914A6DD3B}']
    procedure Move(oldIndex: Cardinal; newIndex: Cardinal); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Panel)]
  IPanel = interface(IInspectable)
  ['{A50A4BBD-8361-469C-90DA-E9A40C7474DF}']
    function get_Children: IUIElementCollection; safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_IsItemsHost: Boolean; safecall;
    function get_ChildrenTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ChildrenTransitions(value: IVector_1__Animation_ITransition); safecall;
    property Background: IBrush read get_Background write put_Background;
    property Children: IUIElementCollection read get_Children;
    property ChildrenTransitions: IVector_1__Animation_ITransition read get_ChildrenTransitions write put_ChildrenTransitions;
    property IsItemsHost: Boolean read get_IsItemsHost;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemContainerGenerator
  IItemContainerGenerator = interface(IInspectable)
  ['{40765F00-83F0-4D7F-B1B8-F19DE4F1D5DA}']
    function add_ItemsChanged(handler: Primitives_ItemsChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ItemsChanged(token: EventRegistrationToken); safecall;
    function ItemFromContainer(container: IDependencyObject): IInspectable; safecall;
    function ContainerFromItem(item: IInspectable): IDependencyObject; safecall;
    function IndexFromContainer(container: IDependencyObject): Integer; safecall;
    function ContainerFromIndex(index: Integer): IDependencyObject; safecall;
    function GetItemContainerGeneratorForPanel(panel: IPanel): IItemContainerGenerator; safecall;
    procedure StartAt(position: Primitives_GeneratorPosition; direction: Primitives_GeneratorDirection; allowStartAtRealizedItem: Boolean); safecall;
    procedure Stop; safecall;
    function GenerateNext(out isNewlyRealized: Boolean): IDependencyObject; safecall;
    procedure PrepareItemContainer(container: IDependencyObject); safecall;
    procedure RemoveAll; safecall;
    procedure Remove(position: Primitives_GeneratorPosition; count: Integer); safecall;
    function GeneratorPositionFromIndex(itemIndex: Integer): Primitives_GeneratorPosition; safecall;
    function IndexFromGeneratorPosition(position: Primitives_GeneratorPosition): Integer; safecall;
    procedure Recycle(position: Primitives_GeneratorPosition; count: Integer); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupStyle
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GroupStyle)]
  IGroupStyle = interface(IInspectable)
  ['{71CA300B-B89E-4184-B0DF-A9E95447DE8D}']
    function get_Panel: IItemsPanelTemplate; safecall;
    procedure put_Panel(value: IItemsPanelTemplate); safecall;
    function get_ContainerStyle: IStyle; safecall;
    procedure put_ContainerStyle(value: IStyle); safecall;
    function get_ContainerStyleSelector: IStyleSelector; safecall;
    procedure put_ContainerStyleSelector(value: IStyleSelector); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_HeaderTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_HeaderTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_HidesIfEmpty: Boolean; safecall;
    procedure put_HidesIfEmpty(value: Boolean); safecall;
    property ContainerStyle: IStyle read get_ContainerStyle write put_ContainerStyle;
    property ContainerStyleSelector: IStyleSelector read get_ContainerStyleSelector write put_ContainerStyleSelector;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property HeaderTemplateSelector: IDataTemplateSelector read get_HeaderTemplateSelector write put_HeaderTemplateSelector;
    property HidesIfEmpty: Boolean read get_HidesIfEmpty write put_HidesIfEmpty;
    property Panel: IItemsPanelTemplate read get_Panel write put_Panel;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IIterator_1__IGroupStyle_Base = interface(IInspectable)
  ['{4B1BFDEA-343F-5B34-96F4-753D57227EB9}']
    function get_Current: IGroupStyle; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIGroupStyle): Cardinal; safecall;
    property Current: IGroupStyle read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IIterator_1__IGroupStyle = interface(IIterator_1__IGroupStyle_Base)
  ['{F23B197E-C4B0-584F-8672-3B59395C2B01}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IIterable_1__IGroupStyle_Base = interface(IInspectable)
  ['{89BE2766-2A52-5790-AD0E-D5CAE305B07C}']
    function First: IIterator_1__IGroupStyle; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IIterable_1__IGroupStyle = interface(IIterable_1__IGroupStyle_Base)
  ['{AAB4D768-4E7F-5F33-9F1F-77FB5F3E88E1}']
  end;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IVectorView_1__IGroupStyle = interface(IInspectable)
  ['{06B20C47-82F6-5EAF-B43C-ED43D1391AFE}']
    function GetAt(index: Cardinal): IGroupStyle; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IGroupStyle; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIGroupStyle): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IVector_1__IGroupStyle_Base = interface(IInspectable)
  ['{BFB6A4C1-12BB-5F22-A08A-8EBAB3864396}']
    function GetAt(index: Cardinal): IGroupStyle; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IGroupStyle; safecall;
    function IndexOf(value: IGroupStyle; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IGroupStyle); safecall;
    procedure InsertAt(index: Cardinal; value: IGroupStyle); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IGroupStyle); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIGroupStyle): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIGroupStyle); safecall;
    property Size: Cardinal read get_Size;
  end;
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IVector_1__IGroupStyle = interface(IVector_1__IGroupStyle_Base)
  ['{F16C2B23-E028-5F6D-8C0A-6C2940E5E15D}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.IGroupStyle>
  VectorChangedEventHandler_1__IGroupStyle_Delegate_Base = interface(IUnknown)
  ['{2CAA8225-B3D4-5725-B0CF-5E6E61453B23}']
    procedure Invoke(sender: IObservableVector_1__IGroupStyle; event: IVectorChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.IGroupStyle>
  VectorChangedEventHandler_1__IGroupStyle = interface(VectorChangedEventHandler_1__IGroupStyle_Delegate_Base)
  ['{9F07FAA2-97FC-5A69-9C31-FA23937DB2E9}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.IGroupStyle>
  IObservableVector_1__IGroupStyle = interface(IInspectable)
  ['{693D0DA3-AF0B-533B-9642-F16B63E0BC4F}']
    function add_VectorChanged(vhnd: VectorChangedEventHandler_1__IGroupStyle): EventRegistrationToken; safecall;
    procedure remove_VectorChanged(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupStyleSelector
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GroupStyleSelector)]
  IGroupStyleSelector = interface(IInspectable)
  ['{6DDA119E-9A74-478F-A339-5BB52DE6C51E}']
    function SelectGroupStyle(group: IInspectable; level: Cardinal): IGroupStyle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsControl
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsControl)]
  IItemsControl = interface(IInspectable)
  ['{F4A91DD8-D979-4381-8652-BDA0342A765E}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_Items: IObservableVector_1__IInspectable; safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function get_ItemTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ItemTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ItemsPanel: IItemsPanelTemplate; safecall;
    procedure put_ItemsPanel(value: IItemsPanelTemplate); safecall;
    function get_DisplayMemberPath: HSTRING; safecall;
    procedure put_DisplayMemberPath(value: HSTRING); safecall;
    function get_ItemContainerStyle: IStyle; safecall;
    procedure put_ItemContainerStyle(value: IStyle); safecall;
    function get_ItemContainerStyleSelector: IStyleSelector; safecall;
    procedure put_ItemContainerStyleSelector(value: IStyleSelector); safecall;
    function get_ItemContainerGenerator: IItemContainerGenerator; safecall;
    function get_ItemContainerTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ItemContainerTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_GroupStyle: IObservableVector_1__IGroupStyle; safecall;
    function get_GroupStyleSelector: IGroupStyleSelector; safecall;
    procedure put_GroupStyleSelector(value: IGroupStyleSelector); safecall;
    function get_IsGrouping: Boolean; safecall;
    property DisplayMemberPath: HSTRING read get_DisplayMemberPath write put_DisplayMemberPath;
    property GroupStyle: IObservableVector_1__IGroupStyle read get_GroupStyle;
    property GroupStyleSelector: IGroupStyleSelector read get_GroupStyleSelector write put_GroupStyleSelector;
    property IsGrouping: Boolean read get_IsGrouping;
    property ItemContainerGenerator: IItemContainerGenerator read get_ItemContainerGenerator;
    property ItemContainerStyle: IStyle read get_ItemContainerStyle write put_ItemContainerStyle;
    property ItemContainerStyleSelector: IStyleSelector read get_ItemContainerStyleSelector write put_ItemContainerStyleSelector;
    property ItemContainerTransitions: IVector_1__Animation_ITransition read get_ItemContainerTransitions write put_ItemContainerTransitions;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemTemplateSelector: IDataTemplateSelector read get_ItemTemplateSelector write put_ItemTemplateSelector;
    property Items: IObservableVector_1__IInspectable read get_Items;
    property ItemsPanel: IItemsPanelTemplate read get_ItemsPanel write put_ItemsPanel;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListBox
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListBox)]
  IListBox = interface(IInspectable)
  ['{E9F3B9FF-8E91-4ECF-A707-C927F694F881}']
    function get_SelectedItems: IVector_1__IInspectable; safecall;
    function get_SelectionMode: SelectionMode; safecall;
    procedure put_SelectionMode(value: SelectionMode); safecall;
    procedure ScrollIntoView(item: IInspectable); safecall;
    procedure SelectAll; safecall;
    property SelectedItems: IVector_1__IInspectable read get_SelectedItems;
    property SelectionMode_: SelectionMode read get_SelectionMode write put_SelectionMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListBoxItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListBoxItem)]
  IListBoxItem = interface(IInspectable)
  ['{43C13323-6EDF-4E4B-B6B2-3A93EEC41D95}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListView
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListView)]
  IListView = interface(IInspectable)
  ['{F6CE8C6D-FE96-41AD-A64A-C2B81C4AF7F8}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseHeaderItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBaseHeaderItem)]
  IListViewBaseHeaderItem = interface(IInspectable)
  ['{6D0DED27-0D19-4091-8917-CE7C85C1E630}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewHeaderItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewHeaderItem)]
  IListViewHeaderItem = interface(IInspectable)
  ['{1B61BAEB-E196-4B3B-A5F9-1ED636F3F79B}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemTemplateSettings
  Primitives_IListViewItemTemplateSettings = interface(IInspectable)
  ['{67AF84BF-8279-4686-9326-CD189F27575D}']
    function get_DragItemsCount: Integer; safecall;
    property DragItemsCount: Integer read get_DragItemsCount;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewItem)]
  IListViewItem = interface(IInspectable)
  ['{B7BB4305-3DD9-43DE-A8C0-C472F085BC11}']
    function get_TemplateSettings: Primitives_IListViewItemTemplateSettings; safecall;
    property TemplateSettings: Primitives_IListViewItemTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaPlayerElement
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaPlayerElement)]
  IMediaPlayerElement = interface(IInspectable)
  ['{3B4CA526-2E25-4598-BC71-D491F8E8DE39}']
    function get_Source: Playback_IMediaPlaybackSource; safecall;
    procedure put_Source(value: Playback_IMediaPlaybackSource); safecall;
    function get_TransportControls: IMediaTransportControls; safecall;
    procedure put_TransportControls(value: IMediaTransportControls); safecall;
    function get_AreTransportControlsEnabled: Boolean; safecall;
    procedure put_AreTransportControlsEnabled(value: Boolean); safecall;
    function get_PosterSource: IImageSource; safecall;
    procedure put_PosterSource(value: IImageSource); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_AutoPlay: Boolean; safecall;
    procedure put_AutoPlay(value: Boolean); safecall;
    function get_IsFullWindow: Boolean; safecall;
    procedure put_IsFullWindow(value: Boolean); safecall;
    function get_MediaPlayer: Playback_IMediaPlayer; safecall;
    procedure SetMediaPlayer(mediaPlayer: Playback_IMediaPlayer); safecall;
    property AreTransportControlsEnabled: Boolean read get_AreTransportControlsEnabled write put_AreTransportControlsEnabled;
    property AutoPlay: Boolean read get_AutoPlay write put_AutoPlay;
    property IsFullWindow: Boolean read get_IsFullWindow write put_IsFullWindow;
    property MediaPlayer: Playback_IMediaPlayer read get_MediaPlayer;
    property PosterSource: IImageSource read get_PosterSource write put_PosterSource;
    property Source: Playback_IMediaPlaybackSource read get_Source write put_Source;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
    property TransportControls: IMediaTransportControls read get_TransportControls write put_TransportControls;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItemBase
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutItemBase)]
  IMenuFlyoutItemBase = interface(IInspectable)
  ['{F9B56047-8DA6-4730-9208-144125C6B396}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterator_1__IMenuFlyoutItemBase_Base = interface(IInspectable)
  ['{2A8A81EF-F351-50A7-BCDC-8368DF215280}']
    function get_Current: IMenuFlyoutItemBase; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIMenuFlyoutItemBase): Cardinal; safecall;
    property Current: IMenuFlyoutItemBase read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterator_1__IMenuFlyoutItemBase = interface(IIterator_1__IMenuFlyoutItemBase_Base)
  ['{930996C1-972E-58C4-9D7F-083752911B78}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterable_1__IMenuFlyoutItemBase_Base = interface(IInspectable)
  ['{0BB14D64-CC9A-58AE-B881-73FE0ECB99EB}']
    function First: IIterator_1__IMenuFlyoutItemBase; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterable_1__IMenuFlyoutItemBase = interface(IIterable_1__IMenuFlyoutItemBase_Base)
  ['{6BD1C20E-E415-5D7D-B913-C0265E6862E0}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVectorView_1__IMenuFlyoutItemBase = interface(IInspectable)
  ['{754D5BAB-C796-5726-A2B7-AF0651851EE0}']
    function GetAt(index: Cardinal): IMenuFlyoutItemBase; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IMenuFlyoutItemBase; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuFlyoutItemBase): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVector_1__IMenuFlyoutItemBase_Base = interface(IInspectable)
  ['{F7F1C37B-B4DF-5128-A476-FC8399BC10AF}']
    function GetAt(index: Cardinal): IMenuFlyoutItemBase; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IMenuFlyoutItemBase; safecall;
    function IndexOf(value: IMenuFlyoutItemBase; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IMenuFlyoutItemBase); safecall;
    procedure InsertAt(index: Cardinal; value: IMenuFlyoutItemBase); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IMenuFlyoutItemBase); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuFlyoutItemBase): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIMenuFlyoutItemBase); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVector_1__IMenuFlyoutItemBase = interface(IVector_1__IMenuFlyoutItemBase_Base)
  ['{337203F6-0DCA-5C3C-99ED-67DBA9A011AD}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBarItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBarItem)]
  IMenuBarItem = interface(IInspectable)
  ['{BF643B4C-8125-5B53-A454-06E896A5ACEE}']
    function get_Title: HSTRING; safecall;
    procedure put_Title(value: HSTRING); safecall;
    function get_Items: IVector_1__IMenuFlyoutItemBase; safecall;
    property Items: IVector_1__IMenuFlyoutItemBase read get_Items;
    property Title: HSTRING read get_Title write put_Title;
  end;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IIterator_1__IMenuBarItem = interface(IInspectable)
  ['{38080D94-3B88-530E-9CAA-A4478890BF9C}']
    function get_Current: IMenuBarItem; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIMenuBarItem): Cardinal; safecall;
    property Current: IMenuBarItem read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IIterable_1__IMenuBarItem = interface(IInspectable)
  ['{75942079-FD6C-5BA3-8A7E-7522DE295FDD}']
    function First: IIterator_1__IMenuBarItem; safecall;
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IVectorView_1__IMenuBarItem = interface(IInspectable)
  ['{F15BEE09-47A6-5B14-8EDE-48EC95A773D9}']
    function GetAt(index: Cardinal): IMenuBarItem; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IMenuBarItem; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuBarItem): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IMenuBarItem>
  IVector_1__IMenuBarItem = interface(IInspectable)
  ['{92E205B0-8FE2-5092-89EB-0513B52B236F}']
    function GetAt(index: Cardinal): IMenuBarItem; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IMenuBarItem; safecall;
    function IndexOf(value: IMenuBarItem; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IMenuBarItem); safecall;
    procedure InsertAt(index: Cardinal; value: IMenuBarItem); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IMenuBarItem); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuBarItem): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIMenuBarItem); safecall;
    property Size: Cardinal read get_Size;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBar
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBar)]
  IMenuBar = interface(IInspectable)
  ['{C8F67B0C-0E76-5AF2-BADE-785049C80A41}']
    function get_Items: IVector_1__IMenuBarItem; safecall;
    property Items: IVector_1__IMenuBarItem read get_Items;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItem = interface(IInspectable)
  ['{160775CF-B598-44AF-A488-C3CE2AF6D3F0}']
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_Command: Input_ICommand; safecall;
    procedure put_Command(value: Input_ICommand); safecall;
    function get_CommandParameter: IInspectable; safecall;
    procedure put_CommandParameter(value: IInspectable); safecall;
    function add_Click(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Click(token: EventRegistrationToken); safecall;
    property Command: Input_ICommand read get_Command write put_Command;
    property CommandParameter: IInspectable read get_CommandParameter write put_CommandParameter;
    property Text: HSTRING read get_Text write put_Text;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutPresenter)]
  IMenuFlyoutPresenter = interface(IInspectable)
  ['{906E0304-254E-413F-B219-C7B97F003752}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItem = interface(IInspectable)
  ['{8614BE0F-B7B6-4851-960A-F5E3F69F624A}']
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    function get_CompactPaneLength: Double; safecall;
    property CompactPaneLength: Double read get_CompactPaneLength;
    property Icon: IIconElement read get_Icon write put_Icon;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBox
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PasswordBox)]
  IPasswordBox = interface(IInspectable)
  ['{02B9AA11-0B47-4E7D-AD91-3A4168ED230D}']
    function get_Password: HSTRING; safecall;
    procedure put_Password(value: HSTRING); safecall;
    function get_PasswordChar: HSTRING; safecall;
    procedure put_PasswordChar(value: HSTRING); safecall;
    function get_IsPasswordRevealButtonEnabled: Boolean; safecall;
    procedure put_IsPasswordRevealButtonEnabled(value: Boolean); safecall;
    function get_MaxLength: Integer; safecall;
    procedure put_MaxLength(value: Integer); safecall;
    function add_PasswordChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_PasswordChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    procedure SelectAll; safecall;
    property IsPasswordRevealButtonEnabled: Boolean read get_IsPasswordRevealButtonEnabled write put_IsPasswordRevealButtonEnabled;
    property MaxLength: Integer read get_MaxLength write put_MaxLength;
    property Password: HSTRING read get_Password write put_Password;
    property PasswordChar: HSTRING read get_PasswordChar write put_PasswordChar;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPersonPicture
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PersonPicture)]
  IPersonPicture = interface(IInspectable)
  ['{6C230B6D-0D75-4059-91BC-7B174D1D7315}']
    function get_BadgeNumber: Integer; safecall;
    procedure put_BadgeNumber(value: Integer); safecall;
    function get_BadgeGlyph: HSTRING; safecall;
    procedure put_BadgeGlyph(value: HSTRING); safecall;
    function get_BadgeImageSource: IImageSource; safecall;
    procedure put_BadgeImageSource(value: IImageSource); safecall;
    function get_BadgeText: HSTRING; safecall;
    procedure put_BadgeText(value: HSTRING); safecall;
    function get_IsGroup: Boolean; safecall;
    procedure put_IsGroup(value: Boolean); safecall;
    function get_Contact: IContact; safecall;
    procedure put_Contact(value: IContact); safecall;
    function get_DisplayName: HSTRING; safecall;
    procedure put_DisplayName(value: HSTRING); safecall;
    function get_Initials: HSTRING; safecall;
    procedure put_Initials(value: HSTRING); safecall;
    function get_PreferSmallImage: Boolean; safecall;
    procedure put_PreferSmallImage(value: Boolean); safecall;
    function get_ProfilePicture: IImageSource; safecall;
    procedure put_ProfilePicture(value: IImageSource); safecall;
    property BadgeGlyph: HSTRING read get_BadgeGlyph write put_BadgeGlyph;
    property BadgeImageSource: IImageSource read get_BadgeImageSource write put_BadgeImageSource;
    property BadgeNumber: Integer read get_BadgeNumber write put_BadgeNumber;
    property BadgeText: HSTRING read get_BadgeText write put_BadgeText;
    property Contact: IContact read get_Contact write put_Contact;
    property DisplayName: HSTRING read get_DisplayName write put_DisplayName;
    property Initials: HSTRING read get_Initials write put_Initials;
    property IsGroup: Boolean read get_IsGroup write put_IsGroup;
    property PreferSmallImage: Boolean read get_PreferSmallImage write put_PreferSmallImage;
    property ProfilePicture: IImageSource read get_ProfilePicture write put_ProfilePicture;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISelectionChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SelectionChangedEventArgs)]
  ISelectionChangedEventArgs = interface(IInspectable)
  ['{C972D2DC-B609-4758-851E-A799C21DE97D}']
    function get_AddedItems: IVector_1__IInspectable; safecall;
    function get_RemovedItems: IVector_1__IInspectable; safecall;
    property AddedItems: IVector_1__IInspectable read get_AddedItems;
    property RemovedItems: IVector_1__IInspectable read get_RemovedItems;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.SelectionChangedEventHandler
  SelectionChangedEventHandler = interface(IUnknown)
  ['{E1A05352-5AA0-42CA-9CD9-068A14DB6E68}']
    procedure Invoke(sender: IInspectable; e: ISelectionChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PivotItem)]
  IPivotItem = interface(IInspectable)
  ['{A4764371-A502-47A3-915E-4AA096DAF87F}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    property Header: IInspectable read get_Header write put_Header;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotItemEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PivotItemEventArgs)]
  IPivotItemEventArgs = interface(IInspectable)
  ['{1A6F7254-1ED5-4BC5-A060-655530BCA6BA}']
    function get_Item: IPivotItem; safecall;
    procedure put_Item(value: IPivotItem); safecall;
    property Item: IPivotItem read get_Item write put_Item;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPivot,Windows.UI.Xaml.Controls.IPivotItemEventArgs>
  TypedEventHandler_2__IPivot__IPivotItemEventArgs_Delegate_Base = interface(IUnknown)
  ['{6B0C4CA2-7FEB-5E4E-BF5C-DE9F3AC4221C}']
    procedure Invoke(sender: IPivot; args: IPivotItemEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPivot,Windows.UI.Xaml.Controls.IPivotItemEventArgs>
  TypedEventHandler_2__IPivot__IPivotItemEventArgs = interface(TypedEventHandler_2__IPivot__IPivotItemEventArgs_Delegate_Base)
  ['{3A0D247E-7B7B-545B-A8FA-3FED2616C91A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivot
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Pivot)]
  IPivot = interface(IInspectable)
  ['{103E9B13-3400-4A16-90B9-6912BF06974E}']
    function get_Title: IInspectable; safecall;
    procedure put_Title(value: IInspectable); safecall;
    function get_TitleTemplate: IDataTemplate; safecall;
    procedure put_TitleTemplate(value: IDataTemplate); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_IsLocked: Boolean; safecall;
    procedure put_IsLocked(value: Boolean); safecall;
    function add_SelectionChanged(handler: SelectionChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_PivotItemLoading(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemLoading(token: EventRegistrationToken); safecall;
    function add_PivotItemLoaded(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemLoaded(token: EventRegistrationToken); safecall;
    function add_PivotItemUnloading(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemUnloading(token: EventRegistrationToken); safecall;
    function add_PivotItemUnloaded(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemUnloaded(token: EventRegistrationToken); safecall;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsLocked: Boolean read get_IsLocked write put_IsLocked;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property Title: IInspectable read get_Title write put_Title;
    property TitleTemplate: IDataTemplate read get_TitleTemplate write put_TitleTemplate;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IProgressBarTemplateSettings
  Primitives_IProgressBarTemplateSettings = interface(IInspectable)
  ['{3FE2EA2A-E3F2-4C2B-9488-918D77D2BBE4}']
    function get_EllipseDiameter: Double; safecall;
    function get_EllipseOffset: Double; safecall;
    function get_EllipseAnimationWellPosition: Double; safecall;
    function get_EllipseAnimationEndPosition: Double; safecall;
    function get_ContainerAnimationStartPosition: Double; safecall;
    function get_ContainerAnimationEndPosition: Double; safecall;
    function get_IndicatorLengthDelta: Double; safecall;
    property ContainerAnimationEndPosition: Double read get_ContainerAnimationEndPosition;
    property ContainerAnimationStartPosition: Double read get_ContainerAnimationStartPosition;
    property EllipseAnimationEndPosition: Double read get_EllipseAnimationEndPosition;
    property EllipseAnimationWellPosition: Double read get_EllipseAnimationWellPosition;
    property EllipseDiameter: Double read get_EllipseDiameter;
    property EllipseOffset: Double read get_EllipseOffset;
    property IndicatorLengthDelta: Double read get_IndicatorLengthDelta;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IProgressBar
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ProgressBar)]
  IProgressBar = interface(IInspectable)
  ['{AE752C89-0067-4963-BF4C-29DB0C4A507E}']
    function get_IsIndeterminate: Boolean; safecall;
    procedure put_IsIndeterminate(value: Boolean); safecall;
    function get_ShowError: Boolean; safecall;
    procedure put_ShowError(value: Boolean); safecall;
    function get_ShowPaused: Boolean; safecall;
    procedure put_ShowPaused(value: Boolean); safecall;
    function get_TemplateSettings: Primitives_IProgressBarTemplateSettings; safecall;
    property IsIndeterminate: Boolean read get_IsIndeterminate write put_IsIndeterminate;
    property ShowError: Boolean read get_ShowError write put_ShowError;
    property ShowPaused: Boolean read get_ShowPaused write put_ShowPaused;
    property TemplateSettings: Primitives_IProgressBarTemplateSettings read get_TemplateSettings;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IProgressRingTemplateSettings
  Primitives_IProgressRingTemplateSettings = interface(IInspectable)
  ['{B9B675EC-C723-42E6-83E9-9826272BDC0E}']
    function get_EllipseDiameter: Double; safecall;
    function get_EllipseOffset: Thickness; safecall;
    function get_MaxSideLength: Double; safecall;
    property EllipseDiameter: Double read get_EllipseDiameter;
    property EllipseOffset: Thickness read get_EllipseOffset;
    property MaxSideLength: Double read get_MaxSideLength;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IProgressRing
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ProgressRing)]
  IProgressRing = interface(IInspectable)
  ['{6DA5E49E-6E9D-425C-BD7C-02173E39763F}']
    function get_IsActive: Boolean; safecall;
    procedure put_IsActive(value: Boolean); safecall;
    function get_TemplateSettings: Primitives_IProgressRingTemplateSettings; safecall;
    property IsActive: Boolean read get_IsActive write put_IsActive;
    property TemplateSettings: Primitives_IProgressRingTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRadioButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RadioButton)]
  IRadioButton = interface(IInspectable)
  ['{325C44E0-9A03-4BF3-ABD6-6FBB46C9A486}']
    function get_GroupName: HSTRING; safecall;
    procedure put_GroupName(value: HSTRING); safecall;
    property GroupName: HSTRING read get_GroupName write put_GroupName;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs
  Primitives_IRangeBaseValueChangedEventArgs = interface(IInspectable)
  ['{A1921777-D5C1-4F9C-A7B0-0401B7E6DC5C}']
    function get_OldValue: Double; safecall;
    function get_NewValue: Double; safecall;
    property NewValue: Double read get_NewValue;
    property OldValue: Double read get_OldValue;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler
  Primitives_RangeBaseValueChangedEventHandler = interface(IUnknown)
  ['{E3906FD9-4D1B-4AC8-A43C-C3B908742799}']
    procedure Invoke(sender: IInspectable; e: Primitives_IRangeBaseValueChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IRangeBase
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_RangeBase)]
  Primitives_IRangeBase = interface(IInspectable)
  ['{FA002C1A-494E-46CF-91D4-E14A8D798675}']
    function get_Minimum: Double; safecall;
    procedure put_Minimum(value: Double); safecall;
    function get_Maximum: Double; safecall;
    procedure put_Maximum(value: Double); safecall;
    function get_SmallChange: Double; safecall;
    procedure put_SmallChange(value: Double); safecall;
    function get_LargeChange: Double; safecall;
    procedure put_LargeChange(value: Double); safecall;
    function get_Value: Double; safecall;
    procedure put_Value(value: Double); safecall;
    function add_ValueChanged(handler: Primitives_RangeBaseValueChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ValueChanged(token: EventRegistrationToken); safecall;
    property LargeChange: Double read get_LargeChange write put_LargeChange;
    property Maximum: Double read get_Maximum write put_Maximum;
    property Minimum: Double read get_Minimum write put_Minimum;
    property SmallChange: Double read get_SmallChange write put_SmallChange;
    property Value: Double read get_Value write put_Value;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IRepeatButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_RepeatButton)]
  Primitives_IRepeatButton = interface(IInspectable)
  ['{02200DF9-021A-484A-A93B-0F31020314E5}']
    function get_Delay: Integer; safecall;
    procedure put_Delay(value: Integer); safecall;
    function get_Interval: Integer; safecall;
    procedure put_Interval(value: Integer); safecall;
    property Delay: Integer read get_Delay write put_Delay;
    property Interval: Integer read get_Interval write put_Interval;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockOverflow
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlockOverflow)]
  IRichTextBlockOverflow = interface(IInspectable)
  ['{4F93749B-DAC3-4A42-9CBB-99F0DE37C071}']
    function get_OverflowContentTarget: IRichTextBlockOverflow; safecall;
    procedure put_OverflowContentTarget(value: IRichTextBlockOverflow); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_ContentSource: IRichTextBlock; safecall;
    function get_HasOverflowContent: Boolean; safecall;
    function get_ContentStart: Documents_ITextPointer; safecall;
    function get_ContentEnd: Documents_ITextPointer; safecall;
    function get_BaselineOffset: Double; safecall;
    function GetPositionFromPoint(point: TPointF): Documents_ITextPointer; safecall;
    function Focus(value: FocusState): Boolean; safecall;
    property BaselineOffset: Double read get_BaselineOffset;
    property ContentEnd: Documents_ITextPointer read get_ContentEnd;
    property ContentSource: IRichTextBlock read get_ContentSource;
    property ContentStart: Documents_ITextPointer read get_ContentStart;
    property HasOverflowContent: Boolean read get_HasOverflowContent;
    property OverflowContentTarget: IRichTextBlockOverflow read get_OverflowContentTarget write put_OverflowContentTarget;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlock
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlock = interface(IInspectable)
  ['{E5FFF9E2-B968-49E7-97D4-8CCA2AC3AE7C}']
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_TextTrimming: TextTrimming; safecall;
    procedure put_TextTrimming(value: TextTrimming); safecall;
    function get_TextAlignment: TextAlignment; safecall;
    procedure put_TextAlignment(value: TextAlignment); safecall;
    function get_Blocks: IVector_1__Documents_IBlock; safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_LineHeight: Double; safecall;
    procedure put_LineHeight(value: Double); safecall;
    function get_LineStackingStrategy: LineStackingStrategy; safecall;
    procedure put_LineStackingStrategy(value: LineStackingStrategy); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_OverflowContentTarget: IRichTextBlockOverflow; safecall;
    procedure put_OverflowContentTarget(value: IRichTextBlockOverflow); safecall;
    function get_IsTextSelectionEnabled: Boolean; safecall;
    procedure put_IsTextSelectionEnabled(value: Boolean); safecall;
    function get_HasOverflowContent: Boolean; safecall;
    function get_SelectedText: HSTRING; safecall;
    function get_ContentStart: Documents_ITextPointer; safecall;
    function get_ContentEnd: Documents_ITextPointer; safecall;
    function get_SelectionStart: Documents_ITextPointer; safecall;
    function get_SelectionEnd: Documents_ITextPointer; safecall;
    function get_BaselineOffset: Double; safecall;
    function add_SelectionChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    procedure SelectAll; safecall;
    procedure Select(start: Documents_ITextPointer; &end: Documents_ITextPointer); safecall;
    function GetPositionFromPoint(point: TPointF): Documents_ITextPointer; safecall;
    function Focus(value: FocusState): Boolean; safecall;
    function get_TextIndent: Double; safecall;
    procedure put_TextIndent(value: Double); safecall;
    property BaselineOffset: Double read get_BaselineOffset;
    property Blocks: IVector_1__Documents_IBlock read get_Blocks;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property ContentEnd: Documents_ITextPointer read get_ContentEnd;
    property ContentStart: Documents_ITextPointer read get_ContentStart;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property HasOverflowContent: Boolean read get_HasOverflowContent;
    property IsTextSelectionEnabled: Boolean read get_IsTextSelectionEnabled write put_IsTextSelectionEnabled;
    property LineHeight: Double read get_LineHeight write put_LineHeight;
    property LineStackingStrategy_: LineStackingStrategy read get_LineStackingStrategy write put_LineStackingStrategy;
    property OverflowContentTarget: IRichTextBlockOverflow read get_OverflowContentTarget write put_OverflowContentTarget;
    property Padding: Thickness read get_Padding write put_Padding;
    property SelectedText: HSTRING read get_SelectedText;
    property SelectionEnd: Documents_ITextPointer read get_SelectionEnd;
    property SelectionStart: Documents_ITextPointer read get_SelectionStart;
    property TextAlignment_: TextAlignment read get_TextAlignment write put_TextAlignment;
    property TextIndent: Double read get_TextIndent write put_TextIndent;
    property TextTrimming_: TextTrimming read get_TextTrimming write put_TextTrimming;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IScrollEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ScrollEventArgs)]
  Primitives_IScrollEventArgs = interface(IInspectable)
  ['{C57E5168-3AFE-448D-B752-2F364C75D743}']
    function get_NewValue: Double; safecall;
    function get_ScrollEventType: Primitives_ScrollEventType; safecall;
    property NewValue: Double read get_NewValue;
    property ScrollEventType: Primitives_ScrollEventType read get_ScrollEventType;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ScrollEventHandler
  Primitives_ScrollEventHandler = interface(IUnknown)
  ['{8860B0A4-A383-4C83-B306-A1C39D7DB87F}']
    procedure Invoke(sender: IInspectable; e: Primitives_IScrollEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IScrollBar
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ScrollBar)]
  Primitives_IScrollBar = interface(IInspectable)
  ['{F57AE6CA-D1A6-4B90-A4E9-54DF1BA8D2EC}']
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_ViewportSize: Double; safecall;
    procedure put_ViewportSize(value: Double); safecall;
    function get_IndicatorMode: Primitives_ScrollingIndicatorMode; safecall;
    procedure put_IndicatorMode(value: Primitives_ScrollingIndicatorMode); safecall;
    function add_Scroll(handler: Primitives_ScrollEventHandler): EventRegistrationToken; safecall;
    procedure remove_Scroll(token: EventRegistrationToken); safecall;
    property IndicatorMode: Primitives_ScrollingIndicatorMode read get_IndicatorMode write put_IndicatorMode;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property ViewportSize: Double read get_ViewportSize write put_ViewportSize;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs)]
  IScrollViewerViewChangedEventArgs = interface(IInspectable)
  ['{4DD04F7E-7A11-4B2E-9933-577DF39252B6}']
    function get_IsIntermediate: Boolean; safecall;
    property IsIntermediate: Boolean read get_IsIntermediate;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs>
  EventHandler_1__IScrollViewerViewChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{354C0F34-E691-502A-A444-D5F07AEE310E}']
    procedure Invoke(sender: IInspectable; args: IScrollViewerViewChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs>
  EventHandler_1__IScrollViewerViewChangedEventArgs = interface(EventHandler_1__IScrollViewerViewChangedEventArgs_Delegate_Base)
  ['{9DF67D10-9B51-532C-8F03-67AD841437E3}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ScrollViewer)]
  IScrollViewer = interface(IInspectable)
  ['{64E9BE00-4DC1-493D-ABE7-CBD3C577490D}']
    function get_HorizontalScrollBarVisibility: ScrollBarVisibility; safecall;
    procedure put_HorizontalScrollBarVisibility(value: ScrollBarVisibility); safecall;
    function get_VerticalScrollBarVisibility: ScrollBarVisibility; safecall;
    procedure put_VerticalScrollBarVisibility(value: ScrollBarVisibility); safecall;
    function get_IsHorizontalRailEnabled: Boolean; safecall;
    procedure put_IsHorizontalRailEnabled(value: Boolean); safecall;
    function get_IsVerticalRailEnabled: Boolean; safecall;
    procedure put_IsVerticalRailEnabled(value: Boolean); safecall;
    function get_IsHorizontalScrollChainingEnabled: Boolean; safecall;
    procedure put_IsHorizontalScrollChainingEnabled(value: Boolean); safecall;
    function get_IsVerticalScrollChainingEnabled: Boolean; safecall;
    procedure put_IsVerticalScrollChainingEnabled(value: Boolean); safecall;
    function get_IsZoomChainingEnabled: Boolean; safecall;
    procedure put_IsZoomChainingEnabled(value: Boolean); safecall;
    function get_IsScrollInertiaEnabled: Boolean; safecall;
    procedure put_IsScrollInertiaEnabled(value: Boolean); safecall;
    function get_IsZoomInertiaEnabled: Boolean; safecall;
    procedure put_IsZoomInertiaEnabled(value: Boolean); safecall;
    function get_HorizontalScrollMode: ScrollMode; safecall;
    procedure put_HorizontalScrollMode(value: ScrollMode); safecall;
    function get_VerticalScrollMode: ScrollMode; safecall;
    procedure put_VerticalScrollMode(value: ScrollMode); safecall;
    function get_ZoomMode: ZoomMode; safecall;
    procedure put_ZoomMode(value: ZoomMode); safecall;
    function get_HorizontalSnapPointsAlignment: Primitives_SnapPointsAlignment; safecall;
    procedure put_HorizontalSnapPointsAlignment(value: Primitives_SnapPointsAlignment); safecall;
    function get_VerticalSnapPointsAlignment: Primitives_SnapPointsAlignment; safecall;
    procedure put_VerticalSnapPointsAlignment(value: Primitives_SnapPointsAlignment); safecall;
    function get_HorizontalSnapPointsType: SnapPointsType; safecall;
    procedure put_HorizontalSnapPointsType(value: SnapPointsType); safecall;
    function get_VerticalSnapPointsType: SnapPointsType; safecall;
    procedure put_VerticalSnapPointsType(value: SnapPointsType); safecall;
    function get_ZoomSnapPointsType: SnapPointsType; safecall;
    procedure put_ZoomSnapPointsType(value: SnapPointsType); safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ScrollableWidth: Double; safecall;
    function get_ComputedHorizontalScrollBarVisibility: Visibility; safecall;
    function get_ExtentWidth: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_ScrollableHeight: Double; safecall;
    function get_ComputedVerticalScrollBarVisibility: Visibility; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_MinZoomFactor: Single; safecall;
    procedure put_MinZoomFactor(value: Single); safecall;
    function get_MaxZoomFactor: Single; safecall;
    procedure put_MaxZoomFactor(value: Single); safecall;
    function get_ZoomFactor: Single; safecall;
    function get_ZoomSnapPoints: IVector_1__Single; safecall;
    function add_ViewChanged(handler: EventHandler_1__IScrollViewerViewChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ViewChanged(token: EventRegistrationToken); safecall;
    procedure ScrollToHorizontalOffset(offset: Double); safecall;
    procedure ScrollToVerticalOffset(offset: Double); safecall;
    procedure ZoomToFactor(factor: Single); safecall;
    procedure InvalidateScrollInfo; safecall;
    function get_IsDeferredScrollingEnabled: Boolean; safecall;
    procedure put_IsDeferredScrollingEnabled(value: Boolean); safecall;
    function get_BringIntoViewOnFocusChange: Boolean; safecall;
    procedure put_BringIntoViewOnFocusChange(value: Boolean); safecall;
    property BringIntoViewOnFocusChange: Boolean read get_BringIntoViewOnFocusChange write put_BringIntoViewOnFocusChange;
    property ComputedHorizontalScrollBarVisibility: Visibility read get_ComputedHorizontalScrollBarVisibility;
    property ComputedVerticalScrollBarVisibility: Visibility read get_ComputedVerticalScrollBarVisibility;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property HorizontalScrollBarVisibility: ScrollBarVisibility read get_HorizontalScrollBarVisibility write put_HorizontalScrollBarVisibility;
    property HorizontalScrollMode: ScrollMode read get_HorizontalScrollMode write put_HorizontalScrollMode;
    property HorizontalSnapPointsAlignment: Primitives_SnapPointsAlignment read get_HorizontalSnapPointsAlignment write put_HorizontalSnapPointsAlignment;
    property HorizontalSnapPointsType: SnapPointsType read get_HorizontalSnapPointsType write put_HorizontalSnapPointsType;
    property IsDeferredScrollingEnabled: Boolean read get_IsDeferredScrollingEnabled write put_IsDeferredScrollingEnabled;
    property IsHorizontalRailEnabled: Boolean read get_IsHorizontalRailEnabled write put_IsHorizontalRailEnabled;
    property IsHorizontalScrollChainingEnabled: Boolean read get_IsHorizontalScrollChainingEnabled write put_IsHorizontalScrollChainingEnabled;
    property IsScrollInertiaEnabled: Boolean read get_IsScrollInertiaEnabled write put_IsScrollInertiaEnabled;
    property IsVerticalRailEnabled: Boolean read get_IsVerticalRailEnabled write put_IsVerticalRailEnabled;
    property IsVerticalScrollChainingEnabled: Boolean read get_IsVerticalScrollChainingEnabled write put_IsVerticalScrollChainingEnabled;
    property IsZoomChainingEnabled: Boolean read get_IsZoomChainingEnabled write put_IsZoomChainingEnabled;
    property IsZoomInertiaEnabled: Boolean read get_IsZoomInertiaEnabled write put_IsZoomInertiaEnabled;
    property MaxZoomFactor: Single read get_MaxZoomFactor write put_MaxZoomFactor;
    property MinZoomFactor: Single read get_MinZoomFactor write put_MinZoomFactor;
    property ScrollableHeight: Double read get_ScrollableHeight;
    property ScrollableWidth: Double read get_ScrollableWidth;
    property VerticalOffset: Double read get_VerticalOffset;
    property VerticalScrollBarVisibility: ScrollBarVisibility read get_VerticalScrollBarVisibility write put_VerticalScrollBarVisibility;
    property VerticalScrollMode: ScrollMode read get_VerticalScrollMode write put_VerticalScrollMode;
    property VerticalSnapPointsAlignment: Primitives_SnapPointsAlignment read get_VerticalSnapPointsAlignment write put_VerticalSnapPointsAlignment;
    property VerticalSnapPointsType: SnapPointsType read get_VerticalSnapPointsType write put_VerticalSnapPointsType;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
    property ZoomFactor: Single read get_ZoomFactor;
    property ZoomMode_: ZoomMode read get_ZoomMode write put_ZoomMode;
    property ZoomSnapPoints: IVector_1__Single read get_ZoomSnapPoints;
    property ZoomSnapPointsType: SnapPointsType read get_ZoomSnapPointsType write put_ZoomSnapPointsType;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ISelector
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Selector)]
  Primitives_ISelector = interface(IInspectable)
  ['{E30EB3A5-B36B-42DC-8527-CD25136C083C}']
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_SelectedValue: IInspectable; safecall;
    procedure put_SelectedValue(value: IInspectable); safecall;
    function get_SelectedValuePath: HSTRING; safecall;
    procedure put_SelectedValuePath(value: HSTRING); safecall;
    function get_IsSynchronizedWithCurrentItem: IReference_1__Boolean; safecall;
    procedure put_IsSynchronizedWithCurrentItem(value: IReference_1__Boolean); safecall;
    function add_SelectionChanged(handler: SelectionChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    property IsSynchronizedWithCurrentItem: IReference_1__Boolean read get_IsSynchronizedWithCurrentItem write put_IsSynchronizedWithCurrentItem;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property SelectedValue: IInspectable read get_SelectedValue write put_SelectedValue;
    property SelectedValuePath: HSTRING read get_SelectedValuePath write put_SelectedValuePath;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISemanticZoomLocation
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SemanticZoomLocation)]
  ISemanticZoomLocation = interface(IInspectable)
  ['{42011736-E3C2-496B-BC4E-D750D4375B9A}']
    function get_Item: IInspectable; safecall;
    procedure put_Item(value: IInspectable); safecall;
    function get_Bounds: TRectF; safecall;
    procedure put_Bounds(value: TRectF); safecall;
    property Bounds: TRectF read get_Bounds write put_Bounds;
    property Item: IInspectable read get_Item write put_Item;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISemanticZoomInformation
  ISemanticZoomInformation = interface(IInspectable)
  ['{A76A3B63-229B-4DC5-AA11-9D922FBF8A98}']
    function get_SemanticZoomOwner: ISemanticZoom; safecall;
    procedure put_SemanticZoomOwner(value: ISemanticZoom); safecall;
    function get_IsActiveView: Boolean; safecall;
    procedure put_IsActiveView(value: Boolean); safecall;
    function get_IsZoomedInView: Boolean; safecall;
    procedure put_IsZoomedInView(value: Boolean); safecall;
    procedure InitializeViewChange; safecall;
    procedure CompleteViewChange; safecall;
    procedure MakeVisible(item: ISemanticZoomLocation); safecall;
    procedure StartViewChangeFrom(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    procedure StartViewChangeTo(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    procedure CompleteViewChangeFrom(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    procedure CompleteViewChangeTo(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    property IsActiveView: Boolean read get_IsActiveView write put_IsActiveView;
    property IsZoomedInView: Boolean read get_IsZoomedInView write put_IsZoomedInView;
    property SemanticZoomOwner: ISemanticZoom read get_SemanticZoomOwner write put_SemanticZoomOwner;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SemanticZoomViewChangedEventArgs)]
  ISemanticZoomViewChangedEventArgs = interface(IInspectable)
  ['{47DFC068-B569-4B19-842D-8E6CF90989AF}']
    function get_IsSourceZoomedInView: Boolean; safecall;
    procedure put_IsSourceZoomedInView(value: Boolean); safecall;
    function get_SourceItem: ISemanticZoomLocation; safecall;
    procedure put_SourceItem(value: ISemanticZoomLocation); safecall;
    function get_DestinationItem: ISemanticZoomLocation; safecall;
    procedure put_DestinationItem(value: ISemanticZoomLocation); safecall;
    property DestinationItem: ISemanticZoomLocation read get_DestinationItem write put_DestinationItem;
    property IsSourceZoomedInView: Boolean read get_IsSourceZoomedInView write put_IsSourceZoomedInView;
    property SourceItem: ISemanticZoomLocation read get_SourceItem write put_SourceItem;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler
  SemanticZoomViewChangedEventHandler = interface(IUnknown)
  ['{1FA9161D-5D73-44FB-81AC-D1C9384919D4}']
    procedure Invoke(sender: IInspectable; e: ISemanticZoomViewChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISemanticZoom
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SemanticZoom)]
  ISemanticZoom = interface(IInspectable)
  ['{019FFF21-ECE6-4FBC-BF40-8938D4813E27}']
    function get_ZoomedInView: ISemanticZoomInformation; safecall;
    procedure put_ZoomedInView(value: ISemanticZoomInformation); safecall;
    function get_ZoomedOutView: ISemanticZoomInformation; safecall;
    procedure put_ZoomedOutView(value: ISemanticZoomInformation); safecall;
    function get_IsZoomedInViewActive: Boolean; safecall;
    procedure put_IsZoomedInViewActive(value: Boolean); safecall;
    function get_CanChangeViews: Boolean; safecall;
    procedure put_CanChangeViews(value: Boolean); safecall;
    function add_ViewChangeStarted(handler: SemanticZoomViewChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ViewChangeStarted(token: EventRegistrationToken); safecall;
    function add_ViewChangeCompleted(handler: SemanticZoomViewChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ViewChangeCompleted(token: EventRegistrationToken); safecall;
    procedure ToggleActiveView; safecall;
    function get_IsZoomOutButtonEnabled: Boolean; safecall;
    procedure put_IsZoomOutButtonEnabled(value: Boolean); safecall;
    property CanChangeViews: Boolean read get_CanChangeViews write put_CanChangeViews;
    property IsZoomOutButtonEnabled: Boolean read get_IsZoomOutButtonEnabled write put_IsZoomOutButtonEnabled;
    property IsZoomedInViewActive: Boolean read get_IsZoomedInViewActive write put_IsZoomedInViewActive;
    property ZoomedInView: ISemanticZoomInformation read get_ZoomedInView write put_ZoomedInView;
    property ZoomedOutView: ISemanticZoomInformation read get_ZoomedOutView write put_ZoomedOutView;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ISettingsFlyoutTemplateSettings
  Primitives_ISettingsFlyoutTemplateSettings = interface(IInspectable)
  ['{BCF14C10-CEA7-43F1-9D68-57605DED69D4}']
    function get_HeaderBackground: IBrush; safecall;
    function get_HeaderForeground: IBrush; safecall;
    function get_BorderBrush: IBrush; safecall;
    function get_BorderThickness: Thickness; safecall;
    function get_IconSource: IImageSource; safecall;
    function get_ContentTransitions: IVector_1__Animation_ITransition; safecall;
    property BorderBrush: IBrush read get_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness;
    property ContentTransitions: IVector_1__Animation_ITransition read get_ContentTransitions;
    property HeaderBackground: IBrush read get_HeaderBackground;
    property HeaderForeground: IBrush read get_HeaderForeground;
    property IconSource: IImageSource read get_IconSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBackClickEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BackClickEventArgs)]
  IBackClickEventArgs = interface(IInspectable)
  ['{2AE6146C-477E-48C9-8830-2C464B7C7104}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.BackClickEventHandler
  BackClickEventHandler = interface(IUnknown)
  ['{FA9BC21F-9892-482E-ABF6-EB2D607D32DE}']
    procedure Invoke(sender: IInspectable; e: IBackClickEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISettingsFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SettingsFlyout)]
  ISettingsFlyout = interface(IInspectable)
  ['{830BA82B-C55B-4E32-A51C-5791E024C8AF}']
    function get_Title: HSTRING; safecall;
    procedure put_Title(value: HSTRING); safecall;
    function get_HeaderBackground: IBrush; safecall;
    procedure put_HeaderBackground(value: IBrush); safecall;
    function get_HeaderForeground: IBrush; safecall;
    procedure put_HeaderForeground(value: IBrush); safecall;
    function get_IconSource: IImageSource; safecall;
    procedure put_IconSource(value: IImageSource); safecall;
    function get_TemplateSettings: Primitives_ISettingsFlyoutTemplateSettings; safecall;
    function add_BackClick(handler: BackClickEventHandler): EventRegistrationToken; safecall;
    procedure remove_BackClick(token: EventRegistrationToken); safecall;
    procedure Show; safecall;
    procedure ShowIndependent; safecall;
    procedure Hide; safecall;
    property HeaderBackground: IBrush read get_HeaderBackground write put_HeaderBackground;
    property HeaderForeground: IBrush read get_HeaderForeground write put_HeaderForeground;
    property IconSource: IImageSource read get_IconSource write put_IconSource;
    property TemplateSettings: Primitives_ISettingsFlyoutTemplateSettings read get_TemplateSettings;
    property Title: HSTRING read get_Title write put_Title;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISlider
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Slider)]
  ISlider = interface(IInspectable)
  ['{89572027-4C48-4700-8076-497BA73D9C18}']
    function get_IntermediateValue: Double; safecall;
    procedure put_IntermediateValue(value: Double); safecall;
    function get_StepFrequency: Double; safecall;
    procedure put_StepFrequency(value: Double); safecall;
    function get_SnapsTo: Primitives_SliderSnapsTo; safecall;
    procedure put_SnapsTo(value: Primitives_SliderSnapsTo); safecall;
    function get_TickFrequency: Double; safecall;
    procedure put_TickFrequency(value: Double); safecall;
    function get_TickPlacement: Primitives_TickPlacement; safecall;
    procedure put_TickPlacement(value: Primitives_TickPlacement); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_IsDirectionReversed: Boolean; safecall;
    procedure put_IsDirectionReversed(value: Boolean); safecall;
    function get_IsThumbToolTipEnabled: Boolean; safecall;
    procedure put_IsThumbToolTipEnabled(value: Boolean); safecall;
    function get_ThumbToolTipValueConverter: Data_IValueConverter; safecall;
    procedure put_ThumbToolTipValueConverter(value: Data_IValueConverter); safecall;
    property IntermediateValue: Double read get_IntermediateValue write put_IntermediateValue;
    property IsDirectionReversed: Boolean read get_IsDirectionReversed write put_IsDirectionReversed;
    property IsThumbToolTipEnabled: Boolean read get_IsThumbToolTipEnabled write put_IsThumbToolTipEnabled;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property SnapsTo: Primitives_SliderSnapsTo read get_SnapsTo write put_SnapsTo;
    property StepFrequency: Double read get_StepFrequency write put_StepFrequency;
    property ThumbToolTipValueConverter: Data_IValueConverter read get_ThumbToolTipValueConverter write put_ThumbToolTipValueConverter;
    property TickFrequency: Double read get_TickFrequency write put_TickFrequency;
    property TickPlacement: Primitives_TickPlacement read get_TickPlacement write put_TickPlacement;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlock
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBlock)]
  ITextBlock = interface(IInspectable)
  ['{AE2D9271-3B4A-45FC-8468-F7949548F4D5}']
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_TextTrimming: TextTrimming; safecall;
    procedure put_TextTrimming(value: TextTrimming); safecall;
    function get_TextAlignment: TextAlignment; safecall;
    procedure put_TextAlignment(value: TextAlignment); safecall;
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_Inlines: IVector_1__Documents_IInline; safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_LineHeight: Double; safecall;
    procedure put_LineHeight(value: Double); safecall;
    function get_LineStackingStrategy: LineStackingStrategy; safecall;
    procedure put_LineStackingStrategy(value: LineStackingStrategy); safecall;
    function get_IsTextSelectionEnabled: Boolean; safecall;
    procedure put_IsTextSelectionEnabled(value: Boolean); safecall;
    function get_SelectedText: HSTRING; safecall;
    function get_ContentStart: Documents_ITextPointer; safecall;
    function get_ContentEnd: Documents_ITextPointer; safecall;
    function get_SelectionStart: Documents_ITextPointer; safecall;
    function get_SelectionEnd: Documents_ITextPointer; safecall;
    function get_BaselineOffset: Double; safecall;
    function add_SelectionChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    procedure SelectAll; safecall;
    procedure Select(start: Documents_ITextPointer; &end: Documents_ITextPointer); safecall;
    function Focus(value: FocusState): Boolean; safecall;
    property BaselineOffset: Double read get_BaselineOffset;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property ContentEnd: Documents_ITextPointer read get_ContentEnd;
    property ContentStart: Documents_ITextPointer read get_ContentStart;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property Inlines: IVector_1__Documents_IInline read get_Inlines;
    property IsTextSelectionEnabled: Boolean read get_IsTextSelectionEnabled write put_IsTextSelectionEnabled;
    property LineHeight: Double read get_LineHeight write put_LineHeight;
    property LineStackingStrategy_: LineStackingStrategy read get_LineStackingStrategy write put_LineStackingStrategy;
    property Padding: Thickness read get_Padding write put_Padding;
    property SelectedText: HSTRING read get_SelectedText;
    property SelectionEnd: Documents_ITextPointer read get_SelectionEnd;
    property SelectionStart: Documents_ITextPointer read get_SelectionStart;
    property Text: HSTRING read get_Text write put_Text;
    property TextAlignment_: TextAlignment read get_TextAlignment write put_TextAlignment;
    property TextTrimming_: TextTrimming read get_TextTrimming write put_TextTrimming;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextChangedEventArgs
  ITextChangedEventArgs = interface(IInspectable)
  ['{4DD04F7D-7A11-4B2E-9933-577DF39252B6}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.TextChangedEventHandler
  TextChangedEventHandler = interface(IUnknown)
  ['{8EB35B97-AD87-40E8-818B-77DB24759566}']
    procedure Invoke(sender: IInspectable; e: ITextChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBox = interface(IInspectable)
  ['{E48F5A8B-1DFF-4352-A1F4-E516514EC882}']
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_SelectedText: HSTRING; safecall;
    procedure put_SelectedText(value: HSTRING); safecall;
    function get_SelectionLength: Integer; safecall;
    procedure put_SelectionLength(value: Integer); safecall;
    function get_SelectionStart: Integer; safecall;
    procedure put_SelectionStart(value: Integer); safecall;
    function get_MaxLength: Integer; safecall;
    procedure put_MaxLength(value: Integer); safecall;
    function get_IsReadOnly: Boolean; safecall;
    procedure put_IsReadOnly(value: Boolean); safecall;
    function get_AcceptsReturn: Boolean; safecall;
    procedure put_AcceptsReturn(value: Boolean); safecall;
    function get_TextAlignment: TextAlignment; safecall;
    procedure put_TextAlignment(value: TextAlignment); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_IsSpellCheckEnabled: Boolean; safecall;
    procedure put_IsSpellCheckEnabled(value: Boolean); safecall;
    function get_IsTextPredictionEnabled: Boolean; safecall;
    procedure put_IsTextPredictionEnabled(value: Boolean); safecall;
    function get_InputScope: Input_IInputScope; safecall;
    procedure put_InputScope(value: Input_IInputScope); safecall;
    function add_TextChanged(handler: TextChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_TextChanged(token: EventRegistrationToken); safecall;
    function add_SelectionChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    procedure Select(start: Integer; length: Integer); safecall;
    procedure SelectAll; safecall;
    function GetRectFromCharacterIndex(charIndex: Integer; trailingEdge: Boolean): TRectF; safecall;
    property AcceptsReturn: Boolean read get_AcceptsReturn write put_AcceptsReturn;
    property InputScope: Input_IInputScope read get_InputScope write put_InputScope;
    property IsReadOnly: Boolean read get_IsReadOnly write put_IsReadOnly;
    property IsSpellCheckEnabled: Boolean read get_IsSpellCheckEnabled write put_IsSpellCheckEnabled;
    property IsTextPredictionEnabled: Boolean read get_IsTextPredictionEnabled write put_IsTextPredictionEnabled;
    property MaxLength: Integer read get_MaxLength write put_MaxLength;
    property SelectedText: HSTRING read get_SelectedText write put_SelectedText;
    property SelectionLength: Integer read get_SelectionLength write put_SelectionLength;
    property SelectionStart: Integer read get_SelectionStart write put_SelectionStart;
    property Text: HSTRING read get_Text write put_Text;
    property TextAlignment_: TextAlignment read get_TextAlignment write put_TextAlignment;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IDragStartedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_DragStartedEventArgs)]
  Primitives_IDragStartedEventArgs = interface(IInspectable)
  ['{9F915DD0-A124-4366-BD85-2408214AEED4}']
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property VerticalOffset: Double read get_VerticalOffset;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.DragStartedEventHandler
  Primitives_DragStartedEventHandler = interface(IUnknown)
  ['{D2EEA48A-C65A-495D-A2F1-72C66989142D}']
    procedure Invoke(sender: IInspectable; e: Primitives_IDragStartedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IDragDeltaEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_DragDeltaEventArgs)]
  Primitives_IDragDeltaEventArgs = interface(IInspectable)
  ['{2C2DD73C-2806-49FC-AAE9-6D792B572B6A}']
    function get_HorizontalChange: Double; safecall;
    function get_VerticalChange: Double; safecall;
    property HorizontalChange: Double read get_HorizontalChange;
    property VerticalChange: Double read get_VerticalChange;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.DragDeltaEventHandler
  Primitives_DragDeltaEventHandler = interface(IUnknown)
  ['{4AC24F9F-AC28-49E9-9189-DCCFFEB66472}']
    procedure Invoke(sender: IInspectable; e: Primitives_IDragDeltaEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IDragCompletedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_DragCompletedEventArgs)]
  Primitives_IDragCompletedEventArgs = interface(IInspectable)
  ['{B04F29A1-BD16-48F6-A511-9C2763641331}']
    function get_HorizontalChange: Double; safecall;
    function get_VerticalChange: Double; safecall;
    function get_Canceled: Boolean; safecall;
    property Canceled: Boolean read get_Canceled;
    property HorizontalChange: Double read get_HorizontalChange;
    property VerticalChange: Double read get_VerticalChange;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.DragCompletedEventHandler
  Primitives_DragCompletedEventHandler = interface(IUnknown)
  ['{36B28888-19AC-4B4E-9137-A6CF2B023883}']
    procedure Invoke(sender: IInspectable; e: Primitives_IDragCompletedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IThumb
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Thumb)]
  Primitives_IThumb = interface(IInspectable)
  ['{E8B2B281-0D6A-45CF-B333-2402B037F099}']
    function get_IsDragging: Boolean; safecall;
    function add_DragStarted(handler: Primitives_DragStartedEventHandler): EventRegistrationToken; safecall;
    procedure remove_DragStarted(token: EventRegistrationToken); safecall;
    function add_DragDelta(handler: Primitives_DragDeltaEventHandler): EventRegistrationToken; safecall;
    procedure remove_DragDelta(token: EventRegistrationToken); safecall;
    function add_DragCompleted(handler: Primitives_DragCompletedEventHandler): EventRegistrationToken; safecall;
    procedure remove_DragCompleted(token: EventRegistrationToken); safecall;
    procedure CancelDrag; safecall;
    property IsDragging: Boolean read get_IsDragging;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs
  ITimePickerValueChangedEventArgs = interface(IInspectable)
  ['{2F4EDB8D-B995-4E31-8BA9-C4DCDEB21CA3}']
    function get_OldTime: TimeSpan; safecall;
    function get_NewTime: TimeSpan; safecall;
    property NewTime: TimeSpan read get_NewTime;
    property OldTime: TimeSpan read get_OldTime;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs>
  EventHandler_1__ITimePickerValueChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{EBC4D41B-356A-59CA-B135-0EC34F68C307}']
    procedure Invoke(sender: IInspectable; args: ITimePickerValueChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs>
  EventHandler_1__ITimePickerValueChangedEventArgs = interface(EventHandler_1__ITimePickerValueChangedEventArgs_Delegate_Base)
  ['{89A33186-317C-56F3-B811-1EC5F1C96AE2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePicker
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePicker)]
  ITimePicker = interface(IInspectable)
  ['{E39099F2-3AFF-4792-909E-2D9941EC0357}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_ClockIdentifier: HSTRING; safecall;
    procedure put_ClockIdentifier(value: HSTRING); safecall;
    function get_MinuteIncrement: Integer; safecall;
    procedure put_MinuteIncrement(value: Integer); safecall;
    function get_Time: TimeSpan; safecall;
    procedure put_Time(value: TimeSpan); safecall;
    function add_TimeChanged(handler: EventHandler_1__ITimePickerValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TimeChanged(token: EventRegistrationToken); safecall;
    property ClockIdentifier: HSTRING read get_ClockIdentifier write put_ClockIdentifier;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property MinuteIncrement: Integer read get_MinuteIncrement write put_MinuteIncrement;
    property Time: TimeSpan read get_Time write put_Time;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IToggleButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ToggleButton)]
  Primitives_IToggleButton = interface(IInspectable)
  ['{589877FB-0FC7-4036-9D8B-127DFA75C16D}']
    function get_IsChecked: IReference_1__Boolean; safecall;
    procedure put_IsChecked(value: IReference_1__Boolean); safecall;
    function get_IsThreeState: Boolean; safecall;
    procedure put_IsThreeState(value: Boolean); safecall;
    function add_Checked(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Checked(token: EventRegistrationToken); safecall;
    function add_Unchecked(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Unchecked(token: EventRegistrationToken); safecall;
    function add_Indeterminate(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Indeterminate(token: EventRegistrationToken); safecall;
    property IsChecked: IReference_1__Boolean read get_IsChecked write put_IsChecked;
    property IsThreeState: Boolean read get_IsThreeState write put_IsThreeState;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleMenuFlyoutItem)]
  IToggleMenuFlyoutItem = interface(IInspectable)
  ['{49841EDD-88E9-4663-A701-CD4FD25E398F}']
    function get_IsChecked: Boolean; safecall;
    procedure put_IsChecked(value: Boolean); safecall;
    property IsChecked: Boolean read get_IsChecked write put_IsChecked;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IToggleSwitchTemplateSettings
  Primitives_IToggleSwitchTemplateSettings = interface(IInspectable)
  ['{02B7BDCD-628A-4363-86E0-51D6E2E89E58}']
    function get_KnobCurrentToOnOffset: Double; safecall;
    function get_KnobCurrentToOffOffset: Double; safecall;
    function get_KnobOnToOffOffset: Double; safecall;
    function get_KnobOffToOnOffset: Double; safecall;
    function get_CurtainCurrentToOnOffset: Double; safecall;
    function get_CurtainCurrentToOffOffset: Double; safecall;
    function get_CurtainOnToOffOffset: Double; safecall;
    function get_CurtainOffToOnOffset: Double; safecall;
    property CurtainCurrentToOffOffset: Double read get_CurtainCurrentToOffOffset;
    property CurtainCurrentToOnOffset: Double read get_CurtainCurrentToOnOffset;
    property CurtainOffToOnOffset: Double read get_CurtainOffToOnOffset;
    property CurtainOnToOffOffset: Double read get_CurtainOnToOffOffset;
    property KnobCurrentToOffOffset: Double read get_KnobCurrentToOffOffset;
    property KnobCurrentToOnOffset: Double read get_KnobCurrentToOnOffset;
    property KnobOffToOnOffset: Double read get_KnobOffToOnOffset;
    property KnobOnToOffOffset: Double read get_KnobOnToOffOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSwitch
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleSwitch)]
  IToggleSwitch = interface(IInspectable)
  ['{331D8F00-C5F9-46A5-B6C8-EDE539304567}']
    function get_IsOn: Boolean; safecall;
    procedure put_IsOn(value: Boolean); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_OnContent: IInspectable; safecall;
    procedure put_OnContent(value: IInspectable); safecall;
    function get_OnContentTemplate: IDataTemplate; safecall;
    procedure put_OnContentTemplate(value: IDataTemplate); safecall;
    function get_OffContent: IInspectable; safecall;
    procedure put_OffContent(value: IInspectable); safecall;
    function get_OffContentTemplate: IDataTemplate; safecall;
    procedure put_OffContentTemplate(value: IDataTemplate); safecall;
    function get_TemplateSettings: Primitives_IToggleSwitchTemplateSettings; safecall;
    function add_Toggled(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Toggled(token: EventRegistrationToken); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsOn: Boolean read get_IsOn write put_IsOn;
    property OffContent: IInspectable read get_OffContent write put_OffContent;
    property OffContentTemplate: IDataTemplate read get_OffContentTemplate write put_OffContentTemplate;
    property OnContent: IInspectable read get_OnContent write put_OnContent;
    property OnContentTemplate: IDataTemplate read get_OnContentTemplate write put_OnContentTemplate;
    property TemplateSettings: Primitives_IToggleSwitchTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettings
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewItemTemplateSettings)]
  ITreeViewItemTemplateSettings = interface(IInspectable)
  ['{EC323744-DE31-4936-BFC2-1CB37BA1DC08}']
    function get_ExpandedGlyphVisibility: Visibility; safecall;
    function get_CollapsedGlyphVisibility: Visibility; safecall;
    function get_Indentation: Thickness; safecall;
    function get_DragItemsCount: Integer; safecall;
    property CollapsedGlyphVisibility: Visibility read get_CollapsedGlyphVisibility;
    property DragItemsCount: Integer read get_DragItemsCount;
    property ExpandedGlyphVisibility: Visibility read get_ExpandedGlyphVisibility;
    property Indentation: Thickness read get_Indentation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItem = interface(IInspectable)
  ['{4E05D3E6-6167-44E7-9C74-291DDD6DF6EB}']
    function get_GlyphOpacity: Double; safecall;
    procedure put_GlyphOpacity(value: Double); safecall;
    function get_GlyphBrush: IBrush; safecall;
    procedure put_GlyphBrush(value: IBrush); safecall;
    function get_ExpandedGlyph: HSTRING; safecall;
    procedure put_ExpandedGlyph(value: HSTRING); safecall;
    function get_CollapsedGlyph: HSTRING; safecall;
    procedure put_CollapsedGlyph(value: HSTRING); safecall;
    function get_GlyphSize: Double; safecall;
    procedure put_GlyphSize(value: Double); safecall;
    function get_IsExpanded: Boolean; safecall;
    procedure put_IsExpanded(value: Boolean); safecall;
    function get_TreeViewItemTemplateSettings: ITreeViewItemTemplateSettings; safecall;
    property CollapsedGlyph: HSTRING read get_CollapsedGlyph write put_CollapsedGlyph;
    property ExpandedGlyph: HSTRING read get_ExpandedGlyph write put_ExpandedGlyph;
    property GlyphBrush: IBrush read get_GlyphBrush write put_GlyphBrush;
    property GlyphOpacity: Double read get_GlyphOpacity write put_GlyphOpacity;
    property GlyphSize: Double read get_GlyphSize write put_GlyphSize;
    property IsExpanded: Boolean read get_IsExpanded write put_IsExpanded;
    property TreeViewItemTemplateSettings: ITreeViewItemTemplateSettings read get_TreeViewItemTemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewList
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewList)]
  ITreeViewList = interface(IInspectable)
  ['{0F00A54E-099A-47A5-A942-94692B01F452}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs
  ICleanUpVirtualizedItemEventArgs = interface(IInspectable)
  ['{EA05CCE9-937C-4120-8406-792185784338}']
    function get_Value: IInspectable; safecall;
    function get_UIElement: IUIElement; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property UIElement: IUIElement read get_UIElement;
    property Value: IInspectable read get_Value;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler
  CleanUpVirtualizedItemEventHandler = interface(IUnknown)
  ['{CACAD0D6-0F0D-4870-884D-F2DEDF674288}']
    procedure Invoke(sender: IInspectable; e: ICleanUpVirtualizedItemEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs
  IAnchorRequestedEventArgs = interface(IInspectable)
  ['{5175F55D-4785-5A72-B462-EB11E9BDF897}']
    function get_Anchor: IUIElement; safecall;
    procedure put_Anchor(value: IUIElement); safecall;
    function get_AnchorCandidates: IVector_1__IUIElement; safecall;
    property Anchor: IUIElement read get_Anchor write put_Anchor;
    property AnchorCandidates: IVector_1__IUIElement read get_AnchorCandidates;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBar2
  IAppBar2 = interface(IInspectable)
  ['{C3AB17B3-7AD7-4676-9910-7FE3F0E8E993}']
    function get_ClosedDisplayMode: AppBarClosedDisplayMode; safecall;
    procedure put_ClosedDisplayMode(value: AppBarClosedDisplayMode); safecall;
    property ClosedDisplayMode: AppBarClosedDisplayMode read get_ClosedDisplayMode write put_ClosedDisplayMode;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IAppBarTemplateSettings
  Primitives_IAppBarTemplateSettings = interface(IInspectable)
  ['{BCC2A863-EB35-423C-8389-D7827BE3BF67}']
    function get_ClipRect: TRectF; safecall;
    function get_CompactVerticalDelta: Double; safecall;
    function get_CompactRootMargin: Thickness; safecall;
    function get_MinimalVerticalDelta: Double; safecall;
    function get_MinimalRootMargin: Thickness; safecall;
    function get_HiddenVerticalDelta: Double; safecall;
    function get_HiddenRootMargin: Thickness; safecall;
    property ClipRect: TRectF read get_ClipRect;
    property CompactRootMargin: Thickness read get_CompactRootMargin;
    property CompactVerticalDelta: Double read get_CompactVerticalDelta;
    property HiddenRootMargin: Thickness read get_HiddenRootMargin;
    property HiddenVerticalDelta: Double read get_HiddenVerticalDelta;
    property MinimalRootMargin: Thickness read get_MinimalRootMargin;
    property MinimalVerticalDelta: Double read get_MinimalVerticalDelta;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBar3
  IAppBar3 = interface(IInspectable)
  ['{982B001F-752E-4E7A-B055-54802C9EA749}']
    function get_TemplateSettings: Primitives_IAppBarTemplateSettings; safecall;
    function add_Opening(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opening(token: EventRegistrationToken); safecall;
    function add_Closing(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Closing(token: EventRegistrationToken); safecall;
    property TemplateSettings: Primitives_IAppBarTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBar4
  IAppBar4 = interface(IInspectable)
  ['{94EBC8CD-0A64-4DA3-BF43-F13100A46605}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButton3
  IAppBarButton3 = interface(IInspectable)
  ['{0B282150-198B-4E84-8F1C-9F6A8BA267A7}']
    function get_LabelPosition: CommandBarLabelPosition; safecall;
    procedure put_LabelPosition(value: CommandBarLabelPosition); safecall;
    property LabelPosition: CommandBarLabelPosition read get_LabelPosition write put_LabelPosition;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButton4
  IAppBarButton4 = interface(IInspectable)
  ['{958FCE6B-FD08-4414-8458-9D40866DC84E}']
    function get_KeyboardAcceleratorTextOverride: HSTRING; safecall;
    procedure put_KeyboardAcceleratorTextOverride(value: HSTRING); safecall;
    property KeyboardAcceleratorTextOverride: HSTRING read get_KeyboardAcceleratorTextOverride write put_KeyboardAcceleratorTextOverride;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IAppBarButtonTemplateSettings
  Primitives_IAppBarButtonTemplateSettings = interface(IInspectable)
  ['{CBC9B39D-0C95-4951-BFF2-13963691C366}']
    function get_KeyboardAcceleratorTextMinWidth: Double; safecall;
    property KeyboardAcceleratorTextMinWidth: Double read get_KeyboardAcceleratorTextMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButton5
  IAppBarButton5 = interface(IInspectable)
  ['{4096FC7F-1AEC-4B0F-A031-CA8C4E06D2ED}']
    function get_TemplateSettings: Primitives_IAppBarButtonTemplateSettings; safecall;
    property TemplateSettings: Primitives_IAppBarButtonTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarButton)]
  IAppBarButtonFactory = interface(IInspectable)
  ['{BDBB1BB6-CB2E-4276-ABD6-7935130510E0}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarButton)]
  IAppBarButtonStatics = interface(IInspectable)
  ['{7CCD13E6-5301-407F-874E-DC9160AA07AF}']
    function get_LabelProperty: IDependencyProperty; safecall;
    function get_IconProperty: IDependencyProperty; safecall;
    function get_IsCompactProperty: IDependencyProperty; safecall;
    property IconProperty: IDependencyProperty read get_IconProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property LabelProperty: IDependencyProperty read get_LabelProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButtonStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarButton)]
  IAppBarButtonStatics3 = interface(IInspectable)
  ['{4D7BF314-2EDE-4328-8906-752A1F27CDFA}']
    function get_LabelPositionProperty: IDependencyProperty; safecall;
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarButtonStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarButton)]
  IAppBarButtonStatics4 = interface(IInspectable)
  ['{1C0AE26A-C755-4FE6-A3B6-0E3394E952C0}']
    function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; safecall;
    property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarElementContainer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarElementContainer)]
  IAppBarElementContainer = interface(IInspectable)
  ['{1D5BA067-A990-5DAB-A9C3-E6BE56642A1A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarElementContainerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarElementContainer)]
  IAppBarElementContainerFactory = interface(IInspectable)
  ['{B506530E-8897-5D6F-A43E-F0586338D282}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarElementContainer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarElementContainerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarElementContainer)]
  IAppBarElementContainerStatics = interface(IInspectable)
  ['{EBBEF840-C745-5A6F-8671-9A41EB2196E7}']
    function get_IsCompactProperty: IDependencyProperty; safecall;
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBar)]
  IAppBarFactory = interface(IInspectable)
  ['{614708D1-8E65-43CB-92D7-8EEE17515F8D}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarOverrides
  IAppBarOverrides = interface(IInspectable)
  ['{F003E4E2-7B0F-4F4A-970D-AE8A0EAA9B70}']
    procedure OnClosed(e: IInspectable); safecall;
    procedure OnOpened(e: IInspectable); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarOverrides3
  IAppBarOverrides3 = interface(IInspectable)
  ['{412BBBC8-51D0-4B49-AB62-A3DD6BDCB298}']
    procedure OnClosing(e: IInspectable); safecall;
    procedure OnOpening(e: IInspectable); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarSeparator
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarSeparator)]
  IAppBarSeparator = interface(IInspectable)
  ['{1B0795A1-1BC1-4D53-95EA-FB0A2CCCC905}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarSeparatorFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarSeparator)]
  IAppBarSeparatorFactory = interface(IInspectable)
  ['{05DA25CD-F407-48DE-8B50-FF87D1E2818F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarSeparator; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarSeparatorStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarSeparator)]
  IAppBarSeparatorStatics = interface(IInspectable)
  ['{37F23484-5B35-4663-A75D-F2D50CB9C619}']
    function get_IsCompactProperty: IDependencyProperty; safecall;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarSeparatorStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarSeparator)]
  IAppBarSeparatorStatics3 = interface(IInspectable)
  ['{36C753F9-7373-4E5E-9BA4-C3622A003C4E}']
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBar)]
  IAppBarStatics = interface(IInspectable)
  ['{79BB7E8D-DCA9-4B5F-A448-37B13238ED76}']
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_IsStickyProperty: IDependencyProperty; safecall;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property IsStickyProperty: IDependencyProperty read get_IsStickyProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBar)]
  IAppBarStatics2 = interface(IInspectable)
  ['{222355E9-0384-49DE-8738-DFC9D409AC5D}']
    function get_ClosedDisplayModeProperty: IDependencyProperty; safecall;
    property ClosedDisplayModeProperty: IDependencyProperty read get_ClosedDisplayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBar)]
  IAppBarStatics4 = interface(IInspectable)
  ['{BA02082E-1165-4451-94B3-EB3AC73E4196}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButton3
  IAppBarToggleButton3 = interface(IInspectable)
  ['{EF9A85E5-16FF-4D72-B9E8-9B861EAF84A8}']
    function get_LabelPosition: CommandBarLabelPosition; safecall;
    procedure put_LabelPosition(value: CommandBarLabelPosition); safecall;
    property LabelPosition: CommandBarLabelPosition read get_LabelPosition write put_LabelPosition;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButton4
  IAppBarToggleButton4 = interface(IInspectable)
  ['{B86B736E-3EAF-4751-A897-00029F1F6ACA}']
    function get_KeyboardAcceleratorTextOverride: HSTRING; safecall;
    procedure put_KeyboardAcceleratorTextOverride(value: HSTRING); safecall;
    property KeyboardAcceleratorTextOverride: HSTRING read get_KeyboardAcceleratorTextOverride write put_KeyboardAcceleratorTextOverride;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IAppBarToggleButtonTemplateSettings
  Primitives_IAppBarToggleButtonTemplateSettings = interface(IInspectable)
  ['{AAF99C48-D8F4-40D9-9FA3-3A64F0FEC5D8}']
    function get_KeyboardAcceleratorTextMinWidth: Double; safecall;
    property KeyboardAcceleratorTextMinWidth: Double read get_KeyboardAcceleratorTextMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButton5
  IAppBarToggleButton5 = interface(IInspectable)
  ['{9DCA3357-C130-4FB6-A1E2-D2B348FE43BE}']
    function get_TemplateSettings: Primitives_IAppBarToggleButtonTemplateSettings; safecall;
    property TemplateSettings: Primitives_IAppBarToggleButtonTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButtonFactory = interface(IInspectable)
  ['{028AA7D4-8F54-45A6-9F90-13605656D793}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarToggleButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButtonStatics = interface(IInspectable)
  ['{FE5AAF96-7929-4DA1-AA67-CDDF73A3E4B5}']
    function get_LabelProperty: IDependencyProperty; safecall;
    function get_IconProperty: IDependencyProperty; safecall;
    function get_IsCompactProperty: IDependencyProperty; safecall;
    property IconProperty: IDependencyProperty read get_IconProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property LabelProperty: IDependencyProperty read get_LabelProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButtonStatics3 = interface(IInspectable)
  ['{BD4C65BF-2EDD-44D1-ACD5-35C00E2F21BC}']
    function get_LabelPositionProperty: IDependencyProperty; safecall;
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButtonStatics4 = interface(IInspectable)
  ['{A478B984-E916-4137-BDBD-95BD46FF3CE6}']
    function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; safecall;
    property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs)]
  IAutoSuggestBoxQuerySubmittedEventArgs = interface(IInspectable)
  ['{78DCB116-818A-4CB5-BCA7-382CE6DDC90D}']
    function get_QueryText: HSTRING; safecall;
    function get_ChosenSuggestion: IInspectable; safecall;
    property ChosenSuggestion: IInspectable read get_ChosenSuggestion;
    property QueryText: HSTRING read get_QueryText;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IAutoSuggestBox,Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs>
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs_Delegate_Base = interface(IUnknown)
  ['{1FA5F243-7045-56CB-BF2D-F5A425025C21}']
    procedure Invoke(sender: IAutoSuggestBox; args: IAutoSuggestBoxQuerySubmittedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IAutoSuggestBox,Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs>
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs = interface(TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs_Delegate_Base)
  ['{985C78D9-0054-585D-80A4-C662C3056227}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBox2
  IAutoSuggestBox2 = interface(IInspectable)
  ['{AA87DDDE-E679-45B2-A7C9-9AEDC39DB886}']
    function get_QueryIcon: IIconElement; safecall;
    procedure put_QueryIcon(value: IIconElement); safecall;
    function add_QuerySubmitted(handler: TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs): EventRegistrationToken; safecall;
    procedure remove_QuerySubmitted(token: EventRegistrationToken); safecall;
    property QueryIcon: IIconElement read get_QueryIcon write put_QueryIcon;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBox3
  IAutoSuggestBox3 = interface(IInspectable)
  ['{9BBBFCEF-F32D-402E-9009-05BDBAF6336E}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBox4
  IAutoSuggestBox4 = interface(IInspectable)
  ['{C22DF897-A3E8-5051-B3CC-B5F0F5262950}']
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    property Description: IInspectable read get_Description write put_Description;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AutoSuggestBox)]
  IAutoSuggestBoxStatics = interface(IInspectable)
  ['{EE22C7F4-C15D-4FF3-8A94-F50DFDFBE89A}']
    function get_MaxSuggestionListHeightProperty: IDependencyProperty; safecall;
    function get_IsSuggestionListOpenProperty: IDependencyProperty; safecall;
    function get_TextMemberPathProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_UpdateTextOnSelectProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_AutoMaximizeSuggestionAreaProperty: IDependencyProperty; safecall;
    function get_TextBoxStyleProperty: IDependencyProperty; safecall;
    property AutoMaximizeSuggestionAreaProperty: IDependencyProperty read get_AutoMaximizeSuggestionAreaProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property IsSuggestionListOpenProperty: IDependencyProperty read get_IsSuggestionListOpenProperty;
    property MaxSuggestionListHeightProperty: IDependencyProperty read get_MaxSuggestionListHeightProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    property TextMemberPathProperty: IDependencyProperty read get_TextMemberPathProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
    property UpdateTextOnSelectProperty: IDependencyProperty read get_UpdateTextOnSelectProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AutoSuggestBox)]
  IAutoSuggestBoxStatics2 = interface(IInspectable)
  ['{1CD297A8-8E6A-41EF-A95D-7157DC0C7106}']
    function get_QueryIconProperty: IDependencyProperty; safecall;
    property QueryIconProperty: IDependencyProperty read get_QueryIconProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AutoSuggestBox)]
  IAutoSuggestBoxStatics3 = interface(IInspectable)
  ['{2CEAD2DD-C4D5-4AB2-8A13-AFDDCF067C86}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AutoSuggestBox)]
  IAutoSuggestBoxStatics4 = interface(IInspectable)
  ['{D63EFAAE-B9DF-58D8-A00A-DBFE9FFDEDD0}']
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs)]
  IAutoSuggestBoxTextChangedEventArgsStatics = interface(IInspectable)
  ['{FEF7772B-9F45-44DB-8C27-BDA3F933E7B5}']
    function get_ReasonProperty: IDependencyProperty; safecall;
    property ReasonProperty: IDependencyProperty read get_ReasonProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIcon
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BitmapIcon)]
  IBitmapIcon = interface(IInspectable)
  ['{E8FE17CB-35F7-40F3-A185-48B397B73E68}']
    function get_UriSource: IUriRuntimeClass; safecall;
    procedure put_UriSource(value: IUriRuntimeClass); safecall;
    property UriSource: IUriRuntimeClass read get_UriSource write put_UriSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIcon2
  IBitmapIcon2 = interface(IInspectable)
  ['{0624A20A-9DD1-4201-BB20-42863DA15658}']
    function get_ShowAsMonochrome: Boolean; safecall;
    procedure put_ShowAsMonochrome(value: Boolean); safecall;
    property ShowAsMonochrome: Boolean read get_ShowAsMonochrome write put_ShowAsMonochrome;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIconFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BitmapIcon)]
  IBitmapIconFactory = interface(IInspectable)
  ['{46D64B1D-7A49-4F66-9729-2848C788E402}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIconSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BitmapIconSource)]
  IBitmapIconSource = interface(IInspectable)
  ['{C8E33DC7-D4AE-4A87-947F-AC4D0BCF5AF4}']
    function get_UriSource: IUriRuntimeClass; safecall;
    procedure put_UriSource(value: IUriRuntimeClass); safecall;
    function get_ShowAsMonochrome: Boolean; safecall;
    procedure put_ShowAsMonochrome(value: Boolean); safecall;
    property ShowAsMonochrome: Boolean read get_ShowAsMonochrome write put_ShowAsMonochrome;
    property UriSource: IUriRuntimeClass read get_UriSource write put_UriSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIconSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BitmapIconSource)]
  IBitmapIconSourceFactory = interface(IInspectable)
  ['{6509E5C6-44B6-4CD1-86CD-C3189B12C43C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIconSourceStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BitmapIconSource)]
  IBitmapIconSourceStatics = interface(IInspectable)
  ['{5A105887-E494-4D2B-8528-39472296133F}']
    function get_UriSourceProperty: IDependencyProperty; safecall;
    function get_ShowAsMonochromeProperty: IDependencyProperty; safecall;
    property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;
    property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIconStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BitmapIcon)]
  IBitmapIconStatics = interface(IInspectable)
  ['{E072D117-E4E7-4E0C-9470-53FF1CE84F67}']
    function get_UriSourceProperty: IDependencyProperty; safecall;
    property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBitmapIconStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_BitmapIcon)]
  IBitmapIconStatics2 = interface(IInspectable)
  ['{9745026B-B742-4A89-A5D7-A0E5FB809AF1}']
    function get_ShowAsMonochromeProperty: IDependencyProperty; safecall;
    property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBorder
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Border)]
  IBorder = interface(IInspectable)
  ['{797C4539-45BD-4633-A044-BFB02EF5170F}']
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_Child: IUIElement; safecall;
    procedure put_Child(value: IUIElement); safecall;
    function get_ChildTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ChildTransitions(value: IVector_1__Animation_ITransition); safecall;
    property Background: IBrush read get_Background write put_Background;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property Child: IUIElement read get_Child write put_Child;
    property ChildTransitions: IVector_1__Animation_ITransition read get_ChildTransitions write put_ChildTransitions;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBorder2
  IBorder2 = interface(IInspectable)
  ['{A1EFBD9D-CB8B-56B5-878D-3A7F43BC9730}']
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_BackgroundTransition: IBrushTransition; safecall;
    procedure put_BackgroundTransition(value: IBrushTransition); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BackgroundTransition: IBrushTransition read get_BackgroundTransition write put_BackgroundTransition;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBorderStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Border)]
  IBorderStatics = interface(IInspectable)
  ['{B81D1639-E911-4FD7-A4C4-B9C7F008B7FC}']
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_ChildTransitionsProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IBorderStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Border)]
  IBorderStatics2 = interface(IInspectable)
  ['{A26D4476-803F-5040-A0F3-E66DB3733166}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Button)]
  IButtonFactory = interface(IInspectable)
  ['{80A13C19-843A-451C-8CF5-44C701B0E216}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IButtonStaticsWithFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Button)]
  IButtonStaticsWithFlyout = interface(IInspectable)
  ['{90143898-A16C-4759-B2F0-A5F7E625169E}']
    function get_FlyoutProperty: IDependencyProperty; safecall;
    property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBase = interface(IInspectable)
  ['{723EEA0B-D12E-430D-A9F0-9BB32BBF9913}']
    function get_Placement: Primitives_FlyoutPlacementMode; safecall;
    procedure put_Placement(value: Primitives_FlyoutPlacementMode); safecall;
    function add_Opened(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_Closed(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    function add_Opening(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opening(token: EventRegistrationToken); safecall;
    procedure ShowAt(placementTarget: IFrameworkElement); safecall;
    procedure Hide; safecall;
    property Placement: Primitives_FlyoutPlacementMode read get_Placement write put_Placement;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IButtonWithFlyout
  IButtonWithFlyout = interface(IInspectable)
  ['{09108F87-DF6C-4180-9B3A-E60845825811}']
    function get_Flyout: Primitives_IFlyoutBase; safecall;
    procedure put_Flyout(value: Primitives_IFlyoutBase); safecall;
    property Flyout: Primitives_IFlyoutBase read get_Flyout write put_Flyout;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePicker2
  ICalendarDatePicker2 = interface(IInspectable)
  ['{B216C159-2411-4A60-A7AA-27416B49481E}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePicker3
  ICalendarDatePicker3 = interface(IInspectable)
  ['{645856C0-DB7B-5E75-85E9-F623E3457EA6}']
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    property Description: IInspectable read get_Description write put_Description;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePickerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePickerFactory = interface(IInspectable)
  ['{107AAD5D-38BE-42AF-A957-FC86A5CF1E9A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarDatePicker; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePickerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePickerStatics = interface(IInspectable)
  ['{39A3D291-AFAB-4B94-8395-BA7B874E3C8C}']
    function get_DateProperty: IDependencyProperty; safecall;
    function get_IsCalendarOpenProperty: IDependencyProperty; safecall;
    function get_DateFormatProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_CalendarViewStyleProperty: IDependencyProperty; safecall;
    function get_MinDateProperty: IDependencyProperty; safecall;
    function get_MaxDateProperty: IDependencyProperty; safecall;
    function get_IsTodayHighlightedProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_FirstDayOfWeekProperty: IDependencyProperty; safecall;
    function get_DayOfWeekFormatProperty: IDependencyProperty; safecall;
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_IsOutOfScopeEnabledProperty: IDependencyProperty; safecall;
    function get_IsGroupLabelVisibleProperty: IDependencyProperty; safecall;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property CalendarViewStyleProperty: IDependencyProperty read get_CalendarViewStyleProperty;
    property DateFormatProperty: IDependencyProperty read get_DateFormatProperty;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsCalendarOpenProperty: IDependencyProperty read get_IsCalendarOpenProperty;
    property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePickerStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePickerStatics2 = interface(IInspectable)
  ['{30206B58-A2F6-4A00-8D13-33C46B6B8E0D}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarDatePickerStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePickerStatics3 = interface(IInspectable)
  ['{B188741D-CF69-568C-9707-BAAAEC2B64DB}']
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarViewDayItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarViewDayItem)]
  ICalendarViewDayItemFactory = interface(IInspectable)
  ['{62112BDC-1D2F-4E44-9BAF-1665749521F2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarViewDayItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarViewDayItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarViewDayItem)]
  ICalendarViewDayItemStatics = interface(IInspectable)
  ['{C3A1DBBF-BD88-488B-B916-D00D69B1735A}']
    function get_IsBlackoutProperty: IDependencyProperty; safecall;
    function get_DateProperty: IDependencyProperty; safecall;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property IsBlackoutProperty: IDependencyProperty read get_IsBlackoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarView)]
  ICalendarViewFactory = interface(IInspectable)
  ['{3D8F82E3-6CC6-423E-8D7C-7014D954DDEF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICalendarViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CalendarView)]
  ICalendarViewStatics = interface(IInspectable)
  ['{7260F1C4-2F5D-41BD-99BB-4571B20B79A8}']
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_DayOfWeekFormatProperty: IDependencyProperty; safecall;
    function get_IsGroupLabelVisibleProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_FirstDayOfWeekProperty: IDependencyProperty; safecall;
    function get_IsOutOfScopeEnabledProperty: IDependencyProperty; safecall;
    function get_IsTodayHighlightedProperty: IDependencyProperty; safecall;
    function get_MaxDateProperty: IDependencyProperty; safecall;
    function get_MinDateProperty: IDependencyProperty; safecall;
    function get_NumberOfWeeksInViewProperty: IDependencyProperty; safecall;
    function get_SelectedDatesProperty: IDependencyProperty; safecall;
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    function get_FocusBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedHoverBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedPressedBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBorderBrushProperty: IDependencyProperty; safecall;
    function get_HoverBorderBrushProperty: IDependencyProperty; safecall;
    function get_PressedBorderBrushProperty: IDependencyProperty; safecall;
    function get_CalendarItemBorderBrushProperty: IDependencyProperty; safecall;
    function get_OutOfScopeBackgroundProperty: IDependencyProperty; safecall;
    function get_CalendarItemBackgroundProperty: IDependencyProperty; safecall;
    function get_PressedForegroundProperty: IDependencyProperty; safecall;
    function get_TodayForegroundProperty: IDependencyProperty; safecall;
    function get_BlackoutForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedForegroundProperty: IDependencyProperty; safecall;
    function get_OutOfScopeForegroundProperty: IDependencyProperty; safecall;
    function get_CalendarItemForegroundProperty: IDependencyProperty; safecall;
    function get_DayItemFontFamilyProperty: IDependencyProperty; safecall;
    function get_DayItemFontSizeProperty: IDependencyProperty; safecall;
    function get_DayItemFontStyleProperty: IDependencyProperty; safecall;
    function get_DayItemFontWeightProperty: IDependencyProperty; safecall;
    function get_TodayFontWeightProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontFamilyProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontSizeProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontStyleProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontWeightProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontFamilyProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontSizeProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontStyleProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontWeightProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty; safecall;
    function get_HorizontalDayItemAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalDayItemAlignmentProperty: IDependencyProperty; safecall;
    function get_HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; safecall;
    function get_CalendarItemBorderThicknessProperty: IDependencyProperty; safecall;
    function get_CalendarViewDayItemStyleProperty: IDependencyProperty; safecall;
    property BlackoutForegroundProperty: IDependencyProperty read get_BlackoutForegroundProperty;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property CalendarItemBackgroundProperty: IDependencyProperty read get_CalendarItemBackgroundProperty;
    property CalendarItemBorderBrushProperty: IDependencyProperty read get_CalendarItemBorderBrushProperty;
    property CalendarItemBorderThicknessProperty: IDependencyProperty read get_CalendarItemBorderThicknessProperty;
    property CalendarItemForegroundProperty: IDependencyProperty read get_CalendarItemForegroundProperty;
    property CalendarViewDayItemStyleProperty: IDependencyProperty read get_CalendarViewDayItemStyleProperty;
    property DayItemFontFamilyProperty: IDependencyProperty read get_DayItemFontFamilyProperty;
    property DayItemFontSizeProperty: IDependencyProperty read get_DayItemFontSizeProperty;
    property DayItemFontStyleProperty: IDependencyProperty read get_DayItemFontStyleProperty;
    property DayItemFontWeightProperty: IDependencyProperty read get_DayItemFontWeightProperty;
    property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    property FirstOfMonthLabelFontFamilyProperty: IDependencyProperty read get_FirstOfMonthLabelFontFamilyProperty;
    property FirstOfMonthLabelFontSizeProperty: IDependencyProperty read get_FirstOfMonthLabelFontSizeProperty;
    property FirstOfMonthLabelFontStyleProperty: IDependencyProperty read get_FirstOfMonthLabelFontStyleProperty;
    property FirstOfMonthLabelFontWeightProperty: IDependencyProperty read get_FirstOfMonthLabelFontWeightProperty;
    property FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontFamilyProperty;
    property FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontSizeProperty;
    property FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontStyleProperty;
    property FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontWeightProperty;
    property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    property HorizontalDayItemAlignmentProperty: IDependencyProperty read get_HorizontalDayItemAlignmentProperty;
    property HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_HorizontalFirstOfMonthLabelAlignmentProperty;
    property HoverBorderBrushProperty: IDependencyProperty read get_HoverBorderBrushProperty;
    property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    property MonthYearItemFontFamilyProperty: IDependencyProperty read get_MonthYearItemFontFamilyProperty;
    property MonthYearItemFontSizeProperty: IDependencyProperty read get_MonthYearItemFontSizeProperty;
    property MonthYearItemFontStyleProperty: IDependencyProperty read get_MonthYearItemFontStyleProperty;
    property MonthYearItemFontWeightProperty: IDependencyProperty read get_MonthYearItemFontWeightProperty;
    property NumberOfWeeksInViewProperty: IDependencyProperty read get_NumberOfWeeksInViewProperty;
    property OutOfScopeBackgroundProperty: IDependencyProperty read get_OutOfScopeBackgroundProperty;
    property OutOfScopeForegroundProperty: IDependencyProperty read get_OutOfScopeForegroundProperty;
    property PressedBorderBrushProperty: IDependencyProperty read get_PressedBorderBrushProperty;
    property PressedForegroundProperty: IDependencyProperty read get_PressedForegroundProperty;
    property SelectedBorderBrushProperty: IDependencyProperty read get_SelectedBorderBrushProperty;
    property SelectedDatesProperty: IDependencyProperty read get_SelectedDatesProperty;
    property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    property SelectedHoverBorderBrushProperty: IDependencyProperty read get_SelectedHoverBorderBrushProperty;
    property SelectedPressedBorderBrushProperty: IDependencyProperty read get_SelectedPressedBorderBrushProperty;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    property TodayFontWeightProperty: IDependencyProperty read get_TodayFontWeightProperty;
    property TodayForegroundProperty: IDependencyProperty read get_TodayForegroundProperty;
    property VerticalDayItemAlignmentProperty: IDependencyProperty read get_VerticalDayItemAlignmentProperty;
    property VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_VerticalFirstOfMonthLabelAlignmentProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs
  ICandidateWindowBoundsChangedEventArgs = interface(IInspectable)
  ['{8A946458-83B0-4C32-9450-5169A5838B55}']
    function get_Bounds: TRectF; safecall;
    property Bounds: TRectF read get_Bounds;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICanvas
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Canvas)]
  ICanvas = interface(IInspectable)
  ['{79190E19-CD38-4823-AEAE-64A77132F519}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICanvasFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Canvas)]
  ICanvasFactory = interface(IInspectable)
  ['{1B328BD1-B400-4A8E-943B-5AD2C45BE0DF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICanvas; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICanvasStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Canvas)]
  ICanvasStatics = interface(IInspectable)
  ['{40CE5C46-2962-446F-AAFB-4CDC486939C9}']
    function get_LeftProperty: IDependencyProperty; safecall;
    function GetLeft(element: IUIElement): Double; safecall;
    procedure SetLeft(element: IUIElement; length: Double); safecall;
    function get_TopProperty: IDependencyProperty; safecall;
    function GetTop(element: IUIElement): Double; safecall;
    procedure SetTop(element: IUIElement; length: Double); safecall;
    function get_ZIndexProperty: IDependencyProperty; safecall;
    function GetZIndex(element: IUIElement): Integer; safecall;
    procedure SetZIndex(element: IUIElement; value: Integer); safecall;
    property LeftProperty: IDependencyProperty read get_LeftProperty;
    property TopProperty: IDependencyProperty read get_TopProperty;
    property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICaptureElementStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CaptureElement)]
  ICaptureElementStatics = interface(IInspectable)
  ['{1E438DED-7DA6-409E-806E-305AE4AD9B3F}']
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICheckBoxFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CheckBox)]
  ICheckBoxFactory = interface(IInspectable)
  ['{4FA6AABB-3F4B-4301-BE07-1172EA61EEFB}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICheckBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs)]
  IChoosingGroupHeaderContainerEventArgs = interface(IInspectable)
  ['{67DB44D6-D201-4D72-BEAC-5E8E58AFD8C7}']
    function get_GroupHeaderContainer: IListViewBaseHeaderItem; safecall;
    procedure put_GroupHeaderContainer(value: IListViewBaseHeaderItem); safecall;
    function get_GroupIndex: Integer; safecall;
    function get_Group: IInspectable; safecall;
    property Group: IInspectable read get_Group;
    property GroupHeaderContainer: IListViewBaseHeaderItem read get_GroupHeaderContainer write put_GroupHeaderContainer;
    property GroupIndex: Integer read get_GroupIndex;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ISelectorItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_SelectorItem)]
  Primitives_ISelectorItem = interface(IInspectable)
  ['{541C8D6C-0283-4581-B945-2A64C28A0646}']
    function get_IsSelected: Boolean; safecall;
    procedure put_IsSelected(value: Boolean); safecall;
    property IsSelected: Boolean read get_IsSelected write put_IsSelected;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ChoosingItemContainerEventArgs)]
  IChoosingItemContainerEventArgs = interface(IInspectable)
  ['{9BB43BCE-AE67-4A80-8363-E3FE1B244F2C}']
    function get_ItemIndex: Integer; safecall;
    function get_Item: IInspectable; safecall;
    function get_ItemContainer: Primitives_ISelectorItem; safecall;
    procedure put_ItemContainer(value: Primitives_ISelectorItem); safecall;
    function get_IsContainerPrepared: Boolean; safecall;
    procedure put_IsContainerPrepared(value: Boolean); safecall;
    property IsContainerPrepared: Boolean read get_IsContainerPrepared write put_IsContainerPrepared;
    property Item: IInspectable read get_Item;
    property ItemContainer: Primitives_ISelectorItem read get_ItemContainer write put_ItemContainer;
    property ItemIndex: Integer read get_ItemIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IColorPicker,Windows.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__IColorPicker__IColorChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{E162D9C5-40B6-5662-82B0-4D2404D3716B}']
    procedure Invoke(sender: IColorPicker; args: IColorChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IColorPicker,Windows.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__IColorPicker__IColorChangedEventArgs = interface(TypedEventHandler_2__IColorPicker__IColorChangedEventArgs_Delegate_Base)
  ['{938C2544-38E5-538B-8CB5-17AB7816DBEC}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IColorPicker
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ColorPicker)]
  IColorPicker = interface(IInspectable)
  ['{6232E371-5C64-43CB-8B35-7F82DDE36740}']
    function get_Color: Color; safecall;
    procedure put_Color(value: Color); safecall;
    function get_PreviousColor: IReference_1__Color; safecall;
    procedure put_PreviousColor(value: IReference_1__Color); safecall;
    function get_IsAlphaEnabled: Boolean; safecall;
    procedure put_IsAlphaEnabled(value: Boolean); safecall;
    function get_IsColorSpectrumVisible: Boolean; safecall;
    procedure put_IsColorSpectrumVisible(value: Boolean); safecall;
    function get_IsColorPreviewVisible: Boolean; safecall;
    procedure put_IsColorPreviewVisible(value: Boolean); safecall;
    function get_IsColorSliderVisible: Boolean; safecall;
    procedure put_IsColorSliderVisible(value: Boolean); safecall;
    function get_IsAlphaSliderVisible: Boolean; safecall;
    procedure put_IsAlphaSliderVisible(value: Boolean); safecall;
    function get_IsMoreButtonVisible: Boolean; safecall;
    procedure put_IsMoreButtonVisible(value: Boolean); safecall;
    function get_IsColorChannelTextInputVisible: Boolean; safecall;
    procedure put_IsColorChannelTextInputVisible(value: Boolean); safecall;
    function get_IsAlphaTextInputVisible: Boolean; safecall;
    procedure put_IsAlphaTextInputVisible(value: Boolean); safecall;
    function get_IsHexInputVisible: Boolean; safecall;
    procedure put_IsHexInputVisible(value: Boolean); safecall;
    function get_MinHue: Integer; safecall;
    procedure put_MinHue(value: Integer); safecall;
    function get_MaxHue: Integer; safecall;
    procedure put_MaxHue(value: Integer); safecall;
    function get_MinSaturation: Integer; safecall;
    procedure put_MinSaturation(value: Integer); safecall;
    function get_MaxSaturation: Integer; safecall;
    procedure put_MaxSaturation(value: Integer); safecall;
    function get_MinValue: Integer; safecall;
    procedure put_MinValue(value: Integer); safecall;
    function get_MaxValue: Integer; safecall;
    procedure put_MaxValue(value: Integer); safecall;
    function get_ColorSpectrumShape: ColorSpectrumShape; safecall;
    procedure put_ColorSpectrumShape(value: ColorSpectrumShape); safecall;
    function get_ColorSpectrumComponents: ColorSpectrumComponents; safecall;
    procedure put_ColorSpectrumComponents(value: ColorSpectrumComponents); safecall;
    function add_ColorChanged(handler: TypedEventHandler_2__IColorPicker__IColorChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ColorChanged(token: EventRegistrationToken); safecall;
    property Color_: Color read get_Color write put_Color;
    property ColorSpectrumComponents_: ColorSpectrumComponents read get_ColorSpectrumComponents write put_ColorSpectrumComponents;
    property ColorSpectrumShape_: ColorSpectrumShape read get_ColorSpectrumShape write put_ColorSpectrumShape;
    property IsAlphaEnabled: Boolean read get_IsAlphaEnabled write put_IsAlphaEnabled;
    property IsAlphaSliderVisible: Boolean read get_IsAlphaSliderVisible write put_IsAlphaSliderVisible;
    property IsAlphaTextInputVisible: Boolean read get_IsAlphaTextInputVisible write put_IsAlphaTextInputVisible;
    property IsColorChannelTextInputVisible: Boolean read get_IsColorChannelTextInputVisible write put_IsColorChannelTextInputVisible;
    property IsColorPreviewVisible: Boolean read get_IsColorPreviewVisible write put_IsColorPreviewVisible;
    property IsColorSliderVisible: Boolean read get_IsColorSliderVisible write put_IsColorSliderVisible;
    property IsColorSpectrumVisible: Boolean read get_IsColorSpectrumVisible write put_IsColorSpectrumVisible;
    property IsHexInputVisible: Boolean read get_IsHexInputVisible write put_IsHexInputVisible;
    property IsMoreButtonVisible: Boolean read get_IsMoreButtonVisible write put_IsMoreButtonVisible;
    property MaxHue: Integer read get_MaxHue write put_MaxHue;
    property MaxSaturation: Integer read get_MaxSaturation write put_MaxSaturation;
    property MaxValue: Integer read get_MaxValue write put_MaxValue;
    property MinHue: Integer read get_MinHue write put_MinHue;
    property MinSaturation: Integer read get_MinSaturation write put_MinSaturation;
    property MinValue: Integer read get_MinValue write put_MinValue;
    property PreviousColor: IReference_1__Color read get_PreviousColor write put_PreviousColor;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IColorPickerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ColorPicker)]
  IColorPickerFactory = interface(IInspectable)
  ['{ABAE07FF-AECF-481D-9204-201C3894CD1B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IColorPicker; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IColorPickerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ColorPicker)]
  IColorPickerStatics = interface(IInspectable)
  ['{67CA9BE7-1574-451A-B6DF-FE57D9D07B46}']
    function get_ColorProperty: IDependencyProperty; safecall;
    function get_PreviousColorProperty: IDependencyProperty; safecall;
    function get_IsAlphaEnabledProperty: IDependencyProperty; safecall;
    function get_IsColorSpectrumVisibleProperty: IDependencyProperty; safecall;
    function get_IsColorPreviewVisibleProperty: IDependencyProperty; safecall;
    function get_IsColorSliderVisibleProperty: IDependencyProperty; safecall;
    function get_IsAlphaSliderVisibleProperty: IDependencyProperty; safecall;
    function get_IsMoreButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsColorChannelTextInputVisibleProperty: IDependencyProperty; safecall;
    function get_IsAlphaTextInputVisibleProperty: IDependencyProperty; safecall;
    function get_IsHexInputVisibleProperty: IDependencyProperty; safecall;
    function get_MinHueProperty: IDependencyProperty; safecall;
    function get_MaxHueProperty: IDependencyProperty; safecall;
    function get_MinSaturationProperty: IDependencyProperty; safecall;
    function get_MaxSaturationProperty: IDependencyProperty; safecall;
    function get_MinValueProperty: IDependencyProperty; safecall;
    function get_MaxValueProperty: IDependencyProperty; safecall;
    function get_ColorSpectrumShapeProperty: IDependencyProperty; safecall;
    function get_ColorSpectrumComponentsProperty: IDependencyProperty; safecall;
    property ColorProperty: IDependencyProperty read get_ColorProperty;
    property ColorSpectrumComponentsProperty: IDependencyProperty read get_ColorSpectrumComponentsProperty;
    property ColorSpectrumShapeProperty: IDependencyProperty read get_ColorSpectrumShapeProperty;
    property IsAlphaEnabledProperty: IDependencyProperty read get_IsAlphaEnabledProperty;
    property IsAlphaSliderVisibleProperty: IDependencyProperty read get_IsAlphaSliderVisibleProperty;
    property IsAlphaTextInputVisibleProperty: IDependencyProperty read get_IsAlphaTextInputVisibleProperty;
    property IsColorChannelTextInputVisibleProperty: IDependencyProperty read get_IsColorChannelTextInputVisibleProperty;
    property IsColorPreviewVisibleProperty: IDependencyProperty read get_IsColorPreviewVisibleProperty;
    property IsColorSliderVisibleProperty: IDependencyProperty read get_IsColorSliderVisibleProperty;
    property IsColorSpectrumVisibleProperty: IDependencyProperty read get_IsColorSpectrumVisibleProperty;
    property IsHexInputVisibleProperty: IDependencyProperty read get_IsHexInputVisibleProperty;
    property IsMoreButtonVisibleProperty: IDependencyProperty read get_IsMoreButtonVisibleProperty;
    property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    property PreviousColorProperty: IDependencyProperty read get_PreviousColorProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IColumnDefinition
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ColumnDefinition)]
  IColumnDefinition = interface(IInspectable)
  ['{F7F1B229-F024-467F-970A-7E705615DB7B}']
    function get_Width: GridLength; safecall;
    procedure put_Width(value: GridLength); safecall;
    function get_MaxWidth: Double; safecall;
    procedure put_MaxWidth(value: Double); safecall;
    function get_MinWidth: Double; safecall;
    procedure put_MinWidth(value: Double); safecall;
    function get_ActualWidth: Double; safecall;
    property ActualWidth: Double read get_ActualWidth;
    property MaxWidth: Double read get_MaxWidth write put_MaxWidth;
    property MinWidth: Double read get_MinWidth write put_MinWidth;
    property Width: GridLength read get_Width write put_Width;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IColumnDefinitionStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ColumnDefinition)]
  IColumnDefinitionStatics = interface(IInspectable)
  ['{06B0D728-D044-40C6-942E-AE60EAC74851}']
    function get_WidthProperty: IDependencyProperty; safecall;
    function get_MaxWidthProperty: IDependencyProperty; safecall;
    function get_MinWidthProperty: IDependencyProperty; safecall;
    property MaxWidthProperty: IDependencyProperty read get_MaxWidthProperty;
    property MinWidthProperty: IDependencyProperty read get_MinWidthProperty;
    property WidthProperty: IDependencyProperty read get_WidthProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBox2
  IComboBox2 = interface(IInspectable)
  ['{EA0CBF91-CA36-4FAD-972A-2E53A6718B9F}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBox3
  IComboBox3 = interface(IInspectable)
  ['{52400A63-476C-4BB6-B781-019324D3FED9}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    function get_IsTextSearchEnabled: Boolean; safecall;
    procedure put_IsTextSearchEnabled(value: Boolean); safecall;
    property IsTextSearchEnabled: Boolean read get_IsTextSearchEnabled write put_IsTextSearchEnabled;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBox4
  IComboBox4 = interface(IInspectable)
  ['{B7974F49-B05C-47F9-9AAF-D6F9187BE5FD}']
    function get_SelectionChangedTrigger: ComboBoxSelectionChangedTrigger; safecall;
    procedure put_SelectionChangedTrigger(value: ComboBoxSelectionChangedTrigger); safecall;
    property SelectionChangedTrigger: ComboBoxSelectionChangedTrigger read get_SelectionChangedTrigger write put_SelectionChangedTrigger;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBox5
  IComboBox5 = interface(IInspectable)
  ['{AB79D646-800A-4A28-969B-34BB8FB458CF}']
    function get_PlaceholderForeground: IBrush; safecall;
    procedure put_PlaceholderForeground(value: IBrush); safecall;
    property PlaceholderForeground: IBrush read get_PlaceholderForeground write put_PlaceholderForeground;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs
  IComboBoxTextSubmittedEventArgs = interface(IInspectable)
  ['{CB698CBB-6879-558E-AF82-DF1D08F62AFA}']
    function get_Text: HSTRING; safecall;
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
    property Text: HSTRING read get_Text;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IComboBox,Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs>
  TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs = interface(IUnknown)
  ['{2F27B43A-04BF-5FE7-B24A-CFCA2F4B7C42}']
    procedure Invoke(sender: IComboBox; args: IComboBoxTextSubmittedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBox6
  IComboBox6 = interface(IInspectable)
  ['{61AAD6A5-81FB-5F87-BAE3-369FBE2EA1F3}']
    procedure put_IsEditable(value: Boolean); safecall;
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_TextBoxStyle: IStyle; safecall;
    procedure put_TextBoxStyle(value: IStyle); safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function add_TextSubmitted(handler: TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextSubmitted(token: EventRegistrationToken); safecall;
    property Description: IInspectable read get_Description write put_Description;
    property IsEditable: Boolean write put_IsEditable;
    property Text: HSTRING read get_Text write put_Text;
    property TextBoxStyle: IStyle read get_TextBoxStyle write put_TextBoxStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBoxFactory = interface(IInspectable)
  ['{AC0D0444-A65B-4ABD-86DF-3016049EFEDC}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBoxItem)]
  IComboBoxItemFactory = interface(IInspectable)
  ['{8FFFE867-D94C-4E87-8FC4-6EBCD63C5AC2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBoxItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxOverrides
  IComboBoxOverrides = interface(IInspectable)
  ['{4F016541-BCFE-4A22-8932-C914981C2240}']
    procedure OnDropDownClosed(e: IInspectable); safecall;
    procedure OnDropDownOpened(e: IInspectable); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBoxStatics = interface(IInspectable)
  ['{3E14C9B1-D15B-4DC9-8110-CF3A117B96E7}']
    function get_IsDropDownOpenProperty: IDependencyProperty; safecall;
    function get_MaxDropDownHeightProperty: IDependencyProperty; safecall;
    property IsDropDownOpenProperty: IDependencyProperty read get_IsDropDownOpenProperty;
    property MaxDropDownHeightProperty: IDependencyProperty read get_MaxDropDownHeightProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBoxStatics2 = interface(IInspectable)
  ['{93988A11-402C-4B13-96D1-7220266B9220}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBoxStatics3 = interface(IInspectable)
  ['{949E140F-CE7F-4E41-BDC5-D1D3388AD0A6}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_IsTextSearchEnabledProperty: IDependencyProperty; safecall;
    property IsTextSearchEnabledProperty: IDependencyProperty read get_IsTextSearchEnabledProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBoxStatics4 = interface(IInspectable)
  ['{D9F58358-F7B0-46CE-8061-AD83EC2F2DD4}']
    function get_SelectionChangedTriggerProperty: IDependencyProperty; safecall;
    property SelectionChangedTriggerProperty: IDependencyProperty read get_SelectionChangedTriggerProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBoxStatics5 = interface(IInspectable)
  ['{B802CEF1-A264-444A-9A61-AA8867B7A63C}']
    function get_PlaceholderForegroundProperty: IDependencyProperty; safecall;
    property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IComboBoxStatics6
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ComboBox)]
  IComboBoxStatics6 = interface(IInspectable)
  ['{516C88E0-EC6B-54AC-8C57-5EC080EE05C8}']
    function get_IsEditableProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_TextBoxStyleProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property IsEditableProperty: IDependencyProperty read get_IsEditableProperty;
    property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarElement
  ICommandBarElement = interface(IInspectable)
  ['{67918E1B-F2D5-44D1-8B84-92B87F80A350}']
    function get_IsCompact: Boolean; safecall;
    procedure put_IsCompact(value: Boolean); safecall;
    property IsCompact: Boolean read get_IsCompact write put_IsCompact;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IIterator_1__ICommandBarElement_Base = interface(IInspectable)
  ['{CDDB0380-E9D7-5264-AB5C-D72B642874C9}']
    function get_Current: ICommandBarElement; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PICommandBarElement): Cardinal; safecall;
    property Current: ICommandBarElement read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IIterator_1__ICommandBarElement = interface(IIterator_1__ICommandBarElement_Base)
  ['{CDDB0380-E9D7-5264-AB5C-D72B642874C9}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IIterable_1__ICommandBarElement_Base = interface(IInspectable)
  ['{D4C5A8E7-0D5E-5922-A7B4-59B5E634D335}']
    function First: IIterator_1__ICommandBarElement; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IIterable_1__ICommandBarElement = interface(IIterable_1__ICommandBarElement_Base)
  ['{D4C5A8E7-0D5E-5922-A7B4-59B5E634D335}']
  end;

  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IVectorView_1__ICommandBarElement = interface(IInspectable)
  ['{A38E89EC-F1A4-5D7B-97C3-8AEFB64A5F43}']
    function GetAt(index: Cardinal): ICommandBarElement; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: ICommandBarElement; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PICommandBarElement): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IVector_1__ICommandBarElement_Base = interface(IInspectable)
  ['{18AD7C66-A127-550F-8325-8CF1789176C1}']
    function GetAt(index: Cardinal): ICommandBarElement; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__ICommandBarElement; safecall;
    function IndexOf(value: ICommandBarElement; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: ICommandBarElement); safecall;
    procedure InsertAt(index: Cardinal; value: ICommandBarElement); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: ICommandBarElement); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PICommandBarElement): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PICommandBarElement); safecall;
    property Size: Cardinal read get_Size;
  end;
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IVector_1__ICommandBarElement = interface(IVector_1__ICommandBarElement_Base)
  ['{18AD7C66-A127-550F-8325-8CF1789176C1}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  VectorChangedEventHandler_1__ICommandBarElement_Delegate_Base = interface(IUnknown)
  ['{20B884E1-C1DA-5332-B801-4F1C21744AC8}']
    procedure Invoke(sender: IObservableVector_1__ICommandBarElement; event: IVectorChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  VectorChangedEventHandler_1__ICommandBarElement = interface(VectorChangedEventHandler_1__ICommandBarElement_Delegate_Base)
  ['{20B884E1-C1DA-5332-B801-4F1C21744AC8}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.ICommandBarElement>
  IObservableVector_1__ICommandBarElement = interface(IInspectable)
  ['{D5644006-717D-512D-8785-B48C17E73468}']
    function add_VectorChanged(vhnd: VectorChangedEventHandler_1__ICommandBarElement): EventRegistrationToken; safecall;
    procedure remove_VectorChanged(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBar
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBar)]
  ICommandBar = interface(IInspectable)
  ['{98BC4280-4A3D-4CEE-BD07-22CE94C5AF76}']
    function get_PrimaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    function get_SecondaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    property PrimaryCommands: IObservableVector_1__ICommandBarElement read get_PrimaryCommands;
    property SecondaryCommands: IObservableVector_1__ICommandBarElement read get_SecondaryCommands;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings
  Primitives_ICommandBarTemplateSettings = interface(IInspectable)
  ['{61C8F92C-05AA-414A-A2AE-482C5A46C08E}']
    function get_ContentHeight: Double; safecall;
    function get_OverflowContentClipRect: TRectF; safecall;
    function get_OverflowContentMinWidth: Double; safecall;
    function get_OverflowContentMaxHeight: Double; safecall;
    function get_OverflowContentHorizontalOffset: Double; safecall;
    function get_OverflowContentHeight: Double; safecall;
    function get_NegativeOverflowContentHeight: Double; safecall;
    property ContentHeight: Double read get_ContentHeight;
    property NegativeOverflowContentHeight: Double read get_NegativeOverflowContentHeight;
    property OverflowContentClipRect: TRectF read get_OverflowContentClipRect;
    property OverflowContentHeight: Double read get_OverflowContentHeight;
    property OverflowContentHorizontalOffset: Double read get_OverflowContentHorizontalOffset;
    property OverflowContentMaxHeight: Double read get_OverflowContentMaxHeight;
    property OverflowContentMinWidth: Double read get_OverflowContentMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBar2
  ICommandBar2 = interface(IInspectable)
  ['{57662F58-5B32-475D-BE64-4CA36E7B97D4}']
    function get_CommandBarOverflowPresenterStyle: IStyle; safecall;
    procedure put_CommandBarOverflowPresenterStyle(value: IStyle); safecall;
    function get_CommandBarTemplateSettings: Primitives_ICommandBarTemplateSettings; safecall;
    property CommandBarOverflowPresenterStyle: IStyle read get_CommandBarOverflowPresenterStyle write put_CommandBarOverflowPresenterStyle;
    property CommandBarTemplateSettings: Primitives_ICommandBarTemplateSettings read get_CommandBarTemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DynamicOverflowItemsChangingEventArgs)]
  IDynamicOverflowItemsChangingEventArgs = interface(IInspectable)
  ['{C93C736F-6F6E-4E43-90D9-9B46A0D88B9F}']
    function get_Action: CommandBarDynamicOverflowAction; safecall;
    property Action: CommandBarDynamicOverflowAction read get_Action;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICommandBar,Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs>
  TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{758990CD-A4A5-5C0A-ACA5-64A629AFDBCC}']
    procedure Invoke(sender: ICommandBar; args: IDynamicOverflowItemsChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ICommandBar,Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs>
  TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs = interface(TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs_Delegate_Base)
  ['{7F244D0A-09EF-54E6-97E7-DCA86ADE7EEB}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBar3
  ICommandBar3 = interface(IInspectable)
  ['{40EBBC23-2A79-48B3-9A67-649B852D8589}']
    function get_DefaultLabelPosition: CommandBarDefaultLabelPosition; safecall;
    procedure put_DefaultLabelPosition(value: CommandBarDefaultLabelPosition); safecall;
    function get_OverflowButtonVisibility: CommandBarOverflowButtonVisibility; safecall;
    procedure put_OverflowButtonVisibility(value: CommandBarOverflowButtonVisibility); safecall;
    function get_IsDynamicOverflowEnabled: Boolean; safecall;
    procedure put_IsDynamicOverflowEnabled(value: Boolean); safecall;
    function add_DynamicOverflowItemsChanging(handler: TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_DynamicOverflowItemsChanging(token: EventRegistrationToken); safecall;
    property DefaultLabelPosition: CommandBarDefaultLabelPosition read get_DefaultLabelPosition write put_DefaultLabelPosition;
    property IsDynamicOverflowEnabled: Boolean read get_IsDynamicOverflowEnabled write put_IsDynamicOverflowEnabled;
    property OverflowButtonVisibility: CommandBarOverflowButtonVisibility read get_OverflowButtonVisibility write put_OverflowButtonVisibility;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarElement2
  ICommandBarElement2 = interface(IInspectable)
  ['{A9BF1236-4402-4688-B987-9D2B9B7BF2BD}']
    function get_IsInOverflow: Boolean; safecall;
    function get_DynamicOverflowOrder: Integer; safecall;
    procedure put_DynamicOverflowOrder(value: Integer); safecall;
    property DynamicOverflowOrder: Integer read get_DynamicOverflowOrder write put_DynamicOverflowOrder;
    property IsInOverflow: Boolean read get_IsInOverflow;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBar)]
  ICommandBarFactory = interface(IInspectable)
  ['{67BDEB44-20E1-4177-AD44-F617B374E8E8}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBarFlyout)]
  ICommandBarFlyout = interface(IInspectable)
  ['{FECD2C4D-F16A-58CD-8ACA-DB0F046F25C3}']
    function get_PrimaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    function get_SecondaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    property PrimaryCommands: IObservableVector_1__ICommandBarElement read get_PrimaryCommands;
    property SecondaryCommands: IObservableVector_1__ICommandBarElement read get_SecondaryCommands;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarFlyoutFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBarFlyout)]
  ICommandBarFlyoutFactory = interface(IInspectable)
  ['{DD6441B3-6DF1-593D-B80C-DAF5C1DAEE41}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarOverflowPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBarOverflowPresenter)]
  ICommandBarOverflowPresenter = interface(IInspectable)
  ['{6E7A9427-58EF-4366-A017-18C193D56B14}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBarOverflowPresenter)]
  ICommandBarOverflowPresenterFactory = interface(IInspectable)
  ['{8323F774-5AAA-4049-B78F-218C6A19C37E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarOverflowPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBar)]
  ICommandBarStatics = interface(IInspectable)
  ['{5BD981EA-E278-409C-B522-F946CA253B44}']
    function get_PrimaryCommandsProperty: IDependencyProperty; safecall;
    function get_SecondaryCommandsProperty: IDependencyProperty; safecall;
    property PrimaryCommandsProperty: IDependencyProperty read get_PrimaryCommandsProperty;
    property SecondaryCommandsProperty: IDependencyProperty read get_SecondaryCommandsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBar)]
  ICommandBarStatics2 = interface(IInspectable)
  ['{3D9EC8E3-51A9-4E34-956C-7081D06F26F8}']
    function get_CommandBarOverflowPresenterStyleProperty: IDependencyProperty; safecall;
    property CommandBarOverflowPresenterStyleProperty: IDependencyProperty read get_CommandBarOverflowPresenterStyleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ICommandBarStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_CommandBar)]
  ICommandBarStatics3 = interface(IInspectable)
  ['{B45A24A4-8AF1-4843-B319-E03FC45AB726}']
    function get_DefaultLabelPositionProperty: IDependencyProperty; safecall;
    function get_OverflowButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_IsDynamicOverflowEnabledProperty: IDependencyProperty; safecall;
    property DefaultLabelPositionProperty: IDependencyProperty read get_DefaultLabelPositionProperty;
    property IsDynamicOverflowEnabledProperty: IDependencyProperty read get_IsDynamicOverflowEnabledProperty;
    property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs>
  TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{D01FB083-5E61-5C12-A18F-62947158FAA8}']
    procedure Invoke(sender: IListViewBase; args: IContainerContentChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs>
  TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs = interface(TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs_Delegate_Base)
  ['{A8032D8E-F1A2-502A-AC96-6A80D7DDE272}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContainerContentChangingEventArgs)]
  IContainerContentChangingEventArgs = interface(IInspectable)
  ['{07DEEAA7-018F-4DDA-B399-FD4E13A31BEA}']
    function get_ItemContainer: Primitives_ISelectorItem; safecall;
    function get_InRecycleQueue: Boolean; safecall;
    function get_ItemIndex: Integer; safecall;
    function get_Item: IInspectable; safecall;
    function get_Phase: Cardinal; safecall;
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    procedure RegisterUpdateCallback(callback: TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs); overload; safecall;
    procedure RegisterUpdateCallback(callbackPhase: Cardinal; callback: TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs); overload; safecall;
    property Handled: Boolean read get_Handled write put_Handled;
    property InRecycleQueue: Boolean read get_InRecycleQueue;
    property Item: IInspectable read get_Item;
    property ItemContainer: Primitives_ISelectorItem read get_ItemContainer;
    property ItemIndex: Integer read get_ItemIndex;
    property Phase: Cardinal read get_Phase;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentControl
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentControl)]
  IContentControl = interface(IInspectable)
  ['{A26DD1DC-CD44-435C-BE94-01D6241C231C}']
    function get_Content: IInspectable; safecall;
    procedure put_Content(value: IInspectable); safecall;
    function get_ContentTemplate: IDataTemplate; safecall;
    procedure put_ContentTemplate(value: IDataTemplate); safecall;
    function get_ContentTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ContentTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ContentTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ContentTransitions(value: IVector_1__Animation_ITransition); safecall;
    property Content: IInspectable read get_Content write put_Content;
    property ContentTemplate: IDataTemplate read get_ContentTemplate write put_ContentTemplate;
    property ContentTemplateSelector: IDataTemplateSelector read get_ContentTemplateSelector write put_ContentTemplateSelector;
    property ContentTransitions: IVector_1__Animation_ITransition read get_ContentTransitions write put_ContentTransitions;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentControl2
  IContentControl2 = interface(IInspectable)
  ['{652C208C-8CCF-4399-BD3E-5A015AA1BC03}']
    function get_ContentTemplateRoot: IUIElement; safecall;
    property ContentTemplateRoot: IUIElement read get_ContentTemplateRoot;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentControlFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentControl)]
  IContentControlFactory = interface(IInspectable)
  ['{AB017B19-196E-4ED5-A27F-55C58FB1673F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentControlOverrides
  IContentControlOverrides = interface(IInspectable)
  ['{5F4C0B10-E38E-4B5D-BE1A-5ED04246A635}']
    procedure OnContentChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
    procedure OnContentTemplateChanged(oldContentTemplate: IDataTemplate; newContentTemplate: IDataTemplate); safecall;
    procedure OnContentTemplateSelectorChanged(oldContentTemplateSelector: IDataTemplateSelector; newContentTemplateSelector: IDataTemplateSelector); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentControl)]
  IContentControlStatics = interface(IInspectable)
  ['{116982A4-5CF5-4C05-A53F-15E4876C85EC}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_ContentTemplateProperty: IDependencyProperty; safecall;
    function get_ContentTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ContentTransitionsProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogClosingDeferral
  IContentDialogClosingDeferral = interface(IInspectable)
  ['{215D4D11-7E30-4CB9-A710-5A4F9CCA8B42}']
    procedure Complete; safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs
  IContentDialogClosingEventArgs = interface(IInspectable)
  ['{DB3C1C34-3BBF-47D4-BE4F-C9EC115918B9}']
    function get_Result: ContentDialogResult; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    function GetDeferral: IContentDialogClosingDeferral; safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property Result: ContentDialogResult read get_Result;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs_Delegate_Base = interface(IUnknown)
  ['{30491CFE-FFF8-5C91-B387-CE8137713918}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogClosingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs_Delegate_Base)
  ['{EEE12174-C354-54F0-A0EA-4FCD9DC856E2}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs
  IContentDialogClosedEventArgs = interface(IInspectable)
  ['{905522EF-2CBA-4AF8-B666-CC36C22732FB}']
    function get_Result: ContentDialogResult; safecall;
    property Result: ContentDialogResult read get_Result;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs_Delegate_Base = interface(IUnknown)
  ['{B040EB41-B4F5-5D9F-83C7-9C939C48C890}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogClosedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs_Delegate_Base)
  ['{62089E27-3C31-58BE-B68F-87A8E6CFAF6A}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs
  IContentDialogOpenedEventArgs = interface(IInspectable)
  ['{0966B315-5F59-4999-9E3E-374C0F174B04}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs_Delegate_Base = interface(IUnknown)
  ['{B79B774B-7C7F-580C-8914-E9CB2642432E}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogOpenedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs_Delegate_Base)
  ['{C926BD3C-5DE0-56C3-B055-DDB06F7DF6E8}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogButtonClickDeferral
  IContentDialogButtonClickDeferral = interface(IInspectable)
  ['{BD0D3637-19CE-4946-8E77-BD03FE8EBE03}']
    procedure Complete; safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs
  IContentDialogButtonClickEventArgs = interface(IInspectable)
  ['{5F34C205-8AFA-4CF2-8CA0-264D73BED63D}']
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    function GetDeferral: IContentDialogButtonClickDeferral; safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs_Delegate_Base = interface(IUnknown)
  ['{4B00DE1A-FFED-57B4-BD6E-8C7AAB2C53FF}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogButtonClickEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IContentDialog,Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs_Delegate_Base)
  ['{7C484231-6021-55AC-B59C-8CA20F0D25EA}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.ContentDialogResult>
  AsyncOperationCompletedHandler_1__ContentDialogResult_Delegate_Base = interface(IUnknown)
  ['{45C7A306-E330-54D6-A9BA-61C91F93F53B}']
    procedure Invoke(asyncInfo: IAsyncOperation_1__ContentDialogResult; asyncStatus: AsyncStatus); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.ContentDialogResult>
  AsyncOperationCompletedHandler_1__ContentDialogResult = interface(AsyncOperationCompletedHandler_1__ContentDialogResult_Delegate_Base)
  ['{E08EC1E0-E4AE-55A1-9A15-180859E0FA0F}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.ContentDialogResult>
  IAsyncOperation_1__ContentDialogResult_Base = interface(IInspectable)
  ['{1F23BDD1-06DC-5BE9-9A60-0B4D94D4D72C}']
    procedure put_Completed(handler: AsyncOperationCompletedHandler_1__ContentDialogResult); safecall;
    function get_Completed: AsyncOperationCompletedHandler_1__ContentDialogResult; safecall;
    function GetResults: ContentDialogResult; safecall;
    property Completed: AsyncOperationCompletedHandler_1__ContentDialogResult read get_Completed write put_Completed;
  end;
  // UsedAPI Interface
  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.ContentDialogResult>
  IAsyncOperation_1__ContentDialogResult = interface(IAsyncOperation_1__ContentDialogResult_Base)
  ['{CA76FC11-A2C1-513E-B837-B4E39C42DC6B}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialog
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentDialog)]
  IContentDialog = interface(IInspectable)
  ['{38DC4404-D24E-40D8-9415-349464C1AFDC}']
    function get_Title: IInspectable; safecall;
    procedure put_Title(value: IInspectable); safecall;
    function get_TitleTemplate: IDataTemplate; safecall;
    procedure put_TitleTemplate(value: IDataTemplate); safecall;
    function get_FullSizeDesired: Boolean; safecall;
    procedure put_FullSizeDesired(value: Boolean); safecall;
    function get_PrimaryButtonText: HSTRING; safecall;
    procedure put_PrimaryButtonText(value: HSTRING); safecall;
    function get_SecondaryButtonText: HSTRING; safecall;
    procedure put_SecondaryButtonText(value: HSTRING); safecall;
    function get_PrimaryButtonCommand: Input_ICommand; safecall;
    procedure put_PrimaryButtonCommand(value: Input_ICommand); safecall;
    function get_SecondaryButtonCommand: Input_ICommand; safecall;
    procedure put_SecondaryButtonCommand(value: Input_ICommand); safecall;
    function get_PrimaryButtonCommandParameter: IInspectable; safecall;
    procedure put_PrimaryButtonCommandParameter(value: IInspectable); safecall;
    function get_SecondaryButtonCommandParameter: IInspectable; safecall;
    procedure put_SecondaryButtonCommandParameter(value: IInspectable); safecall;
    function get_IsPrimaryButtonEnabled: Boolean; safecall;
    procedure put_IsPrimaryButtonEnabled(value: Boolean); safecall;
    function get_IsSecondaryButtonEnabled: Boolean; safecall;
    procedure put_IsSecondaryButtonEnabled(value: Boolean); safecall;
    function add_Closing(handler: TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs): EventRegistrationToken; safecall;
    procedure remove_Closing(token: EventRegistrationToken); safecall;
    function add_Closed(handler: TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    function add_Opened(handler: TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_PrimaryButtonClick(handler: TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_PrimaryButtonClick(token: EventRegistrationToken); safecall;
    function add_SecondaryButtonClick(handler: TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_SecondaryButtonClick(token: EventRegistrationToken); safecall;
    procedure Hide; safecall;
    function ShowAsync: IAsyncOperation_1__ContentDialogResult; safecall;
    property FullSizeDesired: Boolean read get_FullSizeDesired write put_FullSizeDesired;
    property IsPrimaryButtonEnabled: Boolean read get_IsPrimaryButtonEnabled write put_IsPrimaryButtonEnabled;
    property IsSecondaryButtonEnabled: Boolean read get_IsSecondaryButtonEnabled write put_IsSecondaryButtonEnabled;
    property PrimaryButtonCommand: Input_ICommand read get_PrimaryButtonCommand write put_PrimaryButtonCommand;
    property PrimaryButtonCommandParameter: IInspectable read get_PrimaryButtonCommandParameter write put_PrimaryButtonCommandParameter;
    property PrimaryButtonText: HSTRING read get_PrimaryButtonText write put_PrimaryButtonText;
    property SecondaryButtonCommand: Input_ICommand read get_SecondaryButtonCommand write put_SecondaryButtonCommand;
    property SecondaryButtonCommandParameter: IInspectable read get_SecondaryButtonCommandParameter write put_SecondaryButtonCommandParameter;
    property SecondaryButtonText: HSTRING read get_SecondaryButtonText write put_SecondaryButtonText;
    property Title: IInspectable read get_Title write put_Title;
    property TitleTemplate: IDataTemplate read get_TitleTemplate write put_TitleTemplate;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialog2
  IContentDialog2 = interface(IInspectable)
  ['{2F93EB45-EE43-4303-9B38-3FE1A111ECBF}']
    function get_CloseButtonText: HSTRING; safecall;
    procedure put_CloseButtonText(value: HSTRING); safecall;
    function get_CloseButtonCommand: Input_ICommand; safecall;
    procedure put_CloseButtonCommand(value: Input_ICommand); safecall;
    function get_CloseButtonCommandParameter: IInspectable; safecall;
    procedure put_CloseButtonCommandParameter(value: IInspectable); safecall;
    function get_PrimaryButtonStyle: IStyle; safecall;
    procedure put_PrimaryButtonStyle(value: IStyle); safecall;
    function get_SecondaryButtonStyle: IStyle; safecall;
    procedure put_SecondaryButtonStyle(value: IStyle); safecall;
    function get_CloseButtonStyle: IStyle; safecall;
    procedure put_CloseButtonStyle(value: IStyle); safecall;
    function get_DefaultButton: ContentDialogButton; safecall;
    procedure put_DefaultButton(value: ContentDialogButton); safecall;
    function add_CloseButtonClick(handler: TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_CloseButtonClick(token: EventRegistrationToken); safecall;
    property CloseButtonCommand: Input_ICommand read get_CloseButtonCommand write put_CloseButtonCommand;
    property CloseButtonCommandParameter: IInspectable read get_CloseButtonCommandParameter write put_CloseButtonCommandParameter;
    property CloseButtonStyle: IStyle read get_CloseButtonStyle write put_CloseButtonStyle;
    property CloseButtonText: HSTRING read get_CloseButtonText write put_CloseButtonText;
    property DefaultButton: ContentDialogButton read get_DefaultButton write put_DefaultButton;
    property PrimaryButtonStyle: IStyle read get_PrimaryButtonStyle write put_PrimaryButtonStyle;
    property SecondaryButtonStyle: IStyle read get_SecondaryButtonStyle write put_SecondaryButtonStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialog3
  IContentDialog3 = interface(IInspectable)
  ['{9D9A089E-F954-4EDE-B07F-6B069A9C0180}']
    function ShowAsync(placement: ContentDialogPlacement): IAsyncOperation_1__ContentDialogResult; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentDialog)]
  IContentDialogFactory = interface(IInspectable)
  ['{05557178-9D8E-4315-B37D-680C14012C35}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentDialog; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentDialog)]
  IContentDialogStatics = interface(IInspectable)
  ['{23AB47A6-508A-4F33-B786-F2FA96D869AF}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_TitleTemplateProperty: IDependencyProperty; safecall;
    function get_FullSizeDesiredProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonTextProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonTextProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonCommandProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonCommandProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_IsPrimaryButtonEnabledProperty: IDependencyProperty; safecall;
    function get_IsSecondaryButtonEnabledProperty: IDependencyProperty; safecall;
    property FullSizeDesiredProperty: IDependencyProperty read get_FullSizeDesiredProperty;
    property IsPrimaryButtonEnabledProperty: IDependencyProperty read get_IsPrimaryButtonEnabledProperty;
    property IsSecondaryButtonEnabledProperty: IDependencyProperty read get_IsSecondaryButtonEnabledProperty;
    property PrimaryButtonCommandParameterProperty: IDependencyProperty read get_PrimaryButtonCommandParameterProperty;
    property PrimaryButtonCommandProperty: IDependencyProperty read get_PrimaryButtonCommandProperty;
    property PrimaryButtonTextProperty: IDependencyProperty read get_PrimaryButtonTextProperty;
    property SecondaryButtonCommandParameterProperty: IDependencyProperty read get_SecondaryButtonCommandParameterProperty;
    property SecondaryButtonCommandProperty: IDependencyProperty read get_SecondaryButtonCommandProperty;
    property SecondaryButtonTextProperty: IDependencyProperty read get_SecondaryButtonTextProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
    property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentDialogStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentDialog)]
  IContentDialogStatics2 = interface(IInspectable)
  ['{329825B2-8FB0-4125-BB07-E79A5A03819F}']
    function get_CloseButtonTextProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonStyleProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonStyleProperty: IDependencyProperty; safecall;
    function get_CloseButtonStyleProperty: IDependencyProperty; safecall;
    function get_DefaultButtonProperty: IDependencyProperty; safecall;
    property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    property CloseButtonTextProperty: IDependencyProperty read get_CloseButtonTextProperty;
    property DefaultButtonProperty: IDependencyProperty read get_DefaultButtonProperty;
    property PrimaryButtonStyleProperty: IDependencyProperty read get_PrimaryButtonStyleProperty;
    property SecondaryButtonStyleProperty: IDependencyProperty read get_SecondaryButtonStyleProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs
  IContentLinkChangedEventArgs = interface(IInspectable)
  ['{64F3F1DE-89FB-4B77-8B9B-191B6D19290A}']
    function get_ChangeKind: ContentLinkChangeKind; safecall;
    function get_ContentLinkInfo: IContentLinkInfo; safecall;
    function get_TextRange: Documents_TextRange; safecall;
    property ChangeKind: ContentLinkChangeKind read get_ChangeKind;
    property ContentLinkInfo: IContentLinkInfo read get_ContentLinkInfo;
    property TextRange: Documents_TextRange read get_TextRange;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenter = interface(IInspectable)
  ['{79FDE5B4-CD37-491C-8845-DAF472DEFFF6}']
    function get_Content: IInspectable; safecall;
    procedure put_Content(value: IInspectable); safecall;
    function get_ContentTemplate: IDataTemplate; safecall;
    procedure put_ContentTemplate(value: IDataTemplate); safecall;
    function get_ContentTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ContentTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ContentTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ContentTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property Content: IInspectable read get_Content write put_Content;
    property ContentTemplate: IDataTemplate read get_ContentTemplate write put_ContentTemplate;
    property ContentTemplateSelector: IDataTemplateSelector read get_ContentTemplateSelector write put_ContentTemplateSelector;
    property ContentTransitions: IVector_1__Animation_ITransition read get_ContentTransitions write put_ContentTransitions;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenter2
  IContentPresenter2 = interface(IInspectable)
  ['{5138E958-335D-4210-8BBB-0AA2B4B5C29E}']
    function get_OpticalMarginAlignment: OpticalMarginAlignment; safecall;
    procedure put_OpticalMarginAlignment(value: OpticalMarginAlignment); safecall;
    function get_TextLineBounds: TextLineBounds; safecall;
    procedure put_TextLineBounds(value: TextLineBounds); safecall;
    property OpticalMarginAlignment_: OpticalMarginAlignment read get_OpticalMarginAlignment write put_OpticalMarginAlignment;
    property TextLineBounds_: TextLineBounds read get_TextLineBounds write put_TextLineBounds;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenter3
  IContentPresenter3 = interface(IInspectable)
  ['{B038876A-9C4D-4402-AC56-A223487DC6C8}']
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenter4
  IContentPresenter4 = interface(IInspectable)
  ['{997B1B17-3BF8-432B-8FD9-68C7BAB21F9D}']
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    function get_LineStackingStrategy: LineStackingStrategy; safecall;
    procedure put_LineStackingStrategy(value: LineStackingStrategy); safecall;
    function get_LineHeight: Double; safecall;
    procedure put_LineHeight(value: Double); safecall;
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_HorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_VerticalContentAlignment(value: VerticalAlignment); safecall;
    property Background: IBrush read get_Background write put_Background;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property HorizontalContentAlignment: HorizontalAlignment read get_HorizontalContentAlignment write put_HorizontalContentAlignment;
    property LineHeight: Double read get_LineHeight write put_LineHeight;
    property LineStackingStrategy_: LineStackingStrategy read get_LineStackingStrategy write put_LineStackingStrategy;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
    property Padding: Thickness read get_Padding write put_Padding;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
    property VerticalContentAlignment: VerticalAlignment read get_VerticalContentAlignment write put_VerticalContentAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenter5
  IContentPresenter5 = interface(IInspectable)
  ['{D248970C-B785-5E7F-9C11-8A6CD3D5929B}']
    function get_BackgroundTransition: IBrushTransition; safecall;
    procedure put_BackgroundTransition(value: IBrushTransition); safecall;
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BackgroundTransition: IBrushTransition read get_BackgroundTransition write put_BackgroundTransition;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterFactory = interface(IInspectable)
  ['{3339D4F7-4815-44C4-9F76-68C83880EF10}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenterOverrides
  IContentPresenterOverrides = interface(IInspectable)
  ['{A76339ED-32FF-438B-AAD5-1D68FAE93426}']
    procedure OnContentTemplateChanged(oldContentTemplate: IDataTemplate; newContentTemplate: IDataTemplate); safecall;
    procedure OnContentTemplateSelectorChanged(oldContentTemplateSelector: IDataTemplateSelector; newContentTemplateSelector: IDataTemplateSelector); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterStatics = interface(IInspectable)
  ['{18C2893B-DA2E-4426-B85A-2C7E2171BEDF}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_ContentTemplateProperty: IDependencyProperty; safecall;
    function get_ContentTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ContentTransitionsProperty: IDependencyProperty; safecall;
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenterStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterStatics2 = interface(IInspectable)
  ['{C7D89DD9-06E6-46BE-A8A0-9C117D3024A3}']
    function get_OpticalMarginAlignmentProperty: IDependencyProperty; safecall;
    function get_TextLineBoundsProperty: IDependencyProperty; safecall;
    property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenterStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterStatics3 = interface(IInspectable)
  ['{CBE6CF5B-38B1-4D5D-B098-BC94B35C8DDF}']
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenterStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterStatics4 = interface(IInspectable)
  ['{FF8BE292-AF28-47EB-A5C3-DC44CED40FD2}']
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    function get_LineStackingStrategyProperty: IDependencyProperty; safecall;
    function get_LineHeightProperty: IDependencyProperty; safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_HorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalContentAlignmentProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
    property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IContentPresenterStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterStatics5 = interface(IInspectable)
  ['{169E700F-E8E6-5F6A-B97E-7EF8F7006F49}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlTemplate
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ControlTemplate)]
  IControlTemplate = interface(IInspectable)
  ['{EFD2418E-41E0-48BB-8B82-91EDA1BA3FE2}']
    function get_TargetType: Interop_TypeName; safecall;
    procedure put_TargetType(value: Interop_TypeName); safecall;
    property TargetType: Interop_TypeName read get_TargetType write put_TargetType;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControl
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControl = interface(IInspectable)
  ['{A8912263-2951-4F58-A9C5-5A134EAA7F07}']
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_IsTabStop: Boolean; safecall;
    procedure put_IsTabStop(value: Boolean); safecall;
    function get_IsEnabled: Boolean; safecall;
    procedure put_IsEnabled(value: Boolean); safecall;
    function get_TabIndex: Integer; safecall;
    procedure put_TabIndex(value: Integer); safecall;
    function get_TabNavigation: Input_KeyboardNavigationMode; safecall;
    procedure put_TabNavigation(value: Input_KeyboardNavigationMode); safecall;
    function get_Template: IControlTemplate; safecall;
    procedure put_Template(value: IControlTemplate); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_HorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_VerticalContentAlignment(value: VerticalAlignment); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_FocusState: FocusState; safecall;
    function add_IsEnabledChanged(handler: DependencyPropertyChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_IsEnabledChanged(token: EventRegistrationToken); safecall;
    function ApplyTemplate: Boolean; safecall;
    function Focus(value: FocusState): Boolean; safecall;
    property Background: IBrush read get_Background write put_Background;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property FocusState_: FocusState read get_FocusState;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property HorizontalContentAlignment: HorizontalAlignment read get_HorizontalContentAlignment write put_HorizontalContentAlignment;
    property IsEnabled: Boolean read get_IsEnabled write put_IsEnabled;
    property IsTabStop: Boolean read get_IsTabStop write put_IsTabStop;
    property Padding: Thickness read get_Padding write put_Padding;
    property TabIndex: Integer read get_TabIndex write put_TabIndex;
    property TabNavigation: Input_KeyboardNavigationMode read get_TabNavigation write put_TabNavigation;
    property Template: IControlTemplate read get_Template write put_Template;
    property VerticalContentAlignment: VerticalAlignment read get_VerticalContentAlignment write put_VerticalContentAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControl2
  IControl2 = interface(IInspectable)
  ['{43E0FE10-14EC-427E-8C57-DEE60DF60AA8}']
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControl3
  IControl3 = interface(IInspectable)
  ['{077B29E4-DADE-4F55-9B96-09E21B28EB1C}']
    function get_UseSystemFocusVisuals: Boolean; safecall;
    procedure put_UseSystemFocusVisuals(value: Boolean); safecall;
    property UseSystemFocusVisuals: Boolean read get_UseSystemFocusVisuals write put_UseSystemFocusVisuals;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFocusEngagedEventArgs
  IFocusEngagedEventArgs = interface(IInspectable)
  ['{A69FC352-DA66-404C-823F-5358594E70BB}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IControl,Windows.UI.Xaml.Controls.IFocusEngagedEventArgs>
  TypedEventHandler_2__IControl__IFocusEngagedEventArgs_Delegate_Base = interface(IUnknown)
  ['{0C3F6433-66B6-5544-8B9B-8904F4055E92}']
    procedure Invoke(sender: IControl; args: IFocusEngagedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IControl,Windows.UI.Xaml.Controls.IFocusEngagedEventArgs>
  TypedEventHandler_2__IControl__IFocusEngagedEventArgs = interface(TypedEventHandler_2__IControl__IFocusEngagedEventArgs_Delegate_Base)
  ['{64AACA9D-3F3B-5AAD-9D67-CD6D8D9D7B18}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs
  IFocusDisengagedEventArgs = interface(IInspectable)
  ['{5E14280F-953E-4CF8-B9EA-C530A1CE02AD}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IControl,Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs>
  TypedEventHandler_2__IControl__IFocusDisengagedEventArgs_Delegate_Base = interface(IUnknown)
  ['{38B4535C-2785-5122-96FE-D44F795B9CB2}']
    procedure Invoke(sender: IControl; args: IFocusDisengagedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IControl,Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs>
  TypedEventHandler_2__IControl__IFocusDisengagedEventArgs = interface(TypedEventHandler_2__IControl__IFocusDisengagedEventArgs_Delegate_Base)
  ['{9EC0F41B-01AA-5CF0-9C52-1ADAD8D3E12A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControl4
  IControl4 = interface(IInspectable)
  ['{0E18AEEE-5F2E-44EA-8513-D3875C0A7513}']
    function get_IsFocusEngagementEnabled: Boolean; safecall;
    procedure put_IsFocusEngagementEnabled(value: Boolean); safecall;
    function get_IsFocusEngaged: Boolean; safecall;
    procedure put_IsFocusEngaged(value: Boolean); safecall;
    function get_RequiresPointer: RequiresPointer; safecall;
    procedure put_RequiresPointer(value: RequiresPointer); safecall;
    function get_XYFocusLeft: IDependencyObject; safecall;
    procedure put_XYFocusLeft(value: IDependencyObject); safecall;
    function get_XYFocusRight: IDependencyObject; safecall;
    procedure put_XYFocusRight(value: IDependencyObject); safecall;
    function get_XYFocusUp: IDependencyObject; safecall;
    procedure put_XYFocusUp(value: IDependencyObject); safecall;
    function get_XYFocusDown: IDependencyObject; safecall;
    procedure put_XYFocusDown(value: IDependencyObject); safecall;
    function get_ElementSoundMode: ElementSoundMode; safecall;
    procedure put_ElementSoundMode(value: ElementSoundMode); safecall;
    function add_FocusEngaged(handler: TypedEventHandler_2__IControl__IFocusEngagedEventArgs): EventRegistrationToken; safecall;
    procedure remove_FocusEngaged(token: EventRegistrationToken); safecall;
    function add_FocusDisengaged(handler: TypedEventHandler_2__IControl__IFocusDisengagedEventArgs): EventRegistrationToken; safecall;
    procedure remove_FocusDisengaged(token: EventRegistrationToken); safecall;
    procedure RemoveFocusEngagement; safecall;
    property ElementSoundMode_: ElementSoundMode read get_ElementSoundMode write put_ElementSoundMode;
    property IsFocusEngaged: Boolean read get_IsFocusEngaged write put_IsFocusEngaged;
    property IsFocusEngagementEnabled: Boolean read get_IsFocusEngagementEnabled write put_IsFocusEngagementEnabled;
    property RequiresPointer_: RequiresPointer read get_RequiresPointer write put_RequiresPointer;
    property XYFocusDown: IDependencyObject read get_XYFocusDown write put_XYFocusDown;
    property XYFocusLeft: IDependencyObject read get_XYFocusLeft write put_XYFocusLeft;
    property XYFocusRight: IDependencyObject read get_XYFocusRight write put_XYFocusRight;
    property XYFocusUp: IDependencyObject read get_XYFocusUp write put_XYFocusUp;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControl5
  IControl5 = interface(IInspectable)
  ['{5EBB51D5-9E58-49B7-BC2D-0155FF118664}']
    function get_DefaultStyleResourceUri: IUriRuntimeClass; safecall;
    procedure put_DefaultStyleResourceUri(value: IUriRuntimeClass); safecall;
    property DefaultStyleResourceUri: IUriRuntimeClass read get_DefaultStyleResourceUri write put_DefaultStyleResourceUri;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControl7
  IControl7 = interface(IInspectable)
  ['{3550DBE1-E561-5934-A3EF-7DB8BF6E3B45}']
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControlFactory = interface(IInspectable)
  ['{B12B1D5A-6419-4E16-B212-A45336B75778}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlOverrides
  IControlOverrides = interface(IInspectable)
  ['{A09691DF-9824-41FE-B530-B0D8990E64C1}']
    procedure OnPointerEntered(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerPressed(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerMoved(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerReleased(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerExited(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerCaptureLost(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerCanceled(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerWheelChanged(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnTapped(e: Input_ITappedRoutedEventArgs); safecall;
    procedure OnDoubleTapped(e: Input_IDoubleTappedRoutedEventArgs); safecall;
    procedure OnHolding(e: Input_IHoldingRoutedEventArgs); safecall;
    procedure OnRightTapped(e: Input_IRightTappedRoutedEventArgs); safecall;
    procedure OnManipulationStarting(e: Input_IManipulationStartingRoutedEventArgs); safecall;
    procedure OnManipulationInertiaStarting(e: Input_IManipulationInertiaStartingRoutedEventArgs); safecall;
    procedure OnManipulationStarted(e: Input_IManipulationStartedRoutedEventArgs); safecall;
    procedure OnManipulationDelta(e: Input_IManipulationDeltaRoutedEventArgs); safecall;
    procedure OnManipulationCompleted(e: Input_IManipulationCompletedRoutedEventArgs); safecall;
    procedure OnKeyUp(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnKeyDown(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnGotFocus(e: IRoutedEventArgs); safecall;
    procedure OnLostFocus(e: IRoutedEventArgs); safecall;
    procedure OnDragEnter(e: IDragEventArgs); safecall;
    procedure OnDragLeave(e: IDragEventArgs); safecall;
    procedure OnDragOver(e: IDragEventArgs); safecall;
    procedure OnDrop(e: IDragEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlOverrides6
  IControlOverrides6 = interface(IInspectable)
  ['{E194C96A-D8CC-4339-A0E1-2E9C420879EC}']
    procedure OnPreviewKeyDown(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnPreviewKeyUp(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnCharacterReceived(e: Input_ICharacterReceivedRoutedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlProtected
  IControlProtected = interface(IInspectable)
  ['{1791587A-2A7C-4981-A2D8-AB99FFFC65B9}']
    function get_DefaultStyleKey: IInspectable; safecall;
    procedure put_DefaultStyleKey(value: IInspectable); safecall;
    function GetTemplateChild(childName: HSTRING): IDependencyObject; safecall;
    property DefaultStyleKey: IInspectable read get_DefaultStyleKey write put_DefaultStyleKey;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControlStatics = interface(IInspectable)
  ['{473B305B-877D-4C35-8FCA-46A05F96607A}']
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_IsTabStopProperty: IDependencyProperty; safecall;
    function get_IsEnabledProperty: IDependencyProperty; safecall;
    function get_TabIndexProperty: IDependencyProperty; safecall;
    function get_TabNavigationProperty: IDependencyProperty; safecall;
    function get_TemplateProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_HorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_DefaultStyleKeyProperty: IDependencyProperty; safecall;
    function get_FocusStateProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property DefaultStyleKeyProperty: IDependencyProperty read get_DefaultStyleKeyProperty;
    property FocusStateProperty: IDependencyProperty read get_FocusStateProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    property IsEnabledProperty: IDependencyProperty read get_IsEnabledProperty;
    property IsTabStopProperty: IDependencyProperty read get_IsTabStopProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property TabIndexProperty: IDependencyProperty read get_TabIndexProperty;
    property TabNavigationProperty: IDependencyProperty read get_TabNavigationProperty;
    property TemplateProperty: IDependencyProperty read get_TemplateProperty;
    property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControlStatics2 = interface(IInspectable)
  ['{32233E36-AB74-4A25-A556-45293135B2C5}']
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControlStatics3 = interface(IInspectable)
  ['{AAD15E61-E4B9-4D72-B653-934149AA5003}']
    function get_UseSystemFocusVisualsProperty: IDependencyProperty; safecall;
    function get_IsTemplateFocusTargetProperty: IDependencyProperty; safecall;
    function GetIsTemplateFocusTarget(element: IFrameworkElement): Boolean; safecall;
    procedure SetIsTemplateFocusTarget(element: IFrameworkElement; value: Boolean); safecall;
    property IsTemplateFocusTargetProperty: IDependencyProperty read get_IsTemplateFocusTargetProperty;
    property UseSystemFocusVisualsProperty: IDependencyProperty read get_UseSystemFocusVisualsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControlStatics4 = interface(IInspectable)
  ['{59FDA728-C05A-4EC2-8A4B-06AD69B66E15}']
    function get_IsFocusEngagementEnabledProperty: IDependencyProperty; safecall;
    function get_IsFocusEngagedProperty: IDependencyProperty; safecall;
    function get_RequiresPointerProperty: IDependencyProperty; safecall;
    function get_XYFocusLeftProperty: IDependencyProperty; safecall;
    function get_XYFocusRightProperty: IDependencyProperty; safecall;
    function get_XYFocusUpProperty: IDependencyProperty; safecall;
    function get_XYFocusDownProperty: IDependencyProperty; safecall;
    function get_ElementSoundModeProperty: IDependencyProperty; safecall;
    property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    property IsFocusEngagedProperty: IDependencyProperty read get_IsFocusEngagedProperty;
    property IsFocusEngagementEnabledProperty: IDependencyProperty read get_IsFocusEngagementEnabledProperty;
    property RequiresPointerProperty: IDependencyProperty read get_RequiresPointerProperty;
    property XYFocusDownProperty: IDependencyProperty read get_XYFocusDownProperty;
    property XYFocusLeftProperty: IDependencyProperty read get_XYFocusLeftProperty;
    property XYFocusRightProperty: IDependencyProperty read get_XYFocusRightProperty;
    property XYFocusUpProperty: IDependencyProperty read get_XYFocusUpProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControlStatics5 = interface(IInspectable)
  ['{F635B5A3-EF8E-404F-877B-5580473710A6}']
    function get_DefaultStyleResourceUriProperty: IDependencyProperty; safecall;
    function get_IsTemplateKeyTipTargetProperty: IDependencyProperty; safecall;
    function GetIsTemplateKeyTipTarget(element: IDependencyObject): Boolean; safecall;
    procedure SetIsTemplateKeyTipTarget(element: IDependencyObject; value: Boolean); safecall;
    property DefaultStyleResourceUriProperty: IDependencyProperty read get_DefaultStyleResourceUriProperty;
    property IsTemplateKeyTipTargetProperty: IDependencyProperty read get_IsTemplateKeyTipTargetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IControlStatics7
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Control)]
  IControlStatics7 = interface(IInspectable)
  ['{AEE1CA45-C910-5DAB-A266-FDF50C0BEDD2}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDataTemplateSelector2
  IDataTemplateSelector2 = interface(IInspectable)
  ['{3792BC47-8C4B-4257-A5AE-CC3F8ED786EB}']
    function SelectTemplate(item: IInspectable): IDataTemplate; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DataTemplateSelector)]
  IDataTemplateSelectorFactory = interface(IInspectable)
  ['{511BAAD0-210A-457D-9521-433D2B11B7D2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDataTemplateSelector; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides
  IDataTemplateSelectorOverrides = interface(IInspectable)
  ['{2D162925-5966-4BFA-8638-4D345689F6CF}']
    function SelectTemplateCore(item: IInspectable; container: IDependencyObject): IDataTemplate; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2
  IDataTemplateSelectorOverrides2 = interface(IInspectable)
  ['{6C3FB5FC-8E84-4C91-AC15-04A1D885500F}']
    function SelectTemplateCore(item: IInspectable): IDataTemplate; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickedEventArgs)]
  IDatePickedEventArgs = interface(IInspectable)
  ['{A1527B12-59C1-4521-B28C-B176675E7C5A}']
    function get_OldDate: DateTime; safecall;
    function get_NewDate: DateTime; safecall;
    property NewDate: DateTime read get_NewDate;
    property OldDate: DateTime read get_OldDate;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePicker2
  IDatePicker2 = interface(IInspectable)
  ['{BB28B475-2C1F-4340-9E30-948F99C9E57A}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs
  IDatePickerSelectedValueChangedEventArgs = interface(IInspectable)
  ['{564DCEED-744A-5C3A-9BD2-4DCD9919A7B7}']
    function get_OldDate: IReference_1__DateTime; safecall;
    function get_NewDate: IReference_1__DateTime; safecall;
    property NewDate: IReference_1__DateTime read get_NewDate;
    property OldDate: IReference_1__DateTime read get_OldDate;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IDatePicker,Windows.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs = interface(IUnknown)
  ['{690187F5-C769-58E1-B6C0-0B4FA39032FB}']
    procedure Invoke(sender: IDatePicker; args: IDatePickerSelectedValueChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePicker3
  IDatePicker3 = interface(IInspectable)
  ['{7DA12A3B-A764-5AE1-ABAE-6AFFC1428E1E}']
    function get_SelectedDate: IReference_1__DateTime; safecall;
    procedure put_SelectedDate(value: IReference_1__DateTime); safecall;
    function add_SelectedDateChanged(handler: TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectedDateChanged(token: EventRegistrationToken); safecall;
    property SelectedDate: IReference_1__DateTime read get_SelectedDate write put_SelectedDate;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePicker)]
  IDatePickerFactory = interface(IInspectable)
  ['{EEC3CA84-9896-4A7D-BB35-6FB21EAECA11}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDatePicker; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IDatePickerFlyout,Windows.UI.Xaml.Controls.IDatePickedEventArgs>
  TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs_Delegate_Base = interface(IUnknown)
  ['{4D9C196F-CDD3-54D8-98D9-4F29ABBADE76}']
    procedure Invoke(sender: IDatePickerFlyout; args: IDatePickedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IDatePickerFlyout,Windows.UI.Xaml.Controls.IDatePickedEventArgs>
  TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs = interface(TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs_Delegate_Base)
  ['{A3F33C45-A4BD-50F0-A663-ACC9E78983CA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickerFlyout)]
  IDatePickerFlyout = interface(IInspectable)
  ['{FBF33B1A-A3A4-4DF8-9228-23A5AC27DF4E}']
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_Date: DateTime; safecall;
    procedure put_Date(value: DateTime); safecall;
    function get_DayVisible: Boolean; safecall;
    procedure put_DayVisible(value: Boolean); safecall;
    function get_MonthVisible: Boolean; safecall;
    procedure put_MonthVisible(value: Boolean); safecall;
    function get_YearVisible: Boolean; safecall;
    procedure put_YearVisible(value: Boolean); safecall;
    function get_MinYear: DateTime; safecall;
    procedure put_MinYear(value: DateTime); safecall;
    function get_MaxYear: DateTime; safecall;
    procedure put_MaxYear(value: DateTime); safecall;
    function add_DatePicked(handler: TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DatePicked(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__IReference_1__DateTime; safecall;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property Date: DateTime read get_Date write put_Date;
    property DayVisible: Boolean read get_DayVisible write put_DayVisible;
    property MaxYear: DateTime read get_MaxYear write put_MaxYear;
    property MinYear: DateTime read get_MinYear write put_MinYear;
    property MonthVisible: Boolean read get_MonthVisible write put_MonthVisible;
    property YearVisible: Boolean read get_YearVisible write put_YearVisible;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyout2
  IDatePickerFlyout2 = interface(IInspectable)
  ['{CFB18DBB-9931-4119-8BDA-54A86FDFAC84}']
    function get_DayFormat: HSTRING; safecall;
    procedure put_DayFormat(value: HSTRING); safecall;
    function get_MonthFormat: HSTRING; safecall;
    procedure put_MonthFormat(value: HSTRING); safecall;
    function get_YearFormat: HSTRING; safecall;
    procedure put_YearFormat(value: HSTRING); safecall;
    property DayFormat: HSTRING read get_DayFormat write put_DayFormat;
    property MonthFormat: HSTRING read get_MonthFormat write put_MonthFormat;
    property YearFormat: HSTRING read get_YearFormat write put_YearFormat;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyoutItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickerFlyoutItem)]
  IDatePickerFlyoutItem = interface(IInspectable)
  ['{9D9BC289-00D2-4AAC-9C85-D74F06367887}']
    function get_PrimaryText: HSTRING; safecall;
    procedure put_PrimaryText(value: HSTRING); safecall;
    function get_SecondaryText: HSTRING; safecall;
    procedure put_SecondaryText(value: HSTRING); safecall;
    property PrimaryText: HSTRING read get_PrimaryText write put_PrimaryText;
    property SecondaryText: HSTRING read get_SecondaryText write put_SecondaryText;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyoutItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickerFlyoutItem)]
  IDatePickerFlyoutItemStatics = interface(IInspectable)
  ['{AA9C91DA-07F6-4CDF-89B4-DDA3BDB0EA6B}']
    function get_PrimaryTextProperty: IDependencyProperty; safecall;
    function get_SecondaryTextProperty: IDependencyProperty; safecall;
    property PrimaryTextProperty: IDependencyProperty read get_PrimaryTextProperty;
    property SecondaryTextProperty: IDependencyProperty read get_SecondaryTextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickerFlyoutPresenter)]
  IDatePickerFlyoutPresenter = interface(IInspectable)
  ['{7C62F70E-2DDC-4381-832F-54CBDFAA849A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter2
  IDatePickerFlyoutPresenter2 = interface(IInspectable)
  ['{C5B2578F-96D8-55CC-97EE-3F88FC85E479}']
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickerFlyoutPresenter)]
  IDatePickerFlyoutPresenterStatics2 = interface(IInspectable)
  ['{4DC0C49E-1F8E-5966-BBDB-215750C73ABA}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickerFlyout)]
  IDatePickerFlyoutStatics = interface(IInspectable)
  ['{CD570377-5845-4C12-8C10-592D9FCC7CD9}']
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_DateProperty: IDependencyProperty; safecall;
    function get_DayVisibleProperty: IDependencyProperty; safecall;
    function get_MonthVisibleProperty: IDependencyProperty; safecall;
    function get_YearVisibleProperty: IDependencyProperty; safecall;
    function get_MinYearProperty: IDependencyProperty; safecall;
    function get_MaxYearProperty: IDependencyProperty; safecall;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePickerFlyout)]
  IDatePickerFlyoutStatics2 = interface(IInspectable)
  ['{AFD3E569-81E6-4B54-84A9-68079B73E34E}']
    function get_DayFormatProperty: IDependencyProperty; safecall;
    function get_MonthFormatProperty: IDependencyProperty; safecall;
    function get_YearFormatProperty: IDependencyProperty; safecall;
    property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePicker)]
  IDatePickerStatics = interface(IInspectable)
  ['{182E7C69-2116-4C67-B513-713364831D79}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_DateProperty: IDependencyProperty; safecall;
    function get_DayVisibleProperty: IDependencyProperty; safecall;
    function get_MonthVisibleProperty: IDependencyProperty; safecall;
    function get_YearVisibleProperty: IDependencyProperty; safecall;
    function get_DayFormatProperty: IDependencyProperty; safecall;
    function get_MonthFormatProperty: IDependencyProperty; safecall;
    function get_YearFormatProperty: IDependencyProperty; safecall;
    function get_MinYearProperty: IDependencyProperty; safecall;
    function get_MaxYearProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
    property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePicker)]
  IDatePickerStatics2 = interface(IInspectable)
  ['{F1076DF6-FBA6-4550-8B88-A6420847F60D}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDatePickerStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DatePicker)]
  IDatePickerStatics3 = interface(IInspectable)
  ['{A9F80AFE-A30A-5F26-A446-FEC2075D4A0E}']
    function get_SelectedDateProperty: IDependencyProperty; safecall;
    property SelectedDateProperty: IDependencyProperty read get_SelectedDateProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs
  IDragItemsCompletedEventArgs = interface(IInspectable)
  ['{AF05F22F-9E78-4B21-9A8E-41C2D1367A2A}']
    function get_Items: IVectorView_1__IInspectable; safecall;
    function get_DropResult: DataPackageOperation; safecall;
    property DropResult: DataPackageOperation read get_DropResult;
    property Items: IVectorView_1__IInspectable read get_Items;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDropDownButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DropDownButton)]
  IDropDownButton = interface(IInspectable)
  ['{671F74E6-2A27-5FA8-B0A2-79B2E71EBD87}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DropDownButtonAutomationPeer)]
  IDropDownButtonAutomationPeer = interface(IInspectable)
  ['{72F294F1-BFF6-5D07-9DB4-54134506BC80}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DropDownButtonAutomationPeer)]
  IDropDownButtonAutomationPeerFactory = interface(IInspectable)
  ['{B8C449B2-6354-5C0C-9E95-E0C99A293A44}']
    function CreateInstance(owner: IDropDownButton; baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButtonAutomationPeer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IDropDownButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_DropDownButton)]
  IDropDownButtonFactory = interface(IInspectable)
  ['{0D9F8AB5-E70D-52BD-9CA0-36CEECAA642A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlipView2
  IFlipView2 = interface(IInspectable)
  ['{C4FEA4FD-7AF3-4952-9FD9-9E0987FC4F29}']
    function get_UseTouchAnimationsForAllNavigation: Boolean; safecall;
    procedure put_UseTouchAnimationsForAllNavigation(value: Boolean); safecall;
    property UseTouchAnimationsForAllNavigation: Boolean read get_UseTouchAnimationsForAllNavigation write put_UseTouchAnimationsForAllNavigation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlipViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlipView)]
  IFlipViewFactory = interface(IInspectable)
  ['{F1DEA9BE-9AE8-4D4B-AB43-16D31E05F4F3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlipViewItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlipViewItem)]
  IFlipViewItemFactory = interface(IInspectable)
  ['{F21D91FE-22A0-4412-A853-9D6A6E8F2AAF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlipViewStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlipView)]
  IFlipViewStatics2 = interface(IInspectable)
  ['{70E3D93F-4308-4BA2-BBCE-E2CB0ED34476}']
    function get_UseTouchAnimationsForAllNavigationProperty: IDependencyProperty; safecall;
    property UseTouchAnimationsForAllNavigationProperty: IDependencyProperty read get_UseTouchAnimationsForAllNavigationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Flyout)]
  IFlyout = interface(IInspectable)
  ['{6584EBDF-CBC7-4E19-843A-A14F24A793EA}']
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    function get_FlyoutPresenterStyle: IStyle; safecall;
    procedure put_FlyoutPresenterStyle(value: IStyle); safecall;
    property Content: IUIElement read get_Content write put_Content;
    property FlyoutPresenterStyle: IStyle read get_FlyoutPresenterStyle write put_FlyoutPresenterStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlyoutFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Flyout)]
  IFlyoutFactory = interface(IInspectable)
  ['{4BED4933-008E-4B03-A385-79FE5266DDBA}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlyoutPresenter2
  IFlyoutPresenter2 = interface(IInspectable)
  ['{4F857E92-36B4-5048-9051-A992B43E8A1D}']
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlyoutPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlyoutPresenter)]
  IFlyoutPresenterFactory = interface(IInspectable)
  ['{EE4D668F-DA76-469A-ACD7-3060E613ADE7}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyoutPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlyoutPresenterStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FlyoutPresenter)]
  IFlyoutPresenterStatics2 = interface(IInspectable)
  ['{1492AE4B-2727-5E8E-9105-6D7A2B1185B2}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFlyoutStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Flyout)]
  IFlyoutStatics = interface(IInspectable)
  ['{61364E0B-DB75-47E1-B2C3-5B901C3D74B6}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_FlyoutPresenterStyleProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property FlyoutPresenterStyleProperty: IDependencyProperty read get_FlyoutPresenterStyleProperty;
  end;

  // Windows.UI.Xaml.Controls.IFocusEngagedEventArgs2
  IFocusEngagedEventArgs2 = interface(IInspectable)
  ['{4A59E0F4-87C0-4CCD-93C4-A3A01CE39265}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIcon
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIcon)]
  IFontIcon = interface(IInspectable)
  ['{D4D61391-39AC-4950-9166-3606C264418B}']
    function get_Glyph: HSTRING; safecall;
    procedure put_Glyph(value: HSTRING); safecall;
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Glyph: HSTRING read get_Glyph write put_Glyph;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIcon2
  IFontIcon2 = interface(IInspectable)
  ['{F6EBD84D-37E8-46EE-A574-41AD550482E0}']
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIcon3
  IFontIcon3 = interface(IInspectable)
  ['{6155D919-1C6C-4950-8794-231EF0914D94}']
    function get_MirroredWhenRightToLeft: Boolean; safecall;
    procedure put_MirroredWhenRightToLeft(value: Boolean); safecall;
    property MirroredWhenRightToLeft: Boolean read get_MirroredWhenRightToLeft write put_MirroredWhenRightToLeft;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIconFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIcon)]
  IFontIconFactory = interface(IInspectable)
  ['{1C781B6B-37BF-4DDC-A1A8-1B77DB3CF0EA}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIconSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIconSource)]
  IFontIconSource = interface(IInspectable)
  ['{2211AC9A-74E3-43ED-B61C-21AFC7DF4D10}']
    function get_Glyph: HSTRING; safecall;
    procedure put_Glyph(value: HSTRING); safecall;
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    function get_MirroredWhenRightToLeft: Boolean; safecall;
    procedure put_MirroredWhenRightToLeft(value: Boolean); safecall;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Glyph: HSTRING read get_Glyph write put_Glyph;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
    property MirroredWhenRightToLeft: Boolean read get_MirroredWhenRightToLeft write put_MirroredWhenRightToLeft;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIconSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIconSource)]
  IFontIconSourceFactory = interface(IInspectable)
  ['{8BDCF6BD-FC06-42B8-B30B-7505082AC38F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIconSourceStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIconSource)]
  IFontIconSourceStatics = interface(IInspectable)
  ['{8C0E422F-8269-43B1-B95A-EF070E86770D}']
    function get_GlyphProperty: IDependencyProperty; safecall;
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    function get_MirroredWhenRightToLeftProperty: IDependencyProperty; safecall;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIconStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIcon)]
  IFontIconStatics = interface(IInspectable)
  ['{B3BE7BF6-1467-4086-BBCB-4E21D97A7B4D}']
    function get_GlyphProperty: IDependencyProperty; safecall;
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property GlyphProperty: IDependencyProperty read get_GlyphProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIconStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIcon)]
  IFontIconStatics2 = interface(IInspectable)
  ['{E6080672-08F8-43D3-8790-4604290CBEBD}']
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFontIconStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_FontIcon)]
  IFontIconStatics3 = interface(IInspectable)
  ['{A4528B17-B084-4BD5-AAB4-FEAE9D3B5D26}']
    function get_MirroredWhenRightToLeftProperty: IDependencyProperty; safecall;
    property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrame
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Frame)]
  IFrame = interface(IInspectable)
  ['{68EA500B-3FE9-4735-B6A0-E7601933B089}']
    function get_CacheSize: Integer; safecall;
    procedure put_CacheSize(value: Integer); safecall;
    function get_CanGoBack: Boolean; safecall;
    function get_CanGoForward: Boolean; safecall;
    function get_CurrentSourcePageType: Interop_TypeName; safecall;
    function get_SourcePageType: Interop_TypeName; safecall;
    procedure put_SourcePageType(value: Interop_TypeName); safecall;
    function get_BackStackDepth: Integer; safecall;
    function add_Navigated(handler: Navigation_NavigatedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Navigated(token: EventRegistrationToken); safecall;
    function add_Navigating(handler: Navigation_NavigatingCancelEventHandler): EventRegistrationToken; safecall;
    procedure remove_Navigating(token: EventRegistrationToken); safecall;
    function add_NavigationFailed(handler: Navigation_NavigationFailedEventHandler): EventRegistrationToken; safecall;
    procedure remove_NavigationFailed(token: EventRegistrationToken); safecall;
    function add_NavigationStopped(handler: Navigation_NavigationStoppedEventHandler): EventRegistrationToken; safecall;
    procedure remove_NavigationStopped(token: EventRegistrationToken); safecall;
    procedure GoBack; safecall;
    procedure GoForward; safecall;
    function Navigate(sourcePageType: Interop_TypeName; parameter: IInspectable): Boolean; safecall;
    function GetNavigationState: HSTRING; safecall;
    procedure SetNavigationState(navigationState: HSTRING); safecall;
    property BackStackDepth: Integer read get_BackStackDepth;
    property CacheSize: Integer read get_CacheSize write put_CacheSize;
    property CanGoBack: Boolean read get_CanGoBack;
    property CanGoForward: Boolean read get_CanGoForward;
    property CurrentSourcePageType: Interop_TypeName read get_CurrentSourcePageType;
    property SourcePageType: Interop_TypeName read get_SourcePageType write put_SourcePageType;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrame2
  IFrame2 = interface(IInspectable)
  ['{3F367F87-9F5A-4B04-B818-B554C069597A}']
    function get_BackStack: IVector_1__Navigation_IPageStackEntry; safecall;
    function get_ForwardStack: IVector_1__Navigation_IPageStackEntry; safecall;
    function Navigate(sourcePageType: Interop_TypeName; parameter: IInspectable; infoOverride: Animation_INavigationTransitionInfo): Boolean; safecall;
    property BackStack: IVector_1__Navigation_IPageStackEntry read get_BackStack;
    property ForwardStack: IVector_1__Navigation_IPageStackEntry read get_ForwardStack;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrame3
  IFrame3 = interface(IInspectable)
  ['{648A2B4D-53CA-4B5A-AA8E-3CC7440F4A67}']
    procedure GoBack(transitionInfoOverride: Animation_INavigationTransitionInfo); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrame4
  IFrame4 = interface(IInspectable)
  ['{9B17C21A-BD2B-4A00-99EB-946BE9618084}']
    procedure SetNavigationState(navigationState: HSTRING; suppressNavigate: Boolean); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrame5
  IFrame5 = interface(IInspectable)
  ['{453FB92E-82B5-5F93-92AB-15341806C9DA}']
    function get_IsNavigationStackEnabled: Boolean; safecall;
    procedure put_IsNavigationStackEnabled(value: Boolean); safecall;
    function NavigateToType(sourcePageType: Interop_TypeName; parameter: IInspectable; navigationOptions: Navigation_IFrameNavigationOptions): Boolean; safecall;
    property IsNavigationStackEnabled: Boolean read get_IsNavigationStackEnabled write put_IsNavigationStackEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrameFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Frame)]
  IFrameFactory = interface(IInspectable)
  ['{02EE93D4-448E-469E-9799-0A8A1F70F171}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFrame; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrameStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Frame)]
  IFrameStatics = interface(IInspectable)
  ['{D5ACF0E9-D967-471B-8459-C8AF4341511B}']
    function get_CacheSizeProperty: IDependencyProperty; safecall;
    function get_CanGoBackProperty: IDependencyProperty; safecall;
    function get_CanGoForwardProperty: IDependencyProperty; safecall;
    function get_CurrentSourcePageTypeProperty: IDependencyProperty; safecall;
    function get_SourcePageTypeProperty: IDependencyProperty; safecall;
    function get_BackStackDepthProperty: IDependencyProperty; safecall;
    property BackStackDepthProperty: IDependencyProperty read get_BackStackDepthProperty;
    property CacheSizeProperty: IDependencyProperty read get_CacheSizeProperty;
    property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    property CurrentSourcePageTypeProperty: IDependencyProperty read get_CurrentSourcePageTypeProperty;
    property SourcePageTypeProperty: IDependencyProperty read get_SourcePageTypeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrameStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Frame)]
  IFrameStatics2 = interface(IInspectable)
  ['{E4B5CDFE-42F0-4462-A1C1-5D259DD82A03}']
    function get_BackStackProperty: IDependencyProperty; safecall;
    function get_ForwardStackProperty: IDependencyProperty; safecall;
    property BackStackProperty: IDependencyProperty read get_BackStackProperty;
    property ForwardStackProperty: IDependencyProperty read get_ForwardStackProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IFrameStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Frame)]
  IFrameStatics5 = interface(IInspectable)
  ['{53C89B25-F0E0-58F1-A06D-441075914FF8}']
    function get_IsNavigationStackEnabledProperty: IDependencyProperty; safecall;
    property IsNavigationStackEnabledProperty: IDependencyProperty read get_IsNavigationStackEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRowDefinition
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RowDefinition)]
  IRowDefinition = interface(IInspectable)
  ['{4ABAE829-D80C-4A5E-A48C-F8B3D3B6533D}']
    function get_Height: GridLength; safecall;
    procedure put_Height(value: GridLength); safecall;
    function get_MaxHeight: Double; safecall;
    procedure put_MaxHeight(value: Double); safecall;
    function get_MinHeight: Double; safecall;
    procedure put_MinHeight(value: Double); safecall;
    function get_ActualHeight: Double; safecall;
    property ActualHeight: Double read get_ActualHeight;
    property Height: GridLength read get_Height write put_Height;
    property MaxHeight: Double read get_MaxHeight write put_MaxHeight;
    property MinHeight: Double read get_MinHeight write put_MinHeight;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IIterator_1__IRowDefinition_Base = interface(IInspectable)
  ['{2655D45D-38C6-53F0-8719-F3C3A739C1F9}']
    function get_Current: IRowDefinition; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIRowDefinition): Cardinal; safecall;
    property Current: IRowDefinition read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IIterator_1__IRowDefinition = interface(IIterator_1__IRowDefinition_Base)
  ['{0BD0BFE8-9A05-58EF-8EC4-1509EB7157D0}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IIterable_1__IRowDefinition_Base = interface(IInspectable)
  ['{ABEF522A-7378-504F-9406-97D9F42643A7}']
    function First: IIterator_1__IRowDefinition; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IIterable_1__IRowDefinition = interface(IIterable_1__IRowDefinition_Base)
  ['{ADEF236E-35B3-5269-B0C5-E2A46F8C60B7}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IVectorView_1__IRowDefinition = interface(IInspectable)
  ['{E2CC1789-6046-5D76-82FB-67B272644E4B}']
    function GetAt(index: Cardinal): IRowDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IRowDefinition; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIRowDefinition): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IVector_1__IRowDefinition_Base = interface(IInspectable)
  ['{62225981-7A0D-5D38-8088-7C6BB6D959BE}']
    function GetAt(index: Cardinal): IRowDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IRowDefinition; safecall;
    function IndexOf(value: IRowDefinition; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IRowDefinition); safecall;
    procedure InsertAt(index: Cardinal; value: IRowDefinition); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IRowDefinition); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIRowDefinition): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIRowDefinition); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IRowDefinition>
  IVector_1__IRowDefinition = interface(IVector_1__IRowDefinition_Base)
  ['{12985AD4-5489-5E50-A88D-15DB0D0667EC}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IIterator_1__IColumnDefinition_Base = interface(IInspectable)
  ['{264EBC1F-ED90-528E-BF80-E9F7E02C0EE4}']
    function get_Current: IColumnDefinition; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIColumnDefinition): Cardinal; safecall;
    property Current: IColumnDefinition read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IIterator_1__IColumnDefinition = interface(IIterator_1__IColumnDefinition_Base)
  ['{20F01EFB-A7C3-50B5-97E1-36BE348B1575}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IIterable_1__IColumnDefinition_Base = interface(IInspectable)
  ['{A99329F3-4130-55CC-A4F0-C2BA43CA0735}']
    function First: IIterator_1__IColumnDefinition; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IIterable_1__IColumnDefinition = interface(IIterable_1__IColumnDefinition_Base)
  ['{E213939F-A618-588E-B021-CC8A908063AE}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IVectorView_1__IColumnDefinition = interface(IInspectable)
  ['{CEB7CE6E-F02F-59E2-8DB7-F324DE97777E}']
    function GetAt(index: Cardinal): IColumnDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IColumnDefinition; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIColumnDefinition): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IVector_1__IColumnDefinition_Base = interface(IInspectable)
  ['{6E137874-DD39-5B4F-A7EC-2EA69E4C2229}']
    function GetAt(index: Cardinal): IColumnDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IColumnDefinition; safecall;
    function IndexOf(value: IColumnDefinition; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IColumnDefinition); safecall;
    procedure InsertAt(index: Cardinal; value: IColumnDefinition); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IColumnDefinition); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIColumnDefinition): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIColumnDefinition); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IColumnDefinition>
  IVector_1__IColumnDefinition = interface(IVector_1__IColumnDefinition_Base)
  ['{F7DF9811-8E39-5D67-907F-4C6C5D2927EB}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGrid
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Grid)]
  IGrid = interface(IInspectable)
  ['{FD104460-2E15-4BA3-8B8F-FA693A4161E9}']
    function get_RowDefinitions: IVector_1__IRowDefinition; safecall;
    function get_ColumnDefinitions: IVector_1__IColumnDefinition; safecall;
    property ColumnDefinitions: IVector_1__IColumnDefinition read get_ColumnDefinitions;
    property RowDefinitions: IVector_1__IRowDefinition read get_RowDefinitions;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGrid2
  IGrid2 = interface(IInspectable)
  ['{F76EFA41-380E-45DB-BE87-9E1326BA4B57}']
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGrid3
  IGrid3 = interface(IInspectable)
  ['{12DFC5FC-2342-4DD2-9E7D-2090A171D1EF}']
    function get_RowSpacing: Double; safecall;
    procedure put_RowSpacing(value: Double); safecall;
    function get_ColumnSpacing: Double; safecall;
    procedure put_ColumnSpacing(value: Double); safecall;
    property ColumnSpacing: Double read get_ColumnSpacing write put_ColumnSpacing;
    property RowSpacing: Double read get_RowSpacing write put_RowSpacing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGrid4
  IGrid4 = interface(IInspectable)
  ['{ED02D274-81F1-5AC2-A0C3-BBDAF5A3FFEE}']
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Grid)]
  IGridFactory = interface(IInspectable)
  ['{AE814041-C531-43B4-BF99-12F506F7B01C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGrid; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Grid)]
  IGridStatics = interface(IInspectable)
  ['{64FE2E9F-F951-42B6-A9CE-BB179AF11595}']
    function get_RowProperty: IDependencyProperty; safecall;
    function GetRow(element: IFrameworkElement): Integer; safecall;
    procedure SetRow(element: IFrameworkElement; value: Integer); safecall;
    function get_ColumnProperty: IDependencyProperty; safecall;
    function GetColumn(element: IFrameworkElement): Integer; safecall;
    procedure SetColumn(element: IFrameworkElement; value: Integer); safecall;
    function get_RowSpanProperty: IDependencyProperty; safecall;
    function GetRowSpan(element: IFrameworkElement): Integer; safecall;
    procedure SetRowSpan(element: IFrameworkElement; value: Integer); safecall;
    function get_ColumnSpanProperty: IDependencyProperty; safecall;
    function GetColumnSpan(element: IFrameworkElement): Integer; safecall;
    procedure SetColumnSpan(element: IFrameworkElement; value: Integer); safecall;
    property ColumnProperty: IDependencyProperty read get_ColumnProperty;
    property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    property RowProperty: IDependencyProperty read get_RowProperty;
    property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Grid)]
  IGridStatics2 = interface(IInspectable)
  ['{2D666658-58B6-4A1B-841B-875BA93B5D6A}']
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Grid)]
  IGridStatics3 = interface(IInspectable)
  ['{C3FBA437-5A0C-407A-9621-79545386D811}']
    function get_RowSpacingProperty: IDependencyProperty; safecall;
    function get_ColumnSpacingProperty: IDependencyProperty; safecall;
    property ColumnSpacingProperty: IDependencyProperty read get_ColumnSpacingProperty;
    property RowSpacingProperty: IDependencyProperty read get_RowSpacingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Grid)]
  IGridStatics4 = interface(IInspectable)
  ['{691AF349-1F63-57AA-8726-9CDCC1B14C02}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GridView)]
  IGridViewFactory = interface(IInspectable)
  ['{D9BCCA89-09F9-4C6E-A83E-F199146F0E7D}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GridViewHeaderItem)]
  IGridViewHeaderItemFactory = interface(IInspectable)
  ['{36E0C96E-B56A-4B3B-8BAC-7AEF5E6F9945}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewHeaderItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGridViewItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GridViewItem)]
  IGridViewItemFactory = interface(IInspectable)
  ['{229B00AF-3FA6-43E9-979D-07EA0D6280DC}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GroupItem)]
  IGroupItemFactory = interface(IInspectable)
  ['{D9A1D53E-B1E0-4319-9808-7A9E887E13B0}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupStyle2
  IGroupStyle2 = interface(IInspectable)
  ['{69F90679-3A11-4FE7-B4DF-2A0139D4018B}']
    function get_HeaderContainerStyle: IStyle; safecall;
    procedure put_HeaderContainerStyle(value: IStyle); safecall;
    property HeaderContainerStyle: IStyle read get_HeaderContainerStyle write put_HeaderContainerStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupStyleFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GroupStyle)]
  IGroupStyleFactory = interface(IInspectable)
  ['{56FF664F-E2D7-4F49-803D-C727CDF9372D}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_GroupStyleSelector)]
  IGroupStyleSelectorFactory = interface(IInspectable)
  ['{BF570D33-B2F6-481F-A450-C80C291FB22D}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyleSelector; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides
  IGroupStyleSelectorOverrides = interface(IInspectable)
  ['{F691CAB2-77AD-4D3D-A51C-8EF9C3836456}']
    function SelectGroupStyleCore(group: IInspectable; level: Cardinal): IGroupStyle; safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHandwritingPanelClosedEventArgs
  IHandwritingPanelClosedEventArgs = interface(IInspectable)
  ['{4FB91C73-192D-4DD2-A1A2-80ED01125876}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHandwritingPanelOpenedEventArgs
  IHandwritingPanelOpenedEventArgs = interface(IInspectable)
  ['{FC15B16D-9F15-47B0-B97A-94A68CC61345}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IHandwritingView,Windows.UI.Xaml.Controls.IHandwritingPanelOpenedEventArgs>
  TypedEventHandler_2__IHandwritingView__IHandwritingPanelOpenedEventArgs = interface(IUnknown)
  ['{4F3CC68D-C407-5221-8DD8-BD979230CBD8}']
    procedure Invoke(sender: IHandwritingView; args: IHandwritingPanelOpenedEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IHandwritingView,Windows.UI.Xaml.Controls.IHandwritingPanelClosedEventArgs>
  TypedEventHandler_2__IHandwritingView__IHandwritingPanelClosedEventArgs = interface(IUnknown)
  ['{7B759073-D7CE-514C-A0FE-6E3CD531F216}']
    procedure Invoke(sender: IHandwritingView; args: IHandwritingPanelClosedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHandwritingView
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HandwritingView)]
  IHandwritingView = interface(IInspectable)
  ['{C44204A7-31E0-44BC-A38B-4BEE64ECD99F}']
    function get_PlacementTarget: IUIElement; safecall;
    procedure put_PlacementTarget(value: IUIElement); safecall;
    function get_PlacementAlignment: HandwritingPanelPlacementAlignment; safecall;
    procedure put_PlacementAlignment(value: HandwritingPanelPlacementAlignment); safecall;
    function get_IsOpen: Boolean; safecall;
    function get_AreCandidatesEnabled: Boolean; safecall;
    procedure put_AreCandidatesEnabled(value: Boolean); safecall;
    function add_Opened(handler: TypedEventHandler_2__IHandwritingView__IHandwritingPanelOpenedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_Closed(handler: TypedEventHandler_2__IHandwritingView__IHandwritingPanelClosedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    function TryClose: Boolean; safecall;
    function TryOpen: Boolean; safecall;
    property AreCandidatesEnabled: Boolean read get_AreCandidatesEnabled write put_AreCandidatesEnabled;
    property IsOpen: Boolean read get_IsOpen;
    property PlacementAlignment: HandwritingPanelPlacementAlignment read get_PlacementAlignment write put_PlacementAlignment;
    property PlacementTarget: IUIElement read get_PlacementTarget write put_PlacementTarget;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHandwritingViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HandwritingView)]
  IHandwritingViewFactory = interface(IInspectable)
  ['{E00C873F-0012-475C-890C-97AE308642DE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHandwritingView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHandwritingViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HandwritingView)]
  IHandwritingViewStatics = interface(IInspectable)
  ['{BB7CEED0-CC5F-4004-B8C8-142E195F0618}']
    function get_PlacementTargetProperty: IDependencyProperty; safecall;
    function get_PlacementAlignmentProperty: IDependencyProperty; safecall;
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_AreCandidatesEnabledProperty: IDependencyProperty; safecall;
    property AreCandidatesEnabledProperty: IDependencyProperty read get_AreCandidatesEnabledProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property PlacementAlignmentProperty: IDependencyProperty read get_PlacementAlignmentProperty;
    property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHubFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Hub)]
  IHubFactory = interface(IInspectable)
  ['{DCA6B2BA-C6F5-4961-9953-C51873DB5424}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHub; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHubSectionFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HubSection)]
  IHubSectionFactory = interface(IInspectable)
  ['{FFF55FA2-ECE4-4BBA-AA3B-9804AEF47883}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHubSection; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHubSectionStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HubSection)]
  IHubSectionStatics = interface(IInspectable)
  ['{12D2D85A-EA27-42D1-998B-61E52AED842B}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_ContentTemplateProperty: IDependencyProperty; safecall;
    function get_IsHeaderInteractiveProperty: IDependencyProperty; safecall;
    property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsHeaderInteractiveProperty: IDependencyProperty read get_IsHeaderInteractiveProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHubStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Hub)]
  IHubStatics = interface(IInspectable)
  ['{0E6FA034-AD3C-4F32-B701-E24FAB562028}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_DefaultSectionIndexProperty: IDependencyProperty; safecall;
    function get_SemanticZoomOwnerProperty: IDependencyProperty; safecall;
    function get_IsActiveViewProperty: IDependencyProperty; safecall;
    function get_IsZoomedInViewProperty: IDependencyProperty; safecall;
    property DefaultSectionIndexProperty: IDependencyProperty read get_DefaultSectionIndexProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHyperlinkButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HyperlinkButton)]
  IHyperlinkButtonFactory = interface(IInspectable)
  ['{43521BAD-4E97-4DA9-A64D-935DFD8CEDF2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHyperlinkButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IHyperlinkButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_HyperlinkButton)]
  IHyperlinkButtonStatics = interface(IInspectable)
  ['{FBAEB5C7-CDB7-4263-B7D6-3C0D2904ED98}']
    function get_NavigateUriProperty: IDependencyProperty; safecall;
    property NavigateUriProperty: IDependencyProperty read get_NavigateUriProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconElementFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconElement)]
  IIconElementFactory = interface(IInspectable)
  ['{CF37A562-0424-43C7-8BEA-720FBA973EF1}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconElementStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconElement)]
  IIconElementStatics = interface(IInspectable)
  ['{BE19A623-77CF-472F-82EA-047801D12012}']
    function get_ForegroundProperty: IDependencyProperty; safecall;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconSource)]
  IIconSource = interface(IInspectable)
  ['{92EC8D55-45EB-47A4-863C-91B224044F9B}']
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    property Foreground: IBrush read get_Foreground write put_Foreground;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconSourceElement
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconSourceElement)]
  IIconSourceElement = interface(IInspectable)
  ['{D7A64502-DDDA-55CD-B4C9-E79ABC8B0EA4}']
    function get_IconSource: IIconSource; safecall;
    procedure put_IconSource(value: IIconSource); safecall;
    property IconSource: IIconSource read get_IconSource write put_IconSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconSourceElementFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconSourceElement)]
  IIconSourceElementFactory = interface(IInspectable)
  ['{26B59FAB-2092-5B95-B59E-F27F210689E7}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IIconSourceElement; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconSourceElementStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconSourceElement)]
  IIconSourceElementStatics = interface(IInspectable)
  ['{F37CFD45-F3D8-50FF-A1B8-0FBA4AE61D79}']
    function get_IconSourceProperty: IDependencyProperty; safecall;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconSource)]
  IIconSourceFactory = interface(IInspectable)
  ['{4D117CF1-1FD6-49D7-B483-02EC3DE997D6}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIconSourceStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_IconSource)]
  IIconSourceStatics = interface(IInspectable)
  ['{1D389DBE-1CD3-4F4F-83B0-55DC6387685B}']
    function get_ForegroundProperty: IDependencyProperty; safecall;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IImage2
  IImage2 = interface(IInspectable)
  ['{F445119E-881F-48BB-873A-64417CA4F002}']
    function GetAsCastingSource: Casting_ICastingSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IImage3
  IImage3 = interface(IInspectable)
  ['{06EBE792-47C2-4D92-A488-8CD685D06ACA}']
    function GetAlphaMask: ICompositionBrush; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IImageStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Image)]
  IImageStatics = interface(IInspectable)
  ['{89903772-C336-43D1-9D51-C3BBD5D5D691}']
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_NineGridProperty: IDependencyProperty; safecall;
    function get_PlayToSourceProperty: IDependencyProperty; safecall;
    property NineGridProperty: IDependencyProperty read get_NineGridProperty;
    property PlayToSourceProperty: IDependencyProperty read get_PlayToSourceProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkCanvasFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkCanvas)]
  IInkCanvasFactory = interface(IInspectable)
  ['{924AC2DE-AB04-48F0-9653-E0F2DA4DBF1A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkCanvas; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarStencilButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarStencilButton)]
  IInkToolbarStencilButton = interface(IInspectable)
  ['{306A2616-5B40-4BF3-92B7-F1DF936AEFF5}']
    function get_Ruler: IInkPresenterRuler; safecall;
    function get_Protractor: IInkPresenterProtractor; safecall;
    function get_SelectedStencil: InkToolbarStencilKind; safecall;
    procedure put_SelectedStencil(value: InkToolbarStencilKind); safecall;
    function get_IsRulerItemVisible: Boolean; safecall;
    procedure put_IsRulerItemVisible(value: Boolean); safecall;
    function get_IsProtractorItemVisible: Boolean; safecall;
    procedure put_IsProtractorItemVisible(value: Boolean); safecall;
    property IsProtractorItemVisible: Boolean read get_IsProtractorItemVisible write put_IsProtractorItemVisible;
    property IsRulerItemVisible: Boolean read get_IsRulerItemVisible write put_IsRulerItemVisible;
    property Protractor: IInkPresenterProtractor read get_Protractor;
    property Ruler: IInkPresenterRuler read get_Ruler;
    property SelectedStencil: InkToolbarStencilKind read get_SelectedStencil write put_SelectedStencil;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarIsStencilButtonCheckedChangedEventArgs)]
  IInkToolbarIsStencilButtonCheckedChangedEventArgs = interface(IInspectable)
  ['{026EDD26-D32B-4E28-A033-D5097662B292}']
    function get_StencilButton: IInkToolbarStencilButton; safecall;
    function get_StencilKind: InkToolbarStencilKind; safecall;
    property StencilButton: IInkToolbarStencilButton read get_StencilButton;
    property StencilKind: InkToolbarStencilKind read get_StencilKind;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IInkToolbar,Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs>
  TypedEventHandler_2__IInkToolbar__IInkToolbarIsStencilButtonCheckedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{80A45BD6-7B40-5410-9C65-A8E05FEE5E0F}']
    procedure Invoke(sender: IInkToolbar; args: IInkToolbarIsStencilButtonCheckedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IInkToolbar,Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs>
  TypedEventHandler_2__IInkToolbar__IInkToolbarIsStencilButtonCheckedChangedEventArgs = interface(TypedEventHandler_2__IInkToolbar__IInkToolbarIsStencilButtonCheckedChangedEventArgs_Delegate_Base)
  ['{A4D4D382-791C-58D7-A37B-47C30800C265}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarMenuButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarMenuButton)]
  IInkToolbarMenuButton = interface(IInspectable)
  ['{860ECAE5-7633-4EA1-A209-50392D1AEBD1}']
    function get_MenuKind: InkToolbarMenuKind; safecall;
    function get_IsExtensionGlyphShown: Boolean; safecall;
    procedure put_IsExtensionGlyphShown(value: Boolean); safecall;
    property IsExtensionGlyphShown: Boolean read get_IsExtensionGlyphShown write put_IsExtensionGlyphShown;
    property MenuKind: InkToolbarMenuKind read get_MenuKind;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbar2
  IInkToolbar2 = interface(IInspectable)
  ['{86F0C111-B484-454A-AE78-1D25A33D1C67}']
    function get_IsStencilButtonChecked: Boolean; safecall;
    procedure put_IsStencilButtonChecked(value: Boolean); safecall;
    function get_ButtonFlyoutPlacement: InkToolbarButtonFlyoutPlacement; safecall;
    procedure put_ButtonFlyoutPlacement(value: InkToolbarButtonFlyoutPlacement); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function add_IsStencilButtonCheckedChanged(handler: TypedEventHandler_2__IInkToolbar__IInkToolbarIsStencilButtonCheckedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsStencilButtonCheckedChanged(token: EventRegistrationToken); safecall;
    function GetMenuButton(menu: InkToolbarMenuKind): IInkToolbarMenuButton; safecall;
    property ButtonFlyoutPlacement: InkToolbarButtonFlyoutPlacement read get_ButtonFlyoutPlacement write put_ButtonFlyoutPlacement;
    property IsStencilButtonChecked: Boolean read get_IsStencilButtonChecked write put_IsStencilButtonChecked;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbar3
  IInkToolbar3 = interface(IInspectable)
  ['{A8A6DEF0-7AA8-5326-B7C4-88AE25013362}']
    function get_TargetInkPresenter: IInkPresenter; safecall;
    procedure put_TargetInkPresenter(value: IInkPresenter); safecall;
    property TargetInkPresenter: IInkPresenter read get_TargetInkPresenter write put_TargetInkPresenter;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarBallpointPenButton)]
  IInkToolbarBallpointPenButton = interface(IInspectable)
  ['{158329F8-1E99-3ACC-910F-9DA2D872AE12}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarBallpointPenButton)]
  IInkToolbarBallpointPenButtonFactory = interface(IInspectable)
  ['{2F0BD3E4-D754-4255-8EC4-00CD101296AB}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarBallpointPenButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomPen
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomPen)]
  IInkToolbarCustomPen = interface(IInspectable)
  ['{4082207B-2F3D-4E6A-8C27-FE61EF7E70EB}']
    function CreateInkDrawingAttributes(brush: IBrush; strokeWidth: Double): IInkDrawingAttributes; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomPenButton)]
  IInkToolbarCustomPenButton = interface(IInspectable)
  ['{46024401-2B2A-4F3C-A53C-1A045A408EFA}']
    function get_CustomPen: IInkToolbarCustomPen; safecall;
    procedure put_CustomPen(value: IInkToolbarCustomPen); safecall;
    function get_ConfigurationContent: IUIElement; safecall;
    procedure put_ConfigurationContent(value: IUIElement); safecall;
    property ConfigurationContent: IUIElement read get_ConfigurationContent write put_ConfigurationContent;
    property CustomPen: IInkToolbarCustomPen read get_CustomPen write put_CustomPen;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomPenButton)]
  IInkToolbarCustomPenButtonFactory = interface(IInspectable)
  ['{0F2EF0BA-C8B9-4C36-8987-94D3DAFEDE18}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomPenButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomPenButton)]
  IInkToolbarCustomPenButtonStatics = interface(IInspectable)
  ['{373C25F4-E555-4E85-A80D-DA6B8433DBDE}']
    function get_CustomPenProperty: IDependencyProperty; safecall;
    function get_ConfigurationContentProperty: IDependencyProperty; safecall;
    property ConfigurationContentProperty: IDependencyProperty read get_ConfigurationContentProperty;
    property CustomPenProperty: IDependencyProperty read get_CustomPenProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomPen)]
  IInkToolbarCustomPenFactory = interface(IInspectable)
  ['{D214D636-F1AA-4F48-BF2C-A926CAAE4C60}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomPen; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomPenOverrides
  IInkToolbarCustomPenOverrides = interface(IInspectable)
  ['{9D22EB6C-1255-4256-B6BD-82C2FD273488}']
    function CreateInkDrawingAttributesCore(brush: IBrush; strokeWidth: Double): IInkDrawingAttributes; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomToggleButton)]
  IInkToolbarCustomToggleButton = interface(IInspectable)
  ['{550C4D84-4F54-4FBE-B12B-E0A50AAB0D05}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomToggleButton)]
  IInkToolbarCustomToggleButtonFactory = interface(IInspectable)
  ['{4A00374D-4CD2-4ED9-863E-83B8CF3FD2AF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomToggleButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomToolButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomToolButton)]
  IInkToolbarCustomToolButton = interface(IInspectable)
  ['{9F98ACD7-C605-4105-BE10-3943A7C0DA3C}']
    function get_ConfigurationContent: IUIElement; safecall;
    procedure put_ConfigurationContent(value: IUIElement); safecall;
    property ConfigurationContent: IUIElement read get_ConfigurationContent write put_ConfigurationContent;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomToolButton)]
  IInkToolbarCustomToolButtonFactory = interface(IInspectable)
  ['{C295FE4E-30EB-4130-A6B6-8C85D8E26E89}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomToolButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarCustomToolButton)]
  IInkToolbarCustomToolButtonStatics = interface(IInspectable)
  ['{11FE4CB9-BBAC-4314-9344-92C6693DDEAF}']
    function get_ConfigurationContentProperty: IDependencyProperty; safecall;
    property ConfigurationContentProperty: IDependencyProperty read get_ConfigurationContentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarEraserButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarEraserButton)]
  IInkToolbarEraserButton = interface(IInspectable)
  ['{4CBDB92E-5F5E-4B35-A41C-16FFB0283BC0}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarEraserButton2
  IInkToolbarEraserButton2 = interface(IInspectable)
  ['{E7A59257-5AE8-436D-B2E2-93C200900CA0}']
    function get_IsClearAllVisible: Boolean; safecall;
    procedure put_IsClearAllVisible(value: Boolean); safecall;
    property IsClearAllVisible: Boolean read get_IsClearAllVisible write put_IsClearAllVisible;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarEraserButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarEraserButton)]
  IInkToolbarEraserButtonFactory = interface(IInspectable)
  ['{FD40611D-D1BA-4D67-AF00-148036AD492C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarEraserButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarEraserButtonStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarEraserButton)]
  IInkToolbarEraserButtonStatics2 = interface(IInspectable)
  ['{038A1736-C5CD-4311-83F4-38CBF07C2066}']
    function get_IsClearAllVisibleProperty: IDependencyProperty; safecall;
    property IsClearAllVisibleProperty: IDependencyProperty read get_IsClearAllVisibleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbar)]
  IInkToolbarFactory = interface(IInspectable)
  ['{3947AA99-36B1-4374-AB5C-98BF07A4320B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarFlyoutItem)]
  IInkToolbarFlyoutItemFactory = interface(IInspectable)
  ['{352E7B93-803B-4F0E-8C72-9DFC0329329F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarFlyoutItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarFlyoutItem)]
  IInkToolbarFlyoutItemStatics = interface(IInspectable)
  ['{1FE54B64-4063-4A5F-B89C-9F58935EE379}']
    function get_KindProperty: IDependencyProperty; safecall;
    function get_IsCheckedProperty: IDependencyProperty; safecall;
    property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
    property KindProperty: IDependencyProperty read get_KindProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarHighlighterButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarHighlighterButton)]
  IInkToolbarHighlighterButton = interface(IInspectable)
  ['{0B3CC15B-7ABF-487E-ACC1-5B5048FEE6D2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarHighlighterButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarHighlighterButton)]
  IInkToolbarHighlighterButtonFactory = interface(IInspectable)
  ['{7C334ADD-42CA-4943-94A4-23B5A6E55CF1}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarHighlighterButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarMenuButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarMenuButton)]
  IInkToolbarMenuButtonFactory = interface(IInspectable)
  ['{7A463A9D-5DC7-44A7-AFD0-2B685CB9A96C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarMenuButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarMenuButton)]
  IInkToolbarMenuButtonStatics = interface(IInspectable)
  ['{F03B17A6-B8B0-4A87-A961-37CD05D83137}']
    function get_IsExtensionGlyphShownProperty: IDependencyProperty; safecall;
    property IsExtensionGlyphShownProperty: IDependencyProperty read get_IsExtensionGlyphShownProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPenButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPenButton)]
  IInkToolbarPenButton = interface(IInspectable)
  ['{E0B80C21-B032-40EE-A2B9-507F6CCB827B}']
    function get_Palette: IVector_1__IBrush; safecall;
    procedure put_Palette(value: IVector_1__IBrush); safecall;
    function get_MinStrokeWidth: Double; safecall;
    procedure put_MinStrokeWidth(value: Double); safecall;
    function get_MaxStrokeWidth: Double; safecall;
    procedure put_MaxStrokeWidth(value: Double); safecall;
    function get_SelectedBrush: IBrush; safecall;
    function get_SelectedBrushIndex: Integer; safecall;
    procedure put_SelectedBrushIndex(value: Integer); safecall;
    function get_SelectedStrokeWidth: Double; safecall;
    procedure put_SelectedStrokeWidth(value: Double); safecall;
    property MaxStrokeWidth: Double read get_MaxStrokeWidth write put_MaxStrokeWidth;
    property MinStrokeWidth: Double read get_MinStrokeWidth write put_MinStrokeWidth;
    property Palette: IVector_1__IBrush read get_Palette write put_Palette;
    property SelectedBrush: IBrush read get_SelectedBrush;
    property SelectedBrushIndex: Integer read get_SelectedBrushIndex write put_SelectedBrushIndex;
    property SelectedStrokeWidth: Double read get_SelectedStrokeWidth write put_SelectedStrokeWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPenButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPenButton)]
  IInkToolbarPenButtonFactory = interface(IInspectable)
  ['{B1463D21-59CB-4A83-92E1-692842797B2E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPenButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPenButton)]
  IInkToolbarPenButtonStatics = interface(IInspectable)
  ['{B922CE42-09F0-453D-8026-44DAF2753F65}']
    function get_PaletteProperty: IDependencyProperty; safecall;
    function get_MinStrokeWidthProperty: IDependencyProperty; safecall;
    function get_MaxStrokeWidthProperty: IDependencyProperty; safecall;
    function get_SelectedBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBrushIndexProperty: IDependencyProperty; safecall;
    function get_SelectedStrokeWidthProperty: IDependencyProperty; safecall;
    property MaxStrokeWidthProperty: IDependencyProperty read get_MaxStrokeWidthProperty;
    property MinStrokeWidthProperty: IDependencyProperty read get_MinStrokeWidthProperty;
    property PaletteProperty: IDependencyProperty read get_PaletteProperty;
    property SelectedBrushIndexProperty: IDependencyProperty read get_SelectedBrushIndexProperty;
    property SelectedBrushProperty: IDependencyProperty read get_SelectedBrushProperty;
    property SelectedStrokeWidthProperty: IDependencyProperty read get_SelectedStrokeWidthProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControl
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPenConfigurationControl)]
  IInkToolbarPenConfigurationControl = interface(IInspectable)
  ['{601AE5F6-28A5-44CC-89A6-380E91A572DD}']
    function get_PenButton: IInkToolbarPenButton; safecall;
    property PenButton: IInkToolbarPenButton read get_PenButton;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPenConfigurationControl)]
  IInkToolbarPenConfigurationControlFactory = interface(IInspectable)
  ['{67F065EE-F5E7-46EB-9187-8D3CA3AF891B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarPenConfigurationControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPenConfigurationControl)]
  IInkToolbarPenConfigurationControlStatics = interface(IInspectable)
  ['{48A61BEF-19CE-41BB-ABE0-7C8726FAE75E}']
    function get_PenButtonProperty: IDependencyProperty; safecall;
    property PenButtonProperty: IDependencyProperty read get_PenButtonProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPencilButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPencilButton)]
  IInkToolbarPencilButton = interface(IInspectable)
  ['{5B112832-1984-4148-9F25-382B35DB087F}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarPencilButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarPencilButton)]
  IInkToolbarPencilButtonFactory = interface(IInspectable)
  ['{DB66D85F-CFD6-495F-93AB-B8566AF9F8AF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarPencilButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarRulerButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarRulerButton)]
  IInkToolbarRulerButton = interface(IInspectable)
  ['{4A992832-1984-4148-9F25-382B35DB087F}']
    function get_Ruler: IInkPresenterRuler; safecall;
    property Ruler: IInkPresenterRuler read get_Ruler;
  end deprecated;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarRulerButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarRulerButton)]
  IInkToolbarRulerButtonFactory = interface(IInspectable)
  ['{BB26D85F-CFD6-495F-93AB-B8566AF9F8AF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarRulerButton; safecall;
  end deprecated;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarRulerButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarRulerButton)]
  IInkToolbarRulerButtonStatics = interface(IInspectable)
  ['{BAE75F65-BE30-4BEE-964B-FF9E498FEE37}']
    function get_RulerProperty: IDependencyProperty; safecall;
    property RulerProperty: IDependencyProperty read get_RulerProperty;
  end deprecated;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbar)]
  IInkToolbarStatics = interface(IInspectable)
  ['{A3B493BB-CB4F-4E6B-A33D-F11E7A295EFA}']
    function get_InitialControlsProperty: IDependencyProperty; safecall;
    function get_ChildrenProperty: IDependencyProperty; safecall;
    function get_ActiveToolProperty: IDependencyProperty; safecall;
    function get_InkDrawingAttributesProperty: IDependencyProperty; safecall;
    function get_IsRulerButtonCheckedProperty: IDependencyProperty; safecall;
    function get_TargetInkCanvasProperty: IDependencyProperty; safecall;
    property ActiveToolProperty: IDependencyProperty read get_ActiveToolProperty;
    property ChildrenProperty: IDependencyProperty read get_ChildrenProperty;
    property InitialControlsProperty: IDependencyProperty read get_InitialControlsProperty;
    property InkDrawingAttributesProperty: IDependencyProperty read get_InkDrawingAttributesProperty;
    property IsRulerButtonCheckedProperty: IDependencyProperty read get_IsRulerButtonCheckedProperty;
    property TargetInkCanvasProperty: IDependencyProperty read get_TargetInkCanvasProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbar)]
  IInkToolbarStatics2 = interface(IInspectable)
  ['{AAC1F8F2-2C1F-4E9C-B3F3-31FF22B51C7A}']
    function get_IsStencilButtonCheckedProperty: IDependencyProperty; safecall;
    function get_ButtonFlyoutPlacementProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    property ButtonFlyoutPlacementProperty: IDependencyProperty read get_ButtonFlyoutPlacementProperty;
    property IsStencilButtonCheckedProperty: IDependencyProperty read get_IsStencilButtonCheckedProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbar)]
  IInkToolbarStatics3 = interface(IInspectable)
  ['{A0EE663D-B63F-516E-A0A4-0704C4544D62}']
    function get_TargetInkPresenterProperty: IDependencyProperty; safecall;
    property TargetInkPresenterProperty: IDependencyProperty read get_TargetInkPresenterProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarStencilButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarStencilButton)]
  IInkToolbarStencilButtonFactory = interface(IInspectable)
  ['{A20701D1-8A70-4D77-89D4-1730A3A58EDF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarStencilButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarStencilButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarStencilButton)]
  IInkToolbarStencilButtonStatics = interface(IInspectable)
  ['{4748C07F-63E4-420D-939A-6B7243E9D124}']
    function get_RulerProperty: IDependencyProperty; safecall;
    function get_ProtractorProperty: IDependencyProperty; safecall;
    function get_SelectedStencilProperty: IDependencyProperty; safecall;
    function get_IsRulerItemVisibleProperty: IDependencyProperty; safecall;
    function get_IsProtractorItemVisibleProperty: IDependencyProperty; safecall;
    property IsProtractorItemVisibleProperty: IDependencyProperty read get_IsProtractorItemVisibleProperty;
    property IsRulerItemVisibleProperty: IDependencyProperty read get_IsRulerItemVisibleProperty;
    property ProtractorProperty: IDependencyProperty read get_ProtractorProperty;
    property RulerProperty: IDependencyProperty read get_RulerProperty;
    property SelectedStencilProperty: IDependencyProperty read get_SelectedStencilProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarToggleButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarToggleButton)]
  IInkToolbarToggleButtonFactory = interface(IInspectable)
  ['{B2F90710-E5A1-4365-9D1A-E5B7AD8B9668}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarToolButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarToolButton)]
  IInkToolbarToolButtonFactory = interface(IInspectable)
  ['{6293BF4B-89FE-4ED0-A1A6-88D3EBA917B2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInkToolbarToolButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_InkToolbarToolButton)]
  IInkToolbarToolButtonStatics = interface(IInspectable)
  ['{9E097D18-D136-4EF6-B0FD-1A78C2884A01}']
    function get_IsExtensionGlyphShownProperty: IDependencyProperty; safecall;
    property IsExtensionGlyphShownProperty: IDependencyProperty read get_IsExtensionGlyphShownProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IInsertionPanel
  IInsertionPanel = interface(IInspectable)
  ['{6B8DE08F-6527-4D39-BCBF-58B01DA923D7}']
    procedure GetInsertionIndexes(position: TPointF; out first: Integer; out second: Integer); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs
  IIsTextTrimmedChangedEventArgs = interface(IInspectable)
  ['{16F597CD-EBFF-4FB4-8714-26147418B945}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemContainerMapping
  IItemContainerMapping = interface(IInspectable)
  ['{53C9F23A-F25D-446A-99B8-C7AEB839050F}']
    function ItemFromContainer(container: IDependencyObject): IInspectable; safecall;
    function ContainerFromItem(item: IInspectable): IDependencyObject; safecall;
    function IndexFromContainer(container: IDependencyObject): Integer; safecall;
    function ContainerFromIndex(index: Integer): IDependencyObject; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsControl2
  IItemsControl2 = interface(IInspectable)
  ['{754C3266-0529-45E3-8748-BF747D158357}']
    function get_ItemsPanelRoot: IPanel; safecall;
    property ItemsPanelRoot: IPanel read get_ItemsPanelRoot;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsControl3
  IItemsControl3 = interface(IInspectable)
  ['{502B7489-AEE4-4DE3-A2AB-195AC20C4212}']
    function GroupHeaderContainerFromItemContainer(itemContainer: IDependencyObject): IDependencyObject; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsControlFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsControl)]
  IItemsControlFactory = interface(IInspectable)
  ['{F7BBC359-F8FD-471C-BCB2-2C74BE8EBF8C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsControlOverrides
  IItemsControlOverrides = interface(IInspectable)
  ['{C79BB41B-A084-4301-A496-72971F364ED1}']
    function IsItemItsOwnContainerOverride(item: IInspectable): Boolean; safecall;
    function GetContainerForItemOverride: IDependencyObject; safecall;
    procedure ClearContainerForItemOverride(element: IDependencyObject; item: IInspectable); safecall;
    procedure PrepareContainerForItemOverride(element: IDependencyObject; item: IInspectable); safecall;
    procedure OnItemsChanged(e: IInspectable); safecall;
    procedure OnItemContainerStyleChanged(oldItemContainerStyle: IStyle; newItemContainerStyle: IStyle); safecall;
    procedure OnItemContainerStyleSelectorChanged(oldItemContainerStyleSelector: IStyleSelector; newItemContainerStyleSelector: IStyleSelector); safecall;
    procedure OnItemTemplateChanged(oldItemTemplate: IDataTemplate; newItemTemplate: IDataTemplate); safecall;
    procedure OnItemTemplateSelectorChanged(oldItemTemplateSelector: IDataTemplateSelector; newItemTemplateSelector: IDataTemplateSelector); safecall;
    procedure OnGroupStyleSelectorChanged(oldGroupStyleSelector: IGroupStyleSelector; newGroupStyleSelector: IGroupStyleSelector); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsControl)]
  IItemsControlStatics = interface(IInspectable)
  ['{37DABD89-DCFB-45B8-9AFE-874DF097905E}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_ItemTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ItemsPanelProperty: IDependencyProperty; safecall;
    function get_DisplayMemberPathProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleSelectorProperty: IDependencyProperty; safecall;
    function get_ItemContainerTransitionsProperty: IDependencyProperty; safecall;
    function get_GroupStyleSelectorProperty: IDependencyProperty; safecall;
    function get_IsGroupingProperty: IDependencyProperty; safecall;
    function GetItemsOwner(element: IDependencyObject): IItemsControl; safecall;
    function ItemsControlFromItemContainer(container: IDependencyObject): IItemsControl; safecall;
    property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    property GroupStyleSelectorProperty: IDependencyProperty read get_GroupStyleSelectorProperty;
    property IsGroupingProperty: IDependencyProperty read get_IsGroupingProperty;
    property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    property ItemsPanelProperty: IDependencyProperty read get_ItemsPanelProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsPickedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsPickedEventArgs)]
  IItemsPickedEventArgs = interface(IInspectable)
  ['{F95B9AAC-A621-488E-9156-8EE31165BE04}']
    function get_AddedItems: IVector_1__IInspectable; safecall;
    function get_RemovedItems: IVector_1__IInspectable; safecall;
    property AddedItems: IVector_1__IInspectable read get_AddedItems;
    property RemovedItems: IVector_1__IInspectable read get_RemovedItems;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsPresenter)]
  IItemsPresenter = interface(IInspectable)
  ['{C271569B-6DCA-4E2B-8E14-C55136B02A71}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_HeaderTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_HeaderTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property HeaderTransitions: IVector_1__Animation_ITransition read get_HeaderTransitions write put_HeaderTransitions;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsPresenter2
  IItemsPresenter2 = interface(IInspectable)
  ['{5C04AA33-1DF3-4731-A4C9-DA818378D63D}']
    function get_Footer: IInspectable; safecall;
    procedure put_Footer(value: IInspectable); safecall;
    function get_FooterTemplate: IDataTemplate; safecall;
    procedure put_FooterTemplate(value: IDataTemplate); safecall;
    function get_FooterTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_FooterTransitions(value: IVector_1__Animation_ITransition); safecall;
    property Footer: IInspectable read get_Footer write put_Footer;
    property FooterTemplate: IDataTemplate read get_FooterTemplate write put_FooterTemplate;
    property FooterTransitions: IVector_1__Animation_ITransition read get_FooterTransitions write put_FooterTransitions;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsPresenterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsPresenter)]
  IItemsPresenterStatics = interface(IInspectable)
  ['{18DE66CD-4A6C-4B2E-AA86-CB126C9A2920}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_HeaderTransitionsProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsPresenterStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsPresenter)]
  IItemsPresenterStatics2 = interface(IInspectable)
  ['{8971632E-7867-4D66-9630-29F1C5F7403F}']
    function get_FooterProperty: IDependencyProperty; safecall;
    function get_FooterTemplateProperty: IDependencyProperty; safecall;
    function get_FooterTransitionsProperty: IDependencyProperty; safecall;
    property FooterProperty: IDependencyProperty read get_FooterProperty;
    property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsStackPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsStackPanel)]
  IItemsStackPanel = interface(IInspectable)
  ['{DF7AB79D-7AD5-4B58-9363-919AF90226E6}']
    function get_GroupPadding: Thickness; safecall;
    procedure put_GroupPadding(value: Thickness); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_FirstCacheIndex: Integer; safecall;
    function get_FirstVisibleIndex: Integer; safecall;
    function get_LastVisibleIndex: Integer; safecall;
    function get_LastCacheIndex: Integer; safecall;
    function get_ScrollingDirection: PanelScrollingDirection; safecall;
    function get_GroupHeaderPlacement: Primitives_GroupHeaderPlacement; safecall;
    procedure put_GroupHeaderPlacement(value: Primitives_GroupHeaderPlacement); safecall;
    function get_ItemsUpdatingScrollMode: ItemsUpdatingScrollMode; safecall;
    procedure put_ItemsUpdatingScrollMode(value: ItemsUpdatingScrollMode); safecall;
    function get_CacheLength: Double; safecall;
    procedure put_CacheLength(value: Double); safecall;
    property CacheLength: Double read get_CacheLength write put_CacheLength;
    property FirstCacheIndex: Integer read get_FirstCacheIndex;
    property FirstVisibleIndex: Integer read get_FirstVisibleIndex;
    property GroupHeaderPlacement: Primitives_GroupHeaderPlacement read get_GroupHeaderPlacement write put_GroupHeaderPlacement;
    property GroupPadding: Thickness read get_GroupPadding write put_GroupPadding;
    property ItemsUpdatingScrollMode_: ItemsUpdatingScrollMode read get_ItemsUpdatingScrollMode write put_ItemsUpdatingScrollMode;
    property LastCacheIndex: Integer read get_LastCacheIndex;
    property LastVisibleIndex: Integer read get_LastVisibleIndex;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property ScrollingDirection: PanelScrollingDirection read get_ScrollingDirection;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsStackPanel2
  IItemsStackPanel2 = interface(IInspectable)
  ['{EEEECDB0-00B4-4534-937B-56318B293E92}']
    function get_AreStickyGroupHeadersEnabled: Boolean; safecall;
    procedure put_AreStickyGroupHeadersEnabled(value: Boolean); safecall;
    property AreStickyGroupHeadersEnabled: Boolean read get_AreStickyGroupHeadersEnabled write put_AreStickyGroupHeadersEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsStackPanelStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsStackPanel)]
  IItemsStackPanelStatics = interface(IInspectable)
  ['{CA25D63F-044F-4B6B-B315-0B60E0B4F87D}']
    function get_GroupPaddingProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_GroupHeaderPlacementProperty: IDependencyProperty; safecall;
    function get_CacheLengthProperty: IDependencyProperty; safecall;
    property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsStackPanelStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsStackPanel)]
  IItemsStackPanelStatics2 = interface(IInspectable)
  ['{3972EB2C-384A-48BF-ADFD-772E2572C504}']
    function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; safecall;
    property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsWrapGrid
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsWrapGrid)]
  IItemsWrapGrid = interface(IInspectable)
  ['{DDFE6B5F-BA88-4A7D-8A5B-E58CAF0F4E2D}']
    function get_GroupPadding: Thickness; safecall;
    procedure put_GroupPadding(value: Thickness); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_MaximumRowsOrColumns: Integer; safecall;
    procedure put_MaximumRowsOrColumns(value: Integer); safecall;
    function get_ItemWidth: Double; safecall;
    procedure put_ItemWidth(value: Double); safecall;
    function get_ItemHeight: Double; safecall;
    procedure put_ItemHeight(value: Double); safecall;
    function get_FirstCacheIndex: Integer; safecall;
    function get_FirstVisibleIndex: Integer; safecall;
    function get_LastVisibleIndex: Integer; safecall;
    function get_LastCacheIndex: Integer; safecall;
    function get_ScrollingDirection: PanelScrollingDirection; safecall;
    function get_GroupHeaderPlacement: Primitives_GroupHeaderPlacement; safecall;
    procedure put_GroupHeaderPlacement(value: Primitives_GroupHeaderPlacement); safecall;
    function get_CacheLength: Double; safecall;
    procedure put_CacheLength(value: Double); safecall;
    property CacheLength: Double read get_CacheLength write put_CacheLength;
    property FirstCacheIndex: Integer read get_FirstCacheIndex;
    property FirstVisibleIndex: Integer read get_FirstVisibleIndex;
    property GroupHeaderPlacement: Primitives_GroupHeaderPlacement read get_GroupHeaderPlacement write put_GroupHeaderPlacement;
    property GroupPadding: Thickness read get_GroupPadding write put_GroupPadding;
    property ItemHeight: Double read get_ItemHeight write put_ItemHeight;
    property ItemWidth: Double read get_ItemWidth write put_ItemWidth;
    property LastCacheIndex: Integer read get_LastCacheIndex;
    property LastVisibleIndex: Integer read get_LastVisibleIndex;
    property MaximumRowsOrColumns: Integer read get_MaximumRowsOrColumns write put_MaximumRowsOrColumns;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property ScrollingDirection: PanelScrollingDirection read get_ScrollingDirection;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsWrapGrid2
  IItemsWrapGrid2 = interface(IInspectable)
  ['{80C21C0F-63EC-4258-BD61-D4A6956C864A}']
    function get_AreStickyGroupHeadersEnabled: Boolean; safecall;
    procedure put_AreStickyGroupHeadersEnabled(value: Boolean); safecall;
    property AreStickyGroupHeadersEnabled: Boolean read get_AreStickyGroupHeadersEnabled write put_AreStickyGroupHeadersEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsWrapGridStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsWrapGrid)]
  IItemsWrapGridStatics = interface(IInspectable)
  ['{4EC5427D-24A0-449A-B763-3077BA0F2DD5}']
    function get_GroupPaddingProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_MaximumRowsOrColumnsProperty: IDependencyProperty; safecall;
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_GroupHeaderPlacementProperty: IDependencyProperty; safecall;
    function get_CacheLengthProperty: IDependencyProperty; safecall;
    property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IItemsWrapGridStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ItemsWrapGrid)]
  IItemsWrapGridStatics2 = interface(IInspectable)
  ['{2E27D3F7-FEAA-478D-BFD1-29338ADC5A03}']
    function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; safecall;
    property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListBox2
  IListBox2 = interface(IInspectable)
  ['{70572ABA-8AD1-4085-9350-DEEE359294E3}']
    function get_SingleSelectionFollowsFocus: Boolean; safecall;
    procedure put_SingleSelectionFollowsFocus(value: Boolean); safecall;
    property SingleSelectionFollowsFocus: Boolean read get_SingleSelectionFollowsFocus write put_SingleSelectionFollowsFocus;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListBoxFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListBox)]
  IListBoxFactory = interface(IInspectable)
  ['{60CDFDA2-2F44-444B-9C94-B8C9FDA46F59}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListBoxItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListBoxItem)]
  IListBoxItemFactory = interface(IInspectable)
  ['{4398B8D4-A3DE-402C-B23D-190384B27CA8}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBoxItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListBoxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListBox)]
  IListBoxStatics = interface(IInspectable)
  ['{6D3F7F73-706A-4E53-A9AA-C9A53C9CDD70}']
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListBoxStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListBox)]
  IListBoxStatics2 = interface(IInspectable)
  ['{0089ADEB-B709-4C8D-B1ED-4A7D97EE7716}']
    function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; safecall;
    property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListPickerFlyout,Windows.UI.Xaml.Controls.IItemsPickedEventArgs>
  TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs_Delegate_Base = interface(IUnknown)
  ['{46C68740-3F79-593F-A85F-4248127948C6}']
    procedure Invoke(sender: IListPickerFlyout; args: IItemsPickedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListPickerFlyout,Windows.UI.Xaml.Controls.IItemsPickedEventArgs>
  TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs = interface(TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs_Delegate_Base)
  ['{2C75FE71-5247-5E25-862B-C51930AAF2CC}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListPickerFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListPickerFlyout)]
  IListPickerFlyout = interface(IInspectable)
  ['{0F0CB9D7-E5F3-45E6-9063-FF7BBB193C47}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function get_DisplayMemberPath: HSTRING; safecall;
    procedure put_DisplayMemberPath(value: HSTRING); safecall;
    function get_SelectionMode: ListPickerFlyoutSelectionMode; safecall;
    procedure put_SelectionMode(value: ListPickerFlyoutSelectionMode); safecall;
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_SelectedValue: IInspectable; safecall;
    procedure put_SelectedValue(value: IInspectable); safecall;
    function get_SelectedValuePath: HSTRING; safecall;
    procedure put_SelectedValuePath(value: HSTRING); safecall;
    function get_SelectedItems: IVector_1__IInspectable; safecall;
    function add_ItemsPicked(handler: TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ItemsPicked(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__IVectorView_1__IInspectable; safecall;
    property DisplayMemberPath: HSTRING read get_DisplayMemberPath write put_DisplayMemberPath;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property SelectedItems: IVector_1__IInspectable read get_SelectedItems;
    property SelectedValue: IInspectable read get_SelectedValue write put_SelectedValue;
    property SelectedValuePath: HSTRING read get_SelectedValuePath write put_SelectedValuePath;
    property SelectionMode: ListPickerFlyoutSelectionMode read get_SelectionMode write put_SelectionMode;
  end;

  // Windows.UI.Xaml.Controls.IListPickerFlyoutPresenter
  IListPickerFlyoutPresenter = interface(IInspectable)
  ['{68155FB3-883E-417A-80D0-E2FD88410084}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListPickerFlyoutStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListPickerFlyout)]
  IListPickerFlyoutStatics = interface(IInspectable)
  ['{FEE25B97-8B96-4602-81D2-82FD8E0F7EA8}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_DisplayMemberPathProperty: IDependencyProperty; safecall;
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_SelectedValueProperty: IDependencyProperty; safecall;
    function get_SelectedValuePathProperty: IDependencyProperty; safecall;
    property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBase2
  IListViewBase2 = interface(IInspectable)
  ['{D1C2A4F7-78A3-4491-86E0-2DDEBC007AC5}']
    function get_ShowsScrollingPlaceholders: Boolean; safecall;
    procedure put_ShowsScrollingPlaceholders(value: Boolean); safecall;
    function add_ContainerContentChanging(handler: TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_ContainerContentChanging(token: EventRegistrationToken); safecall;
    procedure SetDesiredContainerUpdateDuration(duration: TimeSpan); safecall;
    function get_Footer: IInspectable; safecall;
    procedure put_Footer(value: IInspectable); safecall;
    function get_FooterTemplate: IDataTemplate; safecall;
    procedure put_FooterTemplate(value: IDataTemplate); safecall;
    function get_FooterTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_FooterTransitions(value: IVector_1__Animation_ITransition); safecall;
    property Footer: IInspectable read get_Footer write put_Footer;
    property FooterTemplate: IDataTemplate read get_FooterTemplate write put_FooterTemplate;
    property FooterTransitions: IVector_1__Animation_ITransition read get_FooterTransitions write put_FooterTransitions;
    property ShowsScrollingPlaceholders: Boolean read get_ShowsScrollingPlaceholders write put_ShowsScrollingPlaceholders;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBase3
  IListViewBase3 = interface(IInspectable)
  ['{B364C035-0A13-406F-A3FB-F30E7DDCA94C}']
    function get_ReorderMode: ListViewReorderMode; safecall;
    procedure put_ReorderMode(value: ListViewReorderMode); safecall;
    property ReorderMode: ListViewReorderMode read get_ReorderMode write put_ReorderMode;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs>
  TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs_Delegate_Base = interface(IUnknown)
  ['{586D1C88-E27E-58AD-8E2F-7E6E83D81E40}']
    procedure Invoke(sender: IListViewBase; args: IDragItemsCompletedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs>
  TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs = interface(TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs_Delegate_Base)
  ['{13DD76E1-1B9E-51FE-8D42-243441597C94}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs>
  TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs_Delegate_Base = interface(IUnknown)
  ['{F06FC999-61E1-5D3F-B0AC-69F2EE9E4D64}']
    procedure Invoke(sender: IListViewBase; args: IChoosingItemContainerEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs>
  TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs = interface(TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs_Delegate_Base)
  ['{FBEA5B6D-ADED-55AC-AFD4-8FB71115ECF2}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs>
  TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs_Delegate_Base = interface(IUnknown)
  ['{4F5971D1-BAE9-56F4-ACD6-0A8246A6F255}']
    procedure Invoke(sender: IListViewBase; args: IChoosingGroupHeaderContainerEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IListViewBase,Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs>
  TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs = interface(TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs_Delegate_Base)
  ['{5DAF42ED-93DA-5DA1-AAA2-976CAFEC73F2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBase4
  IListViewBase4 = interface(IInspectable)
  ['{18B7792B-11DC-4EB6-A7BC-741ADB3EEB79}']
    function get_SelectedRanges: IVectorView_1__Data_IItemIndexRange; safecall;
    function get_IsMultiSelectCheckBoxEnabled: Boolean; safecall;
    procedure put_IsMultiSelectCheckBoxEnabled(value: Boolean); safecall;
    function add_DragItemsCompleted(handler: TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DragItemsCompleted(token: EventRegistrationToken); safecall;
    function add_ChoosingItemContainer(handler: TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs): EventRegistrationToken; safecall;
    procedure remove_ChoosingItemContainer(token: EventRegistrationToken); safecall;
    function add_ChoosingGroupHeaderContainer(handler: TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs): EventRegistrationToken; safecall;
    procedure remove_ChoosingGroupHeaderContainer(token: EventRegistrationToken); safecall;
    procedure SelectRange(itemIndexRange: Data_IItemIndexRange); safecall;
    procedure DeselectRange(itemIndexRange: Data_IItemIndexRange); safecall;
    property IsMultiSelectCheckBoxEnabled: Boolean read get_IsMultiSelectCheckBoxEnabled write put_IsMultiSelectCheckBoxEnabled;
    property SelectedRanges: IVectorView_1__Data_IItemIndexRange read get_SelectedRanges;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBase5
  IListViewBase5 = interface(IInspectable)
  ['{1A9C6E99-1719-4B80-B335-628331A07019}']
    function get_SingleSelectionFollowsFocus: Boolean; safecall;
    procedure put_SingleSelectionFollowsFocus(value: Boolean); safecall;
    function IsDragSource: Boolean; safecall;
    property SingleSelectionFollowsFocus: Boolean read get_SingleSelectionFollowsFocus write put_SingleSelectionFollowsFocus;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBase6
  IListViewBase6 = interface(IInspectable)
  ['{F8A42637-965B-483B-94E5-E5C9FEF0E352}']
    function TryStartConnectedAnimationAsync(animation: Animation_IConnectedAnimation; item: IInspectable; elementName: HSTRING): IAsyncOperation_1__Boolean; safecall;
    function PrepareConnectedAnimation(key: HSTRING; item: IInspectable; elementName: HSTRING): Animation_IConnectedAnimation; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseFactory = interface(IInspectable)
  ['{E67E6C7F-150F-46D0-A6AC-C5002BD9CA53}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBaseHeaderItem)]
  IListViewBaseHeaderItemFactory = interface(IInspectable)
  ['{3872A6A1-EA19-455F-9DF7-147CC41D329C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseStatics = interface(IInspectable)
  ['{8532B8F7-3E16-455B-89A8-C1346223F6D3}']
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    function get_IsSwipeEnabledProperty: IDependencyProperty; safecall;
    function get_CanDragItemsProperty: IDependencyProperty; safecall;
    function get_CanReorderItemsProperty: IDependencyProperty; safecall;
    function get_IsItemClickEnabledProperty: IDependencyProperty; safecall;
    function get_DataFetchSizeProperty: IDependencyProperty; safecall;
    function get_IncrementalLoadingThresholdProperty: IDependencyProperty; safecall;
    function get_IncrementalLoadingTriggerProperty: IDependencyProperty; safecall;
    function get_SemanticZoomOwnerProperty: IDependencyProperty; safecall;
    function get_IsActiveViewProperty: IDependencyProperty; safecall;
    function get_IsZoomedInViewProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_HeaderTransitionsProperty: IDependencyProperty; safecall;
    property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    property DataFetchSizeProperty: IDependencyProperty read get_DataFetchSizeProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    property IncrementalLoadingThresholdProperty: IDependencyProperty read get_IncrementalLoadingThresholdProperty;
    property IncrementalLoadingTriggerProperty: IDependencyProperty read get_IncrementalLoadingTriggerProperty;
    property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    property IsItemClickEnabledProperty: IDependencyProperty read get_IsItemClickEnabledProperty;
    property IsSwipeEnabledProperty: IDependencyProperty read get_IsSwipeEnabledProperty;
    property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseStatics2 = interface(IInspectable)
  ['{821C00C8-78CC-411F-9F2E-A55758227F3E}']
    function get_ShowsScrollingPlaceholdersProperty: IDependencyProperty; safecall;
    function get_FooterProperty: IDependencyProperty; safecall;
    function get_FooterTemplateProperty: IDependencyProperty; safecall;
    function get_FooterTransitionsProperty: IDependencyProperty; safecall;
    property FooterProperty: IDependencyProperty read get_FooterProperty;
    property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
    property ShowsScrollingPlaceholdersProperty: IDependencyProperty read get_ShowsScrollingPlaceholdersProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseStatics3 = interface(IInspectable)
  ['{3B539091-31C6-4D0C-90AF-5DC1D6AE9C05}']
    function get_ReorderModeProperty: IDependencyProperty; safecall;
    property ReorderModeProperty: IDependencyProperty read get_ReorderModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseStatics4 = interface(IInspectable)
  ['{AD13258B-FBD0-4F18-8BF8-9B8613951C22}']
    function get_IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty; safecall;
    property IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty read get_IsMultiSelectCheckBoxEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewBaseStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseStatics5 = interface(IInspectable)
  ['{40346FCF-0476-4259-895F-A6569738620F}']
    function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; safecall;
    property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListView)]
  IListViewFactory = interface(IInspectable)
  ['{BDFF696D-3F22-41F9-97A6-883134A76113}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewHeaderItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewHeaderItem)]
  IListViewHeaderItemFactory = interface(IInspectable)
  ['{68D2C96A-96B0-4F08-A7A5-F1086720A0FA}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewHeaderItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewItem)]
  IListViewItemFactory = interface(IInspectable)
  ['{F431073D-9CAC-42A2-82DF-0F4490BC4E2E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewPersistenceHelper
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewPersistenceHelper)]
  IListViewPersistenceHelper = interface(IInspectable)
  ['{05BDE8A6-2191-4B4B-8C22-9B25676E806E}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ListViewItemToKeyHandler
  ListViewItemToKeyHandler = interface(IUnknown)
  ['{6AF5DA76-7E8B-4A91-9A56-460CB47D523F}']
    function Invoke(item: IInspectable): HSTRING; safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ListViewKeyToItemHandler
  ListViewKeyToItemHandler = interface(IUnknown)
  ['{26FD5855-B530-4688-B9F0-428249178EF8}']
    function Invoke(key: HSTRING): IAsyncOperation_1__IInspectable; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IListViewPersistenceHelperStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ListViewPersistenceHelper)]
  IListViewPersistenceHelperStatics = interface(IInspectable)
  ['{6D0C2B08-BB9B-44F9-8063-5C3F9C21884B}']
    function GetRelativeScrollPosition(listViewBase: IListViewBase; itemToKeyHandler: ListViewItemToKeyHandler): HSTRING; safecall;
    function SetRelativeScrollPositionAsync(listViewBase: IListViewBase; relativeScrollPosition: HSTRING; keyToItemHandler: ListViewKeyToItemHandler): IAsyncAction; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaElement2
  IMediaElement2 = interface(IInspectable)
  ['{FD53DA65-B186-4654-BFDB-180ED26CAD07}']
    function get_AreTransportControlsEnabled: Boolean; safecall;
    procedure put_AreTransportControlsEnabled(value: Boolean); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_IsFullWindow: Boolean; safecall;
    procedure put_IsFullWindow(value: Boolean); safecall;
    procedure SetMediaStreamSource(source: Core_IMediaSource); safecall;
    function get_PlayToPreferredSourceUri: IUriRuntimeClass; safecall;
    procedure put_PlayToPreferredSourceUri(value: IUriRuntimeClass); safecall;
    property AreTransportControlsEnabled: Boolean read get_AreTransportControlsEnabled write put_AreTransportControlsEnabled;
    property IsFullWindow: Boolean read get_IsFullWindow write put_IsFullWindow;
    property PlayToPreferredSourceUri: IUriRuntimeClass read get_PlayToPreferredSourceUri write put_PlayToPreferredSourceUri;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaElement3
  IMediaElement3 = interface(IInspectable)
  ['{479F6F13-0FDB-4ED8-928A-4D39169C3CD2}']
    function get_TransportControls: IMediaTransportControls; safecall;
    procedure put_TransportControls(value: IMediaTransportControls); safecall;
    function add_PartialMediaFailureDetected(handler: TypedEventHandler_2__IMediaElement__IPartialMediaFailureDetectedEventArgs): EventRegistrationToken; safecall;
    procedure remove_PartialMediaFailureDetected(token: EventRegistrationToken); safecall;
    procedure SetPlaybackSource(source: Playback_IMediaPlaybackSource); safecall;
    function GetAsCastingSource: Casting_ICastingSource; safecall;
    property TransportControls: IMediaTransportControls read get_TransportControls write put_TransportControls;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaElementStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaElement)]
  IMediaElementStatics = interface(IInspectable)
  ['{DCCD2CB9-7568-4682-A72A-8DDF2A2665CA}']
    function get_PosterSourceProperty: IDependencyProperty; safecall;
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_IsMutedProperty: IDependencyProperty; safecall;
    function get_IsAudioOnlyProperty: IDependencyProperty; safecall;
    function get_AutoPlayProperty: IDependencyProperty; safecall;
    function get_VolumeProperty: IDependencyProperty; safecall;
    function get_BalanceProperty: IDependencyProperty; safecall;
    function get_NaturalVideoHeightProperty: IDependencyProperty; safecall;
    function get_NaturalVideoWidthProperty: IDependencyProperty; safecall;
    function get_NaturalDurationProperty: IDependencyProperty; safecall;
    function get_PositionProperty: IDependencyProperty; safecall;
    function get_DownloadProgressProperty: IDependencyProperty; safecall;
    function get_BufferingProgressProperty: IDependencyProperty; safecall;
    function get_DownloadProgressOffsetProperty: IDependencyProperty; safecall;
    function get_CurrentStateProperty: IDependencyProperty; safecall;
    function get_CanSeekProperty: IDependencyProperty; safecall;
    function get_CanPauseProperty: IDependencyProperty; safecall;
    function get_AudioStreamCountProperty: IDependencyProperty; safecall;
    function get_AudioStreamIndexProperty: IDependencyProperty; safecall;
    function get_PlaybackRateProperty: IDependencyProperty; safecall;
    function get_IsLoopingProperty: IDependencyProperty; safecall;
    function get_PlayToSourceProperty: IDependencyProperty; safecall;
    function get_DefaultPlaybackRateProperty: IDependencyProperty; safecall;
    function get_AspectRatioWidthProperty: IDependencyProperty; safecall;
    function get_AspectRatioHeightProperty: IDependencyProperty; safecall;
    function get_RealTimePlaybackProperty: IDependencyProperty; safecall;
    function get_AudioCategoryProperty: IDependencyProperty; safecall;
    function get_AudioDeviceTypeProperty: IDependencyProperty; safecall;
    function get_ProtectionManagerProperty: IDependencyProperty; safecall;
    function get_Stereo3DVideoPackingModeProperty: IDependencyProperty; safecall;
    function get_Stereo3DVideoRenderModeProperty: IDependencyProperty; safecall;
    function get_IsStereo3DVideoProperty: IDependencyProperty; safecall;
    function get_ActualStereo3DVideoPackingModeProperty: IDependencyProperty; safecall;
    property ActualStereo3DVideoPackingModeProperty: IDependencyProperty read get_ActualStereo3DVideoPackingModeProperty;
    property AspectRatioHeightProperty: IDependencyProperty read get_AspectRatioHeightProperty;
    property AspectRatioWidthProperty: IDependencyProperty read get_AspectRatioWidthProperty;
    property AudioCategoryProperty: IDependencyProperty read get_AudioCategoryProperty;
    property AudioDeviceTypeProperty: IDependencyProperty read get_AudioDeviceTypeProperty;
    property AudioStreamCountProperty: IDependencyProperty read get_AudioStreamCountProperty;
    property AudioStreamIndexProperty: IDependencyProperty read get_AudioStreamIndexProperty;
    property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    property BalanceProperty: IDependencyProperty read get_BalanceProperty;
    property BufferingProgressProperty: IDependencyProperty read get_BufferingProgressProperty;
    property CanPauseProperty: IDependencyProperty read get_CanPauseProperty;
    property CanSeekProperty: IDependencyProperty read get_CanSeekProperty;
    property CurrentStateProperty: IDependencyProperty read get_CurrentStateProperty;
    property DefaultPlaybackRateProperty: IDependencyProperty read get_DefaultPlaybackRateProperty;
    property DownloadProgressOffsetProperty: IDependencyProperty read get_DownloadProgressOffsetProperty;
    property DownloadProgressProperty: IDependencyProperty read get_DownloadProgressProperty;
    property IsAudioOnlyProperty: IDependencyProperty read get_IsAudioOnlyProperty;
    property IsLoopingProperty: IDependencyProperty read get_IsLoopingProperty;
    property IsMutedProperty: IDependencyProperty read get_IsMutedProperty;
    property IsStereo3DVideoProperty: IDependencyProperty read get_IsStereo3DVideoProperty;
    property NaturalDurationProperty: IDependencyProperty read get_NaturalDurationProperty;
    property NaturalVideoHeightProperty: IDependencyProperty read get_NaturalVideoHeightProperty;
    property NaturalVideoWidthProperty: IDependencyProperty read get_NaturalVideoWidthProperty;
    property PlayToSourceProperty: IDependencyProperty read get_PlayToSourceProperty;
    property PlaybackRateProperty: IDependencyProperty read get_PlaybackRateProperty;
    property PositionProperty: IDependencyProperty read get_PositionProperty;
    property PosterSourceProperty: IDependencyProperty read get_PosterSourceProperty;
    property ProtectionManagerProperty: IDependencyProperty read get_ProtectionManagerProperty;
    property RealTimePlaybackProperty: IDependencyProperty read get_RealTimePlaybackProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property Stereo3DVideoPackingModeProperty: IDependencyProperty read get_Stereo3DVideoPackingModeProperty;
    property Stereo3DVideoRenderModeProperty: IDependencyProperty read get_Stereo3DVideoRenderModeProperty;
    property VolumeProperty: IDependencyProperty read get_VolumeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaElementStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaElement)]
  IMediaElementStatics2 = interface(IInspectable)
  ['{9EE7F826-F154-4DC6-8014-A6EBA987F847}']
    function get_AreTransportControlsEnabledProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_IsFullWindowProperty: IDependencyProperty; safecall;
    function get_PlayToPreferredSourceUriProperty: IDependencyProperty; safecall;
    property AreTransportControlsEnabledProperty: IDependencyProperty read get_AreTransportControlsEnabledProperty;
    property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    property PlayToPreferredSourceUriProperty: IDependencyProperty read get_PlayToPreferredSourceUriProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaPlayerElementFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaPlayerElement)]
  IMediaPlayerElementFactory = interface(IInspectable)
  ['{77E525C3-EB17-4B8D-889D-1EA8ABDBD4EF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerElement; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaPlayerElementStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaPlayerElement)]
  IMediaPlayerElementStatics = interface(IInspectable)
  ['{1E7C4020-AC57-42DD-AD1C-3EBC2D7F08BA}']
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_AreTransportControlsEnabledProperty: IDependencyProperty; safecall;
    function get_PosterSourceProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_AutoPlayProperty: IDependencyProperty; safecall;
    function get_IsFullWindowProperty: IDependencyProperty; safecall;
    function get_MediaPlayerProperty: IDependencyProperty; safecall;
    property AreTransportControlsEnabledProperty: IDependencyProperty read get_AreTransportControlsEnabledProperty;
    property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    property PosterSourceProperty: IDependencyProperty read get_PosterSourceProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaPlayerPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaPlayerPresenter)]
  IMediaPlayerPresenter = interface(IInspectable)
  ['{77A92326-0C5B-41FC-BF49-15F6C3524B6B}']
    function get_MediaPlayer: Playback_IMediaPlayer; safecall;
    procedure put_MediaPlayer(value: Playback_IMediaPlayer); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_IsFullWindow: Boolean; safecall;
    procedure put_IsFullWindow(value: Boolean); safecall;
    property IsFullWindow: Boolean read get_IsFullWindow write put_IsFullWindow;
    property MediaPlayer: Playback_IMediaPlayer read get_MediaPlayer write put_MediaPlayer;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaPlayerPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaPlayerPresenter)]
  IMediaPlayerPresenterFactory = interface(IInspectable)
  ['{E6766FB7-D96F-4B95-B33C-59E81CB1E9BA}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaPlayerPresenterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaPlayerPresenter)]
  IMediaPlayerPresenterStatics = interface(IInspectable)
  ['{84D774FE-EAD4-4957-B42B-223158CA0DE7}']
    function get_MediaPlayerProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_IsFullWindowProperty: IDependencyProperty; safecall;
    property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControls2
  IMediaTransportControls2 = interface(IInspectable)
  ['{2B89EFEC-1BEA-451E-8BCD-CFE2D9423262}']
    function get_IsSkipForwardButtonVisible: Boolean; safecall;
    procedure put_IsSkipForwardButtonVisible(value: Boolean); safecall;
    function get_IsSkipForwardEnabled: Boolean; safecall;
    procedure put_IsSkipForwardEnabled(value: Boolean); safecall;
    function get_IsSkipBackwardButtonVisible: Boolean; safecall;
    procedure put_IsSkipBackwardButtonVisible(value: Boolean); safecall;
    function get_IsSkipBackwardEnabled: Boolean; safecall;
    procedure put_IsSkipBackwardEnabled(value: Boolean); safecall;
    function get_IsNextTrackButtonVisible: Boolean; safecall;
    procedure put_IsNextTrackButtonVisible(value: Boolean); safecall;
    function get_IsPreviousTrackButtonVisible: Boolean; safecall;
    procedure put_IsPreviousTrackButtonVisible(value: Boolean); safecall;
    function get_FastPlayFallbackBehaviour: FastPlayFallbackBehaviour; safecall;
    procedure put_FastPlayFallbackBehaviour(value: FastPlayFallbackBehaviour); safecall;
    function add_ThumbnailRequested(handler: TypedEventHandler_2__IMediaTransportControls__IMediaTransportControlsThumbnailRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ThumbnailRequested(token: EventRegistrationToken); safecall;
    property FastPlayFallbackBehaviour_: FastPlayFallbackBehaviour read get_FastPlayFallbackBehaviour write put_FastPlayFallbackBehaviour;
    property IsNextTrackButtonVisible: Boolean read get_IsNextTrackButtonVisible write put_IsNextTrackButtonVisible;
    property IsPreviousTrackButtonVisible: Boolean read get_IsPreviousTrackButtonVisible write put_IsPreviousTrackButtonVisible;
    property IsSkipBackwardButtonVisible: Boolean read get_IsSkipBackwardButtonVisible write put_IsSkipBackwardButtonVisible;
    property IsSkipBackwardEnabled: Boolean read get_IsSkipBackwardEnabled write put_IsSkipBackwardEnabled;
    property IsSkipForwardButtonVisible: Boolean read get_IsSkipForwardButtonVisible write put_IsSkipForwardButtonVisible;
    property IsSkipForwardEnabled: Boolean read get_IsSkipForwardEnabled write put_IsSkipForwardEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControls3
  IMediaTransportControls3 = interface(IInspectable)
  ['{5086430E-0940-11E7-93AE-92361F002671}']
    function get_ShowAndHideAutomatically: Boolean; safecall;
    procedure put_ShowAndHideAutomatically(value: Boolean); safecall;
    function get_IsRepeatEnabled: Boolean; safecall;
    procedure put_IsRepeatEnabled(value: Boolean); safecall;
    function get_IsRepeatButtonVisible: Boolean; safecall;
    procedure put_IsRepeatButtonVisible(value: Boolean); safecall;
    procedure Show; safecall;
    procedure Hide; safecall;
    property IsRepeatButtonVisible: Boolean read get_IsRepeatButtonVisible write put_IsRepeatButtonVisible;
    property IsRepeatEnabled: Boolean read get_IsRepeatEnabled write put_IsRepeatEnabled;
    property ShowAndHideAutomatically: Boolean read get_ShowAndHideAutomatically write put_ShowAndHideAutomatically;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControls4
  IMediaTransportControls4 = interface(IInspectable)
  ['{0FB17C58-9F23-11E7-ABC4-CEC278B6B50A}']
    function get_IsCompactOverlayButtonVisible: Boolean; safecall;
    procedure put_IsCompactOverlayButtonVisible(value: Boolean); safecall;
    function get_IsCompactOverlayEnabled: Boolean; safecall;
    procedure put_IsCompactOverlayEnabled(value: Boolean); safecall;
    property IsCompactOverlayButtonVisible: Boolean read get_IsCompactOverlayButtonVisible write put_IsCompactOverlayButtonVisible;
    property IsCompactOverlayEnabled: Boolean read get_IsCompactOverlayEnabled write put_IsCompactOverlayEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControlsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaTransportControls)]
  IMediaTransportControlsFactory = interface(IInspectable)
  ['{1DA2015A-A8E4-4C1B-88C9-0B183ECC62E3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaTransportControls; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControlsHelper
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaTransportControlsHelper)]
  IMediaTransportControlsHelper = interface(IInspectable)
  ['{3D41D509-FF44-4420-807E-8F7A2E2C4251}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControlsHelperStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaTransportControlsHelper)]
  IMediaTransportControlsHelperStatics = interface(IInspectable)
  ['{5A772047-A9A1-4625-9270-7F49875D4394}']
    function get_DropoutOrderProperty: IDependencyProperty; safecall;
    function GetDropoutOrder(element: IUIElement): IReference_1__Integer; safecall;
    procedure SetDropoutOrder(element: IUIElement; value: IReference_1__Integer); safecall;
    property DropoutOrderProperty: IDependencyProperty read get_DropoutOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaTransportControls)]
  IMediaTransportControlsStatics = interface(IInspectable)
  ['{590EA907-D2EF-4C1A-9429-B4B15D64FD56}']
    function get_IsFullWindowButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsFullWindowEnabledProperty: IDependencyProperty; safecall;
    function get_IsZoomButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsZoomEnabledProperty: IDependencyProperty; safecall;
    function get_IsFastForwardButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsFastForwardEnabledProperty: IDependencyProperty; safecall;
    function get_IsFastRewindButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsFastRewindEnabledProperty: IDependencyProperty; safecall;
    function get_IsStopButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsStopEnabledProperty: IDependencyProperty; safecall;
    function get_IsVolumeButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsVolumeEnabledProperty: IDependencyProperty; safecall;
    function get_IsPlaybackRateButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsPlaybackRateEnabledProperty: IDependencyProperty; safecall;
    function get_IsSeekBarVisibleProperty: IDependencyProperty; safecall;
    function get_IsSeekEnabledProperty: IDependencyProperty; safecall;
    function get_IsCompactProperty: IDependencyProperty; safecall;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property IsFastForwardButtonVisibleProperty: IDependencyProperty read get_IsFastForwardButtonVisibleProperty;
    property IsFastForwardEnabledProperty: IDependencyProperty read get_IsFastForwardEnabledProperty;
    property IsFastRewindButtonVisibleProperty: IDependencyProperty read get_IsFastRewindButtonVisibleProperty;
    property IsFastRewindEnabledProperty: IDependencyProperty read get_IsFastRewindEnabledProperty;
    property IsFullWindowButtonVisibleProperty: IDependencyProperty read get_IsFullWindowButtonVisibleProperty;
    property IsFullWindowEnabledProperty: IDependencyProperty read get_IsFullWindowEnabledProperty;
    property IsPlaybackRateButtonVisibleProperty: IDependencyProperty read get_IsPlaybackRateButtonVisibleProperty;
    property IsPlaybackRateEnabledProperty: IDependencyProperty read get_IsPlaybackRateEnabledProperty;
    property IsSeekBarVisibleProperty: IDependencyProperty read get_IsSeekBarVisibleProperty;
    property IsSeekEnabledProperty: IDependencyProperty read get_IsSeekEnabledProperty;
    property IsStopButtonVisibleProperty: IDependencyProperty read get_IsStopButtonVisibleProperty;
    property IsStopEnabledProperty: IDependencyProperty read get_IsStopEnabledProperty;
    property IsVolumeButtonVisibleProperty: IDependencyProperty read get_IsVolumeButtonVisibleProperty;
    property IsVolumeEnabledProperty: IDependencyProperty read get_IsVolumeEnabledProperty;
    property IsZoomButtonVisibleProperty: IDependencyProperty read get_IsZoomButtonVisibleProperty;
    property IsZoomEnabledProperty: IDependencyProperty read get_IsZoomEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaTransportControls)]
  IMediaTransportControlsStatics2 = interface(IInspectable)
  ['{1728CFDC-561F-4386-A7F8-090D95F68D96}']
    function get_IsSkipForwardButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsSkipForwardEnabledProperty: IDependencyProperty; safecall;
    function get_IsSkipBackwardButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsSkipBackwardEnabledProperty: IDependencyProperty; safecall;
    function get_IsNextTrackButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsPreviousTrackButtonVisibleProperty: IDependencyProperty; safecall;
    function get_FastPlayFallbackBehaviourProperty: IDependencyProperty; safecall;
    property FastPlayFallbackBehaviourProperty: IDependencyProperty read get_FastPlayFallbackBehaviourProperty;
    property IsNextTrackButtonVisibleProperty: IDependencyProperty read get_IsNextTrackButtonVisibleProperty;
    property IsPreviousTrackButtonVisibleProperty: IDependencyProperty read get_IsPreviousTrackButtonVisibleProperty;
    property IsSkipBackwardButtonVisibleProperty: IDependencyProperty read get_IsSkipBackwardButtonVisibleProperty;
    property IsSkipBackwardEnabledProperty: IDependencyProperty read get_IsSkipBackwardEnabledProperty;
    property IsSkipForwardButtonVisibleProperty: IDependencyProperty read get_IsSkipForwardButtonVisibleProperty;
    property IsSkipForwardEnabledProperty: IDependencyProperty read get_IsSkipForwardEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaTransportControls)]
  IMediaTransportControlsStatics3 = interface(IInspectable)
  ['{5FE05542-0940-11E7-93AE-92361F002671}']
    function get_ShowAndHideAutomaticallyProperty: IDependencyProperty; safecall;
    function get_IsRepeatEnabledProperty: IDependencyProperty; safecall;
    function get_IsRepeatButtonVisibleProperty: IDependencyProperty; safecall;
    property IsRepeatButtonVisibleProperty: IDependencyProperty read get_IsRepeatButtonVisibleProperty;
    property IsRepeatEnabledProperty: IDependencyProperty read get_IsRepeatEnabledProperty;
    property ShowAndHideAutomaticallyProperty: IDependencyProperty read get_ShowAndHideAutomaticallyProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMediaTransportControlsStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MediaTransportControls)]
  IMediaTransportControlsStatics4 = interface(IInspectable)
  ['{0FB18144-9F23-11E7-ABC4-CEC278B6B50A}']
    function get_IsCompactOverlayButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsCompactOverlayEnabledProperty: IDependencyProperty; safecall;
    property IsCompactOverlayButtonVisibleProperty: IDependencyProperty read get_IsCompactOverlayButtonVisibleProperty;
    property IsCompactOverlayEnabledProperty: IDependencyProperty read get_IsCompactOverlayEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBarFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBar)]
  IMenuBarFactory = interface(IInspectable)
  ['{DC619E50-72BA-513F-80AA-DDD093825DDE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBarItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBarItem)]
  IMenuBarItemFactory = interface(IInspectable)
  ['{ECF86F62-C394-50E2-A568-17AF8CF26874}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBarItemFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBarItemFlyout)]
  IMenuBarItemFlyout = interface(IInspectable)
  ['{ED00D2D8-B686-55FE-8DBB-F04A640E42EF}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBarItemFlyoutFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBarItemFlyout)]
  IMenuBarItemFlyoutFactory = interface(IInspectable)
  ['{1D24F9BD-BD19-5D95-B573-711F649FCBE9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItemFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBarItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBarItem)]
  IMenuBarItemStatics = interface(IInspectable)
  ['{60A9E3FB-B405-50D0-BB78-D396A34DA267}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_ItemsProperty: IDependencyProperty; safecall;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuBarStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuBar)]
  IMenuBarStatics = interface(IInspectable)
  ['{BED31C25-7DB8-51CC-9706-1D79327DAF93}']
    function get_ItemsProperty: IDependencyProperty; safecall;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyout)]
  IMenuFlyout = interface(IInspectable)
  ['{AD3210F1-985B-4171-BBBA-67BCC729649B}']
    function get_Items: IVector_1__IMenuFlyoutItemBase; safecall;
    function get_MenuFlyoutPresenterStyle: IStyle; safecall;
    procedure put_MenuFlyoutPresenterStyle(value: IStyle); safecall;
    property Items: IVector_1__IMenuFlyoutItemBase read get_Items;
    property MenuFlyoutPresenterStyle: IStyle read get_MenuFlyoutPresenterStyle write put_MenuFlyoutPresenterStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyout2
  IMenuFlyout2 = interface(IInspectable)
  ['{507C7BAD-D9D1-4C05-9D4B-CDA8DE9AB242}']
    procedure ShowAt(targetElement: IUIElement; point: TPointF); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyout)]
  IMenuFlyoutFactory = interface(IInspectable)
  ['{644533AB-BBB9-499B-9FF3-30D40E2C56D8}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItem2
  IMenuFlyoutItem2 = interface(IInspectable)
  ['{0AE266EB-028C-4423-A8E3-989FD9DD7126}']
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IMenuFlyoutItemTemplateSettings
  Primitives_IMenuFlyoutItemTemplateSettings = interface(IInspectable)
  ['{56AD1809-3A16-4147-81CB-D0B35C834E0F}']
    function get_KeyboardAcceleratorTextMinWidth: Double; safecall;
    property KeyboardAcceleratorTextMinWidth: Double read get_KeyboardAcceleratorTextMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItem3
  IMenuFlyoutItem3 = interface(IInspectable)
  ['{9727B2E3-B2B6-49DC-8C22-E0138B941559}']
    function get_KeyboardAcceleratorTextOverride: HSTRING; safecall;
    procedure put_KeyboardAcceleratorTextOverride(value: HSTRING); safecall;
    function get_TemplateSettings: Primitives_IMenuFlyoutItemTemplateSettings; safecall;
    property KeyboardAcceleratorTextOverride: HSTRING read get_KeyboardAcceleratorTextOverride write put_KeyboardAcceleratorTextOverride;
    property TemplateSettings: Primitives_IMenuFlyoutItemTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutItemBase)]
  IMenuFlyoutItemBaseFactory = interface(IInspectable)
  ['{83E6DBAD-FC67-41D5-8797-60ACD1CEB1D9}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItemFactory = interface(IInspectable)
  ['{C5AA39E2-44F3-455E-9C5B-62BB6AFCE3AD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItemStatics = interface(IInspectable)
  ['{4950B424-A43A-41F7-AA3A-9CE9619747D5}']
    function get_TextProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItemStatics2 = interface(IInspectable)
  ['{ACA4F564-1790-4601-916E-5AE1F01F4BD6}']
    function get_IconProperty: IDependencyProperty; safecall;
    property IconProperty: IDependencyProperty read get_IconProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItemStatics3 = interface(IInspectable)
  ['{D83FD7C3-0AEB-4EF3-8270-8B9B95F2B298}']
    function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; safecall;
    property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IMenuFlyoutPresenterTemplateSettings
  Primitives_IMenuFlyoutPresenterTemplateSettings = interface(IInspectable)
  ['{D68FD00D-629D-4349-AC51-B877C80983B8}']
    function get_FlyoutContentMinWidth: Double; safecall;
    property FlyoutContentMinWidth: Double read get_FlyoutContentMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenter2
  IMenuFlyoutPresenter2 = interface(IInspectable)
  ['{895894DF-5A9F-4A1F-85EC-6F3C1B6DCB89}']
    function get_TemplateSettings: Primitives_IMenuFlyoutPresenterTemplateSettings; safecall;
    property TemplateSettings: Primitives_IMenuFlyoutPresenterTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenter3
  IMenuFlyoutPresenter3 = interface(IInspectable)
  ['{6AFD4E16-AEE0-584A-9849-EDAA323A484F}']
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutPresenter)]
  IMenuFlyoutPresenterFactory = interface(IInspectable)
  ['{B88B5091-101C-41F8-AAC1-1B105C14FB99}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutPresenterStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutPresenter)]
  IMenuFlyoutPresenterStatics3 = interface(IInspectable)
  ['{3772A818-825A-520C-80AE-4D39A2D59AB5}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutSeparator
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutSeparator)]
  IMenuFlyoutSeparator = interface(IInspectable)
  ['{71FA2B7D-0B51-4950-A1A4-BBC42EAC4C12}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutSeparator)]
  IMenuFlyoutSeparatorFactory = interface(IInspectable)
  ['{C159DCC8-B437-44E0-B24B-5720AEA1DBAC}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutSeparator; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyout)]
  IMenuFlyoutStatics = interface(IInspectable)
  ['{3DBEFBA1-9522-4045-9E58-C99B13AAB9B9}']
    function get_MenuFlyoutPresenterStyleProperty: IDependencyProperty; safecall;
    property MenuFlyoutPresenterStyleProperty: IDependencyProperty read get_MenuFlyoutPresenterStyleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutSubItem)]
  IMenuFlyoutSubItem = interface(IInspectable)
  ['{E5386550-FE2C-43E2-A73F-62168F619973}']
    function get_Items: IVector_1__IMenuFlyoutItemBase; safecall;
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    property Items: IVector_1__IMenuFlyoutItemBase read get_Items;
    property Text: HSTRING read get_Text write put_Text;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2
  IMenuFlyoutSubItem2 = interface(IInspectable)
  ['{AC935626-190A-4DE2-8D71-7CC4747DA580}']
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutSubItem)]
  IMenuFlyoutSubItemStatics = interface(IInspectable)
  ['{DDB27A36-1874-4AEF-837D-6FEC9DA4E681}']
    function get_TextProperty: IDependencyProperty; safecall;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_MenuFlyoutSubItem)]
  IMenuFlyoutSubItemStatics2 = interface(IInspectable)
  ['{AC14D09B-3E93-4785-94EF-FDB23BABA965}']
    function get_IconProperty: IDependencyProperty; safecall;
    property IconProperty: IDependencyProperty read get_IconProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigate
  INavigate = interface(IInspectable)
  ['{BF2195A9-F4EA-4336-977C-F8FCF78B0D9E}']
    function Navigate(sourcePageType: Interop_TypeName): Boolean; safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs
  INavigationViewBackRequestedEventArgs = interface(IInspectable)
  ['{446700E1-9A9D-4500-A71D-25C15809B879}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.INavigationView,Windows.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs = interface(IUnknown)
  ['{F7B59C2C-3F0F-5DCD-8B4F-2BF9E5B719F0}']
    procedure Invoke(sender: INavigationView; args: INavigationViewBackRequestedEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs
  INavigationViewPaneClosingEventArgs = interface(IInspectable)
  ['{955575BA-75F5-432D-B49B-60E47552D5EE}']
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.INavigationView,Windows.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs = interface(IUnknown)
  ['{4DA6AA10-CEEB-5647-AA2F-E5551F251956}']
    procedure Invoke(sender: INavigationView; args: INavigationViewPaneClosingEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationView2
  INavigationView2 = interface(IInspectable)
  ['{2BE49737-7C13-4C44-86C3-8B25E697A80E}']
    function get_IsBackButtonVisible: NavigationViewBackButtonVisible; safecall;
    procedure put_IsBackButtonVisible(value: NavigationViewBackButtonVisible); safecall;
    function get_IsBackEnabled: Boolean; safecall;
    procedure put_IsBackEnabled(value: Boolean); safecall;
    function get_PaneTitle: HSTRING; safecall;
    procedure put_PaneTitle(value: HSTRING); safecall;
    function add_BackRequested(handler: TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_BackRequested(token: EventRegistrationToken); safecall;
    function add_PaneClosed(handler: TypedEventHandler_2__INavigationView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneClosed(token: EventRegistrationToken); safecall;
    function add_PaneClosing(handler: TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs): EventRegistrationToken; safecall;
    procedure remove_PaneClosing(token: EventRegistrationToken); safecall;
    function add_PaneOpened(handler: TypedEventHandler_2__INavigationView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneOpened(token: EventRegistrationToken); safecall;
    function add_PaneOpening(handler: TypedEventHandler_2__INavigationView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneOpening(token: EventRegistrationToken); safecall;
    property IsBackButtonVisible: NavigationViewBackButtonVisible read get_IsBackButtonVisible write put_IsBackButtonVisible;
    property IsBackEnabled: Boolean read get_IsBackEnabled write put_IsBackEnabled;
    property PaneTitle: HSTRING read get_PaneTitle write put_PaneTitle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewTemplateSettings
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewTemplateSettings)]
  INavigationViewTemplateSettings = interface(IInspectable)
  ['{2956CBC4-0528-55D5-B2D1-EAE807AEA6DA}']
    function get_TopPadding: Double; safecall;
    function get_OverflowButtonVisibility: Visibility; safecall;
    function get_PaneToggleButtonVisibility: Visibility; safecall;
    function get_BackButtonVisibility: Visibility; safecall;
    function get_TopPaneVisibility: Visibility; safecall;
    function get_LeftPaneVisibility: Visibility; safecall;
    function get_SingleSelectionFollowsFocus: Boolean; safecall;
    property BackButtonVisibility: Visibility read get_BackButtonVisibility;
    property LeftPaneVisibility: Visibility read get_LeftPaneVisibility;
    property OverflowButtonVisibility: Visibility read get_OverflowButtonVisibility;
    property PaneToggleButtonVisibility: Visibility read get_PaneToggleButtonVisibility;
    property SingleSelectionFollowsFocus: Boolean read get_SingleSelectionFollowsFocus;
    property TopPadding: Double read get_TopPadding;
    property TopPaneVisibility: Visibility read get_TopPaneVisibility;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationView3
  INavigationView3 = interface(IInspectable)
  ['{8FDFAB66-9BBC-5FA3-9043-A02BB4F8EF37}']
    function get_PaneDisplayMode: NavigationViewPaneDisplayMode; safecall;
    procedure put_PaneDisplayMode(value: NavigationViewPaneDisplayMode); safecall;
    function get_PaneHeader: IUIElement; safecall;
    procedure put_PaneHeader(value: IUIElement); safecall;
    function get_PaneCustomContent: IUIElement; safecall;
    procedure put_PaneCustomContent(value: IUIElement); safecall;
    function get_ContentOverlay: IUIElement; safecall;
    procedure put_ContentOverlay(value: IUIElement); safecall;
    function get_IsPaneVisible: Boolean; safecall;
    procedure put_IsPaneVisible(value: Boolean); safecall;
    function get_SelectionFollowsFocus: NavigationViewSelectionFollowsFocus; safecall;
    procedure put_SelectionFollowsFocus(value: NavigationViewSelectionFollowsFocus); safecall;
    function get_TemplateSettings: INavigationViewTemplateSettings; safecall;
    function get_ShoulderNavigationEnabled: NavigationViewShoulderNavigationEnabled; safecall;
    procedure put_ShoulderNavigationEnabled(value: NavigationViewShoulderNavigationEnabled); safecall;
    function get_OverflowLabelMode: NavigationViewOverflowLabelMode; safecall;
    procedure put_OverflowLabelMode(value: NavigationViewOverflowLabelMode); safecall;
    property ContentOverlay: IUIElement read get_ContentOverlay write put_ContentOverlay;
    property IsPaneVisible: Boolean read get_IsPaneVisible write put_IsPaneVisible;
    property OverflowLabelMode: NavigationViewOverflowLabelMode read get_OverflowLabelMode write put_OverflowLabelMode;
    property PaneCustomContent: IUIElement read get_PaneCustomContent write put_PaneCustomContent;
    property PaneDisplayMode: NavigationViewPaneDisplayMode read get_PaneDisplayMode write put_PaneDisplayMode;
    property PaneHeader: IUIElement read get_PaneHeader write put_PaneHeader;
    property SelectionFollowsFocus: NavigationViewSelectionFollowsFocus read get_SelectionFollowsFocus write put_SelectionFollowsFocus;
    property ShoulderNavigationEnabled: NavigationViewShoulderNavigationEnabled read get_ShoulderNavigationEnabled write put_ShoulderNavigationEnabled;
    property TemplateSettings: INavigationViewTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationView)]
  INavigationViewFactory = interface(IInspectable)
  ['{E50687C1-B7C2-4975-AD7A-5F4FE6A514C9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItem2
  INavigationViewItem2 = interface(IInspectable)
  ['{EE488EF9-EA9C-5E04-B26C-83BF9655342F}']
    function get_SelectsOnInvoked: Boolean; safecall;
    procedure put_SelectsOnInvoked(value: Boolean); safecall;
    property SelectsOnInvoked: Boolean read get_SelectsOnInvoked write put_SelectsOnInvoked;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemBase
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItemBase)]
  INavigationViewItemBase = interface(IInspectable)
  ['{EDF04EB1-37D1-471F-8570-3829EE5B2BC6}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemBaseFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItemBase)]
  INavigationViewItemBaseFactory = interface(IInspectable)
  ['{EB014CEF-7890-4EBB-8245-02E8510F321D}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItemFactory = interface(IInspectable)
  ['{973BDB4A-7E08-4F76-923C-F12BD685E86E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemHeader
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItemHeader)]
  INavigationViewItemHeader = interface(IInspectable)
  ['{E21DF22C-DA4A-4E74-9FFC-B163BD7ADACD}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemHeaderFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItemHeader)]
  INavigationViewItemHeaderFactory = interface(IInspectable)
  ['{F3105988-7768-45D3-8BB0-6DED9E43A98B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemHeader; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2
  INavigationViewItemInvokedEventArgs2 = interface(IInspectable)
  ['{B568F2DD-515E-5770-A466-BD5F43FB6442}']
    function get_InvokedItemContainer: INavigationViewItemBase; safecall;
    function get_RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo; safecall;
    property InvokedItemContainer: INavigationViewItemBase read get_InvokedItemContainer;
    property RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo read get_RecommendedNavigationTransitionInfo;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemSeparator
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItemSeparator)]
  INavigationViewItemSeparator = interface(IInspectable)
  ['{DE62C951-BB9B-471E-83E3-AF4791E7096A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemSeparatorFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItemSeparator)]
  INavigationViewItemSeparatorFactory = interface(IInspectable)
  ['{71CF3A66-DB86-49E0-8154-5FD356AEDEC0}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemSeparator; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItemStatics = interface(IInspectable)
  ['{803C0081-FDA5-4B90-AACE-3F2306DBE5C4}']
    function get_IconProperty: IDependencyProperty; safecall;
    function get_CompactPaneLengthProperty: IDependencyProperty; safecall;
    property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    property IconProperty: IDependencyProperty read get_IconProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewItemStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItemStatics2 = interface(IInspectable)
  ['{F4F2F77C-54B4-541D-B747-3A96E9FF3D55}']
    function get_SelectsOnInvokedProperty: IDependencyProperty; safecall;
    property SelectsOnInvokedProperty: IDependencyProperty read get_SelectsOnInvokedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewList
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewList)]
  INavigationViewList = interface(IInspectable)
  ['{4F726F85-5CE0-48CD-8EF2-1A29458A3404}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewListFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewList)]
  INavigationViewListFactory = interface(IInspectable)
  ['{FAEE9541-C3BF-47BF-B904-6155F4DF6B4F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewList; safecall;
  end;

  // Windows.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2
  INavigationViewSelectionChangedEventArgs2 = interface(IInspectable)
  ['{FD5AF806-D10A-5E8B-973F-3B8FDA944625}']
    function get_SelectedItemContainer: INavigationViewItemBase; safecall;
    function get_RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo; safecall;
    property RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo read get_RecommendedNavigationTransitionInfo;
    property SelectedItemContainer: INavigationViewItemBase read get_SelectedItemContainer;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationView)]
  INavigationViewStatics = interface(IInspectable)
  ['{363A86C7-72DA-4420-B871-15D9D0D45756}']
    function get_IsPaneOpenProperty: IDependencyProperty; safecall;
    function get_CompactModeThresholdWidthProperty: IDependencyProperty; safecall;
    function get_ExpandedModeThresholdWidthProperty: IDependencyProperty; safecall;
    function get_PaneFooterProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_IsSettingsVisibleProperty: IDependencyProperty; safecall;
    function get_IsPaneToggleButtonVisibleProperty: IDependencyProperty; safecall;
    function get_AlwaysShowHeaderProperty: IDependencyProperty; safecall;
    function get_CompactPaneLengthProperty: IDependencyProperty; safecall;
    function get_OpenPaneLengthProperty: IDependencyProperty; safecall;
    function get_PaneToggleButtonStyleProperty: IDependencyProperty; safecall;
    function get_MenuItemsProperty: IDependencyProperty; safecall;
    function get_MenuItemsSourceProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_SettingsItemProperty: IDependencyProperty; safecall;
    function get_AutoSuggestBoxProperty: IDependencyProperty; safecall;
    function get_MenuItemTemplateProperty: IDependencyProperty; safecall;
    function get_MenuItemTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_MenuItemContainerStyleProperty: IDependencyProperty; safecall;
    function get_MenuItemContainerStyleSelectorProperty: IDependencyProperty; safecall;
    property AlwaysShowHeaderProperty: IDependencyProperty read get_AlwaysShowHeaderProperty;
    property AutoSuggestBoxProperty: IDependencyProperty read get_AutoSuggestBoxProperty;
    property CompactModeThresholdWidthProperty: IDependencyProperty read get_CompactModeThresholdWidthProperty;
    property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property ExpandedModeThresholdWidthProperty: IDependencyProperty read get_ExpandedModeThresholdWidthProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    property IsPaneToggleButtonVisibleProperty: IDependencyProperty read get_IsPaneToggleButtonVisibleProperty;
    property IsSettingsVisibleProperty: IDependencyProperty read get_IsSettingsVisibleProperty;
    property MenuItemContainerStyleProperty: IDependencyProperty read get_MenuItemContainerStyleProperty;
    property MenuItemContainerStyleSelectorProperty: IDependencyProperty read get_MenuItemContainerStyleSelectorProperty;
    property MenuItemTemplateProperty: IDependencyProperty read get_MenuItemTemplateProperty;
    property MenuItemTemplateSelectorProperty: IDependencyProperty read get_MenuItemTemplateSelectorProperty;
    property MenuItemsProperty: IDependencyProperty read get_MenuItemsProperty;
    property MenuItemsSourceProperty: IDependencyProperty read get_MenuItemsSourceProperty;
    property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    property PaneFooterProperty: IDependencyProperty read get_PaneFooterProperty;
    property PaneToggleButtonStyleProperty: IDependencyProperty read get_PaneToggleButtonStyleProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SettingsItemProperty: IDependencyProperty read get_SettingsItemProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationView)]
  INavigationViewStatics2 = interface(IInspectable)
  ['{8CC50D74-1A42-4852-AB5A-6DC82F28A4BA}']
    function get_IsBackButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsBackEnabledProperty: IDependencyProperty; safecall;
    function get_PaneTitleProperty: IDependencyProperty; safecall;
    property IsBackButtonVisibleProperty: IDependencyProperty read get_IsBackButtonVisibleProperty;
    property IsBackEnabledProperty: IDependencyProperty read get_IsBackEnabledProperty;
    property PaneTitleProperty: IDependencyProperty read get_PaneTitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationView)]
  INavigationViewStatics3 = interface(IInspectable)
  ['{9B6B69B7-F746-5550-91E1-EE0C9A85C05E}']
    function get_PaneDisplayModeProperty: IDependencyProperty; safecall;
    function get_PaneHeaderProperty: IDependencyProperty; safecall;
    function get_PaneCustomContentProperty: IDependencyProperty; safecall;
    function get_ContentOverlayProperty: IDependencyProperty; safecall;
    function get_IsPaneVisibleProperty: IDependencyProperty; safecall;
    function get_SelectionFollowsFocusProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    function get_ShoulderNavigationEnabledProperty: IDependencyProperty; safecall;
    function get_OverflowLabelModeProperty: IDependencyProperty; safecall;
    property ContentOverlayProperty: IDependencyProperty read get_ContentOverlayProperty;
    property IsPaneVisibleProperty: IDependencyProperty read get_IsPaneVisibleProperty;
    property OverflowLabelModeProperty: IDependencyProperty read get_OverflowLabelModeProperty;
    property PaneCustomContentProperty: IDependencyProperty read get_PaneCustomContentProperty;
    property PaneDisplayModeProperty: IDependencyProperty read get_PaneDisplayModeProperty;
    property PaneHeaderProperty: IDependencyProperty read get_PaneHeaderProperty;
    property SelectionFollowsFocusProperty: IDependencyProperty read get_SelectionFollowsFocusProperty;
    property ShoulderNavigationEnabledProperty: IDependencyProperty read get_ShoulderNavigationEnabledProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewTemplateSettings)]
  INavigationViewTemplateSettingsFactory = interface(IInspectable)
  ['{28A6A351-64BC-5B60-8F74-E9EE908A240E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_NavigationViewTemplateSettings)]
  INavigationViewTemplateSettingsStatics = interface(IInspectable)
  ['{2C885E59-F7B9-5078-AEB6-8D7A03C05D02}']
    function get_TopPaddingProperty: IDependencyProperty; safecall;
    function get_OverflowButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_PaneToggleButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_BackButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_TopPaneVisibilityProperty: IDependencyProperty; safecall;
    function get_LeftPaneVisibilityProperty: IDependencyProperty; safecall;
    function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; safecall;
    property BackButtonVisibilityProperty: IDependencyProperty read get_BackButtonVisibilityProperty;
    property LeftPaneVisibilityProperty: IDependencyProperty read get_LeftPaneVisibilityProperty;
    property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;
    property PaneToggleButtonVisibilityProperty: IDependencyProperty read get_PaneToggleButtonVisibilityProperty;
    property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
    property TopPaddingProperty: IDependencyProperty read get_TopPaddingProperty;
    property TopPaneVisibilityProperty: IDependencyProperty read get_TopPaneVisibilityProperty;
  end;

  // Windows.UI.Xaml.Controls.INotifyEventArgs2
  INotifyEventArgs2 = interface(IInspectable)
  ['{0D140F56-1DCE-4FCD-85BC-5A5572273B9C}']
    function get_CallingUri: IUriRuntimeClass; safecall;
    property CallingUri: IUriRuntimeClass read get_CallingUri;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPage
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Page)]
  IPage = interface(IInspectable)
  ['{C4B27075-E641-453E-824D-012FC7CF95CF}']
    function get_Frame: IFrame; safecall;
    function get_NavigationCacheMode: Navigation_NavigationCacheMode; safecall;
    procedure put_NavigationCacheMode(value: Navigation_NavigationCacheMode); safecall;
    function get_TopAppBar: IAppBar; safecall;
    procedure put_TopAppBar(value: IAppBar); safecall;
    function get_BottomAppBar: IAppBar; safecall;
    procedure put_BottomAppBar(value: IAppBar); safecall;
    property BottomAppBar: IAppBar read get_BottomAppBar write put_BottomAppBar;
    property Frame: IFrame read get_Frame;
    property NavigationCacheMode: Navigation_NavigationCacheMode read get_NavigationCacheMode write put_NavigationCacheMode;
    property TopAppBar: IAppBar read get_TopAppBar write put_TopAppBar;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPageFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Page)]
  IPageFactory = interface(IInspectable)
  ['{DFA149AC-1849-445E-937C-40A9590CC076}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPage; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPageOverrides
  IPageOverrides = interface(IInspectable)
  ['{230B9CB8-3419-4306-AABE-4A8E680D3627}']
    procedure OnNavigatedFrom(e: Navigation_INavigationEventArgs); safecall;
    procedure OnNavigatedTo(e: Navigation_INavigationEventArgs); safecall;
    procedure OnNavigatingFrom(e: Navigation_INavigatingCancelEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPageStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Page)]
  IPageStatics = interface(IInspectable)
  ['{376DDE71-F725-46DD-8D80-EEEAF7DA74E5}']
    function get_FrameProperty: IDependencyProperty; safecall;
    function get_TopAppBarProperty: IDependencyProperty; safecall;
    function get_BottomAppBarProperty: IDependencyProperty; safecall;
    property BottomAppBarProperty: IDependencyProperty read get_BottomAppBarProperty;
    property FrameProperty: IDependencyProperty read get_FrameProperty;
    property TopAppBarProperty: IDependencyProperty read get_TopAppBarProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPanel2
  IPanel2 = interface(IInspectable)
  ['{709133C7-38F3-5083-A4BB-06A548A1D231}']
    function get_BackgroundTransition: IBrushTransition; safecall;
    procedure put_BackgroundTransition(value: IBrushTransition); safecall;
    property BackgroundTransition: IBrushTransition read get_BackgroundTransition write put_BackgroundTransition;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Panel)]
  IPanelFactory = interface(IInspectable)
  ['{EEE68111-C7CC-433F-95CD-D630C34302DD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPanelStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Panel)]
  IPanelStatics = interface(IInspectable)
  ['{F23D6B5D-8330-47A6-A046-25F509B25232}']
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_IsItemsHostProperty: IDependencyProperty; safecall;
    function get_ChildrenTransitionsProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property ChildrenTransitionsProperty: IDependencyProperty read get_ChildrenTransitionsProperty;
    property IsItemsHostProperty: IDependencyProperty read get_IsItemsHostProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IParallaxView
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ParallaxView)]
  IParallaxView = interface(IInspectable)
  ['{6B84FCD4-4083-5B4B-BC40-D9204E19B41A}']
    function get_Child: IUIElement; safecall;
    procedure put_Child(value: IUIElement); safecall;
    function get_HorizontalShift: Double; safecall;
    procedure put_HorizontalShift(value: Double); safecall;
    function get_HorizontalSourceEndOffset: Double; safecall;
    procedure put_HorizontalSourceEndOffset(value: Double); safecall;
    function get_HorizontalSourceOffsetKind: ParallaxSourceOffsetKind; safecall;
    procedure put_HorizontalSourceOffsetKind(value: ParallaxSourceOffsetKind); safecall;
    function get_HorizontalSourceStartOffset: Double; safecall;
    procedure put_HorizontalSourceStartOffset(value: Double); safecall;
    function get_IsHorizontalShiftClamped: Boolean; safecall;
    procedure put_IsHorizontalShiftClamped(value: Boolean); safecall;
    function get_IsVerticalShiftClamped: Boolean; safecall;
    procedure put_IsVerticalShiftClamped(value: Boolean); safecall;
    function get_MaxHorizontalShiftRatio: Double; safecall;
    procedure put_MaxHorizontalShiftRatio(value: Double); safecall;
    function get_MaxVerticalShiftRatio: Double; safecall;
    procedure put_MaxVerticalShiftRatio(value: Double); safecall;
    function get_Source: IUIElement; safecall;
    procedure put_Source(value: IUIElement); safecall;
    function get_VerticalShift: Double; safecall;
    procedure put_VerticalShift(value: Double); safecall;
    function get_VerticalSourceEndOffset: Double; safecall;
    procedure put_VerticalSourceEndOffset(value: Double); safecall;
    function get_VerticalSourceOffsetKind: ParallaxSourceOffsetKind; safecall;
    procedure put_VerticalSourceOffsetKind(value: ParallaxSourceOffsetKind); safecall;
    function get_VerticalSourceStartOffset: Double; safecall;
    procedure put_VerticalSourceStartOffset(value: Double); safecall;
    procedure RefreshAutomaticHorizontalOffsets; safecall;
    procedure RefreshAutomaticVerticalOffsets; safecall;
    property Child: IUIElement read get_Child write put_Child;
    property HorizontalShift: Double read get_HorizontalShift write put_HorizontalShift;
    property HorizontalSourceEndOffset: Double read get_HorizontalSourceEndOffset write put_HorizontalSourceEndOffset;
    property HorizontalSourceOffsetKind: ParallaxSourceOffsetKind read get_HorizontalSourceOffsetKind write put_HorizontalSourceOffsetKind;
    property HorizontalSourceStartOffset: Double read get_HorizontalSourceStartOffset write put_HorizontalSourceStartOffset;
    property IsHorizontalShiftClamped: Boolean read get_IsHorizontalShiftClamped write put_IsHorizontalShiftClamped;
    property IsVerticalShiftClamped: Boolean read get_IsVerticalShiftClamped write put_IsVerticalShiftClamped;
    property MaxHorizontalShiftRatio: Double read get_MaxHorizontalShiftRatio write put_MaxHorizontalShiftRatio;
    property MaxVerticalShiftRatio: Double read get_MaxVerticalShiftRatio write put_MaxVerticalShiftRatio;
    property Source: IUIElement read get_Source write put_Source;
    property VerticalShift: Double read get_VerticalShift write put_VerticalShift;
    property VerticalSourceEndOffset: Double read get_VerticalSourceEndOffset write put_VerticalSourceEndOffset;
    property VerticalSourceOffsetKind: ParallaxSourceOffsetKind read get_VerticalSourceOffsetKind write put_VerticalSourceOffsetKind;
    property VerticalSourceStartOffset: Double read get_VerticalSourceStartOffset write put_VerticalSourceStartOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IParallaxViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ParallaxView)]
  IParallaxViewFactory = interface(IInspectable)
  ['{E4EB9642-3E8E-5A26-94F2-9121D121B916}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IParallaxView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IParallaxViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ParallaxView)]
  IParallaxViewStatics = interface(IInspectable)
  ['{8836E49C-0E0E-57D8-9395-F0A9A0D1BB28}']
    function get_ChildProperty: IDependencyProperty; safecall;
    function get_HorizontalSourceEndOffsetProperty: IDependencyProperty; safecall;
    function get_HorizontalSourceOffsetKindProperty: IDependencyProperty; safecall;
    function get_HorizontalSourceStartOffsetProperty: IDependencyProperty; safecall;
    function get_MaxHorizontalShiftRatioProperty: IDependencyProperty; safecall;
    function get_HorizontalShiftProperty: IDependencyProperty; safecall;
    function get_IsHorizontalShiftClampedProperty: IDependencyProperty; safecall;
    function get_IsVerticalShiftClampedProperty: IDependencyProperty; safecall;
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_VerticalSourceEndOffsetProperty: IDependencyProperty; safecall;
    function get_VerticalSourceOffsetKindProperty: IDependencyProperty; safecall;
    function get_VerticalSourceStartOffsetProperty: IDependencyProperty; safecall;
    function get_MaxVerticalShiftRatioProperty: IDependencyProperty; safecall;
    function get_VerticalShiftProperty: IDependencyProperty; safecall;
    property ChildProperty: IDependencyProperty read get_ChildProperty;
    property HorizontalShiftProperty: IDependencyProperty read get_HorizontalShiftProperty;
    property HorizontalSourceEndOffsetProperty: IDependencyProperty read get_HorizontalSourceEndOffsetProperty;
    property HorizontalSourceOffsetKindProperty: IDependencyProperty read get_HorizontalSourceOffsetKindProperty;
    property HorizontalSourceStartOffsetProperty: IDependencyProperty read get_HorizontalSourceStartOffsetProperty;
    property IsHorizontalShiftClampedProperty: IDependencyProperty read get_IsHorizontalShiftClampedProperty;
    property IsVerticalShiftClampedProperty: IDependencyProperty read get_IsVerticalShiftClampedProperty;
    property MaxHorizontalShiftRatioProperty: IDependencyProperty read get_MaxHorizontalShiftRatioProperty;
    property MaxVerticalShiftRatioProperty: IDependencyProperty read get_MaxVerticalShiftRatioProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property VerticalShiftProperty: IDependencyProperty read get_VerticalShiftProperty;
    property VerticalSourceEndOffsetProperty: IDependencyProperty read get_VerticalSourceEndOffsetProperty;
    property VerticalSourceOffsetKindProperty: IDependencyProperty read get_VerticalSourceOffsetKindProperty;
    property VerticalSourceStartOffsetProperty: IDependencyProperty read get_VerticalSourceStartOffsetProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextControlPasteEventArgs
  ITextControlPasteEventArgs = interface(IInspectable)
  ['{4BD1D625-221A-477E-BB2C-AD0C1ED125E7}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.TextControlPasteEventHandler
  TextControlPasteEventHandler = interface(IUnknown)
  ['{D56DB359-6F77-4296-AB9C-794939444365}']
    procedure Invoke(sender: IInspectable; e: ITextControlPasteEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBox2
  IPasswordBox2 = interface(IInspectable)
  ['{5ED738DF-212F-4AEB-B5B8-2C219AEC3C0C}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocus: Boolean; safecall;
    procedure put_PreventKeyboardDisplayOnProgrammaticFocus(value: Boolean); safecall;
    function add_Paste(handler: TextControlPasteEventHandler): EventRegistrationToken; safecall;
    procedure remove_Paste(token: EventRegistrationToken); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property PreventKeyboardDisplayOnProgrammaticFocus: Boolean read get_PreventKeyboardDisplayOnProgrammaticFocus write put_PreventKeyboardDisplayOnProgrammaticFocus;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBox3
  IPasswordBox3 = interface(IInspectable)
  ['{6024D9D1-56B7-41F0-9558-3934C14244D6}']
    function get_PasswordRevealMode: PasswordRevealMode; safecall;
    procedure put_PasswordRevealMode(value: PasswordRevealMode); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_InputScope: Input_IInputScope; safecall;
    procedure put_InputScope(value: Input_IInputScope); safecall;
    property InputScope: Input_IInputScope read get_InputScope write put_InputScope;
    property PasswordRevealMode_: PasswordRevealMode read get_PasswordRevealMode write put_PasswordRevealMode;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs
  IPasswordBoxPasswordChangingEventArgs = interface(IInspectable)
  ['{142EDA22-3552-4AB8-81A6-A48620EE9C53}']
    function get_IsContentChanging: Boolean; safecall;
    property IsContentChanging: Boolean read get_IsContentChanging;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPasswordBox,Windows.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs>
  TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{C3BC2F43-1D73-5AAC-AED4-B4E08603E9F0}']
    procedure Invoke(sender: IPasswordBox; args: IPasswordBoxPasswordChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPasswordBox,Windows.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs>
  TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs = interface(TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs_Delegate_Base)
  ['{83F09E0F-1236-55CC-9EED-907DBCC44168}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBox4
  IPasswordBox4 = interface(IInspectable)
  ['{569F4343-8E6C-44BF-808D-0E03964ED32F}']
    function add_PasswordChanging(handler: TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_PasswordChanging(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBox5
  IPasswordBox5 = interface(IInspectable)
  ['{F96C2753-E1D4-5142-86C2-7318BFBBC705}']
    function get_CanPasteClipboardContent: Boolean; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    procedure PasteFromClipboard; safecall;
    property CanPasteClipboardContent: Boolean read get_CanPasteClipboardContent;
    property Description: IInspectable read get_Description write put_Description;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBoxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PasswordBox)]
  IPasswordBoxStatics = interface(IInspectable)
  ['{5EE67563-2D74-4ACE-BD79-FCAB61A7D77B}']
    function get_PasswordProperty: IDependencyProperty; safecall;
    function get_PasswordCharProperty: IDependencyProperty; safecall;
    function get_IsPasswordRevealButtonEnabledProperty: IDependencyProperty; safecall;
    function get_MaxLengthProperty: IDependencyProperty; safecall;
    property IsPasswordRevealButtonEnabledProperty: IDependencyProperty read get_IsPasswordRevealButtonEnabledProperty;
    property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    property PasswordCharProperty: IDependencyProperty read get_PasswordCharProperty;
    property PasswordProperty: IDependencyProperty read get_PasswordProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBoxStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PasswordBox)]
  IPasswordBoxStatics2 = interface(IInspectable)
  ['{FC57935F-98FA-4066-B785-FA725ECDE232}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBoxStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PasswordBox)]
  IPasswordBoxStatics3 = interface(IInspectable)
  ['{A2CDD319-AD6A-4352-B590-F696FFCB8E3F}']
    function get_PasswordRevealModeProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    function get_InputScopeProperty: IDependencyProperty; safecall;
    property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    property PasswordRevealModeProperty: IDependencyProperty read get_PasswordRevealModeProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPasswordBoxStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PasswordBox)]
  IPasswordBoxStatics5 = interface(IInspectable)
  ['{4BDAC1AC-6B42-55F3-BFA4-65C7235078D6}']
    function get_CanPasteClipboardContentProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPathIcon
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PathIcon)]
  IPathIcon = interface(IInspectable)
  ['{214C62DB-C366-4A0E-B9AD-DCF168D7EC0C}']
    function get_Data: IGeometry; safecall;
    procedure put_Data(value: IGeometry); safecall;
    property Data: IGeometry read get_Data write put_Data;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPathIconFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PathIcon)]
  IPathIconFactory = interface(IInspectable)
  ['{AF9D9652-9C5D-4A37-9E1A-044ABEEF792B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPathIconSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PathIconSource)]
  IPathIconSource = interface(IInspectable)
  ['{1F47010E-B305-4863-8B7A-15D08D633C7A}']
    function get_Data: IGeometry; safecall;
    procedure put_Data(value: IGeometry); safecall;
    property Data: IGeometry read get_Data write put_Data;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPathIconSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PathIconSource)]
  IPathIconSourceFactory = interface(IInspectable)
  ['{8F7F85B9-5247-4F3B-833F-E384BF7E9C84}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPathIconSourceStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PathIconSource)]
  IPathIconSourceStatics = interface(IInspectable)
  ['{DF7027D5-3682-43FF-80F0-AFA256B2FDC3}']
    function get_DataProperty: IDependencyProperty; safecall;
    property DataProperty: IDependencyProperty read get_DataProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPathIconStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PathIcon)]
  IPathIconStatics = interface(IInspectable)
  ['{77B75DB8-FB15-491A-B6E3-7DBBA911BAFE}']
    function get_DataProperty: IDependencyProperty; safecall;
    property DataProperty: IDependencyProperty read get_DataProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPersonPictureFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PersonPicture)]
  IPersonPictureFactory = interface(IInspectable)
  ['{4F18330D-0416-4B92-BFD3-BF5780B46AB2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPersonPicture; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPersonPictureStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PersonPicture)]
  IPersonPictureStatics = interface(IInspectable)
  ['{DBEC0982-3C10-4639-9614-AA5B7CDC32CA}']
    function get_BadgeNumberProperty: IDependencyProperty; safecall;
    function get_BadgeGlyphProperty: IDependencyProperty; safecall;
    function get_BadgeImageSourceProperty: IDependencyProperty; safecall;
    function get_BadgeTextProperty: IDependencyProperty; safecall;
    function get_IsGroupProperty: IDependencyProperty; safecall;
    function get_ContactProperty: IDependencyProperty; safecall;
    function get_DisplayNameProperty: IDependencyProperty; safecall;
    function get_InitialsProperty: IDependencyProperty; safecall;
    function get_PreferSmallImageProperty: IDependencyProperty; safecall;
    function get_ProfilePictureProperty: IDependencyProperty; safecall;
    property BadgeGlyphProperty: IDependencyProperty read get_BadgeGlyphProperty;
    property BadgeImageSourceProperty: IDependencyProperty read get_BadgeImageSourceProperty;
    property BadgeNumberProperty: IDependencyProperty read get_BadgeNumberProperty;
    property BadgeTextProperty: IDependencyProperty read get_BadgeTextProperty;
    property ContactProperty: IDependencyProperty read get_ContactProperty;
    property DisplayNameProperty: IDependencyProperty read get_DisplayNameProperty;
    property InitialsProperty: IDependencyProperty read get_InitialsProperty;
    property IsGroupProperty: IDependencyProperty read get_IsGroupProperty;
    property PreferSmallImageProperty: IDependencyProperty read get_PreferSmallImageProperty;
    property ProfilePictureProperty: IDependencyProperty read get_ProfilePictureProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PickerConfirmedEventArgs)]
  IPickerConfirmedEventArgs = interface(IInspectable)
  ['{447A9B51-1E23-4779-992B-986849713941}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPickerFlyout,Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs>
  TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs_Delegate_Base = interface(IUnknown)
  ['{22CDE5B7-4EB7-5EE4-8D28-1F1CBCF68FB0}']
    procedure Invoke(sender: IPickerFlyout; args: IPickerConfirmedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IPickerFlyout,Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs>
  TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs = interface(TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs_Delegate_Base)
  ['{4C5427C3-5129-5400-A651-A38EFD11902B}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPickerFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PickerFlyout)]
  IPickerFlyout = interface(IInspectable)
  ['{A336FFDB-08D9-43E6-944E-F2E5C7CEE630}']
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    function get_ConfirmationButtonsVisible: Boolean; safecall;
    procedure put_ConfirmationButtonsVisible(value: Boolean); safecall;
    function add_Confirmed(handler: TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Confirmed(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__Boolean; safecall;
    property ConfirmationButtonsVisible: Boolean read get_ConfirmationButtonsVisible write put_ConfirmationButtonsVisible;
    property Content: IUIElement read get_Content write put_Content;
  end;

  // Windows.UI.Xaml.Controls.IPickerFlyoutPresenter
  IPickerFlyoutPresenter = interface(IInspectable)
  ['{5884C978-6B27-4B38-A9AE-677C2994652E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPickerFlyoutStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PickerFlyout)]
  IPickerFlyoutStatics = interface(IInspectable)
  ['{AF18A436-F38A-4ABD-B933-6286C115B07F}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_ConfirmationButtonsVisibleProperty: IDependencyProperty; safecall;
    property ConfirmationButtonsVisibleProperty: IDependencyProperty read get_ConfirmationButtonsVisibleProperty;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivot2
  IPivot2 = interface(IInspectable)
  ['{8B8A8660-1A55-411C-A82D-18991C3F0D6F}']
    function get_LeftHeader: IInspectable; safecall;
    procedure put_LeftHeader(value: IInspectable); safecall;
    function get_LeftHeaderTemplate: IDataTemplate; safecall;
    procedure put_LeftHeaderTemplate(value: IDataTemplate); safecall;
    function get_RightHeader: IInspectable; safecall;
    procedure put_RightHeader(value: IInspectable); safecall;
    function get_RightHeaderTemplate: IDataTemplate; safecall;
    procedure put_RightHeaderTemplate(value: IDataTemplate); safecall;
    property LeftHeader: IInspectable read get_LeftHeader write put_LeftHeader;
    property LeftHeaderTemplate: IDataTemplate read get_LeftHeaderTemplate write put_LeftHeaderTemplate;
    property RightHeader: IInspectable read get_RightHeader write put_RightHeader;
    property RightHeaderTemplate: IDataTemplate read get_RightHeaderTemplate write put_RightHeaderTemplate;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivot3
  IPivot3 = interface(IInspectable)
  ['{95BCBF96-F0DA-4089-8C65-E8B81354C766}']
    function get_HeaderFocusVisualPlacement: PivotHeaderFocusVisualPlacement; safecall;
    procedure put_HeaderFocusVisualPlacement(value: PivotHeaderFocusVisualPlacement); safecall;
    function get_IsHeaderItemsCarouselEnabled: Boolean; safecall;
    procedure put_IsHeaderItemsCarouselEnabled(value: Boolean); safecall;
    property HeaderFocusVisualPlacement: PivotHeaderFocusVisualPlacement read get_HeaderFocusVisualPlacement write put_HeaderFocusVisualPlacement;
    property IsHeaderItemsCarouselEnabled: Boolean read get_IsHeaderItemsCarouselEnabled write put_IsHeaderItemsCarouselEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Pivot)]
  IPivotFactory = interface(IInspectable)
  ['{1B0A818E-2529-4762-BA44-9ABC68C3CECA}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivot; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PivotItem)]
  IPivotItemFactory = interface(IInspectable)
  ['{0DCED981-636E-4A34-8A3F-8EE018639285}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivotItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_PivotItem)]
  IPivotItemStatics = interface(IInspectable)
  ['{E147AD0C-488B-4A6E-BECD-A5DBD9941754}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Pivot)]
  IPivotStatics = interface(IInspectable)
  ['{EE22C7F4-C15D-4FF3-8A94-F50DFDFBE899}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_TitleTemplateProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_IsLockedProperty: IDependencyProperty; safecall;
    function get_SlideInAnimationGroupProperty: IDependencyProperty; safecall;
    function GetSlideInAnimationGroup(element: IFrameworkElement): PivotSlideInAnimationGroup; safecall;
    procedure SetSlideInAnimationGroup(element: IFrameworkElement; value: PivotSlideInAnimationGroup); safecall;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsLockedProperty: IDependencyProperty read get_IsLockedProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SlideInAnimationGroupProperty: IDependencyProperty read get_SlideInAnimationGroupProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
    property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Pivot)]
  IPivotStatics2 = interface(IInspectable)
  ['{D7518ADD-BE75-4023-8DEB-C6513C3192A3}']
    function get_LeftHeaderProperty: IDependencyProperty; safecall;
    function get_LeftHeaderTemplateProperty: IDependencyProperty; safecall;
    function get_RightHeaderProperty: IDependencyProperty; safecall;
    function get_RightHeaderTemplateProperty: IDependencyProperty; safecall;
    property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    property LeftHeaderTemplateProperty: IDependencyProperty read get_LeftHeaderTemplateProperty;
    property RightHeaderProperty: IDependencyProperty read get_RightHeaderProperty;
    property RightHeaderTemplateProperty: IDependencyProperty read get_RightHeaderTemplateProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IPivotStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Pivot)]
  IPivotStatics3 = interface(IInspectable)
  ['{78B6274E-6616-4600-A039-922A5D09330B}']
    function get_HeaderFocusVisualPlacementProperty: IDependencyProperty; safecall;
    function get_IsHeaderItemsCarouselEnabledProperty: IDependencyProperty; safecall;
    property HeaderFocusVisualPlacementProperty: IDependencyProperty read get_HeaderFocusVisualPlacementProperty;
    property IsHeaderItemsCarouselEnabledProperty: IDependencyProperty read get_IsHeaderItemsCarouselEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IProgressBarFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ProgressBar)]
  IProgressBarFactory = interface(IInspectable)
  ['{DA9A8C11-1591-400B-A993-0F1C5CC12F3B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IProgressBarStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ProgressBar)]
  IProgressBarStatics = interface(IInspectable)
  ['{7A129FDA-5837-4E26-B3B4-E1C092CEBBEC}']
    function get_IsIndeterminateProperty: IDependencyProperty; safecall;
    function get_ShowErrorProperty: IDependencyProperty; safecall;
    function get_ShowPausedProperty: IDependencyProperty; safecall;
    property IsIndeterminateProperty: IDependencyProperty read get_IsIndeterminateProperty;
    property ShowErrorProperty: IDependencyProperty read get_ShowErrorProperty;
    property ShowPausedProperty: IDependencyProperty read get_ShowPausedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IProgressRingStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ProgressRing)]
  IProgressRingStatics = interface(IInspectable)
  ['{E8B62507-4E2C-47D5-A54A-C6C48A5E6989}']
    function get_IsActiveProperty: IDependencyProperty; safecall;
    property IsActiveProperty: IDependencyProperty read get_IsActiveProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRadioButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RadioButton)]
  IRadioButtonFactory = interface(IInspectable)
  ['{F1D04933-34E1-4A5C-B2AE-CA3B1C0B20DE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRadioButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RadioButton)]
  IRadioButtonStatics = interface(IInspectable)
  ['{6B149293-F50F-4BD8-B0AC-5C162F33A208}']
    function get_GroupNameProperty: IDependencyProperty; safecall;
    property GroupNameProperty: IDependencyProperty read get_GroupNameProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingControlFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingControl)]
  IRatingControlFactory = interface(IInspectable)
  ['{18D81716-C542-4CCB-B347-5E62C5DB782E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingControl)]
  IRatingControlStatics = interface(IInspectable)
  ['{D062D399-AD85-4C1C-B2C4-35DD4432275E}']
    function get_CaptionProperty: IDependencyProperty; safecall;
    function get_InitialSetValueProperty: IDependencyProperty; safecall;
    function get_IsClearEnabledProperty: IDependencyProperty; safecall;
    function get_IsReadOnlyProperty: IDependencyProperty; safecall;
    function get_MaxRatingProperty: IDependencyProperty; safecall;
    function get_PlaceholderValueProperty: IDependencyProperty; safecall;
    function get_ItemInfoProperty: IDependencyProperty; safecall;
    function get_ValueProperty: IDependencyProperty; safecall;
    property CaptionProperty: IDependencyProperty read get_CaptionProperty;
    property InitialSetValueProperty: IDependencyProperty read get_InitialSetValueProperty;
    property IsClearEnabledProperty: IDependencyProperty read get_IsClearEnabledProperty;
    property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    property ItemInfoProperty: IDependencyProperty read get_ItemInfoProperty;
    property MaxRatingProperty: IDependencyProperty read get_MaxRatingProperty;
    property PlaceholderValueProperty: IDependencyProperty read get_PlaceholderValueProperty;
    property ValueProperty: IDependencyProperty read get_ValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingItemFontInfo
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingItemFontInfo)]
  IRatingItemFontInfo = interface(IInspectable)
  ['{054723E9-7989-4D5C-9D01-A7EB876F1071}']
    function get_DisabledGlyph: HSTRING; safecall;
    procedure put_DisabledGlyph(value: HSTRING); safecall;
    function get_Glyph: HSTRING; safecall;
    procedure put_Glyph(value: HSTRING); safecall;
    function get_PointerOverGlyph: HSTRING; safecall;
    procedure put_PointerOverGlyph(value: HSTRING); safecall;
    function get_PointerOverPlaceholderGlyph: HSTRING; safecall;
    procedure put_PointerOverPlaceholderGlyph(value: HSTRING); safecall;
    function get_PlaceholderGlyph: HSTRING; safecall;
    procedure put_PlaceholderGlyph(value: HSTRING); safecall;
    function get_UnsetGlyph: HSTRING; safecall;
    procedure put_UnsetGlyph(value: HSTRING); safecall;
    property DisabledGlyph: HSTRING read get_DisabledGlyph write put_DisabledGlyph;
    property Glyph: HSTRING read get_Glyph write put_Glyph;
    property PlaceholderGlyph: HSTRING read get_PlaceholderGlyph write put_PlaceholderGlyph;
    property PointerOverGlyph: HSTRING read get_PointerOverGlyph write put_PointerOverGlyph;
    property PointerOverPlaceholderGlyph: HSTRING read get_PointerOverPlaceholderGlyph write put_PointerOverPlaceholderGlyph;
    property UnsetGlyph: HSTRING read get_UnsetGlyph write put_UnsetGlyph;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingItemFontInfoFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingItemFontInfo)]
  IRatingItemFontInfoFactory = interface(IInspectable)
  ['{9603FE56-9E9F-40B5-BAE1-4481BB73BCD3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemFontInfo; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingItemFontInfoStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingItemFontInfo)]
  IRatingItemFontInfoStatics = interface(IInspectable)
  ['{FB214F01-6434-4EEB-82FF-7CE5D40BF510}']
    function get_DisabledGlyphProperty: IDependencyProperty; safecall;
    function get_GlyphProperty: IDependencyProperty; safecall;
    function get_PlaceholderGlyphProperty: IDependencyProperty; safecall;
    function get_PointerOverGlyphProperty: IDependencyProperty; safecall;
    function get_PointerOverPlaceholderGlyphProperty: IDependencyProperty; safecall;
    function get_UnsetGlyphProperty: IDependencyProperty; safecall;
    property DisabledGlyphProperty: IDependencyProperty read get_DisabledGlyphProperty;
    property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    property PlaceholderGlyphProperty: IDependencyProperty read get_PlaceholderGlyphProperty;
    property PointerOverGlyphProperty: IDependencyProperty read get_PointerOverGlyphProperty;
    property PointerOverPlaceholderGlyphProperty: IDependencyProperty read get_PointerOverPlaceholderGlyphProperty;
    property UnsetGlyphProperty: IDependencyProperty read get_UnsetGlyphProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingItemImageInfo
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingItemImageInfo)]
  IRatingItemImageInfo = interface(IInspectable)
  ['{25240E8C-E0D2-490E-B8F8-96C8EE0512B9}']
    function get_DisabledImage: IImageSource; safecall;
    procedure put_DisabledImage(value: IImageSource); safecall;
    function get_Image: IImageSource; safecall;
    procedure put_Image(value: IImageSource); safecall;
    function get_PlaceholderImage: IImageSource; safecall;
    procedure put_PlaceholderImage(value: IImageSource); safecall;
    function get_PointerOverImage: IImageSource; safecall;
    procedure put_PointerOverImage(value: IImageSource); safecall;
    function get_PointerOverPlaceholderImage: IImageSource; safecall;
    procedure put_PointerOverPlaceholderImage(value: IImageSource); safecall;
    function get_UnsetImage: IImageSource; safecall;
    procedure put_UnsetImage(value: IImageSource); safecall;
    property DisabledImage: IImageSource read get_DisabledImage write put_DisabledImage;
    property Image: IImageSource read get_Image write put_Image;
    property PlaceholderImage: IImageSource read get_PlaceholderImage write put_PlaceholderImage;
    property PointerOverImage: IImageSource read get_PointerOverImage write put_PointerOverImage;
    property PointerOverPlaceholderImage: IImageSource read get_PointerOverPlaceholderImage write put_PointerOverPlaceholderImage;
    property UnsetImage: IImageSource read get_UnsetImage write put_UnsetImage;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingItemImageInfoFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingItemImageInfo)]
  IRatingItemImageInfoFactory = interface(IInspectable)
  ['{269E03F2-DA79-4787-9F4A-24A6FA56CDE2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemImageInfo; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingItemImageInfoStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingItemImageInfo)]
  IRatingItemImageInfoStatics = interface(IInspectable)
  ['{8438486B-4B1C-4123-BA0B-73484D68C338}']
    function get_DisabledImageProperty: IDependencyProperty; safecall;
    function get_ImageProperty: IDependencyProperty; safecall;
    function get_PlaceholderImageProperty: IDependencyProperty; safecall;
    function get_PointerOverImageProperty: IDependencyProperty; safecall;
    function get_PointerOverPlaceholderImageProperty: IDependencyProperty; safecall;
    function get_UnsetImageProperty: IDependencyProperty; safecall;
    property DisabledImageProperty: IDependencyProperty read get_DisabledImageProperty;
    property ImageProperty: IDependencyProperty read get_ImageProperty;
    property PlaceholderImageProperty: IDependencyProperty read get_PlaceholderImageProperty;
    property PointerOverImageProperty: IDependencyProperty read get_PointerOverImageProperty;
    property PointerOverPlaceholderImageProperty: IDependencyProperty read get_PointerOverPlaceholderImageProperty;
    property UnsetImageProperty: IDependencyProperty read get_UnsetImageProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRatingItemInfoFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RatingItemInfo)]
  IRatingItemInfoFactory = interface(IInspectable)
  ['{B0FD43D6-CFEC-43C8-9AC5-0B0D5E25D862}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemInfo; safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs
  IRefreshRequestedEventArgs = interface(IInspectable)
  ['{1B089F43-CFCF-4AC6-B31F-8DAB6EEFDD93}']
    function GetDeferral: IDeferral; safecall;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRefreshVisualizer,Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs = interface(IUnknown)
  ['{3B966D6E-4726-5326-8AF9-AE5E414F2C08}']
    procedure Invoke(sender: IRefreshVisualizer; args: IRefreshRequestedEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshStateChangedEventArgs
  IRefreshStateChangedEventArgs = interface(IInspectable)
  ['{BB6C901E-21FE-4109-AF80-73EC661B678A}']
    function get_OldState: RefreshVisualizerState; safecall;
    function get_NewState: RefreshVisualizerState; safecall;
    property NewState: RefreshVisualizerState read get_NewState;
    property OldState: RefreshVisualizerState read get_OldState;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRefreshVisualizer,Windows.UI.Xaml.Controls.IRefreshStateChangedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs = interface(IUnknown)
  ['{D767AD8A-4905-56EB-8B01-A601E17417E1}']
    procedure Invoke(sender: IRefreshVisualizer; args: IRefreshStateChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshVisualizer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RefreshVisualizer)]
  IRefreshVisualizer = interface(IInspectable)
  ['{C0E30122-F3EB-4BAA-A11F-C3F87342CBF4}']
    procedure RequestRefresh; safecall;
    function get_Orientation: RefreshVisualizerOrientation; safecall;
    procedure put_Orientation(value: RefreshVisualizerOrientation); safecall;
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    function get_State: RefreshVisualizerState; safecall;
    function add_RefreshRequested(handler: TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_RefreshRequested(token: EventRegistrationToken); safecall;
    function add_RefreshStateChanged(handler: TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_RefreshStateChanged(token: EventRegistrationToken); safecall;
    property Content: IUIElement read get_Content write put_Content;
    property Orientation: RefreshVisualizerOrientation read get_Orientation write put_Orientation;
    property State: RefreshVisualizerState read get_State;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRefreshContainer,Windows.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs = interface(IUnknown)
  ['{85877ACE-ACB4-566A-A068-7F4382AD591B}']
    procedure Invoke(sender: IRefreshContainer; args: IRefreshRequestedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshContainer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RefreshContainer)]
  IRefreshContainer = interface(IInspectable)
  ['{535DC413-B1D5-43C1-B057-8658CE1E0BA2}']
    function get_Visualizer: IRefreshVisualizer; safecall;
    procedure put_Visualizer(value: IRefreshVisualizer); safecall;
    function get_PullDirection: RefreshPullDirection; safecall;
    procedure put_PullDirection(value: RefreshPullDirection); safecall;
    function add_RefreshRequested(handler: TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_RefreshRequested(token: EventRegistrationToken); safecall;
    procedure RequestRefresh; safecall;
    property PullDirection: RefreshPullDirection read get_PullDirection write put_PullDirection;
    property Visualizer: IRefreshVisualizer read get_Visualizer write put_Visualizer;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshContainerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RefreshContainer)]
  IRefreshContainerFactory = interface(IInspectable)
  ['{0A04777F-089E-4239-BAEB-C4641484C37E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshContainer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshContainerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RefreshContainer)]
  IRefreshContainerStatics = interface(IInspectable)
  ['{A20AF5A5-7015-475D-9DE3-81A0479DDA38}']
    function get_VisualizerProperty: IDependencyProperty; safecall;
    function get_PullDirectionProperty: IDependencyProperty; safecall;
    property PullDirectionProperty: IDependencyProperty read get_PullDirectionProperty;
    property VisualizerProperty: IDependencyProperty read get_VisualizerProperty;
  end;

  // Windows.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs
  IRefreshInteractionRatioChangedEventArgs = interface(IInspectable)
  ['{D7E47820-DC47-4B8E-BB27-7F0A83F29A07}']
    function get_InteractionRatio: Double; safecall;
    property InteractionRatio: Double read get_InteractionRatio;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshVisualizerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RefreshVisualizer)]
  IRefreshVisualizerFactory = interface(IInspectable)
  ['{6F5C6132-6E09-4C10-824A-127D36672715}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshVisualizer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRefreshVisualizerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RefreshVisualizer)]
  IRefreshVisualizerStatics = interface(IInspectable)
  ['{AFEA56AF-362A-4015-B155-733A1F869831}']
    function get_InfoProviderProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_StateProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property InfoProviderProperty: IDependencyProperty read get_InfoProviderProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property StateProperty: IDependencyProperty read get_StateProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRelativePanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RelativePanel)]
  IRelativePanel = interface(IInspectable)
  ['{2EABFAEB-B35A-4035-ACEA-3C4A3730683F}']
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRelativePanel2
  IRelativePanel2 = interface(IInspectable)
  ['{C09BD88C-1E82-53B3-8C01-7D0432F5F7DB}']
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRelativePanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RelativePanel)]
  IRelativePanelFactory = interface(IInspectable)
  ['{8460193C-361B-44BA-A17E-B84C9DCDC772}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRelativePanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRelativePanelStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RelativePanel)]
  IRelativePanelStatics = interface(IInspectable)
  ['{15903C27-F18C-4C35-8E19-6A7459D907B6}']
    function get_LeftOfProperty: IDependencyProperty; safecall;
    function GetLeftOf(element: IUIElement): IInspectable; safecall;
    procedure SetLeftOf(element: IUIElement; value: IInspectable); safecall;
    function get_AboveProperty: IDependencyProperty; safecall;
    function GetAbove(element: IUIElement): IInspectable; safecall;
    procedure SetAbove(element: IUIElement; value: IInspectable); safecall;
    function get_RightOfProperty: IDependencyProperty; safecall;
    function GetRightOf(element: IUIElement): IInspectable; safecall;
    procedure SetRightOf(element: IUIElement; value: IInspectable); safecall;
    function get_BelowProperty: IDependencyProperty; safecall;
    function GetBelow(element: IUIElement): IInspectable; safecall;
    procedure SetBelow(element: IUIElement; value: IInspectable); safecall;
    function get_AlignHorizontalCenterWithProperty: IDependencyProperty; safecall;
    function GetAlignHorizontalCenterWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignHorizontalCenterWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignVerticalCenterWithProperty: IDependencyProperty; safecall;
    function GetAlignVerticalCenterWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignVerticalCenterWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignLeftWithProperty: IDependencyProperty; safecall;
    function GetAlignLeftWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignLeftWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignTopWithProperty: IDependencyProperty; safecall;
    function GetAlignTopWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignTopWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignRightWithProperty: IDependencyProperty; safecall;
    function GetAlignRightWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignRightWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignBottomWithProperty: IDependencyProperty; safecall;
    function GetAlignBottomWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignBottomWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignLeftWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignLeftWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignLeftWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignTopWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignTopWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignTopWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignRightWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignRightWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignRightWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignBottomWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignBottomWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignBottomWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignHorizontalCenterWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignHorizontalCenterWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignHorizontalCenterWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignVerticalCenterWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignVerticalCenterWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignVerticalCenterWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    property AboveProperty: IDependencyProperty read get_AboveProperty;
    property AlignBottomWithPanelProperty: IDependencyProperty read get_AlignBottomWithPanelProperty;
    property AlignBottomWithProperty: IDependencyProperty read get_AlignBottomWithProperty;
    property AlignHorizontalCenterWithPanelProperty: IDependencyProperty read get_AlignHorizontalCenterWithPanelProperty;
    property AlignHorizontalCenterWithProperty: IDependencyProperty read get_AlignHorizontalCenterWithProperty;
    property AlignLeftWithPanelProperty: IDependencyProperty read get_AlignLeftWithPanelProperty;
    property AlignLeftWithProperty: IDependencyProperty read get_AlignLeftWithProperty;
    property AlignRightWithPanelProperty: IDependencyProperty read get_AlignRightWithPanelProperty;
    property AlignRightWithProperty: IDependencyProperty read get_AlignRightWithProperty;
    property AlignTopWithPanelProperty: IDependencyProperty read get_AlignTopWithPanelProperty;
    property AlignTopWithProperty: IDependencyProperty read get_AlignTopWithProperty;
    property AlignVerticalCenterWithPanelProperty: IDependencyProperty read get_AlignVerticalCenterWithPanelProperty;
    property AlignVerticalCenterWithProperty: IDependencyProperty read get_AlignVerticalCenterWithProperty;
    property BelowProperty: IDependencyProperty read get_BelowProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property LeftOfProperty: IDependencyProperty read get_LeftOfProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property RightOfProperty: IDependencyProperty read get_RightOfProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRelativePanelStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RelativePanel)]
  IRelativePanelStatics2 = interface(IInspectable)
  ['{8D6B3444-5FBC-5D8B-8B46-22176F21FA8E}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBox2
  IRichEditBox2 = interface(IInspectable)
  ['{BBEA6EAD-E805-47A4-BBE7-47E59B8F74A7}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocus: Boolean; safecall;
    procedure put_PreventKeyboardDisplayOnProgrammaticFocus(value: Boolean); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function add_Paste(handler: TextControlPasteEventHandler): EventRegistrationToken; safecall;
    procedure remove_Paste(token: EventRegistrationToken); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property PreventKeyboardDisplayOnProgrammaticFocus: Boolean read get_PreventKeyboardDisplayOnProgrammaticFocus write put_PreventKeyboardDisplayOnProgrammaticFocus;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs
  ITextCompositionStartedEventArgs = interface(IInspectable)
  ['{DF22ABB2-10CF-491E-91E8-D3CD72D8A0D3}']
    function get_StartIndex: Integer; safecall;
    function get_Length: Integer; safecall;
    property Length: Integer read get_Length;
    property StartIndex: Integer read get_StartIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs_Delegate_Base = interface(IUnknown)
  ['{297DDE84-D0C7-5D21-B1ED-F96C4EA4772F}']
    procedure Invoke(sender: IRichEditBox; args: ITextCompositionStartedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs_Delegate_Base)
  ['{E3EA39C3-A4FE-5AC9-B450-F460FFE7A43A}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs
  ITextCompositionChangedEventArgs = interface(IInspectable)
  ['{B9C7E0F2-50B7-441D-990C-68553E2E056B}']
    function get_StartIndex: Integer; safecall;
    function get_Length: Integer; safecall;
    property Length: Integer read get_Length;
    property StartIndex: Integer read get_StartIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{C080B01B-EEC0-542C-B1F1-D00E207EE1E0}']
    procedure Invoke(sender: IRichEditBox; args: ITextCompositionChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs_Delegate_Base)
  ['{18FAF72B-123A-572F-ADD1-8C598E821FC5}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs
  ITextCompositionEndedEventArgs = interface(IInspectable)
  ['{46E34DB2-77C0-4015-8EB4-92EEFDFC5914}']
    function get_StartIndex: Integer; safecall;
    function get_Length: Integer; safecall;
    property Length: Integer read get_Length;
    property StartIndex: Integer read get_StartIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs_Delegate_Base = interface(IUnknown)
  ['{E6750B95-305F-52FD-BB80-CFCF72BC5421}']
    procedure Invoke(sender: IRichEditBox; args: ITextCompositionEndedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs_Delegate_Base)
  ['{609DAAFE-0C42-575F-A03E-878D82E0A077}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{B0B3C248-7604-5108-AEC9-6F3AECCA2737}']
    procedure Invoke(sender: IRichEditBox; args: ICandidateWindowBoundsChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base)
  ['{405A9BA4-9BBD-5C76-ABDB-2890704CAB2F}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs
  IRichEditBoxTextChangingEventArgs = interface(IInspectable)
  ['{54065018-2813-4922-9F8E-B6BBAFD995D8}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{FAD2FFB9-D2D9-563C-88CA-1323B133FBF3}']
    procedure Invoke(sender: IRichEditBox; args: IRichEditBoxTextChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs = interface(TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs_Delegate_Base)
  ['{E5A2BF41-D495-5A58-A9C6-0192227CD36B}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBox3
  IRichEditBox3 = interface(IInspectable)
  ['{6B17A462-FBB6-4FFF-9991-9399CB9C0B90}']
    function add_TextCompositionStarted(handler: TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionStarted(token: EventRegistrationToken); safecall;
    function add_TextCompositionChanged(handler: TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionChanged(token: EventRegistrationToken); safecall;
    function add_TextCompositionEnded(handler: TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionEnded(token: EventRegistrationToken); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_DesiredCandidateWindowAlignment: CandidateWindowAlignment; safecall;
    procedure put_DesiredCandidateWindowAlignment(value: CandidateWindowAlignment); safecall;
    function add_CandidateWindowBoundsChanged(handler: TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_CandidateWindowBoundsChanged(token: EventRegistrationToken); safecall;
    function add_TextChanging(handler: TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextChanging(token: EventRegistrationToken); safecall;
    property DesiredCandidateWindowAlignment: CandidateWindowAlignment read get_DesiredCandidateWindowAlignment write put_DesiredCandidateWindowAlignment;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBox4
  IRichEditBox4 = interface(IInspectable)
  ['{5CAA8D35-C838-4BAD-A07C-204183BB751F}']
    function GetLinguisticAlternativesAsync: IAsyncOperation_1__IVectorView_1__HSTRING; safecall;
    function get_ClipboardCopyFormat: RichEditClipboardFormat; safecall;
    procedure put_ClipboardCopyFormat(value: RichEditClipboardFormat); safecall;
    property ClipboardCopyFormat: RichEditClipboardFormat read get_ClipboardCopyFormat write put_ClipboardCopyFormat;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBox5
  IRichEditBox5 = interface(IInspectable)
  ['{A66D9CEA-6391-4F3B-9FD3-1FD01F49F327}']
    function get_SelectionHighlightColorWhenNotFocused: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColorWhenNotFocused(value: ISolidColorBrush); safecall;
    function get_MaxLength: Integer; safecall;
    procedure put_MaxLength(value: Integer); safecall;
    property MaxLength: Integer read get_MaxLength write put_MaxLength;
    property SelectionHighlightColorWhenNotFocused: ISolidColorBrush read get_SelectionHighlightColorWhenNotFocused write put_SelectionHighlightColorWhenNotFocused;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs
  ITextControlCopyingToClipboardEventArgs = interface(IInspectable)
  ['{E405EF19-D0DF-43DA-ACE6-16F9113868C3}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{B8CB973A-91C4-5AE4-8B4E-01B968DC1A57}']
    procedure Invoke(sender: IRichEditBox; args: ITextControlCopyingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base)
  ['{99094FC2-79EE-5C35-B3E8-69A8648CFC21}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs
  ITextControlCuttingToClipboardEventArgs = interface(IInspectable)
  ['{5F894995-A58D-4CF3-B589-B5E500E06475}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{C3FEED97-C386-5D87-A320-E95CCB365A6B}']
    procedure Invoke(sender: IRichEditBox; args: ITextControlCuttingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base)
  ['{D9612893-0B08-5DCA-8D86-406C5A8FEDAF}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBox6
  IRichEditBox6 = interface(IInspectable)
  ['{0C89D500-E8D8-4EAE-8804-33649205D7D2}']
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_CharacterCasing: CharacterCasing; safecall;
    procedure put_CharacterCasing(value: CharacterCasing); safecall;
    function get_DisabledFormattingAccelerators: DisabledFormattingAccelerators; safecall;
    procedure put_DisabledFormattingAccelerators(value: DisabledFormattingAccelerators); safecall;
    function add_CopyingToClipboard(handler: TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CopyingToClipboard(token: EventRegistrationToken); safecall;
    function add_CuttingToClipboard(handler: TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CuttingToClipboard(token: EventRegistrationToken); safecall;
    property CharacterCasing_: CharacterCasing read get_CharacterCasing write put_CharacterCasing;
    property DisabledFormattingAccelerators_: DisabledFormattingAccelerators read get_DisabledFormattingAccelerators write put_DisabledFormattingAccelerators;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__IContentLinkChangedEventArgs = interface(IUnknown)
  ['{15EA3F95-1AB1-5AA2-9FAD-69202B39741A}']
    procedure Invoke(sender: IRichEditBox; args: IContentLinkChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBox7
  IRichEditBox7 = interface(IInspectable)
  ['{980C93EA-241F-4F6A-A539-9D185C8CF18A}']
    function get_ContentLinkForegroundColor: ISolidColorBrush; safecall;
    procedure put_ContentLinkForegroundColor(value: ISolidColorBrush); safecall;
    function get_ContentLinkBackgroundColor: ISolidColorBrush; safecall;
    procedure put_ContentLinkBackgroundColor(value: ISolidColorBrush); safecall;
    function get_ContentLinkProviders: Documents_IContentLinkProviderCollection; safecall;
    procedure put_ContentLinkProviders(value: Documents_IContentLinkProviderCollection); safecall;
    function get_HandwritingView: IHandwritingView; safecall;
    procedure put_HandwritingView(value: IHandwritingView); safecall;
    function get_IsHandwritingViewEnabled: Boolean; safecall;
    procedure put_IsHandwritingViewEnabled(value: Boolean); safecall;
    function add_ContentLinkChanged(handler: TypedEventHandler_2__IRichEditBox__IContentLinkChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ContentLinkChanged(token: EventRegistrationToken); safecall;
    function add_ContentLinkInvoked(handler: TypedEventHandler_2__IRichEditBox__Documents_IContentLinkInvokedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ContentLinkInvoked(token: EventRegistrationToken); safecall;
    property ContentLinkBackgroundColor: ISolidColorBrush read get_ContentLinkBackgroundColor write put_ContentLinkBackgroundColor;
    property ContentLinkForegroundColor: ISolidColorBrush read get_ContentLinkForegroundColor write put_ContentLinkForegroundColor;
    property ContentLinkProviders: Documents_IContentLinkProviderCollection read get_ContentLinkProviders write put_ContentLinkProviders;
    property HandwritingView: IHandwritingView read get_HandwritingView write put_HandwritingView;
    property IsHandwritingViewEnabled: Boolean read get_IsHandwritingViewEnabled write put_IsHandwritingViewEnabled;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs
  IRichEditBoxSelectionChangingEventArgs = interface(IInspectable)
  ['{90E0035C-E8B8-5C33-9896-4E989D65829C}']
    function get_SelectionStart: Integer; safecall;
    function get_SelectionLength: Integer; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property SelectionLength: Integer read get_SelectionLength;
    property SelectionStart: Integer read get_SelectionStart;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichEditBox,Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs = interface(IUnknown)
  ['{4581E464-6BFF-51ED-8BBE-0DF02996FE8A}']
    procedure Invoke(sender: IRichEditBox; args: IRichEditBoxSelectionChangingEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBox8
  IRichEditBox8 = interface(IInspectable)
  ['{A098E0B8-18E2-513E-9D8D-4E9703410C03}']
    function get_TextDocument: ITextDocument2; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function get_ProofingMenuFlyout: Primitives_IFlyoutBase; safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function add_SelectionChanging(handler: TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectionChanging(token: EventRegistrationToken); safecall;
    property Description: IInspectable read get_Description write put_Description;
    property ProofingMenuFlyout: Primitives_IFlyoutBase read get_ProofingMenuFlyout;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
    property TextDocument: ITextDocument2 read get_TextDocument;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxFactory = interface(IInspectable)
  ['{61A1DF62-2806-41ED-88ED-AE21F47AB422}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRichEditBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics = interface(IInspectable)
  ['{F5E03A74-88EA-479B-9A05-37089FF30EDE}']
    function get_IsReadOnlyProperty: IDependencyProperty; safecall;
    function get_AcceptsReturnProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_IsSpellCheckEnabledProperty: IDependencyProperty; safecall;
    function get_IsTextPredictionEnabledProperty: IDependencyProperty; safecall;
    function get_InputScopeProperty: IDependencyProperty; safecall;
    property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics2 = interface(IInspectable)
  ['{E3EB26DE-2748-420B-B1FC-CE95B6E85EEC}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics3 = interface(IInspectable)
  ['{6D17EEC5-1FB3-4C8B-AA23-F5E15D6AB64E}']
    function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics4 = interface(IInspectable)
  ['{F5D54FD7-7796-42A5-A5E5-2CD211EE8176}']
    function get_ClipboardCopyFormatProperty: IDependencyProperty; safecall;
    property ClipboardCopyFormatProperty: IDependencyProperty read get_ClipboardCopyFormatProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics5 = interface(IInspectable)
  ['{4B5C4568-43D5-43E6-BBB9-CB4E6250F45A}']
    function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; safecall;
    function get_MaxLengthProperty: IDependencyProperty; safecall;
    property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics6
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics6 = interface(IInspectable)
  ['{FE40E287-82ED-4F7E-92BA-66F67BC1FF44}']
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    function get_CharacterCasingProperty: IDependencyProperty; safecall;
    function get_DisabledFormattingAcceleratorsProperty: IDependencyProperty; safecall;
    property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    property DisabledFormattingAcceleratorsProperty: IDependencyProperty read get_DisabledFormattingAcceleratorsProperty;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics7
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics7 = interface(IInspectable)
  ['{59FA898F-F861-43DA-A7CE-4B9C21D835F9}']
    function get_ContentLinkForegroundColorProperty: IDependencyProperty; safecall;
    function get_ContentLinkBackgroundColorProperty: IDependencyProperty; safecall;
    function get_ContentLinkProvidersProperty: IDependencyProperty; safecall;
    function get_HandwritingViewProperty: IDependencyProperty; safecall;
    function get_IsHandwritingViewEnabledProperty: IDependencyProperty; safecall;
    property ContentLinkBackgroundColorProperty: IDependencyProperty read get_ContentLinkBackgroundColorProperty;
    property ContentLinkForegroundColorProperty: IDependencyProperty read get_ContentLinkForegroundColorProperty;
    property ContentLinkProvidersProperty: IDependencyProperty read get_ContentLinkProvidersProperty;
    property HandwritingViewProperty: IDependencyProperty read get_HandwritingViewProperty;
    property IsHandwritingViewEnabledProperty: IDependencyProperty read get_IsHandwritingViewEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichEditBoxStatics8
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics8 = interface(IInspectable)
  ['{58045172-106B-56A9-A8E4-4B74BF347D4E}']
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_ProofingMenuFlyoutProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs2
  IRichEditBoxTextChangingEventArgs2 = interface(IInspectable)
  ['{395B0DB5-636E-413E-9EB4-FC22EBFA3628}']
    function get_IsContentChanging: Boolean; safecall;
    property IsContentChanging: Boolean read get_IsContentChanging;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlock2
  IRichTextBlock2 = interface(IInspectable)
  ['{3F209013-03E7-4508-964A-91AEDAB3D11E}']
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    function get_TextLineBounds: TextLineBounds; safecall;
    procedure put_TextLineBounds(value: TextLineBounds); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_OpticalMarginAlignment: OpticalMarginAlignment; safecall;
    procedure put_OpticalMarginAlignment(value: OpticalMarginAlignment); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
    property OpticalMarginAlignment_: OpticalMarginAlignment read get_OpticalMarginAlignment write put_OpticalMarginAlignment;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property TextLineBounds_: TextLineBounds read get_TextLineBounds write put_TextLineBounds;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlock3
  IRichTextBlock3 = interface(IInspectable)
  ['{7D39AE83-8918-4613-B007-7C898BA2950E}']
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlock4
  IRichTextBlock4 = interface(IInspectable)
  ['{3577C1EA-24FD-4F50-BBE4-3FB654EA58C5}']
    function get_TextDecorations: TextDecorations; safecall;
    procedure put_TextDecorations(value: TextDecorations); safecall;
    property TextDecorations_: TextDecorations read get_TextDecorations write put_TextDecorations;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichTextBlock,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{1E9D65A8-7312-5D13-A3B9-27A91B906324}']
    procedure Invoke(sender: IRichTextBlock; args: IIsTextTrimmedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichTextBlock,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs = interface(TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base)
  ['{6AB247EA-9804-5F73-BFFB-2178262487C7}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlock5
  IRichTextBlock5 = interface(IInspectable)
  ['{9C7DC0C6-7A9F-45B6-8818-822C549BA094}']
    function get_IsTextTrimmed: Boolean; safecall;
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_TextHighlighters: IVector_1__Documents_ITextHighlighter; safecall;
    function add_IsTextTrimmedChanged(handler: TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsTextTrimmedChanged(token: EventRegistrationToken); safecall;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
    property IsTextTrimmed: Boolean read get_IsTextTrimmed;
    property TextHighlighters: IVector_1__Documents_ITextHighlighter read get_TextHighlighters;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlock6
  IRichTextBlock6 = interface(IInspectable)
  ['{AE9010CD-E899-526E-927E-88E0EED693C8}']
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    procedure CopySelectionToClipboard; safecall;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockOverflow2
  IRichTextBlockOverflow2 = interface(IInspectable)
  ['{8742624E-A882-4826-B929-4D5C3905B9A1}']
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichTextBlockOverflow,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{8F4572D1-9348-56B3-B045-CB42F98A43A4}']
    procedure Invoke(sender: IRichTextBlockOverflow; args: IIsTextTrimmedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IRichTextBlockOverflow,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs = interface(TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs_Delegate_Base)
  ['{6704618C-BB5B-5A62-B52A-1701411F0A72}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockOverflow3
  IRichTextBlockOverflow3 = interface(IInspectable)
  ['{7F69587B-5C7F-4B5F-BDBC-FB95C90E10DE}']
    function get_IsTextTrimmed: Boolean; safecall;
    function add_IsTextTrimmedChanged(handler: TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsTextTrimmedChanged(token: EventRegistrationToken); safecall;
    property IsTextTrimmed: Boolean read get_IsTextTrimmed;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlockOverflow)]
  IRichTextBlockOverflowStatics = interface(IInspectable)
  ['{041AC2F7-4F2B-43C3-A122-3FEA9CA9DC87}']
    function get_OverflowContentTargetProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_HasOverflowContentProperty: IDependencyProperty; safecall;
    property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlockOverflow)]
  IRichTextBlockOverflowStatics2 = interface(IInspectable)
  ['{B5EBED4C-F8C4-4A3A-907F-E53E78279FA3}']
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlockOverflow)]
  IRichTextBlockOverflowStatics3 = interface(IInspectable)
  ['{D1D4A705-EB0B-4ECB-B9B7-E65D03087C8E}']
    function get_IsTextTrimmedProperty: IDependencyProperty; safecall;
    property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlockStatics = interface(IInspectable)
  ['{492D883C-ADEA-433C-BE1C-208A164262BE}']
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_TextTrimmingProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_LineHeightProperty: IDependencyProperty; safecall;
    function get_LineStackingStrategyProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_OverflowContentTargetProperty: IDependencyProperty; safecall;
    function get_IsTextSelectionEnabledProperty: IDependencyProperty; safecall;
    function get_HasOverflowContentProperty: IDependencyProperty; safecall;
    function get_SelectedTextProperty: IDependencyProperty; safecall;
    function get_TextIndentProperty: IDependencyProperty; safecall;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextIndentProperty: IDependencyProperty read get_TextIndentProperty;
    property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlockStatics2 = interface(IInspectable)
  ['{0D6131E1-AF29-48CE-8AAF-74ECC28BFBB0}']
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    function get_TextLineBoundsProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_OpticalMarginAlignmentProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlockStatics3 = interface(IInspectable)
  ['{073F7EF4-CA2B-4B49-A59A-31D8FA743332}']
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlockStatics4 = interface(IInspectable)
  ['{80155BC4-6D96-4B08-AD57-13DB0F046412}']
    function get_TextDecorationsProperty: IDependencyProperty; safecall;
    property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlockStatics5 = interface(IInspectable)
  ['{AC9283A1-4F25-4280-8868-3EEEE82821E8}']
    function get_IsTextTrimmedProperty: IDependencyProperty; safecall;
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRichTextBlockStatics6
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlockStatics6 = interface(IInspectable)
  ['{073057E7-91C5-5857-BE7C-E72621239786}']
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IRowDefinitionStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_RowDefinition)]
  IRowDefinitionStatics = interface(IInspectable)
  ['{5ADF3FE5-2056-4724-94D6-E4812B022EC8}']
    function get_HeightProperty: IDependencyProperty; safecall;
    function get_MaxHeightProperty: IDependencyProperty; safecall;
    function get_MinHeightProperty: IDependencyProperty; safecall;
    property HeightProperty: IDependencyProperty read get_HeightProperty;
    property MaxHeightProperty: IDependencyProperty read get_MaxHeightProperty;
    property MinHeightProperty: IDependencyProperty read get_MinHeightProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollAnchorProvider
  IScrollAnchorProvider = interface(IInspectable)
  ['{6AE99A0F-478C-5440-B2C6-EAD4378EF8E4}']
    function get_CurrentAnchor: IUIElement; safecall;
    procedure RegisterAnchorCandidate(element: IUIElement); safecall;
    procedure UnregisterAnchorCandidate(element: IUIElement); safecall;
    property CurrentAnchor: IUIElement read get_CurrentAnchor;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollContentPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ScrollContentPresenter)]
  IScrollContentPresenter = interface(IInspectable)
  ['{5712EE2B-0EEB-46D3-AA31-5F6801B8DE20}']
    function get_CanVerticallyScroll: Boolean; safecall;
    procedure put_CanVerticallyScroll(value: Boolean); safecall;
    function get_CanHorizontallyScroll: Boolean; safecall;
    procedure put_CanHorizontallyScroll(value: Boolean); safecall;
    function get_ExtentWidth: Double; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ScrollOwner: IInspectable; safecall;
    procedure put_ScrollOwner(value: IInspectable); safecall;
    procedure LineUp; safecall;
    procedure LineDown; safecall;
    procedure LineLeft; safecall;
    procedure LineRight; safecall;
    procedure PageUp; safecall;
    procedure PageDown; safecall;
    procedure PageLeft; safecall;
    procedure PageRight; safecall;
    procedure MouseWheelUp; safecall;
    procedure MouseWheelDown; safecall;
    procedure MouseWheelLeft; safecall;
    procedure MouseWheelRight; safecall;
    procedure SetHorizontalOffset(offset: Double); safecall;
    procedure SetVerticalOffset(offset: Double); safecall;
    function MakeVisible(visual: IUIElement; rectangle: TRectF): TRectF; safecall;
    property CanHorizontallyScroll: Boolean read get_CanHorizontallyScroll write put_CanHorizontallyScroll;
    property CanVerticallyScroll: Boolean read get_CanVerticallyScroll write put_CanVerticallyScroll;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property ScrollOwner: IInspectable read get_ScrollOwner write put_ScrollOwner;
    property VerticalOffset: Double read get_VerticalOffset;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollContentPresenter2
  IScrollContentPresenter2 = interface(IInspectable)
  ['{5F9F2737-2318-5999-8A62-C3ED3C0E98B6}']
    function get_CanContentRenderOutsideBounds: Boolean; safecall;
    procedure put_CanContentRenderOutsideBounds(value: Boolean); safecall;
    function get_SizesContentToTemplatedParent: Boolean; safecall;
    procedure put_SizesContentToTemplatedParent(value: Boolean); safecall;
    property CanContentRenderOutsideBounds: Boolean read get_CanContentRenderOutsideBounds write put_CanContentRenderOutsideBounds;
    property SizesContentToTemplatedParent: Boolean read get_SizesContentToTemplatedParent write put_SizesContentToTemplatedParent;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollContentPresenterStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ScrollContentPresenter)]
  IScrollContentPresenterStatics2 = interface(IInspectable)
  ['{E172FF1A-C676-524B-8F20-96152149D05E}']
    function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; safecall;
    function get_SizesContentToTemplatedParentProperty: IDependencyProperty; safecall;
    property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    property SizesContentToTemplatedParentProperty: IDependencyProperty read get_SizesContentToTemplatedParentProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewerView
  IScrollViewerView = interface(IInspectable)
  ['{64E9BE01-4DC2-493E-ABE8-CBD3C577490E}']
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ZoomFactor: Single; safecall;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property VerticalOffset: Double read get_VerticalOffset;
    property ZoomFactor: Single read get_ZoomFactor;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs
  IScrollViewerViewChangingEventArgs = interface(IInspectable)
  ['{4DD04F7F-7A11-4B2E-9933-577DF39252B6}']
    function get_NextView: IScrollViewerView; safecall;
    function get_FinalView: IScrollViewerView; safecall;
    function get_IsInertial: Boolean; safecall;
    property FinalView: IScrollViewerView read get_FinalView;
    property IsInertial: Boolean read get_IsInertial;
    property NextView: IScrollViewerView read get_NextView;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs>
  EventHandler_1__IScrollViewerViewChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{E0C06EF2-DBC9-511C-BAB6-25756DD516A3}']
    procedure Invoke(sender: IInspectable; args: IScrollViewerViewChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs>
  EventHandler_1__IScrollViewerViewChangingEventArgs = interface(EventHandler_1__IScrollViewerViewChangingEventArgs_Delegate_Base)
  ['{FF123A06-C308-5E70-8BE4-B7D8AEF03068}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewer2
  IScrollViewer2 = interface(IInspectable)
  ['{64E9BE10-4DD1-494D-ABF7-CBD3C577491D}']
    function get_TopLeftHeader: IUIElement; safecall;
    procedure put_TopLeftHeader(value: IUIElement); safecall;
    function get_LeftHeader: IUIElement; safecall;
    procedure put_LeftHeader(value: IUIElement); safecall;
    function get_TopHeader: IUIElement; safecall;
    procedure put_TopHeader(value: IUIElement); safecall;
    function add_ViewChanging(handler: EventHandler_1__IScrollViewerViewChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_ViewChanging(token: EventRegistrationToken); safecall;
    function ChangeView(horizontalOffset: IReference_1__Double; verticalOffset: IReference_1__Double; zoomFactor: IReference_1__Single): Boolean; overload; safecall;
    function ChangeView(horizontalOffset: IReference_1__Double; verticalOffset: IReference_1__Double; zoomFactor: IReference_1__Single; disableAnimation: Boolean): Boolean; overload; safecall;
    property LeftHeader: IUIElement read get_LeftHeader write put_LeftHeader;
    property TopHeader: IUIElement read get_TopHeader write put_TopHeader;
    property TopLeftHeader: IUIElement read get_TopLeftHeader write put_TopLeftHeader;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewer3
  IScrollViewer3 = interface(IInspectable)
  ['{74E9BE21-5DE2-595E-BC08-DBD3C577492C}']
    function add_DirectManipulationStarted(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DirectManipulationStarted(token: EventRegistrationToken); safecall;
    function add_DirectManipulationCompleted(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DirectManipulationCompleted(token: EventRegistrationToken); safecall;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IScrollViewer,Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs>
  TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs = interface(IUnknown)
  ['{D9187CA2-28D7-55D8-A0F5-168FEEC2AF94}']
    procedure Invoke(sender: IScrollViewer; args: IAnchorRequestedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewer4
  IScrollViewer4 = interface(IInspectable)
  ['{786FB0C4-50A9-5A45-8A92-7BF372E19098}']
    function get_ReduceViewportForCoreInputViewOcclusions: Boolean; safecall;
    procedure put_ReduceViewportForCoreInputViewOcclusions(value: Boolean); safecall;
    function get_HorizontalAnchorRatio: Double; safecall;
    procedure put_HorizontalAnchorRatio(value: Double); safecall;
    function get_VerticalAnchorRatio: Double; safecall;
    procedure put_VerticalAnchorRatio(value: Double); safecall;
    function get_CanContentRenderOutsideBounds: Boolean; safecall;
    procedure put_CanContentRenderOutsideBounds(value: Boolean); safecall;
    function add_AnchorRequested(handler: TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_AnchorRequested(token: EventRegistrationToken); safecall;
    property CanContentRenderOutsideBounds: Boolean read get_CanContentRenderOutsideBounds write put_CanContentRenderOutsideBounds;
    property HorizontalAnchorRatio: Double read get_HorizontalAnchorRatio write put_HorizontalAnchorRatio;
    property ReduceViewportForCoreInputViewOcclusions: Boolean read get_ReduceViewportForCoreInputViewOcclusions write put_ReduceViewportForCoreInputViewOcclusions;
    property VerticalAnchorRatio: Double read get_VerticalAnchorRatio write put_VerticalAnchorRatio;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ScrollViewer)]
  IScrollViewerStatics = interface(IInspectable)
  ['{33D1299D-8D6E-4290-BF22-905CCCD04D31}']
    function get_HorizontalSnapPointsAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalSnapPointsAlignmentProperty: IDependencyProperty; safecall;
    function get_HorizontalSnapPointsTypeProperty: IDependencyProperty; safecall;
    function get_VerticalSnapPointsTypeProperty: IDependencyProperty; safecall;
    function get_ZoomSnapPointsTypeProperty: IDependencyProperty; safecall;
    function get_HorizontalOffsetProperty: IDependencyProperty; safecall;
    function get_ViewportWidthProperty: IDependencyProperty; safecall;
    function get_ScrollableWidthProperty: IDependencyProperty; safecall;
    function get_ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function get_ExtentWidthProperty: IDependencyProperty; safecall;
    function get_VerticalOffsetProperty: IDependencyProperty; safecall;
    function get_ViewportHeightProperty: IDependencyProperty; safecall;
    function get_ScrollableHeightProperty: IDependencyProperty; safecall;
    function get_ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function get_ExtentHeightProperty: IDependencyProperty; safecall;
    function get_MinZoomFactorProperty: IDependencyProperty; safecall;
    function get_MaxZoomFactorProperty: IDependencyProperty; safecall;
    function get_ZoomFactorProperty: IDependencyProperty; safecall;
    function get_ZoomSnapPointsProperty: IDependencyProperty; safecall;
    function get_HorizontalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function GetHorizontalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; safecall;
    procedure SetHorizontalScrollBarVisibility(element: IDependencyObject; horizontalScrollBarVisibility: ScrollBarVisibility); safecall;
    function get_VerticalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function GetVerticalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; safecall;
    procedure SetVerticalScrollBarVisibility(element: IDependencyObject; verticalScrollBarVisibility: ScrollBarVisibility); safecall;
    function get_IsHorizontalRailEnabledProperty: IDependencyProperty; safecall;
    function GetIsHorizontalRailEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsHorizontalRailEnabled(element: IDependencyObject; isHorizontalRailEnabled: Boolean); safecall;
    function get_IsVerticalRailEnabledProperty: IDependencyProperty; safecall;
    function GetIsVerticalRailEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsVerticalRailEnabled(element: IDependencyObject; isVerticalRailEnabled: Boolean); safecall;
    function get_IsHorizontalScrollChainingEnabledProperty: IDependencyProperty; safecall;
    function GetIsHorizontalScrollChainingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsHorizontalScrollChainingEnabled(element: IDependencyObject; isHorizontalScrollChainingEnabled: Boolean); safecall;
    function get_IsVerticalScrollChainingEnabledProperty: IDependencyProperty; safecall;
    function GetIsVerticalScrollChainingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsVerticalScrollChainingEnabled(element: IDependencyObject; isVerticalScrollChainingEnabled: Boolean); safecall;
    function get_IsZoomChainingEnabledProperty: IDependencyProperty; safecall;
    function GetIsZoomChainingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsZoomChainingEnabled(element: IDependencyObject; isZoomChainingEnabled: Boolean); safecall;
    function get_IsScrollInertiaEnabledProperty: IDependencyProperty; safecall;
    function GetIsScrollInertiaEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsScrollInertiaEnabled(element: IDependencyObject; isScrollInertiaEnabled: Boolean); safecall;
    function get_IsZoomInertiaEnabledProperty: IDependencyProperty; safecall;
    function GetIsZoomInertiaEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsZoomInertiaEnabled(element: IDependencyObject; isZoomInertiaEnabled: Boolean); safecall;
    function get_HorizontalScrollModeProperty: IDependencyProperty; safecall;
    function GetHorizontalScrollMode(element: IDependencyObject): ScrollMode; safecall;
    procedure SetHorizontalScrollMode(element: IDependencyObject; horizontalScrollMode: ScrollMode); safecall;
    function get_VerticalScrollModeProperty: IDependencyProperty; safecall;
    function GetVerticalScrollMode(element: IDependencyObject): ScrollMode; safecall;
    procedure SetVerticalScrollMode(element: IDependencyObject; verticalScrollMode: ScrollMode); safecall;
    function get_ZoomModeProperty: IDependencyProperty; safecall;
    function GetZoomMode(element: IDependencyObject): ZoomMode; safecall;
    procedure SetZoomMode(element: IDependencyObject; zoomMode: ZoomMode); safecall;
    function get_IsDeferredScrollingEnabledProperty: IDependencyProperty; safecall;
    function GetIsDeferredScrollingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsDeferredScrollingEnabled(element: IDependencyObject; isDeferredScrollingEnabled: Boolean); safecall;
    function get_BringIntoViewOnFocusChangeProperty: IDependencyProperty; safecall;
    function GetBringIntoViewOnFocusChange(element: IDependencyObject): Boolean; safecall;
    procedure SetBringIntoViewOnFocusChange(element: IDependencyObject; bringIntoViewOnFocusChange: Boolean); safecall;
    property BringIntoViewOnFocusChangeProperty: IDependencyProperty read get_BringIntoViewOnFocusChangeProperty;
    property ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedHorizontalScrollBarVisibilityProperty;
    property ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedVerticalScrollBarVisibilityProperty;
    property ExtentHeightProperty: IDependencyProperty read get_ExtentHeightProperty;
    property ExtentWidthProperty: IDependencyProperty read get_ExtentWidthProperty;
    property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    property HorizontalScrollBarVisibilityProperty: IDependencyProperty read get_HorizontalScrollBarVisibilityProperty;
    property HorizontalScrollModeProperty: IDependencyProperty read get_HorizontalScrollModeProperty;
    property HorizontalSnapPointsAlignmentProperty: IDependencyProperty read get_HorizontalSnapPointsAlignmentProperty;
    property HorizontalSnapPointsTypeProperty: IDependencyProperty read get_HorizontalSnapPointsTypeProperty;
    property IsDeferredScrollingEnabledProperty: IDependencyProperty read get_IsDeferredScrollingEnabledProperty;
    property IsHorizontalRailEnabledProperty: IDependencyProperty read get_IsHorizontalRailEnabledProperty;
    property IsHorizontalScrollChainingEnabledProperty: IDependencyProperty read get_IsHorizontalScrollChainingEnabledProperty;
    property IsScrollInertiaEnabledProperty: IDependencyProperty read get_IsScrollInertiaEnabledProperty;
    property IsVerticalRailEnabledProperty: IDependencyProperty read get_IsVerticalRailEnabledProperty;
    property IsVerticalScrollChainingEnabledProperty: IDependencyProperty read get_IsVerticalScrollChainingEnabledProperty;
    property IsZoomChainingEnabledProperty: IDependencyProperty read get_IsZoomChainingEnabledProperty;
    property IsZoomInertiaEnabledProperty: IDependencyProperty read get_IsZoomInertiaEnabledProperty;
    property MaxZoomFactorProperty: IDependencyProperty read get_MaxZoomFactorProperty;
    property MinZoomFactorProperty: IDependencyProperty read get_MinZoomFactorProperty;
    property ScrollableHeightProperty: IDependencyProperty read get_ScrollableHeightProperty;
    property ScrollableWidthProperty: IDependencyProperty read get_ScrollableWidthProperty;
    property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
    property VerticalScrollBarVisibilityProperty: IDependencyProperty read get_VerticalScrollBarVisibilityProperty;
    property VerticalScrollModeProperty: IDependencyProperty read get_VerticalScrollModeProperty;
    property VerticalSnapPointsAlignmentProperty: IDependencyProperty read get_VerticalSnapPointsAlignmentProperty;
    property VerticalSnapPointsTypeProperty: IDependencyProperty read get_VerticalSnapPointsTypeProperty;
    property ViewportHeightProperty: IDependencyProperty read get_ViewportHeightProperty;
    property ViewportWidthProperty: IDependencyProperty read get_ViewportWidthProperty;
    property ZoomFactorProperty: IDependencyProperty read get_ZoomFactorProperty;
    property ZoomModeProperty: IDependencyProperty read get_ZoomModeProperty;
    property ZoomSnapPointsProperty: IDependencyProperty read get_ZoomSnapPointsProperty;
    property ZoomSnapPointsTypeProperty: IDependencyProperty read get_ZoomSnapPointsTypeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewerStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ScrollViewer)]
  IScrollViewerStatics2 = interface(IInspectable)
  ['{33D129AD-8D7E-42A0-BF32-905CCCD04D41}']
    function get_TopLeftHeaderProperty: IDependencyProperty; safecall;
    function get_LeftHeaderProperty: IDependencyProperty; safecall;
    function get_TopHeaderProperty: IDependencyProperty; safecall;
    property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    property TopHeaderProperty: IDependencyProperty read get_TopHeaderProperty;
    property TopLeftHeaderProperty: IDependencyProperty read get_TopLeftHeaderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IScrollViewerStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ScrollViewer)]
  IScrollViewerStatics4 = interface(IInspectable)
  ['{220CF7CC-4F46-59F1-AF9B-67FA8EB33D01}']
    function get_ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty; safecall;
    function get_HorizontalAnchorRatioProperty: IDependencyProperty; safecall;
    function get_VerticalAnchorRatioProperty: IDependencyProperty; safecall;
    function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; safecall;
    function GetCanContentRenderOutsideBounds(element: IDependencyObject): Boolean; safecall;
    procedure SetCanContentRenderOutsideBounds(element: IDependencyObject; canContentRenderOutsideBounds: Boolean); safecall;
    property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    property HorizontalAnchorRatioProperty: IDependencyProperty read get_HorizontalAnchorRatioProperty;
    property ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty read get_ReduceViewportForCoreInputViewOcclusionsProperty;
    property VerticalAnchorRatioProperty: IDependencyProperty read get_VerticalAnchorRatioProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISearchBoxFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SearchBox)]
  ISearchBoxFactory = interface(IInspectable)
  ['{CD743F6D-8685-46B4-9DDD-202F6941B701}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISearchBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISearchBoxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SearchBox)]
  ISearchBoxStatics = interface(IInspectable)
  ['{B123634F-6871-48CD-92DF-4CFF22459082}']
    function get_SearchHistoryEnabledProperty: IDependencyProperty; safecall;
    function get_SearchHistoryContextProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_QueryTextProperty: IDependencyProperty; safecall;
    function get_FocusOnKeyboardInputProperty: IDependencyProperty; safecall;
    function get_ChooseSuggestionOnEnterProperty: IDependencyProperty; safecall;
    property ChooseSuggestionOnEnterProperty: IDependencyProperty read get_ChooseSuggestionOnEnterProperty;
    property FocusOnKeyboardInputProperty: IDependencyProperty read get_FocusOnKeyboardInputProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property QueryTextProperty: IDependencyProperty read get_QueryTextProperty;
    property SearchHistoryContextProperty: IDependencyProperty read get_SearchHistoryContextProperty;
    property SearchHistoryEnabledProperty: IDependencyProperty read get_SearchHistoryEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SectionsInViewChangedEventArgs)]
  ISectionsInViewChangedEventArgsFactory = interface(IInspectable)
  ['{557F5244-92F8-4150-B730-E6346E8F50D1}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SelectionChangedEventArgs)]
  ISelectionChangedEventArgsFactory = interface(IInspectable)
  ['{11A8B6B5-2830-4517-84CD-5524C8B88B45}']
    function CreateInstanceWithRemovedItemsAndAddedItems(removedItems: IVector_1__IInspectable; addedItems: IVector_1__IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): ISelectionChangedEventArgs; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISemanticZoomStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SemanticZoom)]
  ISemanticZoomStatics = interface(IInspectable)
  ['{8EF17EF2-9898-4666-B285-3ED38A07910E}']
    function get_ZoomedInViewProperty: IDependencyProperty; safecall;
    function get_ZoomedOutViewProperty: IDependencyProperty; safecall;
    function get_IsZoomedInViewActiveProperty: IDependencyProperty; safecall;
    function get_CanChangeViewsProperty: IDependencyProperty; safecall;
    function get_IsZoomOutButtonEnabledProperty: IDependencyProperty; safecall;
    property CanChangeViewsProperty: IDependencyProperty read get_CanChangeViewsProperty;
    property IsZoomOutButtonEnabledProperty: IDependencyProperty read get_IsZoomOutButtonEnabledProperty;
    property IsZoomedInViewActiveProperty: IDependencyProperty read get_IsZoomedInViewActiveProperty;
    property ZoomedInViewProperty: IDependencyProperty read get_ZoomedInViewProperty;
    property ZoomedOutViewProperty: IDependencyProperty read get_ZoomedOutViewProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISettingsFlyoutFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SettingsFlyout)]
  ISettingsFlyoutFactory = interface(IInspectable)
  ['{480C7011-57AA-4DB6-B6FD-EC676F6D414E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISettingsFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISettingsFlyoutStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SettingsFlyout)]
  ISettingsFlyoutStatics = interface(IInspectable)
  ['{D0E3B535-9157-4BE4-A42A-F591698846AC}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_HeaderBackgroundProperty: IDependencyProperty; safecall;
    function get_HeaderForegroundProperty: IDependencyProperty; safecall;
    function get_IconSourceProperty: IDependencyProperty; safecall;
    property HeaderBackgroundProperty: IDependencyProperty read get_HeaderBackgroundProperty;
    property HeaderForegroundProperty: IDependencyProperty read get_HeaderForegroundProperty;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISlider2
  ISlider2 = interface(IInspectable)
  ['{40A3C50E-87D6-4D2F-B1CF-B279CC996F26}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISliderFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Slider)]
  ISliderFactory = interface(IInspectable)
  ['{03A67B37-C7BF-437C-848F-8CB5B753EAB4}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISlider; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISliderStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Slider)]
  ISliderStatics = interface(IInspectable)
  ['{8A4363D7-7FDF-4D30-98FE-CE78C05B31CF}']
    function get_IntermediateValueProperty: IDependencyProperty; safecall;
    function get_StepFrequencyProperty: IDependencyProperty; safecall;
    function get_SnapsToProperty: IDependencyProperty; safecall;
    function get_TickFrequencyProperty: IDependencyProperty; safecall;
    function get_TickPlacementProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_IsDirectionReversedProperty: IDependencyProperty; safecall;
    function get_IsThumbToolTipEnabledProperty: IDependencyProperty; safecall;
    function get_ThumbToolTipValueConverterProperty: IDependencyProperty; safecall;
    property IntermediateValueProperty: IDependencyProperty read get_IntermediateValueProperty;
    property IsDirectionReversedProperty: IDependencyProperty read get_IsDirectionReversedProperty;
    property IsThumbToolTipEnabledProperty: IDependencyProperty read get_IsThumbToolTipEnabledProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property SnapsToProperty: IDependencyProperty read get_SnapsToProperty;
    property StepFrequencyProperty: IDependencyProperty read get_StepFrequencyProperty;
    property ThumbToolTipValueConverterProperty: IDependencyProperty read get_ThumbToolTipValueConverterProperty;
    property TickFrequencyProperty: IDependencyProperty read get_TickFrequencyProperty;
    property TickPlacementProperty: IDependencyProperty read get_TickPlacementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISliderStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Slider)]
  ISliderStatics2 = interface(IInspectable)
  ['{00E7935D-79A5-4759-96A6-29E0A94ADD33}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitButtonClickEventArgs
  ISplitButtonClickEventArgs = interface(IInspectable)
  ['{C227C2CA-26F4-5960-98D5-919149D1B525}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ISplitButton,Windows.UI.Xaml.Controls.ISplitButtonClickEventArgs>
  TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs = interface(IUnknown)
  ['{6D1ACEAA-F2BE-5B02-89BD-7BAAF8327726}']
    procedure Invoke(sender: ISplitButton; args: ISplitButtonClickEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitButton)]
  ISplitButton = interface(IInspectable)
  ['{58BBB066-C2EA-5499-8150-40FAA75F6BB5}']
    function get_Flyout: Primitives_IFlyoutBase; safecall;
    procedure put_Flyout(value: Primitives_IFlyoutBase); safecall;
    function get_Command: Input_ICommand; safecall;
    procedure put_Command(value: Input_ICommand); safecall;
    function get_CommandParameter: IInspectable; safecall;
    procedure put_CommandParameter(value: IInspectable); safecall;
    function add_Click(handler: TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_Click(token: EventRegistrationToken); safecall;
    property Command: Input_ICommand read get_Command write put_Command;
    property CommandParameter: IInspectable read get_CommandParameter write put_CommandParameter;
    property Flyout: Primitives_IFlyoutBase read get_Flyout write put_Flyout;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitButtonAutomationPeer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitButtonAutomationPeer)]
  ISplitButtonAutomationPeer = interface(IInspectable)
  ['{C46A58B8-3828-5C36-AA13-F79F02C12F34}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitButtonAutomationPeerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitButtonAutomationPeer)]
  ISplitButtonAutomationPeerFactory = interface(IInspectable)
  ['{D63A2534-77DC-5361-8422-4AD8750F45F4}']
    function CreateInstance(owner: ISplitButton; baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButtonAutomationPeer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitButton)]
  ISplitButtonFactory = interface(IInspectable)
  ['{3201C32F-4D55-589D-97DD-617FA3642137}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitButton)]
  ISplitButtonStatics = interface(IInspectable)
  ['{8DF07A81-0B1F-5EA9-BE42-152AB9A4BC5E}']
    function get_FlyoutProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitView2
  ISplitView2 = interface(IInspectable)
  ['{5EA7DC10-CC83-409A-82F9-3E91D6D7084F}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitView3
  ISplitView3 = interface(IInspectable)
  ['{0EA12D8D-1171-407B-96D3-5E1B470C3EC5}']
    function add_PaneOpening(handler: TypedEventHandler_2__ISplitView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneOpening(token: EventRegistrationToken); safecall;
    function add_PaneOpened(handler: TypedEventHandler_2__ISplitView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneOpened(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitView)]
  ISplitViewFactory = interface(IInspectable)
  ['{F101773A-084E-4FB9-8442-63221B44533F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitView)]
  ISplitViewStatics = interface(IInspectable)
  ['{859B4F6F-44AB-4E4B-91C1-17B7056D9B5F}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_PaneProperty: IDependencyProperty; safecall;
    function get_IsPaneOpenProperty: IDependencyProperty; safecall;
    function get_OpenPaneLengthProperty: IDependencyProperty; safecall;
    function get_CompactPaneLengthProperty: IDependencyProperty; safecall;
    function get_PanePlacementProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    function get_PaneBackgroundProperty: IDependencyProperty; safecall;
    property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    property PaneBackgroundProperty: IDependencyProperty read get_PaneBackgroundProperty;
    property PanePlacementProperty: IDependencyProperty read get_PanePlacementProperty;
    property PaneProperty: IDependencyProperty read get_PaneProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISplitViewStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SplitView)]
  ISplitViewStatics2 = interface(IInspectable)
  ['{14B7CD7A-DFBC-422C-80A9-585871297113}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_StackPanel)]
  IStackPanel = interface(IInspectable)
  ['{B8AE8FE2-D641-4FD7-80B4-7439207D2798}']
    function get_AreScrollSnapPointsRegular: Boolean; safecall;
    procedure put_AreScrollSnapPointsRegular(value: Boolean); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    property AreScrollSnapPointsRegular: Boolean read get_AreScrollSnapPointsRegular write put_AreScrollSnapPointsRegular;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanel2
  IStackPanel2 = interface(IInspectable)
  ['{36F23359-040E-48F7-9A98-F2664591959C}']
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanel4
  IStackPanel4 = interface(IInspectable)
  ['{43EBF7F6-3196-412E-8A95-ADD002FF43F0}']
    function get_Spacing: Double; safecall;
    procedure put_Spacing(value: Double); safecall;
    property Spacing: Double read get_Spacing write put_Spacing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanel5
  IStackPanel5 = interface(IInspectable)
  ['{F73E3117-61A8-5A01-865E-88511C04A992}']
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_StackPanel)]
  IStackPanelFactory = interface(IInspectable)
  ['{63D8248A-8B34-445A-808F-B6ECD62A27D9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanelStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_StackPanel)]
  IStackPanelStatics = interface(IInspectable)
  ['{F0D0CD93-4DBC-48A7-9914-954924657771}']
    function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanelStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_StackPanel)]
  IStackPanelStatics2 = interface(IInspectable)
  ['{D97E6257-080D-412E-A91A-CE6E5D02AAD3}']
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanelStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_StackPanel)]
  IStackPanelStatics4 = interface(IInspectable)
  ['{279CDD71-067B-459F-815F-ECD85C5E4843}']
    function get_SpacingProperty: IDependencyProperty; safecall;
    property SpacingProperty: IDependencyProperty read get_SpacingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStackPanelStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_StackPanel)]
  IStackPanelStatics5 = interface(IInspectable)
  ['{87287490-BFF2-5347-8787-FB5AEC942878}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStyleSelectorFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_StyleSelector)]
  IStyleSelectorFactory = interface(IInspectable)
  ['{9E942AE7-3761-447F-8F97-29E39D5EB310}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStyleSelector; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IStyleSelectorOverrides
  IStyleSelectorOverrides = interface(IInspectable)
  ['{08ADD66D-0E2E-43A0-AECA-8FAA94B9D017}']
    function SelectStyleCore(item: IInspectable; container: IDependencyObject): IStyle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwapChainBackgroundPanel)]
  ISwapChainBackgroundPanel = interface(IInspectable)
  ['{1C59DB48-8233-4C0C-BCF5-02A5FB35AE00}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2
  ISwapChainBackgroundPanel2 = interface(IInspectable)
  ['{21E672F2-2592-4C38-870F-28FBCF52C095}']
    function CreateCoreIndependentInputSource(deviceTypes: CoreInputDeviceTypes): ICoreInputSourceBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwapChainBackgroundPanel)]
  ISwapChainBackgroundPanelFactory = interface(IInspectable)
  ['{198289D4-C89B-49B2-896C-5917BF8ADCAE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainBackgroundPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwapChainPanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwapChainPanel)]
  ISwapChainPanelFactory = interface(IInspectable)
  ['{F38F8D7F-1A48-49CB-86D2-10EAAAF6FD70}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwapChainPanelStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwapChainPanel)]
  ISwapChainPanelStatics = interface(IInspectable)
  ['{F89C0297-EEA8-498C-99C4-257E3660DF7E}']
    function get_CompositionScaleXProperty: IDependencyProperty; safecall;
    function get_CompositionScaleYProperty: IDependencyProperty; safecall;
    property CompositionScaleXProperty: IDependencyProperty read get_CompositionScaleXProperty;
    property CompositionScaleYProperty: IDependencyProperty read get_CompositionScaleYProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeItems
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeItems)]
  ISwipeItems = interface(IInspectable)
  ['{B01726FF-969A-40D0-9F04-76084CE6D7B7}']
    function get_Mode: SwipeMode; safecall;
    procedure put_Mode(value: SwipeMode); safecall;
    property Mode: SwipeMode read get_Mode write put_Mode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeControl
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeControl)]
  ISwipeControl = interface(IInspectable)
  ['{9EE3D96F-6704-4823-AA15-1C143BC53CF7}']
    function get_LeftItems: ISwipeItems; safecall;
    procedure put_LeftItems(value: ISwipeItems); safecall;
    function get_RightItems: ISwipeItems; safecall;
    procedure put_RightItems(value: ISwipeItems); safecall;
    function get_TopItems: ISwipeItems; safecall;
    procedure put_TopItems(value: ISwipeItems); safecall;
    function get_BottomItems: ISwipeItems; safecall;
    procedure put_BottomItems(value: ISwipeItems); safecall;
    procedure Close; safecall;
    property BottomItems: ISwipeItems read get_BottomItems write put_BottomItems;
    property LeftItems: ISwipeItems read get_LeftItems write put_LeftItems;
    property RightItems: ISwipeItems read get_RightItems write put_RightItems;
    property TopItems: ISwipeItems read get_TopItems write put_TopItems;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeControlFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeControl)]
  ISwipeControlFactory = interface(IInspectable)
  ['{C0AAA3AE-D141-4E12-A728-5F95B507E7AB}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeControl)]
  ISwipeControlStatics = interface(IInspectable)
  ['{E57AE83C-2216-4717-9EF6-4662334C6501}']
    function get_LeftItemsProperty: IDependencyProperty; safecall;
    function get_RightItemsProperty: IDependencyProperty; safecall;
    function get_TopItemsProperty: IDependencyProperty; safecall;
    function get_BottomItemsProperty: IDependencyProperty; safecall;
    property BottomItemsProperty: IDependencyProperty read get_BottomItemsProperty;
    property LeftItemsProperty: IDependencyProperty read get_LeftItemsProperty;
    property RightItemsProperty: IDependencyProperty read get_RightItemsProperty;
    property TopItemsProperty: IDependencyProperty read get_TopItemsProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeItemInvokedEventArgs
  ISwipeItemInvokedEventArgs = interface(IInspectable)
  ['{C5B025F5-CB32-4733-8011-5D0D37F4550A}']
    function get_SwipeControl: ISwipeControl; safecall;
    property SwipeControl: ISwipeControl read get_SwipeControl;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ISwipeItem,Windows.UI.Xaml.Controls.ISwipeItemInvokedEventArgs>
  TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs_Delegate_Base = interface(IUnknown)
  ['{3397B4EB-CE58-5D81-A25F-E8E63198B368}']
    procedure Invoke(sender: ISwipeItem; args: ISwipeItemInvokedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ISwipeItem,Windows.UI.Xaml.Controls.ISwipeItemInvokedEventArgs>
  TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs = interface(TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs_Delegate_Base)
  ['{692F1451-EF8E-5EEA-BF94-B71202E0F4B1}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeItem)]
  ISwipeItem = interface(IInspectable)
  ['{836EDADC-45C8-4A00-90A0-7107FA894A1B}']
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_IconSource: IIconSource; safecall;
    procedure put_IconSource(value: IIconSource); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_Command: Input_ICommand; safecall;
    procedure put_Command(value: Input_ICommand); safecall;
    function get_CommandParameter: IInspectable; safecall;
    procedure put_CommandParameter(value: IInspectable); safecall;
    function get_BehaviorOnInvoked: SwipeBehaviorOnInvoked; safecall;
    procedure put_BehaviorOnInvoked(value: SwipeBehaviorOnInvoked); safecall;
    function add_Invoked(handler: TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Invoked(token: EventRegistrationToken); safecall;
    property Background: IBrush read get_Background write put_Background;
    property BehaviorOnInvoked: SwipeBehaviorOnInvoked read get_BehaviorOnInvoked write put_BehaviorOnInvoked;
    property Command: Input_ICommand read get_Command write put_Command;
    property CommandParameter: IInspectable read get_CommandParameter write put_CommandParameter;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property IconSource: IIconSource read get_IconSource write put_IconSource;
    property Text: HSTRING read get_Text write put_Text;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeItem)]
  ISwipeItemFactory = interface(IInspectable)
  ['{844BD61A-1716-4097-BBA2-7526DA22DE39}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeItem)]
  ISwipeItemStatics = interface(IInspectable)
  ['{D0B44E96-2766-4D93-B5DB-F5E1BE832C2D}']
    function get_IconSourceProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    function get_BehaviorOnInvokedProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BehaviorOnInvokedProperty: IDependencyProperty read get_BehaviorOnInvokedProperty;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeItemsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeItems)]
  ISwipeItemsFactory = interface(IInspectable)
  ['{47C460EE-D5AA-445F-B31E-50C076C011B9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItems; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISwipeItemsStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SwipeItems)]
  ISwipeItemsStatics = interface(IInspectable)
  ['{376250DF-48DB-43E3-B0E9-089E5DA9A114}']
    function get_ModeProperty: IDependencyProperty; safecall;
    property ModeProperty: IDependencyProperty read get_ModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISymbolIcon
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SymbolIcon)]
  ISymbolIcon = interface(IInspectable)
  ['{7A4774C9-A6A3-4B30-8FF1-9081D70E9A5C}']
    function get_Symbol: Symbol; safecall;
    procedure put_Symbol(value: Symbol); safecall;
    property Symbol_: Symbol read get_Symbol write put_Symbol;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISymbolIconFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SymbolIcon)]
  ISymbolIconFactory = interface(IInspectable)
  ['{C7252B88-E76C-4B44-8A05-046B9DC772B8}']
    function CreateInstanceWithSymbol(symbol: Symbol): ISymbolIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISymbolIconSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SymbolIconSource)]
  ISymbolIconSource = interface(IInspectable)
  ['{625D95A2-B6B1-408A-B289-EAB2ECBA62D8}']
    function get_Symbol: Symbol; safecall;
    procedure put_Symbol(value: Symbol); safecall;
    property Symbol_: Symbol read get_Symbol write put_Symbol;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISymbolIconSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SymbolIconSource)]
  ISymbolIconSourceFactory = interface(IInspectable)
  ['{A526AAB0-4130-4907-B049-21F9240C7A40}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISymbolIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISymbolIconSourceStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SymbolIconSource)]
  ISymbolIconSourceStatics = interface(IInspectable)
  ['{8BC49738-D94E-4148-8D64-1ADF0F23F25F}']
    function get_SymbolProperty: IDependencyProperty; safecall;
    property SymbolProperty: IDependencyProperty read get_SymbolProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ISymbolIconStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_SymbolIcon)]
  ISymbolIconStatics = interface(IInspectable)
  ['{8624FBDF-952C-4F76-B03F-30833BE99572}']
    function get_SymbolProperty: IDependencyProperty; safecall;
    property SymbolProperty: IDependencyProperty read get_SymbolProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlock2
  ITextBlock2 = interface(IInspectable)
  ['{45206A4C-0A4E-4FBF-AEE9-335D5A205F6E}']
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    function get_TextLineBounds: TextLineBounds; safecall;
    procedure put_TextLineBounds(value: TextLineBounds); safecall;
    function get_OpticalMarginAlignment: OpticalMarginAlignment; safecall;
    procedure put_OpticalMarginAlignment(value: OpticalMarginAlignment); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
    property OpticalMarginAlignment_: OpticalMarginAlignment read get_OpticalMarginAlignment write put_OpticalMarginAlignment;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property TextLineBounds_: TextLineBounds read get_TextLineBounds write put_TextLineBounds;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlock3
  ITextBlock3 = interface(IInspectable)
  ['{B651DD5A-424B-48C3-9B67-486F4E139899}']
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlock4
  ITextBlock4 = interface(IInspectable)
  ['{B014F270-9808-4ADC-B452-60CDA54100C1}']
    function GetAlphaMask: ICompositionBrush; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlock5
  ITextBlock5 = interface(IInspectable)
  ['{624A2D38-EDBD-4A5A-B678-E49F1E07AFBD}']
    function get_TextDecorations: TextDecorations; safecall;
    procedure put_TextDecorations(value: TextDecorations); safecall;
    property TextDecorations_: TextDecorations read get_TextDecorations write put_TextDecorations;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBlock,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{4F8AD0D6-06E6-5C3D-B253-8E23991F4E80}']
    procedure Invoke(sender: ITextBlock; args: IIsTextTrimmedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBlock,Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs = interface(TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base)
  ['{ABF29E69-0A23-57B4-9A3F-0861D7459493}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlock6
  ITextBlock6 = interface(IInspectable)
  ['{31816CD9-0404-410F-91EC-33B0A0BB92B2}']
    function get_IsTextTrimmed: Boolean; safecall;
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_TextHighlighters: IVector_1__Documents_ITextHighlighter; safecall;
    function add_IsTextTrimmedChanged(handler: TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsTextTrimmedChanged(token: EventRegistrationToken); safecall;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
    property IsTextTrimmed: Boolean read get_IsTextTrimmed;
    property TextHighlighters: IVector_1__Documents_ITextHighlighter read get_TextHighlighters;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlock7
  ITextBlock7 = interface(IInspectable)
  ['{DFE20A4E-8BE7-5E33-9F37-72416875B121}']
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    procedure CopySelectionToClipboard; safecall;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlockStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBlock)]
  ITextBlockStatics = interface(IInspectable)
  ['{193EC042-A847-4552-B4E8-DB36655B840A}']
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_TextTrimmingProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_LineHeightProperty: IDependencyProperty; safecall;
    function get_LineStackingStrategyProperty: IDependencyProperty; safecall;
    function get_IsTextSelectionEnabledProperty: IDependencyProperty; safecall;
    function get_SelectedTextProperty: IDependencyProperty; safecall;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
    property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlockStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBlock)]
  ITextBlockStatics2 = interface(IInspectable)
  ['{88100B1B-FF24-4B93-A0E6-F029C94871F1}']
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    function get_TextLineBoundsProperty: IDependencyProperty; safecall;
    function get_OpticalMarginAlignmentProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlockStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBlock)]
  ITextBlockStatics3 = interface(IInspectable)
  ['{8D16B9EB-20A1-4EAB-BBF2-1D6BDCBCD705}']
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlockStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBlock)]
  ITextBlockStatics5 = interface(IInspectable)
  ['{8E4D9C70-0D4E-48DF-AE7F-BB7A9AF6852E}']
    function get_TextDecorationsProperty: IDependencyProperty; safecall;
    property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlockStatics6
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBlock)]
  ITextBlockStatics6 = interface(IInspectable)
  ['{3D1013A9-F9A6-43A2-99D3-573B89A83CA3}']
    function get_IsTextTrimmedProperty: IDependencyProperty; safecall;
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBlockStatics7
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBlock)]
  ITextBlockStatics7 = interface(IInspectable)
  ['{CFD57E3B-0256-585D-8B3F-FEAFB69D3320}']
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox2
  ITextBox2 = interface(IInspectable)
  ['{F7168C00-1432-462A-9405-38F385BFC37C}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocus: Boolean; safecall;
    procedure put_PreventKeyboardDisplayOnProgrammaticFocus(value: Boolean); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function add_Paste(handler: TextControlPasteEventHandler): EventRegistrationToken; safecall;
    procedure remove_Paste(token: EventRegistrationToken); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property PreventKeyboardDisplayOnProgrammaticFocus: Boolean read get_PreventKeyboardDisplayOnProgrammaticFocus write put_PreventKeyboardDisplayOnProgrammaticFocus;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs_Delegate_Base = interface(IUnknown)
  ['{98FEE2A4-211D-5A3D-A832-C5DDEB8444A9}']
    procedure Invoke(sender: ITextBox; args: ITextCompositionStartedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs = interface(TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs_Delegate_Base)
  ['{0122A33C-D4C8-5467-B2AD-A62688C09C80}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{61107067-2CFB-5DE1-92B6-D332C17F756E}']
    procedure Invoke(sender: ITextBox; args: ITextCompositionChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs = interface(TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs_Delegate_Base)
  ['{E5AF0A7B-C46B-5C4B-9D91-5256AFBF2A39}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs_Delegate_Base = interface(IUnknown)
  ['{B9AC0E9E-5B32-52B7-A8F9-B85E4BE14B16}']
    procedure Invoke(sender: ITextBox; args: ITextCompositionEndedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs = interface(TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs_Delegate_Base)
  ['{7411632E-CE5D-568C-8478-25DACA9DB1E3}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{B6B53BF8-1AC8-51C4-BAFC-95F8E01637B0}']
    procedure Invoke(sender: ITextBox; args: ICandidateWindowBoundsChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs = interface(TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base)
  ['{E65C1A23-E2CA-525E-9A20-5D9551161BD3}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs
  ITextBoxTextChangingEventArgs = interface(IInspectable)
  ['{4E6A4B75-43DD-4E33-ACBE-2D8796A17927}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{1E65E112-E634-55C3-BEFB-DBF5CFCB30B1}']
    procedure Invoke(sender: ITextBox; args: ITextBoxTextChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs = interface(TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs_Delegate_Base)
  ['{DB53C77C-F3CB-5970-8530-4E6C57209699}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox3
  ITextBox3 = interface(IInspectable)
  ['{7DF18C3C-2826-425E-9A94-00B7F73F3756}']
    function add_TextCompositionStarted(handler: TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionStarted(token: EventRegistrationToken); safecall;
    function add_TextCompositionChanged(handler: TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionChanged(token: EventRegistrationToken); safecall;
    function add_TextCompositionEnded(handler: TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionEnded(token: EventRegistrationToken); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_DesiredCandidateWindowAlignment: CandidateWindowAlignment; safecall;
    procedure put_DesiredCandidateWindowAlignment(value: CandidateWindowAlignment); safecall;
    function add_CandidateWindowBoundsChanged(handler: TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_CandidateWindowBoundsChanged(token: EventRegistrationToken); safecall;
    function add_TextChanging(handler: TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextChanging(token: EventRegistrationToken); safecall;
    property DesiredCandidateWindowAlignment: CandidateWindowAlignment read get_DesiredCandidateWindowAlignment write put_DesiredCandidateWindowAlignment;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox4
  ITextBox4 = interface(IInspectable)
  ['{B5F1A675-CCE1-45AF-AEF9-C4787BBB5E30}']
    function GetLinguisticAlternativesAsync: IAsyncOperation_1__IVectorView_1__HSTRING; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox5
  ITextBox5 = interface(IInspectable)
  ['{35F9CFC1-4176-44F4-B756-E9CCC4399805}']
    function get_SelectionHighlightColorWhenNotFocused: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColorWhenNotFocused(value: ISolidColorBrush); safecall;
    property SelectionHighlightColorWhenNotFocused: ISolidColorBrush read get_SelectionHighlightColorWhenNotFocused write put_SelectionHighlightColorWhenNotFocused;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{50C332F2-58D1-5228-A3A9-1CCBDED70537}']
    procedure Invoke(sender: ITextBox; args: ITextControlCopyingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs = interface(TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base)
  ['{06B66640-E159-5529-B508-918ACF3EE6C7}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{C1033F73-F81A-50D8-8D3A-07B38D8D177E}']
    procedure Invoke(sender: ITextBox; args: ITextControlCuttingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs = interface(TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base)
  ['{D084FCE4-1BBF-5D29-99AA-659D2EA1FED9}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs
  ITextBoxBeforeTextChangingEventArgs = interface(IInspectable)
  ['{A5541DB3-7784-4258-AA83-E4BEDD727467}']
    function get_NewText: HSTRING; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property NewText: HSTRING read get_NewText;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{40C0C57B-7C67-52F4-B318-BEA8FD033610}']
    procedure Invoke(sender: ITextBox; args: ITextBoxBeforeTextChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs = interface(TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs_Delegate_Base)
  ['{99722824-5F40-5CD6-B322-7F000190C688}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox6
  ITextBox6 = interface(IInspectable)
  ['{41FF2D07-5085-4E52-A51C-F94B06CD558B}']
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_CharacterCasing: CharacterCasing; safecall;
    procedure put_CharacterCasing(value: CharacterCasing); safecall;
    function get_PlaceholderForeground: IBrush; safecall;
    procedure put_PlaceholderForeground(value: IBrush); safecall;
    function add_CopyingToClipboard(handler: TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CopyingToClipboard(token: EventRegistrationToken); safecall;
    function add_CuttingToClipboard(handler: TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CuttingToClipboard(token: EventRegistrationToken); safecall;
    function add_BeforeTextChanging(handler: TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_BeforeTextChanging(token: EventRegistrationToken); safecall;
    property CharacterCasing_: CharacterCasing read get_CharacterCasing write put_CharacterCasing;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
    property PlaceholderForeground: IBrush read get_PlaceholderForeground write put_PlaceholderForeground;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox7
  ITextBox7 = interface(IInspectable)
  ['{DA4911F9-FFE1-4C6A-AC6D-1B4A174CCF80}']
    function get_HandwritingView: IHandwritingView; safecall;
    procedure put_HandwritingView(value: IHandwritingView); safecall;
    function get_IsHandwritingViewEnabled: Boolean; safecall;
    procedure put_IsHandwritingViewEnabled(value: Boolean); safecall;
    property HandwritingView: IHandwritingView read get_HandwritingView write put_HandwritingView;
    property IsHandwritingViewEnabled: Boolean read get_IsHandwritingViewEnabled write put_IsHandwritingViewEnabled;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs
  ITextBoxSelectionChangingEventArgs = interface(IInspectable)
  ['{847A24DD-9ABE-52DF-A80A-0CCE4B496632}']
    function get_SelectionStart: Integer; safecall;
    function get_SelectionLength: Integer; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property SelectionLength: Integer read get_SelectionLength;
    property SelectionStart: Integer read get_SelectionStart;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITextBox,Windows.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs = interface(IUnknown)
  ['{53E42C92-21D5-51AE-9B12-0A4DBF5AA0AF}']
    procedure Invoke(sender: ITextBox; args: ITextBoxSelectionChangingEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBox8
  ITextBox8 = interface(IInspectable)
  ['{1EB6D027-0317-5C37-8AEA-F747AE7F0463}']
    function get_CanPasteClipboardContent: Boolean; safecall;
    function get_CanUndo: Boolean; safecall;
    function get_CanRedo: Boolean; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function get_ProofingMenuFlyout: Primitives_IFlyoutBase; safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function add_SelectionChanging(handler: TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectionChanging(token: EventRegistrationToken); safecall;
    procedure Undo; safecall;
    procedure Redo; safecall;
    procedure PasteFromClipboard; safecall;
    procedure CopySelectionToClipboard; safecall;
    procedure CutSelectionToClipboard; safecall;
    procedure ClearUndoRedoHistory; safecall;
    property CanPasteClipboardContent: Boolean read get_CanPasteClipboardContent;
    property CanRedo: Boolean read get_CanRedo;
    property CanUndo: Boolean read get_CanUndo;
    property Description: IInspectable read get_Description write put_Description;
    property ProofingMenuFlyout: Primitives_IFlyoutBase read get_ProofingMenuFlyout;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxFactory = interface(IInspectable)
  ['{710E4278-8529-47D3-8D8E-307E34CFF081}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics = interface(IInspectable)
  ['{7E37F4FB-A4BC-4625-8838-8EB2A9091283}']
    function get_TextProperty: IDependencyProperty; safecall;
    function get_MaxLengthProperty: IDependencyProperty; safecall;
    function get_IsReadOnlyProperty: IDependencyProperty; safecall;
    function get_AcceptsReturnProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_IsSpellCheckEnabledProperty: IDependencyProperty; safecall;
    function get_IsTextPredictionEnabledProperty: IDependencyProperty; safecall;
    function get_InputScopeProperty: IDependencyProperty; safecall;
    property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics2 = interface(IInspectable)
  ['{7592F37D-4E76-4EE4-8E0F-7D6E1A23326B}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics3 = interface(IInspectable)
  ['{0E1005C0-10B5-40F6-92C2-CE134B0D3457}']
    function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics5 = interface(IInspectable)
  ['{07D04B45-1B2F-4627-82FD-683F197E5A75}']
    function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; safecall;
    property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxStatics6
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics6 = interface(IInspectable)
  ['{DC0D97E7-1CB7-433E-AA4F-9C64C98CDEE5}']
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    function get_CharacterCasingProperty: IDependencyProperty; safecall;
    function get_PlaceholderForegroundProperty: IDependencyProperty; safecall;
    property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxStatics7
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics7 = interface(IInspectable)
  ['{CD6C6F47-147E-46F8-A4E8-749C49847A3E}']
    function get_HandwritingViewProperty: IDependencyProperty; safecall;
    function get_IsHandwritingViewEnabledProperty: IDependencyProperty; safecall;
    property HandwritingViewProperty: IDependencyProperty read get_HandwritingViewProperty;
    property IsHandwritingViewEnabledProperty: IDependencyProperty read get_IsHandwritingViewEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextBoxStatics8
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics8 = interface(IInspectable)
  ['{7F93D7C4-7D88-5F4D-8955-A5AD3848BCB6}']
    function get_CanPasteClipboardContentProperty: IDependencyProperty; safecall;
    function get_CanUndoProperty: IDependencyProperty; safecall;
    function get_CanRedoProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_ProofingMenuFlyoutProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    property CanRedoProperty: IDependencyProperty read get_CanRedoProperty;
    property CanUndoProperty: IDependencyProperty read get_CanUndoProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs2
  ITextBoxTextChangingEventArgs2 = interface(IInspectable)
  ['{C0723D44-53A6-415F-A981-50DFAF1BECBE}']
    function get_IsContentChanging: Boolean; safecall;
    property IsContentChanging: Boolean read get_IsContentChanging;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextCommandBarFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextCommandBarFlyout)]
  ITextCommandBarFlyout = interface(IInspectable)
  ['{90384F66-CD3D-5325-8F40-59B076463C40}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITextCommandBarFlyoutFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TextCommandBarFlyout)]
  ITextCommandBarFlyoutFactory = interface(IInspectable)
  ['{1B5918D8-B006-5ECD-AB72-6FDB48ABC1F4}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextCommandBarFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePickedEventArgs)]
  ITimePickedEventArgs = interface(IInspectable)
  ['{8AD3FF21-5F66-4785-B999-24FEF39FB6DB}']
    function get_OldTime: TimeSpan; safecall;
    function get_NewTime: TimeSpan; safecall;
    property NewTime: TimeSpan read get_NewTime;
    property OldTime: TimeSpan read get_OldTime;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePicker2
  ITimePicker2 = interface(IInspectable)
  ['{0FF0798C-F922-419F-8B3D-23EE7586D48E}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs
  ITimePickerSelectedValueChangedEventArgs = interface(IInspectable)
  ['{6E20FB35-3B9B-5BB6-9888-266524DB181E}']
    function get_OldTime: IReference_1__TimeSpan; safecall;
    function get_NewTime: IReference_1__TimeSpan; safecall;
    property NewTime: IReference_1__TimeSpan read get_NewTime;
    property OldTime: IReference_1__TimeSpan read get_OldTime;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITimePicker,Windows.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs = interface(IUnknown)
  ['{38936327-C260-5E02-AA86-83C0DF5872E3}']
    procedure Invoke(sender: ITimePicker; args: ITimePickerSelectedValueChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePicker3
  ITimePicker3 = interface(IInspectable)
  ['{FA6E4F91-AC32-59A4-94DA-8B3D64289ED6}']
    function get_SelectedTime: IReference_1__TimeSpan; safecall;
    procedure put_SelectedTime(value: IReference_1__TimeSpan); safecall;
    function add_SelectedTimeChanged(handler: TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectedTimeChanged(token: EventRegistrationToken); safecall;
    property SelectedTime: IReference_1__TimeSpan read get_SelectedTime write put_SelectedTime;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePicker)]
  ITimePickerFactory = interface(IInspectable)
  ['{553FE413-6CD7-46A9-A97B-A18BDC4B4CA3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITimePicker; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITimePickerFlyout,Windows.UI.Xaml.Controls.ITimePickedEventArgs>
  TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs_Delegate_Base = interface(IUnknown)
  ['{7D77980B-A0DF-51B1-879B-C23D2DE0ABBE}']
    procedure Invoke(sender: ITimePickerFlyout; args: ITimePickedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITimePickerFlyout,Windows.UI.Xaml.Controls.ITimePickedEventArgs>
  TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs = interface(TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs_Delegate_Base)
  ['{A245D891-8F23-5B14-AF2C-44F5073F2E06}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerFlyout
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePickerFlyout)]
  ITimePickerFlyout = interface(IInspectable)
  ['{BB739D75-E836-439E-86D5-506D2D18E404}']
    function get_ClockIdentifier: HSTRING; safecall;
    procedure put_ClockIdentifier(value: HSTRING); safecall;
    function get_Time: TimeSpan; safecall;
    procedure put_Time(value: TimeSpan); safecall;
    function get_MinuteIncrement: Integer; safecall;
    procedure put_MinuteIncrement(value: Integer); safecall;
    function add_TimePicked(handler: TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TimePicked(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__IReference_1__TimeSpan; safecall;
    property ClockIdentifier: HSTRING read get_ClockIdentifier write put_ClockIdentifier;
    property MinuteIncrement: Integer read get_MinuteIncrement write put_MinuteIncrement;
    property Time: TimeSpan read get_Time write put_Time;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePickerFlyoutPresenter)]
  ITimePickerFlyoutPresenter = interface(IInspectable)
  ['{C5320638-7A18-40ED-9FD0-4C852C09B24E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter2
  ITimePickerFlyoutPresenter2 = interface(IInspectable)
  ['{A13B5B68-7EE9-59F7-AAD6-6532A8A8C3BF}']
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePickerFlyoutPresenter)]
  ITimePickerFlyoutPresenterStatics2 = interface(IInspectable)
  ['{AA5F0DDC-F2BB-53F2-A54D-B34ACCCF51E4}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerFlyoutStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePickerFlyout)]
  ITimePickerFlyoutStatics = interface(IInspectable)
  ['{3F6728CE-2169-4003-B4A8-8DE7035A0AD6}']
    function get_ClockIdentifierProperty: IDependencyProperty; safecall;
    function get_TimeProperty: IDependencyProperty; safecall;
    function get_MinuteIncrementProperty: IDependencyProperty; safecall;
    property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    property TimeProperty: IDependencyProperty read get_TimeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePicker)]
  ITimePickerStatics = interface(IInspectable)
  ['{FA71DFB1-233E-4F31-B8BE-A6EA670C25CD}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_ClockIdentifierProperty: IDependencyProperty; safecall;
    function get_MinuteIncrementProperty: IDependencyProperty; safecall;
    function get_TimeProperty: IDependencyProperty; safecall;
    property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    property TimeProperty: IDependencyProperty read get_TimeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePicker)]
  ITimePickerStatics2 = interface(IInspectable)
  ['{36D8ABCD-4E10-451A-B93B-1A731EA7EE3F}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITimePickerStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TimePicker)]
  ITimePickerStatics3 = interface(IInspectable)
  ['{CFEF1763-BA87-54D8-82D4-7C6B9734DC9D}']
    function get_SelectedTimeProperty: IDependencyProperty; safecall;
    property SelectedTimeProperty: IDependencyProperty read get_SelectedTimeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleMenuFlyoutItem)]
  IToggleMenuFlyoutItemFactory = interface(IInspectable)
  ['{A151966F-3BF7-46B6-B61C-9B2C1BA68843}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleMenuFlyoutItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleMenuFlyoutItem)]
  IToggleMenuFlyoutItemStatics = interface(IInspectable)
  ['{16C724FB-6C1A-4852-9258-08C038367907}']
    function get_IsCheckedProperty: IDependencyProperty; safecall;
    property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs
  IToggleSplitButtonIsCheckedChangedEventArgs = interface(IInspectable)
  ['{2138F0CF-5FCD-5DBB-99AE-359483070F6B}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IToggleSplitButton,Windows.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs>
  TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs = interface(IUnknown)
  ['{2F61B8E8-2094-5DF2-96C5-D614D85FB1D3}']
    procedure Invoke(sender: IToggleSplitButton; args: IToggleSplitButtonIsCheckedChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSplitButton
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleSplitButton)]
  IToggleSplitButton = interface(IInspectable)
  ['{28981B31-8E78-570C-BEBB-685814485AE9}']
    function get_IsChecked: Boolean; safecall;
    procedure put_IsChecked(value: Boolean); safecall;
    function add_IsCheckedChanged(handler: TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsCheckedChanged(token: EventRegistrationToken); safecall;
    property IsChecked: Boolean read get_IsChecked write put_IsChecked;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleSplitButtonAutomationPeer)]
  IToggleSplitButtonAutomationPeer = interface(IInspectable)
  ['{538E61DE-7D46-5DA7-94AB-ACEDE6A12B9E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleSplitButtonAutomationPeer)]
  IToggleSplitButtonAutomationPeerFactory = interface(IInspectable)
  ['{9829B0A0-5A30-5EED-A3A3-1472C53B0A66}']
    function CreateInstance(owner: IToggleSplitButton; baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButtonAutomationPeer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSplitButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleSplitButton)]
  IToggleSplitButtonFactory = interface(IInspectable)
  ['{3FCF073B-E57C-573D-AF38-D1B2AD387951}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSwitchOverrides
  IToggleSwitchOverrides = interface(IInspectable)
  ['{BFD07F53-F8CA-4E47-949E-9E80429B3D16}']
    procedure OnToggled; safecall;
    procedure OnOnContentChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
    procedure OnOffContentChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
    procedure OnHeaderChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToggleSwitchStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToggleSwitch)]
  IToggleSwitchStatics = interface(IInspectable)
  ['{1D37147F-97DF-4226-92CA-DDF453D7FD5A}']
    function get_IsOnProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_OnContentProperty: IDependencyProperty; safecall;
    function get_OnContentTemplateProperty: IDependencyProperty; safecall;
    function get_OffContentProperty: IDependencyProperty; safecall;
    function get_OffContentTemplateProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsOnProperty: IDependencyProperty read get_IsOnProperty;
    property OffContentProperty: IDependencyProperty read get_OffContentProperty;
    property OffContentTemplateProperty: IDependencyProperty read get_OffContentTemplateProperty;
    property OnContentProperty: IDependencyProperty read get_OnContentProperty;
    property OnContentTemplateProperty: IDependencyProperty read get_OnContentTemplateProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IToolTipTemplateSettings
  Primitives_IToolTipTemplateSettings = interface(IInspectable)
  ['{D4388247-0EC4-4506-AFFD-AFAC2225B48C}']
    function get_FromHorizontalOffset: Double; safecall;
    function get_FromVerticalOffset: Double; safecall;
    property FromHorizontalOffset: Double read get_FromHorizontalOffset;
    property FromVerticalOffset: Double read get_FromVerticalOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToolTip
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToolTip)]
  IToolTip = interface(IInspectable)
  ['{7DE5D75F-4415-429F-B523-699BDB8C30DB}']
    function get_HorizontalOffset: Double; safecall;
    procedure put_HorizontalOffset(value: Double); safecall;
    function get_IsOpen: Boolean; safecall;
    procedure put_IsOpen(value: Boolean); safecall;
    function get_Placement: Primitives_PlacementMode; safecall;
    procedure put_Placement(value: Primitives_PlacementMode); safecall;
    function get_PlacementTarget: IUIElement; safecall;
    procedure put_PlacementTarget(value: IUIElement); safecall;
    function get_VerticalOffset: Double; safecall;
    procedure put_VerticalOffset(value: Double); safecall;
    function get_TemplateSettings: Primitives_IToolTipTemplateSettings; safecall;
    function add_Closed(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    function add_Opened(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    property HorizontalOffset: Double read get_HorizontalOffset write put_HorizontalOffset;
    property IsOpen: Boolean read get_IsOpen write put_IsOpen;
    property Placement: Primitives_PlacementMode read get_Placement write put_Placement;
    property PlacementTarget: IUIElement read get_PlacementTarget write put_PlacementTarget;
    property TemplateSettings: Primitives_IToolTipTemplateSettings read get_TemplateSettings;
    property VerticalOffset: Double read get_VerticalOffset write put_VerticalOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToolTip2
  IToolTip2 = interface(IInspectable)
  ['{2B1ADE26-299A-5D54-800B-3BEA123B4C20}']
    function get_PlacementRect: IReference_1__Rect; safecall;
    procedure put_PlacementRect(value: IReference_1__Rect); safecall;
    property PlacementRect: IReference_1__Rect read get_PlacementRect write put_PlacementRect;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToolTipFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToolTip)]
  IToolTipFactory = interface(IInspectable)
  ['{89839403-B538-49E3-A430-3AC037DC6FE0}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToolTip; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToolTipService
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToolTipService)]
  IToolTipService = interface(IInspectable)
  ['{03A55F87-BFCC-4A1E-8FEA-98F610832CEA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToolTipServiceStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToolTipService)]
  IToolTipServiceStatics = interface(IInspectable)
  ['{86E649F8-E245-48AA-A8C8-D1073ED76319}']
    function get_PlacementProperty: IDependencyProperty; safecall;
    function GetPlacement(element: IDependencyObject): Primitives_PlacementMode; safecall;
    procedure SetPlacement(element: IDependencyObject; value: Primitives_PlacementMode); safecall;
    function get_PlacementTargetProperty: IDependencyProperty; safecall;
    function GetPlacementTarget(element: IDependencyObject): IUIElement; safecall;
    procedure SetPlacementTarget(element: IDependencyObject; value: IUIElement); safecall;
    function get_ToolTipProperty: IDependencyProperty; safecall;
    function GetToolTip(element: IDependencyObject): IInspectable; safecall;
    procedure SetToolTip(element: IDependencyObject; value: IInspectable); safecall;
    property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    property ToolTipProperty: IDependencyProperty read get_ToolTipProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToolTipStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToolTip)]
  IToolTipStatics = interface(IInspectable)
  ['{F00285B8-4BA9-4F4F-86A7-86003813CEB3}']
    function get_HorizontalOffsetProperty: IDependencyProperty; safecall;
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_PlacementProperty: IDependencyProperty; safecall;
    function get_PlacementTargetProperty: IDependencyProperty; safecall;
    function get_VerticalOffsetProperty: IDependencyProperty; safecall;
    property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IToolTipStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_ToolTip)]
  IToolTipStatics2 = interface(IInspectable)
  ['{6845E646-9C7F-5011-8A78-7DA9D87EB3B6}']
    function get_PlacementRectProperty: IDependencyProperty; safecall;
    property PlacementRectProperty: IDependencyProperty read get_PlacementRectProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewNode
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewNode)]
  ITreeViewNode = interface(IInspectable)
  ['{C04C8ED3-9AF2-4E75-A329-7497A110E7A8}']
    function get_Content: IInspectable; safecall;
    procedure put_Content(value: IInspectable); safecall;
    function get_Parent: ITreeViewNode; safecall;
    function get_IsExpanded: Boolean; safecall;
    procedure put_IsExpanded(value: Boolean); safecall;
    function get_HasChildren: Boolean; safecall;
    function get_Depth: Integer; safecall;
    function get_HasUnrealizedChildren: Boolean; safecall;
    procedure put_HasUnrealizedChildren(value: Boolean); safecall;
    function get_Children: IVector_1__ITreeViewNode; safecall;
    property Children: IVector_1__ITreeViewNode read get_Children;
    property Content: IInspectable read get_Content write put_Content;
    property Depth: Integer read get_Depth;
    property HasChildren: Boolean read get_HasChildren;
    property HasUnrealizedChildren: Boolean read get_HasUnrealizedChildren write put_HasUnrealizedChildren;
    property IsExpanded: Boolean read get_IsExpanded write put_IsExpanded;
    property Parent: ITreeViewNode read get_Parent;
  end;

  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IIterator_1__ITreeViewNode = interface(IInspectable)
  ['{E664F43F-091B-588C-A4EC-A72660E641EF}']
    function get_Current: ITreeViewNode; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PITreeViewNode): Cardinal; safecall;
    property Current: ITreeViewNode read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;

  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IIterable_1__ITreeViewNode = interface(IInspectable)
  ['{CAE4C74D-2AE7-502B-8810-D1A565E4465C}']
    function First: IIterator_1__ITreeViewNode; safecall;
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IVectorView_1__ITreeViewNode = interface(IInspectable)
  ['{000EB3B6-EC54-5E61-B000-302BFC18C69B}']
    function GetAt(index: Cardinal): ITreeViewNode; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: ITreeViewNode; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PITreeViewNode): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ITreeViewNode>
  IVector_1__ITreeViewNode = interface(IInspectable)
  ['{F66AEF2A-CE16-56A4-9C04-64B573A39DDD}']
    function GetAt(index: Cardinal): ITreeViewNode; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__ITreeViewNode; safecall;
    function IndexOf(value: ITreeViewNode; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: ITreeViewNode); safecall;
    procedure InsertAt(index: Cardinal; value: ITreeViewNode); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: ITreeViewNode); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PITreeViewNode): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PITreeViewNode); safecall;
    property Size: Cardinal read get_Size;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs
  ITreeViewItemInvokedEventArgs = interface(IInspectable)
  ['{472AB521-0242-4290-9363-AB4FE704527F}']
    function get_InvokedItem: IInspectable; safecall;
    procedure put_Handled(value: Boolean); safecall;
    function get_Handled: Boolean; safecall;
    property Handled: Boolean read get_Handled write put_Handled;
    property InvokedItem: IInspectable read get_InvokedItem;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs = interface(IUnknown)
  ['{F6379666-47EC-5F05-A839-4E1864565E89}']
    procedure Invoke(sender: ITreeView; args: ITreeViewItemInvokedEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs
  ITreeViewExpandingEventArgs = interface(IInspectable)
  ['{C5E1FA63-4154-49D2-A21F-C34176605E3A}']
    function get_Node: ITreeViewNode; safecall;
    property Node: ITreeViewNode read get_Node;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs = interface(IUnknown)
  ['{C32E57A7-27E2-5C26-85FA-AE25BDE16930}']
    procedure Invoke(sender: ITreeView; args: ITreeViewExpandingEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs
  ITreeViewCollapsedEventArgs = interface(IInspectable)
  ['{391DB3B0-1E58-4539-9E93-387978F46CCE}']
    function get_Node: ITreeViewNode; safecall;
    property Node: ITreeViewNode read get_Node;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs = interface(IUnknown)
  ['{751522B0-4D22-51F5-BA65-FC9FBC9E1700}']
    procedure Invoke(sender: ITreeView; args: ITreeViewCollapsedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeView
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeView)]
  ITreeView = interface(IInspectable)
  ['{9353CC5C-DD6E-453C-AEDD-0C3AC993978B}']
    function get_RootNodes: IVector_1__ITreeViewNode; safecall;
    function get_SelectionMode: TreeViewSelectionMode; safecall;
    procedure put_SelectionMode(value: TreeViewSelectionMode); safecall;
    function get_SelectedNodes: IVector_1__ITreeViewNode; safecall;
    procedure Expand(value: ITreeViewNode); safecall;
    procedure Collapse(value: ITreeViewNode); safecall;
    procedure SelectAll; safecall;
    function add_ItemInvoked(handler: TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ItemInvoked(token: EventRegistrationToken); safecall;
    function add_Expanding(handler: TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs): EventRegistrationToken; safecall;
    procedure remove_Expanding(token: EventRegistrationToken); safecall;
    function add_Collapsed(handler: TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Collapsed(token: EventRegistrationToken); safecall;
    property RootNodes: IVector_1__ITreeViewNode read get_RootNodes;
    property SelectedNodes: IVector_1__ITreeViewNode read get_SelectedNodes;
    property SelectionMode: TreeViewSelectionMode read get_SelectionMode write put_SelectionMode;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs
  ITreeViewDragItemsStartingEventArgs = interface(IInspectable)
  ['{7BDB7EC4-E125-5773-9A3F-6695233D6250}']
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    function get_Data: IDataPackage; safecall;
    function get_Items: IVector_1__IInspectable; safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property Data: IDataPackage read get_Data;
    property Items: IVector_1__IInspectable read get_Items;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs = interface(IUnknown)
  ['{B185B539-9EB9-54BE-9392-73BFC6FEEA0A}']
    procedure Invoke(sender: ITreeView; args: ITreeViewDragItemsStartingEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs
  ITreeViewDragItemsCompletedEventArgs = interface(IInspectable)
  ['{3CA8632C-4311-574E-8AB4-3B7AA5DE7A88}']
    function get_DropResult: DataPackageOperation; safecall;
    function get_Items: IVectorView_1__IInspectable; safecall;
    property DropResult: DataPackageOperation read get_DropResult;
    property Items: IVectorView_1__IInspectable read get_Items;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ITreeView,Windows.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs = interface(IUnknown)
  ['{F4912B51-BD20-55DB-8197-5CE498217265}']
    procedure Invoke(sender: ITreeView; args: ITreeViewDragItemsCompletedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeView2
  ITreeView2 = interface(IInspectable)
  ['{4F33A2E6-2F29-55D3-A1AB-1F4A863BF960}']
    function NodeFromContainer(container: IDependencyObject): ITreeViewNode; safecall;
    function ContainerFromNode(node: ITreeViewNode): IDependencyObject; safecall;
    function ItemFromContainer(container: IDependencyObject): IInspectable; safecall;
    function ContainerFromItem(item: IInspectable): IDependencyObject; safecall;
    function get_CanDragItems: Boolean; safecall;
    procedure put_CanDragItems(value: Boolean); safecall;
    function get_CanReorderItems: Boolean; safecall;
    procedure put_CanReorderItems(value: Boolean); safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function get_ItemTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ItemTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ItemContainerStyle: IStyle; safecall;
    procedure put_ItemContainerStyle(value: IStyle); safecall;
    function get_ItemContainerStyleSelector: IStyleSelector; safecall;
    procedure put_ItemContainerStyleSelector(value: IStyleSelector); safecall;
    function get_ItemContainerTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ItemContainerTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function add_DragItemsStarting(handler: TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs): EventRegistrationToken; safecall;
    procedure remove_DragItemsStarting(token: EventRegistrationToken); safecall;
    function add_DragItemsCompleted(handler: TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DragItemsCompleted(token: EventRegistrationToken); safecall;
    property CanDragItems: Boolean read get_CanDragItems write put_CanDragItems;
    property CanReorderItems: Boolean read get_CanReorderItems write put_CanReorderItems;
    property ItemContainerStyle: IStyle read get_ItemContainerStyle write put_ItemContainerStyle;
    property ItemContainerStyleSelector: IStyleSelector read get_ItemContainerStyleSelector write put_ItemContainerStyleSelector;
    property ItemContainerTransitions: IVector_1__Animation_ITransition read get_ItemContainerTransitions write put_ItemContainerTransitions;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemTemplateSelector: IDataTemplateSelector read get_ItemTemplateSelector write put_ItemTemplateSelector;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
  end;

  // Windows.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2
  ITreeViewCollapsedEventArgs2 = interface(IInspectable)
  ['{747B2F4F-7B25-56AA-8300-78D83B7AB2DB}']
    function get_Item: IInspectable; safecall;
    property Item: IInspectable read get_Item;
  end;

  // Windows.UI.Xaml.Controls.ITreeViewExpandingEventArgs2
  ITreeViewExpandingEventArgs2 = interface(IInspectable)
  ['{A12F54C3-87B9-5623-9C74-E6DD443CDE18}']
    function get_Item: IInspectable; safecall;
    property Item: IInspectable read get_Item;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeView)]
  ITreeViewFactory = interface(IInspectable)
  ['{CC5267C3-6C69-49CE-B445-753ACEE7948B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItem2
  ITreeViewItem2 = interface(IInspectable)
  ['{007BAF7F-0493-51B4-879C-458024B34149}']
    function get_HasUnrealizedChildren: Boolean; safecall;
    procedure put_HasUnrealizedChildren(value: Boolean); safecall;
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    property HasUnrealizedChildren: Boolean read get_HasUnrealizedChildren write put_HasUnrealizedChildren;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItemFactory = interface(IInspectable)
  ['{4EA32731-568D-4D0D-ADFD-3D8DC5AA5D88}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItemStatics = interface(IInspectable)
  ['{436795BE-7396-46DC-A264-21C56581C5E5}']
    function get_GlyphOpacityProperty: IDependencyProperty; safecall;
    function get_GlyphBrushProperty: IDependencyProperty; safecall;
    function get_ExpandedGlyphProperty: IDependencyProperty; safecall;
    function get_CollapsedGlyphProperty: IDependencyProperty; safecall;
    function get_GlyphSizeProperty: IDependencyProperty; safecall;
    function get_IsExpandedProperty: IDependencyProperty; safecall;
    function get_TreeViewItemTemplateSettingsProperty: IDependencyProperty; safecall;
    property CollapsedGlyphProperty: IDependencyProperty read get_CollapsedGlyphProperty;
    property ExpandedGlyphProperty: IDependencyProperty read get_ExpandedGlyphProperty;
    property GlyphBrushProperty: IDependencyProperty read get_GlyphBrushProperty;
    property GlyphOpacityProperty: IDependencyProperty read get_GlyphOpacityProperty;
    property GlyphSizeProperty: IDependencyProperty read get_GlyphSizeProperty;
    property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
    property TreeViewItemTemplateSettingsProperty: IDependencyProperty read get_TreeViewItemTemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItemStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItemStatics2 = interface(IInspectable)
  ['{A8AF82F3-D803-5C25-B48D-AE0E73B16D8E}']
    function get_HasUnrealizedChildrenProperty: IDependencyProperty; safecall;
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    property HasUnrealizedChildrenProperty: IDependencyProperty read get_HasUnrealizedChildrenProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewItemTemplateSettings)]
  ITreeViewItemTemplateSettingsFactory = interface(IInspectable)
  ['{11A1953B-31B7-4F40-8633-02FC614B518C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItemTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewItemTemplateSettings)]
  ITreeViewItemTemplateSettingsStatics = interface(IInspectable)
  ['{55C720A8-70ED-4C21-93F4-2D79C1A4A5F7}']
    function get_ExpandedGlyphVisibilityProperty: IDependencyProperty; safecall;
    function get_CollapsedGlyphVisibilityProperty: IDependencyProperty; safecall;
    function get_IndentationProperty: IDependencyProperty; safecall;
    function get_DragItemsCountProperty: IDependencyProperty; safecall;
    property CollapsedGlyphVisibilityProperty: IDependencyProperty read get_CollapsedGlyphVisibilityProperty;
    property DragItemsCountProperty: IDependencyProperty read get_DragItemsCountProperty;
    property ExpandedGlyphVisibilityProperty: IDependencyProperty read get_ExpandedGlyphVisibilityProperty;
    property IndentationProperty: IDependencyProperty read get_IndentationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewListFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewList)]
  ITreeViewListFactory = interface(IInspectable)
  ['{288F6232-41D2-46F7-B1F5-691C625264B7}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewList; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewNodeFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewNode)]
  ITreeViewNodeFactory = interface(IInspectable)
  ['{6EC62D90-AA19-414A-8A45-0A5589A836F7}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewNode; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewNodeStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeViewNode)]
  ITreeViewNodeStatics = interface(IInspectable)
  ['{5D8276FE-E1D1-4B61-9E81-C7FB189A2980}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_DepthProperty: IDependencyProperty; safecall;
    function get_IsExpandedProperty: IDependencyProperty; safecall;
    function get_HasChildrenProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property DepthProperty: IDependencyProperty read get_DepthProperty;
    property HasChildrenProperty: IDependencyProperty read get_HasChildrenProperty;
    property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeView)]
  ITreeViewStatics = interface(IInspectable)
  ['{EF913E08-83F2-4E16-BFB1-1577B98355F5}']
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITreeViewStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TreeView)]
  ITreeViewStatics2 = interface(IInspectable)
  ['{16B1C8F9-7AA1-5E38-8218-7BBA3EA417C0}']
    function get_CanDragItemsProperty: IDependencyProperty; safecall;
    function get_CanReorderItemsProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_ItemTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleSelectorProperty: IDependencyProperty; safecall;
    function get_ItemContainerTransitionsProperty: IDependencyProperty; safecall;
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITwoPaneViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TwoPaneView)]
  ITwoPaneViewFactory = interface(IInspectable)
  ['{18FF792D-58B4-59ED-A051-51ACEFFBCCA9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITwoPaneView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.ITwoPaneViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_TwoPaneView)]
  ITwoPaneViewStatics = interface(IInspectable)
  ['{5A35C389-85C4-55F4-ABB1-97451BC32D71}']
    function get_Pane1Property: IDependencyProperty; safecall;
    function get_Pane2Property: IDependencyProperty; safecall;
    function get_Pane1LengthProperty: IDependencyProperty; safecall;
    function get_Pane2LengthProperty: IDependencyProperty; safecall;
    function get_PanePriorityProperty: IDependencyProperty; safecall;
    function get_ModeProperty: IDependencyProperty; safecall;
    function get_WideModeConfigurationProperty: IDependencyProperty; safecall;
    function get_TallModeConfigurationProperty: IDependencyProperty; safecall;
    function get_MinWideModeWidthProperty: IDependencyProperty; safecall;
    function get_MinTallModeHeightProperty: IDependencyProperty; safecall;
    property MinTallModeHeightProperty: IDependencyProperty read get_MinTallModeHeightProperty;
    property MinWideModeWidthProperty: IDependencyProperty read get_MinWideModeWidthProperty;
    property ModeProperty: IDependencyProperty read get_ModeProperty;
    property Pane1LengthProperty: IDependencyProperty read get_Pane1LengthProperty;
    property Pane1Property: IDependencyProperty read get_Pane1Property;
    property Pane2LengthProperty: IDependencyProperty read get_Pane2LengthProperty;
    property Pane2Property: IDependencyProperty read get_Pane2Property;
    property PanePriorityProperty: IDependencyProperty read get_PanePriorityProperty;
    property TallModeConfigurationProperty: IDependencyProperty read get_TallModeConfigurationProperty;
    property WideModeConfigurationProperty: IDependencyProperty read get_WideModeConfigurationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IUserControl
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_UserControl)]
  IUserControl = interface(IInspectable)
  ['{A7A69EC9-EA35-4679-BF29-F4F09286D314}']
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    property Content: IUIElement read get_Content write put_Content;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IUserControlFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_UserControl)]
  IUserControlFactory = interface(IInspectable)
  ['{38B1ED92-A28A-4972-93DF-F4F759B8AFD2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUserControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IUserControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_UserControl)]
  IUserControlStatics = interface(IInspectable)
  ['{E8887976-2C5C-41CF-BE6A-9E44BEFDF655}']
    function get_ContentProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVariableSizedWrapGrid
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_VariableSizedWrapGrid)]
  IVariableSizedWrapGrid = interface(IInspectable)
  ['{9CA507C7-23C9-4F01-B80F-BE5C21EEF474}']
    function get_ItemHeight: Double; safecall;
    procedure put_ItemHeight(value: Double); safecall;
    function get_ItemWidth: Double; safecall;
    procedure put_ItemWidth(value: Double); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_HorizontalChildrenAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalChildrenAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalChildrenAlignment: VerticalAlignment; safecall;
    procedure put_VerticalChildrenAlignment(value: VerticalAlignment); safecall;
    function get_MaximumRowsOrColumns: Integer; safecall;
    procedure put_MaximumRowsOrColumns(value: Integer); safecall;
    property HorizontalChildrenAlignment: HorizontalAlignment read get_HorizontalChildrenAlignment write put_HorizontalChildrenAlignment;
    property ItemHeight: Double read get_ItemHeight write put_ItemHeight;
    property ItemWidth: Double read get_ItemWidth write put_ItemWidth;
    property MaximumRowsOrColumns: Integer read get_MaximumRowsOrColumns write put_MaximumRowsOrColumns;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property VerticalChildrenAlignment: VerticalAlignment read get_VerticalChildrenAlignment write put_VerticalChildrenAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_VariableSizedWrapGrid)]
  IVariableSizedWrapGridStatics = interface(IInspectable)
  ['{FE9DB859-8127-4AEF-B7A2-949847486E96}']
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_MaximumRowsOrColumnsProperty: IDependencyProperty; safecall;
    function get_RowSpanProperty: IDependencyProperty; safecall;
    function GetRowSpan(element: IUIElement): Integer; safecall;
    procedure SetRowSpan(element: IUIElement; value: Integer); safecall;
    function get_ColumnSpanProperty: IDependencyProperty; safecall;
    function GetColumnSpan(element: IUIElement): Integer; safecall;
    procedure SetColumnSpan(element: IUIElement; value: Integer); safecall;
    property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;
    property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IViewbox
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Viewbox)]
  IViewbox = interface(IInspectable)
  ['{05252C58-BA9D-4809-9EC3-FA0D16710BA1}']
    function get_Child: IUIElement; safecall;
    procedure put_Child(value: IUIElement); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_StretchDirection: StretchDirection; safecall;
    procedure put_StretchDirection(value: StretchDirection); safecall;
    property Child: IUIElement read get_Child write put_Child;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
    property StretchDirection_: StretchDirection read get_StretchDirection write put_StretchDirection;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IViewboxStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Viewbox)]
  IViewboxStatics = interface(IInspectable)
  ['{5CD1E72D-E8D3-4865-8F08-B6B2D689ADF1}']
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_StretchDirectionProperty: IDependencyProperty; safecall;
    property StretchDirectionProperty: IDependencyProperty read get_StretchDirectionProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVirtualizingPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_VirtualizingPanel)]
  IVirtualizingPanel = interface(IInspectable)
  ['{38AAD50C-12CF-4D1E-A884-C9DF85F07CD9}']
    function get_ItemContainerGenerator: IItemContainerGenerator; safecall;
    property ItemContainerGenerator: IItemContainerGenerator read get_ItemContainerGenerator;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVirtualizingPanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_VirtualizingPanel)]
  IVirtualizingPanelFactory = interface(IInspectable)
  ['{BE19F839-CBD0-43E9-A5D0-0BDBA0FFBD38}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides
  IVirtualizingPanelOverrides = interface(IInspectable)
  ['{5EF6BD7D-677F-408D-A96C-B19507750466}']
    procedure OnItemsChanged(sender: IInspectable; args: Primitives_IItemsChangedEventArgs); safecall;
    procedure OnClearChildren; safecall;
    procedure BringIndexIntoView(index: Integer); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVirtualizingPanelProtected
  IVirtualizingPanelProtected = interface(IInspectable)
  ['{C9C9AB42-C232-479D-A7C9-5E7611196A45}']
    procedure AddInternalChild(child: IUIElement); safecall;
    procedure InsertInternalChild(index: Integer; child: IUIElement); safecall;
    procedure RemoveInternalChildRange(index: Integer; range: Integer); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVirtualizingStackPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_VirtualizingStackPanel)]
  IVirtualizingStackPanel = interface(IInspectable)
  ['{7567CD9A-A3B4-4DEA-BB11-549E2C2F919D}']
    function get_AreScrollSnapPointsRegular: Boolean; safecall;
    procedure put_AreScrollSnapPointsRegular(value: Boolean); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function add_CleanUpVirtualizedItemEvent(handler: CleanUpVirtualizedItemEventHandler): EventRegistrationToken; safecall;
    procedure remove_CleanUpVirtualizedItemEvent(token: EventRegistrationToken); safecall;
    property AreScrollSnapPointsRegular: Boolean read get_AreScrollSnapPointsRegular write put_AreScrollSnapPointsRegular;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides
  IVirtualizingStackPanelOverrides = interface(IInspectable)
  ['{CBE6F72C-2892-46D1-987F-58CA1081F040}']
    procedure OnCleanUpVirtualizedItem(e: ICleanUpVirtualizedItemEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_VirtualizingStackPanel)]
  IVirtualizingStackPanelStatics = interface(IInspectable)
  ['{8314E778-91D3-4D56-AC09-223ADCD2BD3F}']
    function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_VirtualizationModeProperty: IDependencyProperty; safecall;
    function GetVirtualizationMode(element: IDependencyObject): VirtualizationMode; safecall;
    procedure SetVirtualizationMode(element: IDependencyObject; value: VirtualizationMode); safecall;
    function get_IsVirtualizingProperty: IDependencyProperty; safecall;
    function GetIsVirtualizing(o: IDependencyObject): Boolean; safecall;
    property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    property IsVirtualizingProperty: IDependencyProperty read get_IsVirtualizingProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property VirtualizationModeProperty: IDependencyProperty read get_VirtualizationModeProperty;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs
  IWebViewNavigationStartingEventArgs = interface(IInspectable)
  ['{94CB8668-8367-43D5-91BB-96EBA37EC784}']
    function get_Uri: IUriRuntimeClass; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs_Delegate_Base = interface(IUnknown)
  ['{98055B5A-36BB-5962-971F-8B87619EB17E}']
    procedure Invoke(sender: IWebView; args: IWebViewNavigationStartingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs_Delegate_Base)
  ['{6EF33C7B-E0F0-5C6F-8D1C-501EBDC94A09}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs
  IWebViewContentLoadingEventArgs = interface(IInspectable)
  ['{6E2980BB-98B8-413E-8129-971C6F7E4C8A}']
    function get_Uri: IUriRuntimeClass; safecall;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs>
  TypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs_Delegate_Base = interface(IUnknown)
  ['{E7B42A9A-F140-52AD-A658-E237B9A3DCCA}']
    procedure Invoke(sender: IWebView; args: IWebViewContentLoadingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs>
  TypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs_Delegate_Base)
  ['{9734CB98-60A3-52CB-B099-AA3D549987F5}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs
  IWebViewDOMContentLoadedEventArgs = interface(IInspectable)
  ['{C47EBA15-DC6B-4B36-9D80-82FB8817B988}']
    function get_Uri: IUriRuntimeClass; safecall;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs_Delegate_Base = interface(IUnknown)
  ['{B9CC891C-4745-5A25-9845-E44D13425A38}']
    procedure Invoke(sender: IWebView; args: IWebViewDOMContentLoadedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs_Delegate_Base)
  ['{984A1BF3-AC12-5237-B766-7AA3727921C5}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs
  IWebViewNavigationCompletedEventArgs = interface(IInspectable)
  ['{11E6F20B-EBA7-44C0-889B-EDEB6A064DDD}']
    function get_Uri: IUriRuntimeClass; safecall;
    function get_IsSuccess: Boolean; safecall;
    function get_WebErrorStatus: WebErrorStatus; safecall;
    property IsSuccess: Boolean read get_IsSuccess;
    property Uri: IUriRuntimeClass read get_Uri;
    property WebErrorStatus_: WebErrorStatus read get_WebErrorStatus;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs_Delegate_Base = interface(IUnknown)
  ['{411136F7-770D-599C-8545-6D053A6A1799}']
    procedure Invoke(sender: IWebView; args: IWebViewNavigationCompletedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs_Delegate_Base)
  ['{D4378F2D-4251-5711-8924-4DF1B694272B}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs
  IWebViewLongRunningScriptDetectedEventArgs = interface(IInspectable)
  ['{F3F020AB-A46C-42B0-9EFE-69764D5CFFA6}']
    function get_ExecutionTime: TimeSpan; safecall;
    function get_StopPageScriptExecution: Boolean; safecall;
    procedure put_StopPageScriptExecution(value: Boolean); safecall;
    property ExecutionTime: TimeSpan read get_ExecutionTime;
    property StopPageScriptExecution: Boolean read get_StopPageScriptExecution write put_StopPageScriptExecution;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewLongRunningScriptDetectedEventArgs_Delegate_Base = interface(IUnknown)
  ['{ECDC76EF-A99B-5CE7-B9A4-C85E66FED1EE}']
    procedure Invoke(sender: IWebView; args: IWebViewLongRunningScriptDetectedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewLongRunningScriptDetectedEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewLongRunningScriptDetectedEventArgs_Delegate_Base)
  ['{C402C590-7CE4-593C-A544-1BA13730B543}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs
  IWebViewUnviewableContentIdentifiedEventArgs = interface(IInspectable)
  ['{37BC16E1-6062-4678-B20B-6C36AC9C59AC}']
    function get_Uri: IUriRuntimeClass; safecall;
    function get_Referrer: IUriRuntimeClass; safecall;
    property Referrer: IUriRuntimeClass read get_Referrer;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewUnviewableContentIdentifiedEventArgs_Delegate_Base = interface(IUnknown)
  ['{F00E9FBF-D30E-5854-8927-C9512ABD8118}']
    procedure Invoke(sender: IWebView; args: IWebViewUnviewableContentIdentifiedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewUnviewableContentIdentifiedEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewUnviewableContentIdentifiedEventArgs_Delegate_Base)
  ['{53A69072-7E8D-58A9-A811-FEABA0B48946}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebView2
  IWebView2 = interface(IInspectable)
  ['{D481759E-3EFF-4462-823D-FD52F9BA4CC8}']
    function get_CanGoBack: Boolean; safecall;
    function get_CanGoForward: Boolean; safecall;
    function get_DocumentTitle: HSTRING; safecall;
    function add_NavigationStarting(handler: TypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs): EventRegistrationToken; safecall;
    procedure remove_NavigationStarting(token: EventRegistrationToken); safecall;
    function add_ContentLoading(handler: TypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs): EventRegistrationToken; safecall;
    procedure remove_ContentLoading(token: EventRegistrationToken); safecall;
    function add_DOMContentLoaded(handler: TypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DOMContentLoaded(token: EventRegistrationToken); safecall;
    procedure GoForward; safecall;
    procedure GoBack; safecall;
    procedure Refresh; safecall;
    procedure Stop; safecall;
    function CapturePreviewToStreamAsync(stream: IRandomAccessStream): IAsyncAction; safecall;
    function InvokeScriptAsync(scriptName: HSTRING; arguments: IIterable_1__HSTRING): IAsyncOperation_1__HSTRING; safecall;
    function CaptureSelectedContentToDataPackageAsync: IAsyncOperation_1__IDataPackage; safecall;
    procedure NavigateToLocalStreamUri(source: IUriRuntimeClass; streamResolver: IUriToStreamResolver); safecall;
    function BuildLocalStreamUri(contentIdentifier: HSTRING; relativePath: HSTRING): IUriRuntimeClass; safecall;
    function get_DefaultBackgroundColor: Color; safecall;
    procedure put_DefaultBackgroundColor(value: Color); safecall;
    function add_NavigationCompleted(handler: TypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs): EventRegistrationToken; safecall;
    procedure remove_NavigationCompleted(token: EventRegistrationToken); safecall;
    function add_FrameNavigationStarting(handler: TypedEventHandler_2__IWebView__IWebViewNavigationStartingEventArgs): EventRegistrationToken; safecall;
    procedure remove_FrameNavigationStarting(token: EventRegistrationToken); safecall;
    function add_FrameContentLoading(handler: TypedEventHandler_2__IWebView__IWebViewContentLoadingEventArgs): EventRegistrationToken; safecall;
    procedure remove_FrameContentLoading(token: EventRegistrationToken); safecall;
    function add_FrameDOMContentLoaded(handler: TypedEventHandler_2__IWebView__IWebViewDOMContentLoadedEventArgs): EventRegistrationToken; safecall;
    procedure remove_FrameDOMContentLoaded(token: EventRegistrationToken); safecall;
    function add_FrameNavigationCompleted(handler: TypedEventHandler_2__IWebView__IWebViewNavigationCompletedEventArgs): EventRegistrationToken; safecall;
    procedure remove_FrameNavigationCompleted(token: EventRegistrationToken); safecall;
    function add_LongRunningScriptDetected(handler: TypedEventHandler_2__IWebView__IWebViewLongRunningScriptDetectedEventArgs): EventRegistrationToken; safecall;
    procedure remove_LongRunningScriptDetected(token: EventRegistrationToken); safecall;
    function add_UnsafeContentWarningDisplaying(handler: TypedEventHandler_2__IWebView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_UnsafeContentWarningDisplaying(token: EventRegistrationToken); safecall;
    function add_UnviewableContentIdentified(handler: TypedEventHandler_2__IWebView__IWebViewUnviewableContentIdentifiedEventArgs): EventRegistrationToken; safecall;
    procedure remove_UnviewableContentIdentified(token: EventRegistrationToken); safecall;
    procedure NavigateWithHttpRequestMessage(requestMessage: Http_IHttpRequestMessage); safecall;
    function Focus(value: FocusState): Boolean; safecall;
    property CanGoBack: Boolean read get_CanGoBack;
    property CanGoForward: Boolean read get_CanGoForward;
    property DefaultBackgroundColor: Color read get_DefaultBackgroundColor write put_DefaultBackgroundColor;
    property DocumentTitle: HSTRING read get_DocumentTitle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebView3
  IWebView3 = interface(IInspectable)
  ['{C497789B-B499-4D69-B5C2-AE9D5D6D594E}']
    function get_ContainsFullScreenElement: Boolean; safecall;
    function add_ContainsFullScreenElementChanged(handler: TypedEventHandler_2__IWebView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_ContainsFullScreenElementChanged(token: EventRegistrationToken); safecall;
    property ContainsFullScreenElement: Boolean read get_ContainsFullScreenElement;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest
  IWebViewDeferredPermissionRequest = interface(IInspectable)
  ['{A3DCC461-7350-4D3A-8FB9-40EEEC2746C2}']
    function get_Uri: IUriRuntimeClass; safecall;
    function get_PermissionType: WebViewPermissionType; safecall;
    function get_Id: Cardinal; safecall;
    procedure Allow; safecall;
    procedure Deny; safecall;
    property Id: Cardinal read get_Id;
    property PermissionType: WebViewPermissionType read get_PermissionType;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IIterator_1__IWebViewDeferredPermissionRequest_Base = interface(IInspectable)
  ['{A6ED0A56-801B-5301-95BA-DF84D027A977}']
    function get_Current: IWebViewDeferredPermissionRequest; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIWebViewDeferredPermissionRequest): Cardinal; safecall;
    property Current: IWebViewDeferredPermissionRequest read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IIterator_1__IWebViewDeferredPermissionRequest = interface(IIterator_1__IWebViewDeferredPermissionRequest_Base)
  ['{9A1AC7B2-41F5-522B-95FA-77A7F0B3D26D}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IIterable_1__IWebViewDeferredPermissionRequest_Base = interface(IInspectable)
  ['{3981A977-DA6C-5450-823E-7DD23B91F2BC}']
    function First: IIterator_1__IWebViewDeferredPermissionRequest; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IIterable_1__IWebViewDeferredPermissionRequest = interface(IIterable_1__IWebViewDeferredPermissionRequest_Base)
  ['{43BAE10A-D24B-57D4-A5AD-C30B4EF59FC4}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IVectorView_1__IWebViewDeferredPermissionRequest = interface(IInspectable)
  ['{85363D77-5FA1-5CC8-89C1-99C8D10213D4}']
    function GetAt(index: Cardinal): IWebViewDeferredPermissionRequest; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IWebViewDeferredPermissionRequest; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIWebViewDeferredPermissionRequest): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IVector_1__IWebViewDeferredPermissionRequest_Base = interface(IInspectable)
  ['{EE0E5BC7-4440-5970-A878-2D351E00931A}']
    function GetAt(index: Cardinal): IWebViewDeferredPermissionRequest; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IWebViewDeferredPermissionRequest; safecall;
    function IndexOf(value: IWebViewDeferredPermissionRequest; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IWebViewDeferredPermissionRequest); safecall;
    procedure InsertAt(index: Cardinal; value: IWebViewDeferredPermissionRequest); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IWebViewDeferredPermissionRequest); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIWebViewDeferredPermissionRequest): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIWebViewDeferredPermissionRequest); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.IWebViewDeferredPermissionRequest>
  IVector_1__IWebViewDeferredPermissionRequest = interface(IVector_1__IWebViewDeferredPermissionRequest_Base)
  ['{D0B41EE1-E104-5A7C-9481-A1655827B1EA}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewSettings
  IWebViewSettings = interface(IInspectable)
  ['{1D50AD4D-ABF6-4785-8DF3-FDEBC1270301}']
    function get_IsJavaScriptEnabled: Boolean; safecall;
    procedure put_IsJavaScriptEnabled(value: Boolean); safecall;
    function get_IsIndexedDBEnabled: Boolean; safecall;
    procedure put_IsIndexedDBEnabled(value: Boolean); safecall;
    property IsIndexedDBEnabled: Boolean read get_IsIndexedDBEnabled write put_IsIndexedDBEnabled;
    property IsJavaScriptEnabled: Boolean read get_IsJavaScriptEnabled write put_IsJavaScriptEnabled;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewUnsupportedUriSchemeIdentifiedEventArgs
  IWebViewUnsupportedUriSchemeIdentifiedEventArgs = interface(IInspectable)
  ['{B9C9E1A7-620F-4895-935D-10FBAC6FD29E}']
    function get_Uri: IUriRuntimeClass; safecall;
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewUnsupportedUriSchemeIdentifiedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewUnsupportedUriSchemeIdentifiedEventArgs_Delegate_Base = interface(IUnknown)
  ['{D304027C-5714-502A-9312-68CA86397124}']
    procedure Invoke(sender: IWebView; args: IWebViewUnsupportedUriSchemeIdentifiedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewUnsupportedUriSchemeIdentifiedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewUnsupportedUriSchemeIdentifiedEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewUnsupportedUriSchemeIdentifiedEventArgs_Delegate_Base)
  ['{92F72B50-F8F7-57FF-B7C6-D41F963DC274}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewNewWindowRequestedEventArgs
  IWebViewNewWindowRequestedEventArgs = interface(IInspectable)
  ['{470FA818-6862-44D9-B3D1-C0696373DE35}']
    function get_Uri: IUriRuntimeClass; safecall;
    function get_Referrer: IUriRuntimeClass; safecall;
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
    property Referrer: IUriRuntimeClass read get_Referrer;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNewWindowRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNewWindowRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{A8D0AFF5-90E1-5921-87DD-576A4B0A95B6}']
    procedure Invoke(sender: IWebView; args: IWebViewNewWindowRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewNewWindowRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewNewWindowRequestedEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewNewWindowRequestedEventArgs_Delegate_Base)
  ['{1468FB1D-046B-537C-BA04-8377EC4C0425}']
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewPermissionRequest
  IWebViewPermissionRequest = interface(IInspectable)
  ['{17B76332-66C4-4131-999E-DF7DE20A8C9C}']
    function get_Uri: IUriRuntimeClass; safecall;
    function get_PermissionType: WebViewPermissionType; safecall;
    function get_Id: Cardinal; safecall;
    function get_State: WebViewPermissionState; safecall;
    procedure Defer; safecall;
    procedure Allow; safecall;
    procedure Deny; safecall;
    property Id: Cardinal read get_Id;
    property PermissionType: WebViewPermissionType read get_PermissionType;
    property State: WebViewPermissionState read get_State;
    property Uri: IUriRuntimeClass read get_Uri;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewPermissionRequestedEventArgs
  IWebViewPermissionRequestedEventArgs = interface(IInspectable)
  ['{DADECFD0-6E1E-473F-B0BE-B02404D6A86D}']
    function get_PermissionRequest: IWebViewPermissionRequest; safecall;
    property PermissionRequest: IWebViewPermissionRequest read get_PermissionRequest;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewPermissionRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewPermissionRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{718C7A23-EB9F-50A6-8CF7-FBAC104E59C3}']
    procedure Invoke(sender: IWebView; args: IWebViewPermissionRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewPermissionRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewPermissionRequestedEventArgs = interface(TypedEventHandler_2__IWebView__IWebViewPermissionRequestedEventArgs_Delegate_Base)
  ['{129A67ED-0C5A-56F3-B375-4BAD83C1F8E3}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebView4
  IWebView4 = interface(IInspectable)
  ['{E28243BC-67F3-462A-B4E0-3BBF6C3DAB0B}']
    function get_ExecutionMode: WebViewExecutionMode; safecall;
    function get_DeferredPermissionRequests: IVector_1__IWebViewDeferredPermissionRequest; safecall;
    function get_Settings: IWebViewSettings; safecall;
    function add_UnsupportedUriSchemeIdentified(handler: TypedEventHandler_2__IWebView__IWebViewUnsupportedUriSchemeIdentifiedEventArgs): EventRegistrationToken; safecall;
    procedure remove_UnsupportedUriSchemeIdentified(token: EventRegistrationToken); safecall;
    function add_NewWindowRequested(handler: TypedEventHandler_2__IWebView__IWebViewNewWindowRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_NewWindowRequested(token: EventRegistrationToken); safecall;
    function add_PermissionRequested(handler: TypedEventHandler_2__IWebView__IWebViewPermissionRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_PermissionRequested(token: EventRegistrationToken); safecall;
    procedure AddWebAllowedObject(name: HSTRING; pObject: IInspectable); safecall;
    function DeferredPermissionRequestById(id: Cardinal): IWebViewDeferredPermissionRequest; safecall;
    property DeferredPermissionRequests: IVector_1__IWebViewDeferredPermissionRequest read get_DeferredPermissionRequests;
    property ExecutionMode: WebViewExecutionMode read get_ExecutionMode;
    property Settings: IWebViewSettings read get_Settings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebView5
  IWebView5 = interface(IInspectable)
  ['{8C9884A6-2F3B-4A55-A463-8444C2095D00}']
    function get_XYFocusLeft: IDependencyObject; safecall;
    procedure put_XYFocusLeft(value: IDependencyObject); safecall;
    function get_XYFocusRight: IDependencyObject; safecall;
    procedure put_XYFocusRight(value: IDependencyObject); safecall;
    function get_XYFocusUp: IDependencyObject; safecall;
    procedure put_XYFocusUp(value: IDependencyObject); safecall;
    function get_XYFocusDown: IDependencyObject; safecall;
    procedure put_XYFocusDown(value: IDependencyObject); safecall;
    property XYFocusDown: IDependencyObject read get_XYFocusDown write put_XYFocusDown;
    property XYFocusLeft: IDependencyObject read get_XYFocusLeft write put_XYFocusLeft;
    property XYFocusRight: IDependencyObject read get_XYFocusRight write put_XYFocusRight;
    property XYFocusUp: IDependencyObject read get_XYFocusUp write put_XYFocusUp;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewSeparateProcessLostEventArgs
  IWebViewSeparateProcessLostEventArgs = interface(IInspectable)
  ['{A405700A-C482-40B5-AAEA-E10CFA9F5ABE}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewSeparateProcessLostEventArgs>
  TypedEventHandler_2__IWebView__IWebViewSeparateProcessLostEventArgs = interface(IUnknown)
  ['{100F8F32-CA7B-5374-A39C-CB9843016686}']
    procedure Invoke(sender: IWebView; args: IWebViewSeparateProcessLostEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebView6
  IWebView6 = interface(IInspectable)
  ['{38CCD942-2536-467C-A211-AF359C3B4FDA}']
    function add_SeparateProcessLost(handler: TypedEventHandler_2__IWebView__IWebViewSeparateProcessLostEventArgs): EventRegistrationToken; safecall;
    procedure remove_SeparateProcessLost(token: EventRegistrationToken); safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewWebResourceRequestedEventArgs
  IWebViewWebResourceRequestedEventArgs = interface(IInspectable)
  ['{378D21F6-C77F-5D8B-8F30-93C99DF79435}']
    function get_Request: Http_IHttpRequestMessage; safecall;
    function get_Response: Http_IHttpResponseMessage; safecall;
    procedure put_Response(value: Http_IHttpResponseMessage); safecall;
    function GetDeferral: IDeferral; safecall;
    property Request: Http_IHttpRequestMessage read get_Request;
    property Response: Http_IHttpResponseMessage read get_Response write put_Response;
  end;

  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.IWebView,Windows.UI.Xaml.Controls.IWebViewWebResourceRequestedEventArgs>
  TypedEventHandler_2__IWebView__IWebViewWebResourceRequestedEventArgs = interface(IUnknown)
  ['{7250FCD3-1778-561B-8348-26509FEEF660}']
    procedure Invoke(sender: IWebView; args: IWebViewWebResourceRequestedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebView7
  IWebView7 = interface(IInspectable)
  ['{27707C2B-042F-5353-9021-55CD06585FDF}']
    function add_WebResourceRequested(handler: TypedEventHandler_2__IWebView__IWebViewWebResourceRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_WebResourceRequested(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewBrush
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebViewBrush)]
  IWebViewBrush = interface(IInspectable)
  ['{40E86F75-0CF4-4B72-A4D6-CF5D15780116}']
    function get_SourceName: HSTRING; safecall;
    procedure put_SourceName(value: HSTRING); safecall;
    procedure Redraw; safecall;
    procedure SetSource(source: IWebView); safecall;
    property SourceName: HSTRING read get_SourceName write put_SourceName;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewBrushStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebViewBrush)]
  IWebViewBrushStatics = interface(IInspectable)
  ['{D74DAA24-1D05-463E-B028-6BAA4420E762}']
    function get_SourceNameProperty: IDependencyProperty; safecall;
    property SourceNameProperty: IDependencyProperty read get_SourceNameProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewFactory4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebView)]
  IWebViewFactory4 = interface(IInspectable)
  ['{82EDAC58-EE6A-4C9B-A3A0-9347A7D0EF4C}']
    function CreateInstanceWithExecutionMode(executionMode: WebViewExecutionMode): IWebView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebView)]
  IWebViewStatics = interface(IInspectable)
  ['{A0B561DE-5FDB-443B-B9F0-5C30F6B7A1F4}']
    function get_AnyScriptNotifyUri: IVector_1__IUriRuntimeClass; safecall;
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_AllowedScriptNotifyUrisProperty: IDependencyProperty; safecall;
    function get_DataTransferPackageProperty: IDependencyProperty; safecall;
    property AllowedScriptNotifyUrisProperty: IDependencyProperty read get_AllowedScriptNotifyUrisProperty;
    property AnyScriptNotifyUri: IVector_1__IUriRuntimeClass read get_AnyScriptNotifyUri;
    property DataTransferPackageProperty: IDependencyProperty read get_DataTransferPackageProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebView)]
  IWebViewStatics2 = interface(IInspectable)
  ['{322F8780-E812-466B-9E50-8E9FEC24018A}']
    function get_CanGoBackProperty: IDependencyProperty; safecall;
    function get_CanGoForwardProperty: IDependencyProperty; safecall;
    function get_DocumentTitleProperty: IDependencyProperty; safecall;
    function get_DefaultBackgroundColorProperty: IDependencyProperty; safecall;
    property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    property DefaultBackgroundColorProperty: IDependencyProperty read get_DefaultBackgroundColorProperty;
    property DocumentTitleProperty: IDependencyProperty read get_DocumentTitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebView)]
  IWebViewStatics3 = interface(IInspectable)
  ['{129BEF8A-4509-4374-B0D1-A7104D0C3A2F}']
    function get_ContainsFullScreenElementProperty: IDependencyProperty; safecall;
    property ContainsFullScreenElementProperty: IDependencyProperty read get_ContainsFullScreenElementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebView)]
  IWebViewStatics4 = interface(IInspectable)
  ['{44B197B0-B746-40F3-9936-4EBBFF6B47B8}']
    function get_DefaultExecutionMode: WebViewExecutionMode; safecall;
    function ClearTemporaryWebDataAsync: IAsyncAction; safecall;
    property DefaultExecutionMode: WebViewExecutionMode read get_DefaultExecutionMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWebViewStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WebView)]
  IWebViewStatics5 = interface(IInspectable)
  ['{08A0B8D1-508A-4DB8-97EF-0FA505E19EC2}']
    function get_XYFocusLeftProperty: IDependencyProperty; safecall;
    function get_XYFocusRightProperty: IDependencyProperty; safecall;
    function get_XYFocusUpProperty: IDependencyProperty; safecall;
    function get_XYFocusDownProperty: IDependencyProperty; safecall;
    property XYFocusDownProperty: IDependencyProperty read get_XYFocusDownProperty;
    property XYFocusLeftProperty: IDependencyProperty read get_XYFocusLeftProperty;
    property XYFocusRightProperty: IDependencyProperty read get_XYFocusRightProperty;
    property XYFocusUpProperty: IDependencyProperty read get_XYFocusUpProperty;
  end;

  // Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs2
  IWebViewUnviewableContentIdentifiedEventArgs2 = interface(IInspectable)
  ['{9ABE1154-36F0-4268-8D88-121EEDF45E6A}']
    function get_MediaType: HSTRING; safecall;
    property MediaType: HSTRING read get_MediaType;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWrapGrid
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WrapGrid)]
  IWrapGrid = interface(IInspectable)
  ['{0552178B-7567-47C2-BD5C-AD8394C828BA}']
    function get_ItemWidth: Double; safecall;
    procedure put_ItemWidth(value: Double); safecall;
    function get_ItemHeight: Double; safecall;
    procedure put_ItemHeight(value: Double); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_HorizontalChildrenAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalChildrenAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalChildrenAlignment: VerticalAlignment; safecall;
    procedure put_VerticalChildrenAlignment(value: VerticalAlignment); safecall;
    function get_MaximumRowsOrColumns: Integer; safecall;
    procedure put_MaximumRowsOrColumns(value: Integer); safecall;
    property HorizontalChildrenAlignment: HorizontalAlignment read get_HorizontalChildrenAlignment write put_HorizontalChildrenAlignment;
    property ItemHeight: Double read get_ItemHeight write put_ItemHeight;
    property ItemWidth: Double read get_ItemWidth write put_ItemWidth;
    property MaximumRowsOrColumns: Integer read get_MaximumRowsOrColumns write put_MaximumRowsOrColumns;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property VerticalChildrenAlignment: VerticalAlignment read get_VerticalChildrenAlignment write put_VerticalChildrenAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.IWrapGridStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_WrapGrid)]
  IWrapGridStatics = interface(IInspectable)
  ['{D04A6B97-13CB-479C-A285-E4E56846C4CB}']
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_MaximumRowsOrColumnsProperty: IDependencyProperty; safecall;
    property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileBitmapRequestDeferral)]
  Maps_IMapTileBitmapRequestDeferral = interface(IInspectable)
  ['{FE370542-A4AC-4EFA-9665-0490B0CAFDD2}']
    procedure Complete; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileBitmapRequest)]
  Maps_IMapTileBitmapRequest = interface(IInspectable)
  ['{46733FBC-D89D-472B-B5F6-D7066B0584F4}']
    function get_PixelData: IRandomAccessStreamReference; safecall;
    procedure put_PixelData(value: IRandomAccessStreamReference); safecall;
    function GetDeferral: Maps_IMapTileBitmapRequestDeferral; safecall;
    property PixelData: IRandomAccessStreamReference read get_PixelData write put_PixelData;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileBitmapRequestedEventArgs)]
  Maps_IMapTileBitmapRequestedEventArgs = interface(IInspectable)
  ['{337F691D-9B02-4AA2-8B1E-CC4D91719BF3}']
    function get_X: Integer; safecall;
    function get_Y: Integer; safecall;
    function get_ZoomLevel: Integer; safecall;
    function get_Request: Maps_IMapTileBitmapRequest; safecall;
    property Request: Maps_IMapTileBitmapRequest read get_Request;
    property X: Integer read get_X;
    property Y: Integer read get_Y;
    property ZoomLevel: Integer read get_ZoomLevel;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs>
  TypedEventHandler_2__Maps_ICustomMapTileDataSource__Maps_IMapTileBitmapRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{8D2D9655-2F82-5271-9E95-A2DB39D872F0}']
    procedure Invoke(sender: Maps_ICustomMapTileDataSource; args: Maps_IMapTileBitmapRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs>
  TypedEventHandler_2__Maps_ICustomMapTileDataSource__Maps_IMapTileBitmapRequestedEventArgs = interface(TypedEventHandler_2__Maps_ICustomMapTileDataSource__Maps_IMapTileBitmapRequestedEventArgs_Delegate_Base)
  ['{86D0C6B8-9794-5E8A-847E-D1E967AD67EE}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_CustomMapTileDataSource)]
  Maps_ICustomMapTileDataSource = interface(IInspectable)
  ['{65DA384A-2DB1-4BE1-B155-3D0C9ECF4799}']
    function add_BitmapRequested(handler: TypedEventHandler_2__Maps_ICustomMapTileDataSource__Maps_IMapTileBitmapRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_BitmapRequested(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_CustomMapTileDataSource)]
  Maps_ICustomMapTileDataSourceFactory = interface(IInspectable)
  ['{C8477947-C955-4F22-9444-A1D8D744AF11}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ICustomMapTileDataSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileUriRequestDeferral)]
  Maps_IMapTileUriRequestDeferral = interface(IInspectable)
  ['{C117ADE0-BF3E-4C51-8FAA-4B593CF68EB2}']
    procedure Complete; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileUriRequest)]
  Maps_IMapTileUriRequest = interface(IInspectable)
  ['{17402335-3127-45B8-87A7-99F87D4E2745}']
    function get_Uri: IUriRuntimeClass; safecall;
    procedure put_Uri(value: IUriRuntimeClass); safecall;
    function GetDeferral: Maps_IMapTileUriRequestDeferral; safecall;
    property Uri: IUriRuntimeClass read get_Uri write put_Uri;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileUriRequestedEventArgs)]
  Maps_IMapTileUriRequestedEventArgs = interface(IInspectable)
  ['{D2147B43-1BBF-4B98-8DD3-B7834E407E0D}']
    function get_X: Integer; safecall;
    function get_Y: Integer; safecall;
    function get_ZoomLevel: Integer; safecall;
    function get_Request: Maps_IMapTileUriRequest; safecall;
    property Request: Maps_IMapTileUriRequest read get_Request;
    property X: Integer read get_X;
    property Y: Integer read get_Y;
    property ZoomLevel: Integer read get_ZoomLevel;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs>
  TypedEventHandler_2__Maps_IHttpMapTileDataSource__Maps_IMapTileUriRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{4933A19A-00CC-5C21-A3DF-B68F9939F6EF}']
    procedure Invoke(sender: Maps_IHttpMapTileDataSource; args: Maps_IMapTileUriRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs>
  TypedEventHandler_2__Maps_IHttpMapTileDataSource__Maps_IMapTileUriRequestedEventArgs = interface(TypedEventHandler_2__Maps_IHttpMapTileDataSource__Maps_IMapTileUriRequestedEventArgs_Delegate_Base)
  ['{E7E8BAB2-6DB6-5D58-A80C-F50BFB17BEB5}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_HttpMapTileDataSource)]
  Maps_IHttpMapTileDataSource = interface(IInspectable)
  ['{9D03CB5C-FD79-4795-87BE-7E54CA0B37D0}']
    function get_UriFormatString: HSTRING; safecall;
    procedure put_UriFormatString(value: HSTRING); safecall;
    function get_AdditionalRequestHeaders: IMap_2__HSTRING__HSTRING; safecall;
    function get_AllowCaching: Boolean; safecall;
    procedure put_AllowCaching(value: Boolean); safecall;
    function add_UriRequested(handler: TypedEventHandler_2__Maps_IHttpMapTileDataSource__Maps_IMapTileUriRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_UriRequested(token: EventRegistrationToken); safecall;
    property AdditionalRequestHeaders: IMap_2__HSTRING__HSTRING read get_AdditionalRequestHeaders;
    property AllowCaching: Boolean read get_AllowCaching write put_AllowCaching;
    property UriFormatString: HSTRING read get_UriFormatString write put_UriFormatString;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_HttpMapTileDataSource)]
  Maps_IHttpMapTileDataSourceFactory = interface(IInspectable)
  ['{53B4B107-84DC-4291-89F8-6D0BB612A055}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IHttpMapTileDataSource; safecall;
    function CreateInstanceWithUriFormatString(uriFormatString: HSTRING; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IHttpMapTileDataSource; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs>
  TypedEventHandler_2__Maps_ILocalMapTileDataSource__Maps_IMapTileUriRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{76752FC4-B240-502C-9098-622C6C36E6A3}']
    procedure Invoke(sender: Maps_ILocalMapTileDataSource; args: Maps_IMapTileUriRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource,Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs>
  TypedEventHandler_2__Maps_ILocalMapTileDataSource__Maps_IMapTileUriRequestedEventArgs = interface(TypedEventHandler_2__Maps_ILocalMapTileDataSource__Maps_IMapTileUriRequestedEventArgs_Delegate_Base)
  ['{CF393EC9-A935-524A-88A1-81E1E04BA16E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_LocalMapTileDataSource)]
  Maps_ILocalMapTileDataSource = interface(IInspectable)
  ['{616257B5-9108-4F12-8BF4-BB3C8F6274E5}']
    function get_UriFormatString: HSTRING; safecall;
    procedure put_UriFormatString(value: HSTRING); safecall;
    function add_UriRequested(handler: TypedEventHandler_2__Maps_ILocalMapTileDataSource__Maps_IMapTileUriRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_UriRequested(token: EventRegistrationToken); safecall;
    property UriFormatString: HSTRING read get_UriFormatString write put_UriFormatString;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_LocalMapTileDataSource)]
  Maps_ILocalMapTileDataSourceFactory = interface(IInspectable)
  ['{C5CFE9FC-72AC-4839-8A0D-011F24693C79}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ILocalMapTileDataSource; safecall;
    function CreateInstanceWithUriFormatString(uriFormatString: HSTRING; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ILocalMapTileDataSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapCamera
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapCamera)]
  Maps_IMapCamera = interface(IInspectable)
  ['{53A6B623-C0F8-4D8B-AD1E-A59598EA840B}']
    function get_Location: IGeopoint; safecall;
    procedure put_Location(value: IGeopoint); safecall;
    function get_Heading: Double; safecall;
    procedure put_Heading(value: Double); safecall;
    function get_Pitch: Double; safecall;
    procedure put_Pitch(value: Double); safecall;
    function get_Roll: Double; safecall;
    procedure put_Roll(value: Double); safecall;
    function get_FieldOfView: Double; safecall;
    procedure put_FieldOfView(value: Double); safecall;
    property FieldOfView: Double read get_FieldOfView write put_FieldOfView;
    property Heading: Double read get_Heading write put_Heading;
    property Location: IGeopoint read get_Location write put_Location;
    property Pitch: Double read get_Pitch write put_Pitch;
    property Roll: Double read get_Roll write put_Roll;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs)]
  Maps_IMapActualCameraChangedEventArgs = interface(IInspectable)
  ['{DAA080DA-B7F4-422C-A618-BBAA7C1D814C}']
    function get_Camera: Maps_IMapCamera; safecall;
    property Camera: Maps_IMapCamera read get_Camera;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2
  Maps_IMapActualCameraChangedEventArgs2 = interface(IInspectable)
  ['{7BA4C7E5-10DC-455A-9D04-1D72FB6D9B93}']
    function get_ChangeReason: Maps_MapCameraChangeReason; safecall;
    property ChangeReason: Maps_MapCameraChangeReason read get_ChangeReason;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs)]
  Maps_IMapActualCameraChangingEventArgs = interface(IInspectable)
  ['{6B0DBED6-93F7-4682-8DE5-A47A1CC7A945}']
    function get_Camera: Maps_IMapCamera; safecall;
    property Camera: Maps_IMapCamera read get_Camera;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2
  Maps_IMapActualCameraChangingEventArgs2 = interface(IInspectable)
  ['{F2867897-40AC-4E8A-A927-510F3846A47E}']
    function get_ChangeReason: Maps_MapCameraChangeReason; safecall;
    property ChangeReason: Maps_MapCameraChangeReason read get_ChangeReason;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapBillboard
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapBillboard)]
  Maps_IMapBillboard = interface(IInspectable)
  ['{1694259D-0AE2-4F42-A02E-292CA835D39D}']
    function get_Location: IGeopoint; safecall;
    procedure put_Location(value: IGeopoint); safecall;
    function get_NormalizedAnchorPoint: TPointF; safecall;
    procedure put_NormalizedAnchorPoint(value: TPointF); safecall;
    function get_Image: IRandomAccessStreamReference; safecall;
    procedure put_Image(value: IRandomAccessStreamReference); safecall;
    function get_CollisionBehaviorDesired: Maps_MapElementCollisionBehavior; safecall;
    procedure put_CollisionBehaviorDesired(value: Maps_MapElementCollisionBehavior); safecall;
    function get_ReferenceCamera: Maps_IMapCamera; safecall;
    property CollisionBehaviorDesired: Maps_MapElementCollisionBehavior read get_CollisionBehaviorDesired write put_CollisionBehaviorDesired;
    property Image: IRandomAccessStreamReference read get_Image write put_Image;
    property Location: IGeopoint read get_Location write put_Location;
    property NormalizedAnchorPoint: TPointF read get_NormalizedAnchorPoint write put_NormalizedAnchorPoint;
    property ReferenceCamera: Maps_IMapCamera read get_ReferenceCamera;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapBillboard)]
  Maps_IMapBillboardFactory = interface(IInspectable)
  ['{BE45A4C5-8F09-4B86-AE28-783740EB8B31}']
    function CreateInstanceFromCamera(camera: Maps_IMapCamera): Maps_IMapBillboard; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapBillboard)]
  Maps_IMapBillboardStatics = interface(IInspectable)
  ['{FDF839FE-E1F7-4FB0-8887-7DA68C647333}']
    function get_LocationProperty: IDependencyProperty; safecall;
    function get_NormalizedAnchorPointProperty: IDependencyProperty; safecall;
    function get_CollisionBehaviorDesiredProperty: IDependencyProperty; safecall;
    property CollisionBehaviorDesiredProperty: IDependencyProperty read get_CollisionBehaviorDesiredProperty;
    property LocationProperty: IDependencyProperty read get_LocationProperty;
    property NormalizedAnchorPointProperty: IDependencyProperty read get_NormalizedAnchorPointProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapCameraFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapCamera)]
  Maps_IMapCameraFactory = interface(IInspectable)
  ['{EA3B0F16-83AF-4ACE-8E71-10AD9F1E9E7F}']
    function CreateInstanceWithLocation(location: IGeopoint): Maps_IMapCamera; safecall;
    function CreateInstanceWithLocationAndHeading(location: IGeopoint; headingInDegrees: Double): Maps_IMapCamera; safecall;
    function CreateInstanceWithLocationHeadingAndPitch(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapCamera; safecall;
    function CreateInstanceWithLocationHeadingPitchRollAndFieldOfView(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double; rollInDegrees: Double; fieldOfViewInDegrees: Double): Maps_IMapCamera; safecall;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapElement>
  IIterator_1__Maps_IMapElement_Base = interface(IInspectable)
  ['{F916B428-3B74-5AD4-9D97-1B0A387AECB5}']
    function get_Current: Maps_IMapElement; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PMaps_IMapElement): Cardinal; safecall;
    property Current: Maps_IMapElement read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapElement>
  IIterator_1__Maps_IMapElement = interface(IIterator_1__Maps_IMapElement_Base)
  ['{7208AFF7-9F41-5FFE-A8B0-8FC69F9DB094}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapElement>
  IIterable_1__Maps_IMapElement_Base = interface(IInspectable)
  ['{81D25C25-A4B3-5D0D-92AB-26360C2A7FAC}']
    function First: IIterator_1__Maps_IMapElement; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapElement>
  IIterable_1__Maps_IMapElement = interface(IIterable_1__Maps_IMapElement_Base)
  ['{43C42E7D-F62C-503E-9303-5732987F816E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapContextRequestedEventArgs)]
  Maps_IMapContextRequestedEventArgs = interface(IInspectable)
  ['{FDD1B423-C961-4DF2-BB57-82EE0F0BB591}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElements: IVectorView_1__Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElements: IVectorView_1__Maps_IMapElement read get_MapElements;
    property Position: TPointF read get_Position;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapRouteView>
  IIterator_1__Maps_IMapRouteView_Base = interface(IInspectable)
  ['{AF256095-4144-55A7-9139-89843B572DB7}']
    function get_Current: Maps_IMapRouteView; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PMaps_IMapRouteView): Cardinal; safecall;
    property Current: Maps_IMapRouteView read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapRouteView>
  IIterator_1__Maps_IMapRouteView = interface(IIterator_1__Maps_IMapRouteView_Base)
  ['{19776BC8-3474-5AFE-9DE2-F049EA335BCE}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapRouteView>
  IIterable_1__Maps_IMapRouteView_Base = interface(IInspectable)
  ['{090AD4B3-8FCE-502D-8665-18650C51BEA9}']
    function First: IIterator_1__Maps_IMapRouteView; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapRouteView>
  IIterable_1__Maps_IMapRouteView = interface(IIterable_1__Maps_IMapRouteView_Base)
  ['{7BAAAEA8-BAB9-5924-9585-91FD5CFF36FB}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapTileSource>
  IIterator_1__Maps_IMapTileSource_Base = interface(IInspectable)
  ['{E5C7EBA6-7C75-50BC-8B36-2D8CA1FA538B}']
    function get_Current: Maps_IMapTileSource; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PMaps_IMapTileSource): Cardinal; safecall;
    property Current: Maps_IMapTileSource read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapTileSource>
  IIterator_1__Maps_IMapTileSource = interface(IIterator_1__Maps_IMapTileSource_Base)
  ['{8EF05F21-BDA1-5828-818D-92797FA6AED9}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapTileSource>
  IIterable_1__Maps_IMapTileSource_Base = interface(IInspectable)
  ['{6D8A73F7-ABD7-56C4-99A7-06C1FA77DCD2}']
    function First: IIterator_1__Maps_IMapTileSource; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapTileSource>
  IIterable_1__Maps_IMapTileSource = interface(IIterable_1__Maps_IMapTileSource_Base)
  ['{E7DF1722-87B0-5561-9144-85C9B1F79DF0}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs)]
  Maps_IMapTargetCameraChangedEventArgs = interface(IInspectable)
  ['{DBF00472-E953-4FA8-97D0-EA86359057CF}']
    function get_Camera: Maps_IMapCamera; safecall;
    property Camera: Maps_IMapCamera read get_Camera;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapScene,Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapScene__Maps_IMapTargetCameraChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{766ED4A8-E810-5F78-BC96-9AFF9F58CFCA}']
    procedure Invoke(sender: Maps_IMapScene; args: Maps_IMapTargetCameraChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapScene,Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapScene__Maps_IMapTargetCameraChangedEventArgs = interface(TypedEventHandler_2__Maps_IMapScene__Maps_IMapTargetCameraChangedEventArgs_Delegate_Base)
  ['{DDF1E64E-EC29-5400-9E36-4314803485F1}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapScene
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapScene)]
  Maps_IMapScene = interface(IInspectable)
  ['{8BBA10A9-50E7-482C-9789-C688B178AC24}']
    function get_TargetCamera: Maps_IMapCamera; safecall;
    function add_TargetCameraChanged(handler: TypedEventHandler_2__Maps_IMapScene__Maps_IMapTargetCameraChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TargetCameraChanged(token: EventRegistrationToken); safecall;
    property TargetCamera: Maps_IMapCamera read get_TargetCamera;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapCustomExperience)]
  Maps_IMapCustomExperience = interface(IInspectable)
  ['{64592866-14A3-4E5F-8883-8E9C500EEEDE}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementClickEventArgs)]
  Maps_IMapElementClickEventArgs = interface(IInspectable)
  ['{40168A11-D080-4519-99A1-3149FB8999D0}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElements: IVector_1__Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElements: IVector_1__Maps_IMapElement read get_MapElements;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementClickEventArgs_Delegate_Base = interface(IUnknown)
  ['{4C7821A1-D570-597D-ACC7-068853C4AB27}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapElementClickEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementClickEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementClickEventArgs_Delegate_Base)
  ['{900A895F-9FA0-513D-BEC9-B78ECB08C340}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs)]
  Maps_IMapElementPointerEnteredEventArgs = interface(IInspectable)
  ['{AB85DD4E-91D7-4B31-8F0A-D390C7D3A2EF}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElement: Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElement: Maps_IMapElement read get_MapElement;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerEnteredEventArgs_Delegate_Base = interface(IUnknown)
  ['{CA2638E5-7C33-5B90-9B66-273731FC7091}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapElementPointerEnteredEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerEnteredEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerEnteredEventArgs_Delegate_Base)
  ['{9A381E14-DDD7-5C0C-83E9-E73F694DF6B9}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs)]
  Maps_IMapElementPointerExitedEventArgs = interface(IInspectable)
  ['{C1A45AF9-60C9-4679-9119-20ABC75D931F}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElement: Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElement: Maps_IMapElement read get_MapElement;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerExitedEventArgs_Delegate_Base = interface(IUnknown)
  ['{F6A7BFD1-2C79-5191-B382-75B141D18846}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapElementPointerExitedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerExitedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerExitedEventArgs_Delegate_Base)
  ['{DAAC3DB2-6DA7-5C33-8E48-A544E662BC81}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{1B536AE0-08B0-5C54-BB30-679E6A875D61}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapActualCameraChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangedEventArgs_Delegate_Base)
  ['{322951D6-530C-55A6-B10F-A0FE5B01FECE}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{78BFB71B-2D80-50E1-A2E9-E5667FF89EF2}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapActualCameraChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangingEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangingEventArgs_Delegate_Base)
  ['{1DE4DF31-E7BA-51D8-9253-86ABE5FE22C8}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapTargetCameraChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{2671C2DD-E212-5E43-80E2-AB6FF3F3086C}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapTargetCameraChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapTargetCameraChangedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapTargetCameraChangedEventArgs_Delegate_Base)
  ['{6D0A7F5C-3796-5757-8F93-B386CAD78EB3}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs)]
  Maps_IMapCustomExperienceChangedEventArgs = interface(IInspectable)
  ['{B9E6FB9B-8FC1-4042-AC34-A61B38BB7514}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapCustomExperienceChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{272CF26F-18DA-599E-896F-3BFBF6FB1326}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapCustomExperienceChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapCustomExperienceChangedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapCustomExperienceChangedEventArgs_Delegate_Base)
  ['{87E85C2A-749E-576B-A5CB-73361F04CA37}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControl2
  Maps_IMapControl2 = interface(IInspectable)
  ['{E1FD644D-96EC-4065-B0F0-75281DA3654D}']
    function get_BusinessLandmarksVisible: Boolean; safecall;
    procedure put_BusinessLandmarksVisible(value: Boolean); safecall;
    function get_TransitFeaturesVisible: Boolean; safecall;
    procedure put_TransitFeaturesVisible(value: Boolean); safecall;
    function get_PanInteractionMode: Maps_MapPanInteractionMode; safecall;
    procedure put_PanInteractionMode(value: Maps_MapPanInteractionMode); safecall;
    function get_RotateInteractionMode: Maps_MapInteractionMode; safecall;
    procedure put_RotateInteractionMode(value: Maps_MapInteractionMode); safecall;
    function get_TiltInteractionMode: Maps_MapInteractionMode; safecall;
    procedure put_TiltInteractionMode(value: Maps_MapInteractionMode); safecall;
    function get_ZoomInteractionMode: Maps_MapInteractionMode; safecall;
    procedure put_ZoomInteractionMode(value: Maps_MapInteractionMode); safecall;
    function get_Is3DSupported: Boolean; safecall;
    function get_IsStreetsideSupported: Boolean; safecall;
    function get_Scene: Maps_IMapScene; safecall;
    procedure put_Scene(value: Maps_IMapScene); safecall;
    function get_ActualCamera: Maps_IMapCamera; safecall;
    function get_TargetCamera: Maps_IMapCamera; safecall;
    function get_CustomExperience: Maps_IMapCustomExperience; safecall;
    procedure put_CustomExperience(value: Maps_IMapCustomExperience); safecall;
    function add_MapElementClick(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapElementClick(token: EventRegistrationToken); safecall;
    function add_MapElementPointerEntered(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerEnteredEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapElementPointerEntered(token: EventRegistrationToken); safecall;
    function add_MapElementPointerExited(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapElementPointerExitedEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapElementPointerExited(token: EventRegistrationToken); safecall;
    function add_ActualCameraChanged(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ActualCameraChanged(token: EventRegistrationToken); safecall;
    function add_ActualCameraChanging(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapActualCameraChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_ActualCameraChanging(token: EventRegistrationToken); safecall;
    function add_TargetCameraChanged(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapTargetCameraChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TargetCameraChanged(token: EventRegistrationToken); safecall;
    function add_CustomExperienceChanged(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapCustomExperienceChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_CustomExperienceChanged(token: EventRegistrationToken); safecall;
    procedure StartContinuousRotate(rateInDegreesPerSecond: Double); safecall;
    procedure StopContinuousRotate; safecall;
    procedure StartContinuousTilt(rateInDegreesPerSecond: Double); safecall;
    procedure StopContinuousTilt; safecall;
    procedure StartContinuousZoom(rateOfChangePerSecond: Double); safecall;
    procedure StopContinuousZoom; safecall;
    function TryRotateAsync(degrees: Double): IAsyncOperation_1__Boolean; safecall;
    function TryRotateToAsync(angleInDegrees: Double): IAsyncOperation_1__Boolean; safecall;
    function TryTiltAsync(degrees: Double): IAsyncOperation_1__Boolean; safecall;
    function TryTiltToAsync(angleInDegrees: Double): IAsyncOperation_1__Boolean; safecall;
    function TryZoomInAsync: IAsyncOperation_1__Boolean; safecall;
    function TryZoomOutAsync: IAsyncOperation_1__Boolean; safecall;
    function TryZoomToAsync(zoomLevel: Double): IAsyncOperation_1__Boolean; safecall;
    function TrySetSceneAsync(scene: Maps_IMapScene): IAsyncOperation_1__Boolean; overload; safecall;
    function TrySetSceneAsync(scene: Maps_IMapScene; animationKind: Maps_MapAnimationKind): IAsyncOperation_1__Boolean; overload; safecall;
    property ActualCamera: Maps_IMapCamera read get_ActualCamera;
    property BusinessLandmarksVisible: Boolean read get_BusinessLandmarksVisible write put_BusinessLandmarksVisible;
    property CustomExperience: Maps_IMapCustomExperience read get_CustomExperience write put_CustomExperience;
    property Is3DSupported: Boolean read get_Is3DSupported;
    property IsStreetsideSupported: Boolean read get_IsStreetsideSupported;
    property PanInteractionMode: Maps_MapPanInteractionMode read get_PanInteractionMode write put_PanInteractionMode;
    property RotateInteractionMode: Maps_MapInteractionMode read get_RotateInteractionMode write put_RotateInteractionMode;
    property Scene: Maps_IMapScene read get_Scene write put_Scene;
    property TargetCamera: Maps_IMapCamera read get_TargetCamera;
    property TiltInteractionMode: Maps_MapInteractionMode read get_TiltInteractionMode write put_TiltInteractionMode;
    property TransitFeaturesVisible: Boolean read get_TransitFeaturesVisible write put_TransitFeaturesVisible;
    property ZoomInteractionMode: Maps_MapInteractionMode read get_ZoomInteractionMode write put_ZoomInteractionMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs)]
  Maps_IMapRightTappedEventArgs = interface(IInspectable)
  ['{20943171-6FE8-40A6-AD0E-297379B575A7}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    property Location: IGeopoint read get_Location;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapRightTappedEventArgs_Delegate_Base = interface(IUnknown)
  ['{EFC52F2D-AD6B-59AF-A0F0-2253D434414F}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapRightTappedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapRightTappedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapRightTappedEventArgs_Delegate_Base)
  ['{A821A8EB-CDA4-5A99-9CCE-6D73BCC19EAA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControl3
  Maps_IMapControl3 = interface(IInspectable)
  ['{586328F8-8CDD-40AE-9338-AF2A7BE845E5}']
    function add_MapRightTapped(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapRightTappedEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapRightTapped(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControl4
  Maps_IMapControl4 = interface(IInspectable)
  ['{068F132A-1817-466D-B7CE-419B3F8E248B}']
    function get_BusinessLandmarksEnabled: Boolean; safecall;
    procedure put_BusinessLandmarksEnabled(value: Boolean); safecall;
    function get_TransitFeaturesEnabled: Boolean; safecall;
    procedure put_TransitFeaturesEnabled(value: Boolean); safecall;
    function GetVisibleRegion(region: Maps_MapVisibleRegionKind): IGeopath; safecall;
    property BusinessLandmarksEnabled: Boolean read get_BusinessLandmarksEnabled write put_BusinessLandmarksEnabled;
    property TransitFeaturesEnabled: Boolean read get_TransitFeaturesEnabled write put_TransitFeaturesEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapStyleSheet)]
  Maps_IMapStyleSheet = interface(IInspectable)
  ['{AE54B2BF-8991-42ED-8D58-20473DEEDE1D}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapContextRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{E5239641-BA1F-5D89-AAE1-C7B499A47B0C}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapContextRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapContextRequestedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapContextRequestedEventArgs_Delegate_Base)
  ['{92ABF365-AE12-5491-9BA0-CE9831A1990C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControl5
  Maps_IMapControl5 = interface(IInspectable)
  ['{DD9B0FFD-7823-46A2-82C9-65DDAC4F365F}']
    function get_MapProjection: Maps_MapProjection; safecall;
    procedure put_MapProjection(value: Maps_MapProjection); safecall;
    function get_StyleSheet: Maps_IMapStyleSheet; safecall;
    procedure put_StyleSheet(value: Maps_IMapStyleSheet); safecall;
    function get_ViewPadding: Thickness; safecall;
    procedure put_ViewPadding(value: Thickness); safecall;
    function add_MapContextRequested(handler: TypedEventHandler_2__Maps_IMapControl__Maps_IMapContextRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapContextRequested(token: EventRegistrationToken); safecall;
    function FindMapElementsAtOffset(offset: TPointF; radius: Double): IVectorView_1__Maps_IMapElement; safecall;
    procedure GetLocationFromOffset(offset: TPointF; desiredReferenceSystem: AltitudeReferenceSystem; out location: IGeopoint); safecall;
    procedure StartContinuousPan(horizontalPixelsPerSecond: Double; verticalPixelsPerSecond: Double); safecall;
    procedure StopContinuousPan; safecall;
    function TryPanAsync(horizontalPixels: Double; verticalPixels: Double): IAsyncOperation_1__Boolean; safecall;
    function TryPanToAsync(location: IGeopoint): IAsyncOperation_1__Boolean; safecall;
    property MapProjection: Maps_MapProjection read get_MapProjection write put_MapProjection;
    property StyleSheet: Maps_IMapStyleSheet read get_StyleSheet write put_StyleSheet;
    property ViewPadding: Thickness read get_ViewPadding write put_ViewPadding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapLayer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapLayer)]
  Maps_IMapLayer = interface(IInspectable)
  ['{6D0FF9C1-A14D-4F97-8F57-46715B57683A}']
    function get_MapTabIndex: Integer; safecall;
    procedure put_MapTabIndex(value: Integer); safecall;
    function get_Visible: Boolean; safecall;
    procedure put_Visible(value: Boolean); safecall;
    function get_ZIndex: Integer; safecall;
    procedure put_ZIndex(value: Integer); safecall;
    property MapTabIndex: Integer read get_MapTabIndex write put_MapTabIndex;
    property Visible: Boolean read get_Visible write put_Visible;
    property ZIndex: Integer read get_ZIndex write put_ZIndex;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IIterator_1__Maps_IMapLayer_Base = interface(IInspectable)
  ['{AF2283FF-250E-56D1-96D4-9F78E164CBC6}']
    function get_Current: Maps_IMapLayer; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PMaps_IMapLayer): Cardinal; safecall;
    property Current: Maps_IMapLayer read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IIterator_1__Maps_IMapLayer = interface(IIterator_1__Maps_IMapLayer_Base)
  ['{B93729FB-8224-553B-ABA9-210109CEDFE9}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IIterable_1__Maps_IMapLayer_Base = interface(IInspectable)
  ['{508E2CE9-1984-5FC8-A491-62E8889539F4}']
    function First: IIterator_1__Maps_IMapLayer; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IIterable_1__Maps_IMapLayer = interface(IIterable_1__Maps_IMapLayer_Base)
  ['{71DD915F-A492-5ECB-B6DB-D7D7C1386E5C}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IVectorView_1__Maps_IMapLayer = interface(IInspectable)
  ['{6C64CED0-EA83-5262-B6AC-12CA91A4424E}']
    function GetAt(index: Cardinal): Maps_IMapLayer; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: Maps_IMapLayer; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PMaps_IMapLayer): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IVector_1__Maps_IMapLayer_Base = interface(IInspectable)
  ['{62782500-A9CC-57F1-B81B-6EBCC9212245}']
    function GetAt(index: Cardinal): Maps_IMapLayer; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__Maps_IMapLayer; safecall;
    function IndexOf(value: Maps_IMapLayer; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: Maps_IMapLayer); safecall;
    procedure InsertAt(index: Cardinal; value: Maps_IMapLayer); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: Maps_IMapLayer); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PMaps_IMapLayer): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PMaps_IMapLayer); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.Maps.IMapLayer>
  IVector_1__Maps_IMapLayer = interface(IVector_1__Maps_IMapLayer_Base)
  ['{81152D23-3D45-5EDA-9DBD-A15DD3BCA5D2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControl6
  Maps_IMapControl6 = interface(IInspectable)
  ['{B0DA89A2-1041-4BEA-B88A-12AC9A82E0E2}']
    function get_Layers: IVector_1__Maps_IMapLayer; safecall;
    procedure put_Layers(value: IVector_1__Maps_IMapLayer); safecall;
    function TryGetLocationFromOffset(offset: TPointF; out location: IGeopoint): Boolean; overload; safecall;
    function TryGetLocationFromOffset(offset: TPointF; desiredReferenceSystem: AltitudeReferenceSystem; out location: IGeopoint): Boolean; overload; safecall;
    property Layers: IVector_1__Maps_IMapLayer read get_Layers write put_Layers;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControl7
  Maps_IMapControl7 = interface(IInspectable)
  ['{0D86E453-0C1F-4F7E-AE66-4AD0B4987857}']
    function get_Region: HSTRING; safecall;
    procedure put_Region(value: HSTRING); safecall;
    property Region: HSTRING read get_Region write put_Region;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControl8
  Maps_IMapControl8 = interface(IInspectable)
  ['{009E9C46-724D-53CA-9421-7A48FC731523}']
    function get_CanTiltDown: Boolean; safecall;
    function get_CanTiltUp: Boolean; safecall;
    function get_CanZoomIn: Boolean; safecall;
    function get_CanZoomOut: Boolean; safecall;
    property CanTiltDown: Boolean read get_CanTiltDown;
    property CanTiltUp: Boolean read get_CanTiltUp;
    property CanZoomIn: Boolean read get_CanZoomIn;
    property CanZoomOut: Boolean read get_CanZoomOut;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkClickEventArgs)]
  Maps_IMapControlBusinessLandmarkClickEventArgs = interface(IInspectable)
  ['{5E464922-4A1A-4797-BEB7-5CF7754CB867}']
    function get_LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation; safecall;
    property LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation read get_LocalLocations;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerEnteredEventArgs)]
  Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs = interface(IInspectable)
  ['{5E4081A6-EA98-4F95-8CAF-5B42696FF504}']
    function get_LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation; safecall;
    property LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation read get_LocalLocations;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerExitedEventArgs)]
  Maps_IMapControlBusinessLandmarkPointerExitedEventArgs = interface(IInspectable)
  ['{2BB52CAF-F24A-46D0-B463-65F719731057}']
    function get_LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation; safecall;
    property LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation read get_LocalLocations;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkRightTappedEventArgs)]
  Maps_IMapControlBusinessLandmarkRightTappedEventArgs = interface(IInspectable)
  ['{59AB8AE7-F184-4AB1-B0B0-35C8BF0654B2}']
    function get_LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation; safecall;
    property LocalLocations: IVectorView_1__Maps_LocalSearch_ILocalLocation read get_LocalLocations;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkClickEventArgs_Delegate_Base = interface(IUnknown)
  ['{3A9D75C2-A41B-5708-8C1B-8E7C26E857D0}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlBusinessLandmarkClickEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkClickEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkClickEventArgs_Delegate_Base)
  ['{272B8FB3-00BE-5D92-A12F-82B6C1F1BD13}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlTransitFeatureClickEventArgs)]
  Maps_IMapControlTransitFeatureClickEventArgs = interface(IInspectable)
  ['{76179969-B765-4622-B08A-3072745A4541}']
    function get_DisplayName: HSTRING; safecall;
    function get_Location: IGeopoint; safecall;
    function get_TransitProperties: IMapView_2__HSTRING__IInspectable; safecall;
    property DisplayName: HSTRING read get_DisplayName;
    property Location: IGeopoint read get_Location;
    property TransitProperties: IMapView_2__HSTRING__IInspectable read get_TransitProperties;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureClickEventArgs_Delegate_Base = interface(IUnknown)
  ['{3EC75AF0-1679-53FF-BB0C-376B8C441980}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlTransitFeatureClickEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureClickEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureClickEventArgs_Delegate_Base)
  ['{6D8E5FDE-97CF-5909-AFE3-3E2207D5974B}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkRightTappedEventArgs_Delegate_Base = interface(IUnknown)
  ['{E3634A54-05ED-5E39-9D8A-03857F0BA0E7}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlBusinessLandmarkRightTappedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkRightTappedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkRightTappedEventArgs_Delegate_Base)
  ['{7E41F1CD-767F-5D5E-BC0E-6D616F3DE73C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlTransitFeatureRightTappedEventArgs)]
  Maps_IMapControlTransitFeatureRightTappedEventArgs = interface(IInspectable)
  ['{AEA1CC49-A729-4EAE-A59A-3EC9A125A028}']
    function get_DisplayName: HSTRING; safecall;
    function get_Location: IGeopoint; safecall;
    function get_TransitProperties: IMapView_2__HSTRING__IInspectable; safecall;
    property DisplayName: HSTRING read get_DisplayName;
    property Location: IGeopoint read get_Location;
    property TransitProperties: IMapView_2__HSTRING__IInspectable read get_TransitProperties;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureRightTappedEventArgs_Delegate_Base = interface(IUnknown)
  ['{A18B47D7-6326-5FC1-8A40-88AF91BB0589}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlTransitFeatureRightTappedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureRightTappedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureRightTappedEventArgs_Delegate_Base)
  ['{65A1F00F-2C74-5140-B734-A4EB08A80C7E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlDataHelper)]
  Maps_IMapControlDataHelper = interface(IInspectable)
  ['{8BB0F09C-14AB-486C-9DE5-5A5DEF0205A2}']
    function add_BusinessLandmarkClick(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_BusinessLandmarkClick(token: EventRegistrationToken); safecall;
    function add_TransitFeatureClick(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_TransitFeatureClick(token: EventRegistrationToken); safecall;
    function add_BusinessLandmarkRightTapped(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkRightTappedEventArgs): EventRegistrationToken; safecall;
    procedure remove_BusinessLandmarkRightTapped(token: EventRegistrationToken); safecall;
    function add_TransitFeatureRightTapped(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeatureRightTappedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TransitFeatureRightTapped(token: EventRegistrationToken); safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs_Delegate_Base = interface(IUnknown)
  ['{FD7DABEA-0014-5A30-9A59-BD4126A2FFB7}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs_Delegate_Base)
  ['{4080143A-116E-51FF-AC43-64885B870878}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerEnteredEventArgs)]
  Maps_IMapControlTransitFeaturePointerEnteredEventArgs = interface(IInspectable)
  ['{73911A4E-EC4F-479E-94A1-36E081D0D897}']
    function get_DisplayName: HSTRING; safecall;
    function get_Location: IGeopoint; safecall;
    function get_TransitProperties: IMapView_2__HSTRING__IInspectable; safecall;
    property DisplayName: HSTRING read get_DisplayName;
    property Location: IGeopoint read get_Location;
    property TransitProperties: IMapView_2__HSTRING__IInspectable read get_TransitProperties;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerEnteredEventArgs_Delegate_Base = interface(IUnknown)
  ['{166EA60B-AB70-580C-BB70-2F79EE214CEA}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlTransitFeaturePointerEnteredEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerEnteredEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerEnteredEventArgs_Delegate_Base)
  ['{4323F176-CFBD-5B1B-9CC2-B31022C87EF8}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerExitedEventArgs_Delegate_Base = interface(IUnknown)
  ['{C4574B81-A192-5810-B0D9-CC99230FDCDC}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlBusinessLandmarkPointerExitedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerExitedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerExitedEventArgs_Delegate_Base)
  ['{E5557A05-B89A-5580-85A7-73CFC3340163}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerExitedEventArgs)]
  Maps_IMapControlTransitFeaturePointerExitedEventArgs = interface(IInspectable)
  ['{6A11258D-448D-44E7-BC69-D13D497154E9}']
    function get_DisplayName: HSTRING; safecall;
    function get_Location: IGeopoint; safecall;
    function get_TransitProperties: IMapView_2__HSTRING__IInspectable; safecall;
    property DisplayName: HSTRING read get_DisplayName;
    property Location: IGeopoint read get_Location;
    property TransitProperties: IMapView_2__HSTRING__IInspectable read get_TransitProperties;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerExitedEventArgs_Delegate_Base = interface(IUnknown)
  ['{7553FCF8-A4C2-5CC1-9A3C-F0B36B756068}']
    procedure Invoke(sender: Maps_IMapControl; args: Maps_IMapControlTransitFeaturePointerExitedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapControl,Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerExitedEventArgs = interface(TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerExitedEventArgs_Delegate_Base)
  ['{3E31D7B6-B34F-5515-8025-F8649FF05C21}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2
  Maps_IMapControlDataHelper2 = interface(IInspectable)
  ['{59CE429E-562F-4C21-A674-0F11DECF0FB3}']
    function add_BusinessLandmarkPointerEntered(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs): EventRegistrationToken; safecall;
    procedure remove_BusinessLandmarkPointerEntered(token: EventRegistrationToken); safecall;
    function add_TransitFeaturePointerEntered(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerEnteredEventArgs): EventRegistrationToken; safecall;
    procedure remove_TransitFeaturePointerEntered(token: EventRegistrationToken); safecall;
    function add_BusinessLandmarkPointerExited(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlBusinessLandmarkPointerExitedEventArgs): EventRegistrationToken; safecall;
    procedure remove_BusinessLandmarkPointerExited(token: EventRegistrationToken); safecall;
    function add_TransitFeaturePointerExited(value: TypedEventHandler_2__Maps_IMapControl__Maps_IMapControlTransitFeaturePointerExitedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TransitFeaturePointerExited(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlDataHelper)]
  Maps_IMapControlDataHelperFactory = interface(IInspectable)
  ['{3B70AA8E-02EF-469C-BBAF-DC2158D4289B}']
    function CreateInstance(map: Maps_IMapControl): Maps_IMapControlDataHelper; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControlDataHelper)]
  Maps_IMapControlDataHelperStatics = interface(IInspectable)
  ['{7A6632D6-E944-4110-83CF-314D0722E2E5}']
    function CreateMapControl(rasterRenderMode: Boolean): Maps_IMapControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControl)]
  Maps_IMapControlStatics = interface(IInspectable)
  ['{C2C61795-2147-4F0A-942A-5493A85DE807}']
    function get_CenterProperty: IDependencyProperty; safecall;
    function get_ChildrenProperty: IDependencyProperty; safecall;
    function get_ColorSchemeProperty: IDependencyProperty; safecall;
    function get_DesiredPitchProperty: IDependencyProperty; safecall;
    function get_HeadingProperty: IDependencyProperty; safecall;
    function get_LandmarksVisibleProperty: IDependencyProperty; safecall;
    function get_LoadingStatusProperty: IDependencyProperty; safecall;
    function get_MapServiceTokenProperty: IDependencyProperty; safecall;
    function get_PedestrianFeaturesVisibleProperty: IDependencyProperty; safecall;
    function get_PitchProperty: IDependencyProperty; safecall;
    function get_StyleProperty: IDependencyProperty; safecall;
    function get_TrafficFlowVisibleProperty: IDependencyProperty; safecall;
    function get_TransformOriginProperty: IDependencyProperty; safecall;
    function get_WatermarkModeProperty: IDependencyProperty; safecall;
    function get_ZoomLevelProperty: IDependencyProperty; safecall;
    function get_MapElementsProperty: IDependencyProperty; safecall;
    function get_RoutesProperty: IDependencyProperty; safecall;
    function get_TileSourcesProperty: IDependencyProperty; safecall;
    function get_LocationProperty: IDependencyProperty; safecall;
    function GetLocation(element: IDependencyObject): IGeopoint; safecall;
    procedure SetLocation(element: IDependencyObject; value: IGeopoint); safecall;
    function get_NormalizedAnchorPointProperty: IDependencyProperty; safecall;
    function GetNormalizedAnchorPoint(element: IDependencyObject): TPointF; safecall;
    procedure SetNormalizedAnchorPoint(element: IDependencyObject; value: TPointF); safecall;
    property CenterProperty: IDependencyProperty read get_CenterProperty;
    property ChildrenProperty: IDependencyProperty read get_ChildrenProperty;
    property ColorSchemeProperty: IDependencyProperty read get_ColorSchemeProperty;
    property DesiredPitchProperty: IDependencyProperty read get_DesiredPitchProperty;
    property HeadingProperty: IDependencyProperty read get_HeadingProperty;
    property LandmarksVisibleProperty: IDependencyProperty read get_LandmarksVisibleProperty;
    property LoadingStatusProperty: IDependencyProperty read get_LoadingStatusProperty;
    property LocationProperty: IDependencyProperty read get_LocationProperty;
    property MapElementsProperty: IDependencyProperty read get_MapElementsProperty;
    property MapServiceTokenProperty: IDependencyProperty read get_MapServiceTokenProperty;
    property NormalizedAnchorPointProperty: IDependencyProperty read get_NormalizedAnchorPointProperty;
    property PedestrianFeaturesVisibleProperty: IDependencyProperty read get_PedestrianFeaturesVisibleProperty;
    property PitchProperty: IDependencyProperty read get_PitchProperty;
    property RoutesProperty: IDependencyProperty read get_RoutesProperty;
    property StyleProperty: IDependencyProperty read get_StyleProperty;
    property TileSourcesProperty: IDependencyProperty read get_TileSourcesProperty;
    property TrafficFlowVisibleProperty: IDependencyProperty read get_TrafficFlowVisibleProperty;
    property TransformOriginProperty: IDependencyProperty read get_TransformOriginProperty;
    property WatermarkModeProperty: IDependencyProperty read get_WatermarkModeProperty;
    property ZoomLevelProperty: IDependencyProperty read get_ZoomLevelProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControl)]
  Maps_IMapControlStatics2 = interface(IInspectable)
  ['{04852B93-B446-4D31-9752-1EC69A5996AE}']
    function get_BusinessLandmarksVisibleProperty: IDependencyProperty; safecall;
    function get_TransitFeaturesVisibleProperty: IDependencyProperty; safecall;
    function get_PanInteractionModeProperty: IDependencyProperty; safecall;
    function get_RotateInteractionModeProperty: IDependencyProperty; safecall;
    function get_TiltInteractionModeProperty: IDependencyProperty; safecall;
    function get_ZoomInteractionModeProperty: IDependencyProperty; safecall;
    function get_Is3DSupportedProperty: IDependencyProperty; safecall;
    function get_IsStreetsideSupportedProperty: IDependencyProperty; safecall;
    function get_SceneProperty: IDependencyProperty; safecall;
    property BusinessLandmarksVisibleProperty: IDependencyProperty read get_BusinessLandmarksVisibleProperty;
    property Is3DSupportedProperty: IDependencyProperty read get_Is3DSupportedProperty;
    property IsStreetsideSupportedProperty: IDependencyProperty read get_IsStreetsideSupportedProperty;
    property PanInteractionModeProperty: IDependencyProperty read get_PanInteractionModeProperty;
    property RotateInteractionModeProperty: IDependencyProperty read get_RotateInteractionModeProperty;
    property SceneProperty: IDependencyProperty read get_SceneProperty;
    property TiltInteractionModeProperty: IDependencyProperty read get_TiltInteractionModeProperty;
    property TransitFeaturesVisibleProperty: IDependencyProperty read get_TransitFeaturesVisibleProperty;
    property ZoomInteractionModeProperty: IDependencyProperty read get_ZoomInteractionModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControl)]
  Maps_IMapControlStatics4 = interface(IInspectable)
  ['{FE785D97-5D13-4FA1-BF1D-84061768C183}']
    function get_BusinessLandmarksEnabledProperty: IDependencyProperty; safecall;
    function get_TransitFeaturesEnabledProperty: IDependencyProperty; safecall;
    property BusinessLandmarksEnabledProperty: IDependencyProperty read get_BusinessLandmarksEnabledProperty;
    property TransitFeaturesEnabledProperty: IDependencyProperty read get_TransitFeaturesEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControl)]
  Maps_IMapControlStatics5 = interface(IInspectable)
  ['{09626F00-B7DD-4189-A7F7-830C412DEEA3}']
    function get_MapProjectionProperty: IDependencyProperty; safecall;
    function get_StyleSheetProperty: IDependencyProperty; safecall;
    function get_ViewPaddingProperty: IDependencyProperty; safecall;
    property MapProjectionProperty: IDependencyProperty read get_MapProjectionProperty;
    property StyleSheetProperty: IDependencyProperty read get_StyleSheetProperty;
    property ViewPaddingProperty: IDependencyProperty read get_ViewPaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics6
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControl)]
  Maps_IMapControlStatics6 = interface(IInspectable)
  ['{3CCFDD7F-24D1-40A2-8351-B3063A8C95A4}']
    function get_LayersProperty: IDependencyProperty; safecall;
    property LayersProperty: IDependencyProperty read get_LayersProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics7
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControl)]
  Maps_IMapControlStatics7 = interface(IInspectable)
  ['{55F1AC4D-72C2-46B2-B7AE-790260BE641B}']
    function get_RegionProperty: IDependencyProperty; safecall;
    property RegionProperty: IDependencyProperty read get_RegionProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapControlStatics8
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapControl)]
  Maps_IMapControlStatics8 = interface(IInspectable)
  ['{ADB7A7B0-0605-592C-BF9D-D10BDC2BE47B}']
    function get_CanTiltDownProperty: IDependencyProperty; safecall;
    function get_CanTiltUpProperty: IDependencyProperty; safecall;
    function get_CanZoomInProperty: IDependencyProperty; safecall;
    function get_CanZoomOutProperty: IDependencyProperty; safecall;
    property CanTiltDownProperty: IDependencyProperty read get_CanTiltDownProperty;
    property CanTiltUpProperty: IDependencyProperty read get_CanTiltUpProperty;
    property CanZoomInProperty: IDependencyProperty read get_CanZoomInProperty;
    property CanZoomOutProperty: IDependencyProperty read get_CanZoomOutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapCustomExperience)]
  Maps_IMapCustomExperienceFactory = interface(IInspectable)
  ['{7A403FB5-A1B1-4E7F-921E-3E6B8D8EBED6}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapCustomExperience; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElement2
  Maps_IMapElement2 = interface(IInspectable)
  ['{6619F261-FBA6-4964-A7FF-F1AF63AB9CB0}']
    function get_MapTabIndex: Integer; safecall;
    procedure put_MapTabIndex(value: Integer); safecall;
    property MapTabIndex: Integer read get_MapTabIndex write put_MapTabIndex;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElement3
  Maps_IMapElement3 = interface(IInspectable)
  ['{13EFBC59-45ED-48B4-93AD-E3F78F8CF218}']
    function get_MapStyleSheetEntry: HSTRING; safecall;
    procedure put_MapStyleSheetEntry(value: HSTRING); safecall;
    function get_MapStyleSheetEntryState: HSTRING; safecall;
    procedure put_MapStyleSheetEntryState(value: HSTRING); safecall;
    function get_Tag: IInspectable; safecall;
    procedure put_Tag(value: IInspectable); safecall;
    property MapStyleSheetEntry: HSTRING read get_MapStyleSheetEntry write put_MapStyleSheetEntry;
    property MapStyleSheetEntryState: HSTRING read get_MapStyleSheetEntryState write put_MapStyleSheetEntryState;
    property Tag: IInspectable read get_Tag write put_Tag;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapModel3D
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapModel3D)]
  Maps_IMapModel3D = interface(IInspectable)
  ['{F8C541A1-CA27-4968-A2BF-9C20F06A0468}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElement3D
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElement3D)]
  Maps_IMapElement3D = interface(IInspectable)
  ['{827AF8D5-3843-48E2-BD00-0F0644FBE6A5}']
    function get_Location: IGeopoint; safecall;
    procedure put_Location(value: IGeopoint); safecall;
    function get_Model: Maps_IMapModel3D; safecall;
    procedure put_Model(value: Maps_IMapModel3D); safecall;
    function get_Heading: Double; safecall;
    procedure put_Heading(value: Double); safecall;
    function get_Pitch: Double; safecall;
    procedure put_Pitch(value: Double); safecall;
    function get_Roll: Double; safecall;
    procedure put_Roll(value: Double); safecall;
    function get_Scale: Numerics_Vector3; safecall;
    procedure put_Scale(value: Numerics_Vector3); safecall;
    property Heading: Double read get_Heading write put_Heading;
    property Location: IGeopoint read get_Location write put_Location;
    property Model: Maps_IMapModel3D read get_Model write put_Model;
    property Pitch: Double read get_Pitch write put_Pitch;
    property Roll: Double read get_Roll write put_Roll;
    property Scale: Numerics_Vector3 read get_Scale write put_Scale;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElement3D)]
  Maps_IMapElement3DStatics = interface(IInspectable)
  ['{6128011A-450F-442A-B9D9-AA815C71907A}']
    function get_LocationProperty: IDependencyProperty; safecall;
    function get_HeadingProperty: IDependencyProperty; safecall;
    function get_PitchProperty: IDependencyProperty; safecall;
    function get_RollProperty: IDependencyProperty; safecall;
    function get_ScaleProperty: IDependencyProperty; safecall;
    property HeadingProperty: IDependencyProperty read get_HeadingProperty;
    property LocationProperty: IDependencyProperty read get_LocationProperty;
    property PitchProperty: IDependencyProperty read get_PitchProperty;
    property RollProperty: IDependencyProperty read get_RollProperty;
    property ScaleProperty: IDependencyProperty read get_ScaleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElement4
  Maps_IMapElement4 = interface(IInspectable)
  ['{645883B6-1FC1-4CEB-93BD-DC2C960072E9}']
    function get_IsEnabled: Boolean; safecall;
    procedure put_IsEnabled(value: Boolean); safecall;
    property IsEnabled: Boolean read get_IsEnabled write put_IsEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElement)]
  Maps_IMapElementFactory = interface(IInspectable)
  ['{4A30D007-0BD6-47A5-860B-7E7CF5F0C573}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapElement; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElement)]
  Maps_IMapElementStatics = interface(IInspectable)
  ['{E8C71CF2-BFEF-4B49-8E99-41B5E3789FD2}']
    function get_ZIndexProperty: IDependencyProperty; safecall;
    function get_VisibleProperty: IDependencyProperty; safecall;
    property VisibleProperty: IDependencyProperty read get_VisibleProperty;
    property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElement)]
  Maps_IMapElementStatics2 = interface(IInspectable)
  ['{9BF72F30-80FE-4F30-BCC1-FA894050F676}']
    function get_MapTabIndexProperty: IDependencyProperty; safecall;
    property MapTabIndexProperty: IDependencyProperty read get_MapTabIndexProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElement)]
  Maps_IMapElementStatics3 = interface(IInspectable)
  ['{E11EE92F-9742-49AA-AAD8-2E466BFF3796}']
    function get_MapStyleSheetEntryProperty: IDependencyProperty; safecall;
    function get_MapStyleSheetEntryStateProperty: IDependencyProperty; safecall;
    function get_TagProperty: IDependencyProperty; safecall;
    property MapStyleSheetEntryProperty: IDependencyProperty read get_MapStyleSheetEntryProperty;
    property MapStyleSheetEntryStateProperty: IDependencyProperty read get_MapStyleSheetEntryStateProperty;
    property TagProperty: IDependencyProperty read get_TagProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementStatics4
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElement)]
  Maps_IMapElementStatics4 = interface(IInspectable)
  ['{A4296F0B-DFF8-467C-9315-6F6DB93EE2BA}']
    function get_IsEnabledProperty: IDependencyProperty; safecall;
    property IsEnabledProperty: IDependencyProperty read get_IsEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementsLayerClickEventArgs)]
  Maps_IMapElementsLayerClickEventArgs = interface(IInspectable)
  ['{2CA7CF66-AF1B-4C05-8C85-F74AE3D4677F}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElements: IVector_1__Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElements: IVector_1__Maps_IMapElement read get_MapElements;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerClickEventArgs_Delegate_Base = interface(IUnknown)
  ['{D3EE3FAA-6A6F-576A-9900-528E8EBA9286}']
    procedure Invoke(sender: Maps_IMapElementsLayer; args: Maps_IMapElementsLayerClickEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerClickEventArgs = interface(TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerClickEventArgs_Delegate_Base)
  ['{7D801626-6710-50DE-8C8B-BE8713D0446A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementsLayerPointerEnteredEventArgs)]
  Maps_IMapElementsLayerPointerEnteredEventArgs = interface(IInspectable)
  ['{757FC032-4694-4404-8C89-348B6B76C5E6}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElement: Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElement: Maps_IMapElement read get_MapElement;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerEnteredEventArgs_Delegate_Base = interface(IUnknown)
  ['{3622CF53-117C-5605-B142-FE47D874E26B}']
    procedure Invoke(sender: Maps_IMapElementsLayer; args: Maps_IMapElementsLayerPointerEnteredEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerEnteredEventArgs = interface(TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerEnteredEventArgs_Delegate_Base)
  ['{F263D4B2-8D40-5C97-88A7-0F89AA5C6837}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementsLayerPointerExitedEventArgs)]
  Maps_IMapElementsLayerPointerExitedEventArgs = interface(IInspectable)
  ['{92F3C6AD-03ED-4C39-AF20-2A07EE1CCEA6}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElement: Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElement: Maps_IMapElement read get_MapElement;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerExitedEventArgs_Delegate_Base = interface(IUnknown)
  ['{D54471D2-03DD-5698-A92F-5FAC8A5E7668}']
    procedure Invoke(sender: Maps_IMapElementsLayer; args: Maps_IMapElementsLayerPointerExitedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerExitedEventArgs = interface(TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerExitedEventArgs_Delegate_Base)
  ['{92D36D67-97B7-5BBD-86F8-5F5BF8FE414C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementsLayerContextRequestedEventArgs)]
  Maps_IMapElementsLayerContextRequestedEventArgs = interface(IInspectable)
  ['{DA45D0B3-7A0E-4758-808B-3A637627EB0D}']
    function get_Position: TPointF; safecall;
    function get_Location: IGeopoint; safecall;
    function get_MapElements: IVectorView_1__Maps_IMapElement; safecall;
    property Location: IGeopoint read get_Location;
    property MapElements: IVectorView_1__Maps_IMapElement read get_MapElements;
    property Position: TPointF read get_Position;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerContextRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{D4C7ECED-5053-5D3C-8CFA-FB19DBDE4A3A}']
    procedure Invoke(sender: Maps_IMapElementsLayer; args: Maps_IMapElementsLayerContextRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.IMapElementsLayer,Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs>
  TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerContextRequestedEventArgs = interface(TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerContextRequestedEventArgs_Delegate_Base)
  ['{2C2BCD97-D449-57E8-AAB0-969BF3583988}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayer
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementsLayer)]
  Maps_IMapElementsLayer = interface(IInspectable)
  ['{DE79689A-01EF-46F4-AC60-7C200B552610}']
    function get_MapElements: IVector_1__Maps_IMapElement; safecall;
    procedure put_MapElements(value: IVector_1__Maps_IMapElement); safecall;
    function add_MapElementClick(handler: TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapElementClick(token: EventRegistrationToken); safecall;
    function add_MapElementPointerEntered(handler: TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerEnteredEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapElementPointerEntered(token: EventRegistrationToken); safecall;
    function add_MapElementPointerExited(handler: TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerPointerExitedEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapElementPointerExited(token: EventRegistrationToken); safecall;
    function add_MapContextRequested(handler: TypedEventHandler_2__Maps_IMapElementsLayer__Maps_IMapElementsLayerContextRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_MapContextRequested(token: EventRegistrationToken); safecall;
    property MapElements: IVector_1__Maps_IMapElement read get_MapElements write put_MapElements;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapElementsLayer)]
  Maps_IMapElementsLayerStatics = interface(IInspectable)
  ['{34005727-F509-4D28-9180-911C03411D74}']
    function get_MapElementsProperty: IDependencyProperty; safecall;
    property MapElementsProperty: IDependencyProperty read get_MapElementsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapIcon
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapIcon)]
  Maps_IMapIcon = interface(IInspectable)
  ['{D2096872-23D9-4A2B-8BE0-69F3A85482AB}']
    function get_Location: IGeopoint; safecall;
    procedure put_Location(value: IGeopoint); safecall;
    function get_Title: HSTRING; safecall;
    procedure put_Title(value: HSTRING); safecall;
    function get_NormalizedAnchorPoint: TPointF; safecall;
    procedure put_NormalizedAnchorPoint(value: TPointF); safecall;
    function get_Image: IRandomAccessStreamReference; safecall;
    procedure put_Image(value: IRandomAccessStreamReference); safecall;
    property Image: IRandomAccessStreamReference read get_Image write put_Image;
    property Location: IGeopoint read get_Location write put_Location;
    property NormalizedAnchorPoint: TPointF read get_NormalizedAnchorPoint write put_NormalizedAnchorPoint;
    property Title: HSTRING read get_Title write put_Title;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapIcon2
  Maps_IMapIcon2 = interface(IInspectable)
  ['{611254B9-D8AA-4BBD-A316-BADF06911D63}']
    function get_CollisionBehaviorDesired: Maps_MapElementCollisionBehavior; safecall;
    procedure put_CollisionBehaviorDesired(value: Maps_MapElementCollisionBehavior); safecall;
    property CollisionBehaviorDesired: Maps_MapElementCollisionBehavior read get_CollisionBehaviorDesired write put_CollisionBehaviorDesired;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapIconStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapIcon)]
  Maps_IMapIconStatics = interface(IInspectable)
  ['{DCBC9E56-1190-4B5D-9E56-E5B6724AA328}']
    function get_LocationProperty: IDependencyProperty; safecall;
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_NormalizedAnchorPointProperty: IDependencyProperty; safecall;
    property LocationProperty: IDependencyProperty read get_LocationProperty;
    property NormalizedAnchorPointProperty: IDependencyProperty read get_NormalizedAnchorPointProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapIconStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapIcon)]
  Maps_IMapIconStatics2 = interface(IInspectable)
  ['{FF4C306A-CF76-46AB-A12F-B603B986C696}']
    function get_CollisionBehaviorDesiredProperty: IDependencyProperty; safecall;
    property CollisionBehaviorDesiredProperty: IDependencyProperty read get_CollisionBehaviorDesiredProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapItemsControl
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapItemsControl)]
  Maps_IMapItemsControl = interface(IInspectable)
  ['{94C2C4D3-B335-42C5-B660-E6A07EC3BDDC}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_Items: IVector_1__IDependencyObject; safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property Items: IVector_1__IDependencyObject read get_Items;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapItemsControl)]
  Maps_IMapItemsControlStatics = interface(IInspectable)
  ['{33A859C7-789B-425C-8A0A-32385896CB4A}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemsProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapLayerFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapLayer)]
  Maps_IMapLayerFactory = interface(IInspectable)
  ['{E02A2207-DEE3-47C8-9825-BD029C5752F7}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapLayer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapLayerStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapLayer)]
  Maps_IMapLayerStatics = interface(IInspectable)
  ['{9CA4A26B-5DB9-4F0C-BDD5-B1BFFDCCE946}']
    function get_MapTabIndexProperty: IDependencyProperty; safecall;
    function get_VisibleProperty: IDependencyProperty; safecall;
    function get_ZIndexProperty: IDependencyProperty; safecall;
    property MapTabIndexProperty: IDependencyProperty read get_MapTabIndexProperty;
    property VisibleProperty: IDependencyProperty read get_VisibleProperty;
    property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapModel3D)]
  Maps_IMapModel3DFactory = interface(IInspectable)
  ['{DF7F0BCC-580A-498B-939B-0119A9DADB9E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapModel3D; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.IMapModel3D>
  AsyncOperationCompletedHandler_1__Maps_IMapModel3D_Delegate_Base = interface(IUnknown)
  ['{60EF194B-DBE0-5911-B725-ECC5DE298782}']
    procedure Invoke(asyncInfo: IAsyncOperation_1__Maps_IMapModel3D; asyncStatus: AsyncStatus); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.IMapModel3D>
  AsyncOperationCompletedHandler_1__Maps_IMapModel3D = interface(AsyncOperationCompletedHandler_1__Maps_IMapModel3D_Delegate_Base)
  ['{0E46A210-B919-5438-B718-AE2146CFDE06}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.IMapModel3D>
  IAsyncOperation_1__Maps_IMapModel3D_Base = interface(IInspectable)
  ['{0CF0240F-7F78-535B-850C-FE6231759064}']
    procedure put_Completed(handler: AsyncOperationCompletedHandler_1__Maps_IMapModel3D); safecall;
    function get_Completed: AsyncOperationCompletedHandler_1__Maps_IMapModel3D; safecall;
    function GetResults: Maps_IMapModel3D; safecall;
    property Completed: AsyncOperationCompletedHandler_1__Maps_IMapModel3D read get_Completed write put_Completed;
  end;
  // UsedAPI Interface
  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.IMapModel3D>
  IAsyncOperation_1__Maps_IMapModel3D = interface(IAsyncOperation_1__Maps_IMapModel3D_Base)
  ['{5394EDB6-02EA-570F-93C0-7200E0AAF6B4}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapModel3D)]
  Maps_IMapModel3DStatics = interface(IInspectable)
  ['{4834A480-8E56-4B0F-872D-7EAD103187CD}']
    function CreateFrom3MFAsync(source: IRandomAccessStreamReference): IAsyncOperation_1__Maps_IMapModel3D; overload; safecall;
    function CreateFrom3MFAsync(source: IRandomAccessStreamReference; shadingOption: Maps_MapModel3DShadingOption): IAsyncOperation_1__Maps_IMapModel3D; overload; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapPolygon
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapPolygon)]
  Maps_IMapPolygon = interface(IInspectable)
  ['{ABDA2285-4926-4C3A-A5F9-19DF7F69DB3D}']
    function get_Path: IGeopath; safecall;
    procedure put_Path(value: IGeopath); safecall;
    function get_StrokeColor: Color; safecall;
    procedure put_StrokeColor(value: Color); safecall;
    function get_StrokeThickness: Double; safecall;
    procedure put_StrokeThickness(value: Double); safecall;
    function get_StrokeDashed: Boolean; safecall;
    procedure put_StrokeDashed(value: Boolean); safecall;
    function get_FillColor: Color; safecall;
    procedure put_FillColor(value: Color); safecall;
    property FillColor: Color read get_FillColor write put_FillColor;
    property Path: IGeopath read get_Path write put_Path;
    property StrokeColor: Color read get_StrokeColor write put_StrokeColor;
    property StrokeDashed: Boolean read get_StrokeDashed write put_StrokeDashed;
    property StrokeThickness: Double read get_StrokeThickness write put_StrokeThickness;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapPolygon2
  Maps_IMapPolygon2 = interface(IInspectable)
  ['{96C8A11E-636B-4018-9C2E-ACC9122A01B2}']
    function get_Paths: IVector_1__IGeopath; safecall;
    property Paths: IVector_1__IGeopath read get_Paths;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapPolygon)]
  Maps_IMapPolygonStatics = interface(IInspectable)
  ['{37F573BE-097B-424C-87CC-2EE042FDA6D2}']
    function get_PathProperty: IDependencyProperty; safecall;
    function get_StrokeThicknessProperty: IDependencyProperty; safecall;
    function get_StrokeDashedProperty: IDependencyProperty; safecall;
    property PathProperty: IDependencyProperty read get_PathProperty;
    property StrokeDashedProperty: IDependencyProperty read get_StrokeDashedProperty;
    property StrokeThicknessProperty: IDependencyProperty read get_StrokeThicknessProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapPolyline
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapPolyline)]
  Maps_IMapPolyline = interface(IInspectable)
  ['{FBAD24A2-24DF-4A86-8FFA-0F8F4D9EC17D}']
    function get_Path: IGeopath; safecall;
    procedure put_Path(value: IGeopath); safecall;
    function get_StrokeColor: Color; safecall;
    procedure put_StrokeColor(value: Color); safecall;
    function get_StrokeThickness: Double; safecall;
    procedure put_StrokeThickness(value: Double); safecall;
    function get_StrokeDashed: Boolean; safecall;
    procedure put_StrokeDashed(value: Boolean); safecall;
    property Path: IGeopath read get_Path write put_Path;
    property StrokeColor: Color read get_StrokeColor write put_StrokeColor;
    property StrokeDashed: Boolean read get_StrokeDashed write put_StrokeDashed;
    property StrokeThickness: Double read get_StrokeThickness write put_StrokeThickness;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapPolyline)]
  Maps_IMapPolylineStatics = interface(IInspectable)
  ['{61FDE44B-1DDF-4303-B809-EC87F58AD065}']
    function get_PathProperty: IDependencyProperty; safecall;
    function get_StrokeDashedProperty: IDependencyProperty; safecall;
    property PathProperty: IDependencyProperty read get_PathProperty;
    property StrokeDashedProperty: IDependencyProperty read get_StrokeDashedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapRouteView)]
  Maps_IMapRouteViewFactory = interface(IInspectable)
  ['{F083ADDF-0066-4628-82FE-EA78C23CEC1E}']
    function CreateInstanceWithMapRoute(route: Maps_IMapRoute; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapRouteView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapSceneStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapScene)]
  Maps_IMapSceneStatics = interface(IInspectable)
  ['{03E4AD6C-86EC-44D9-9597-FB75B7DEBA0A}']
    function CreateFromBoundingBox(bounds: IGeoboundingBox): Maps_IMapScene; overload; safecall;
    function CreateFromBoundingBox(bounds: IGeoboundingBox; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; safecall;
    function CreateFromCamera(camera: Maps_IMapCamera): Maps_IMapScene; safecall;
    function CreateFromLocation(location: IGeopoint): Maps_IMapScene; overload; safecall;
    function CreateFromLocation(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; safecall;
    function CreateFromLocationAndRadius(location: IGeopoint; radiusInMeters: Double): Maps_IMapScene; overload; safecall;
    function CreateFromLocationAndRadius(location: IGeopoint; radiusInMeters: Double; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; safecall;
    function CreateFromLocations(locations: IIterable_1__IGeopoint): Maps_IMapScene; overload; safecall;
    function CreateFromLocations(locations: IIterable_1__IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapStyleSheetEntries)]
  Maps_IMapStyleSheetEntriesStatics = interface(IInspectable)
  ['{C9636345-EF1A-41A4-A757-BD4F43E1E4D1}']
    function get_Area: HSTRING; safecall;
    function get_Airport: HSTRING; safecall;
    function get_Cemetery: HSTRING; safecall;
    function get_Continent: HSTRING; safecall;
    function get_Education: HSTRING; safecall;
    function get_IndigenousPeoplesReserve: HSTRING; safecall;
    function get_Island: HSTRING; safecall;
    function get_Medical: HSTRING; safecall;
    function get_Military: HSTRING; safecall;
    function get_Nautical: HSTRING; safecall;
    function get_Neighborhood: HSTRING; safecall;
    function get_Runway: HSTRING; safecall;
    function get_Sand: HSTRING; safecall;
    function get_ShoppingCenter: HSTRING; safecall;
    function get_Stadium: HSTRING; safecall;
    function get_Vegetation: HSTRING; safecall;
    function get_Forest: HSTRING; safecall;
    function get_GolfCourse: HSTRING; safecall;
    function get_Park: HSTRING; safecall;
    function get_PlayingField: HSTRING; safecall;
    function get_Reserve: HSTRING; safecall;
    function get_Point: HSTRING; safecall;
    function get_NaturalPoint: HSTRING; safecall;
    function get_Peak: HSTRING; safecall;
    function get_VolcanicPeak: HSTRING; safecall;
    function get_WaterPoint: HSTRING; safecall;
    function get_PointOfInterest: HSTRING; safecall;
    function get_Business: HSTRING; safecall;
    function get_FoodPoint: HSTRING; safecall;
    function get_PopulatedPlace: HSTRING; safecall;
    function get_Capital: HSTRING; safecall;
    function get_AdminDistrictCapital: HSTRING; safecall;
    function get_CountryRegionCapital: HSTRING; safecall;
    function get_RoadShield: HSTRING; safecall;
    function get_RoadExit: HSTRING; safecall;
    function get_Transit: HSTRING; safecall;
    function get_Political: HSTRING; safecall;
    function get_CountryRegion: HSTRING; safecall;
    function get_AdminDistrict: HSTRING; safecall;
    function get_District: HSTRING; safecall;
    function get_Structure: HSTRING; safecall;
    function get_Building: HSTRING; safecall;
    function get_EducationBuilding: HSTRING; safecall;
    function get_MedicalBuilding: HSTRING; safecall;
    function get_TransitBuilding: HSTRING; safecall;
    function get_Transportation: HSTRING; safecall;
    function get_Road: HSTRING; safecall;
    function get_ControlledAccessHighway: HSTRING; safecall;
    function get_HighSpeedRamp: HSTRING; safecall;
    function get_Highway: HSTRING; safecall;
    function get_MajorRoad: HSTRING; safecall;
    function get_ArterialRoad: HSTRING; safecall;
    function get_Street: HSTRING; safecall;
    function get_Ramp: HSTRING; safecall;
    function get_UnpavedStreet: HSTRING; safecall;
    function get_TollRoad: HSTRING; safecall;
    function get_Railway: HSTRING; safecall;
    function get_Trail: HSTRING; safecall;
    function get_WaterRoute: HSTRING; safecall;
    function get_Water: HSTRING; safecall;
    function get_River: HSTRING; safecall;
    function get_RouteLine: HSTRING; safecall;
    function get_WalkingRoute: HSTRING; safecall;
    function get_DrivingRoute: HSTRING; safecall;
    property AdminDistrict: HSTRING read get_AdminDistrict;
    property AdminDistrictCapital: HSTRING read get_AdminDistrictCapital;
    property Airport: HSTRING read get_Airport;
    property Area: HSTRING read get_Area;
    property ArterialRoad: HSTRING read get_ArterialRoad;
    property Building: HSTRING read get_Building;
    property Business: HSTRING read get_Business;
    property Capital: HSTRING read get_Capital;
    property Cemetery: HSTRING read get_Cemetery;
    property Continent: HSTRING read get_Continent;
    property ControlledAccessHighway: HSTRING read get_ControlledAccessHighway;
    property CountryRegion: HSTRING read get_CountryRegion;
    property CountryRegionCapital: HSTRING read get_CountryRegionCapital;
    property District: HSTRING read get_District;
    property DrivingRoute: HSTRING read get_DrivingRoute;
    property Education: HSTRING read get_Education;
    property EducationBuilding: HSTRING read get_EducationBuilding;
    property FoodPoint: HSTRING read get_FoodPoint;
    property Forest: HSTRING read get_Forest;
    property GolfCourse: HSTRING read get_GolfCourse;
    property HighSpeedRamp: HSTRING read get_HighSpeedRamp;
    property Highway: HSTRING read get_Highway;
    property IndigenousPeoplesReserve: HSTRING read get_IndigenousPeoplesReserve;
    property Island: HSTRING read get_Island;
    property MajorRoad: HSTRING read get_MajorRoad;
    property Medical: HSTRING read get_Medical;
    property MedicalBuilding: HSTRING read get_MedicalBuilding;
    property Military: HSTRING read get_Military;
    property NaturalPoint: HSTRING read get_NaturalPoint;
    property Nautical: HSTRING read get_Nautical;
    property Neighborhood: HSTRING read get_Neighborhood;
    property Park: HSTRING read get_Park;
    property Peak: HSTRING read get_Peak;
    property PlayingField: HSTRING read get_PlayingField;
    property Point: HSTRING read get_Point;
    property PointOfInterest: HSTRING read get_PointOfInterest;
    property Political: HSTRING read get_Political;
    property PopulatedPlace: HSTRING read get_PopulatedPlace;
    property Railway: HSTRING read get_Railway;
    property Ramp: HSTRING read get_Ramp;
    property Reserve: HSTRING read get_Reserve;
    property River: HSTRING read get_River;
    property Road: HSTRING read get_Road;
    property RoadExit: HSTRING read get_RoadExit;
    property RoadShield: HSTRING read get_RoadShield;
    property RouteLine: HSTRING read get_RouteLine;
    property Runway: HSTRING read get_Runway;
    property Sand: HSTRING read get_Sand;
    property ShoppingCenter: HSTRING read get_ShoppingCenter;
    property Stadium: HSTRING read get_Stadium;
    property Street: HSTRING read get_Street;
    property Structure: HSTRING read get_Structure;
    property TollRoad: HSTRING read get_TollRoad;
    property Trail: HSTRING read get_Trail;
    property Transit: HSTRING read get_Transit;
    property TransitBuilding: HSTRING read get_TransitBuilding;
    property Transportation: HSTRING read get_Transportation;
    property UnpavedStreet: HSTRING read get_UnpavedStreet;
    property Vegetation: HSTRING read get_Vegetation;
    property VolcanicPeak: HSTRING read get_VolcanicPeak;
    property WalkingRoute: HSTRING read get_WalkingRoute;
    property Water: HSTRING read get_Water;
    property WaterPoint: HSTRING read get_WaterPoint;
    property WaterRoute: HSTRING read get_WaterRoute;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapStyleSheetEntryStates)]
  Maps_IMapStyleSheetEntryStatesStatics = interface(IInspectable)
  ['{23AC5532-866D-4BFA-B481-39BEA1DE3506}']
    function get_Disabled: HSTRING; safecall;
    function get_Hover: HSTRING; safecall;
    function get_Selected: HSTRING; safecall;
    property Disabled: HSTRING read get_Disabled;
    property Hover: HSTRING read get_Hover;
    property Selected: HSTRING read get_Selected;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapStyleSheet>
  IIterator_1__Maps_IMapStyleSheet_Base = interface(IInspectable)
  ['{E6C727E5-6A18-5333-AA6A-266E8C8BDD51}']
    function get_Current: Maps_IMapStyleSheet; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PMaps_IMapStyleSheet): Cardinal; safecall;
    property Current: Maps_IMapStyleSheet read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.IMapStyleSheet>
  IIterator_1__Maps_IMapStyleSheet = interface(IIterator_1__Maps_IMapStyleSheet_Base)
  ['{7D255A70-5F25-5662-959B-1A8635DF7938}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapStyleSheet>
  IIterable_1__Maps_IMapStyleSheet_Base = interface(IInspectable)
  ['{05483D88-841C-5A0E-B9C7-5D828D9F2AFF}']
    function First: IIterator_1__Maps_IMapStyleSheet; safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.IMapStyleSheet>
  IIterable_1__Maps_IMapStyleSheet = interface(IIterable_1__Maps_IMapStyleSheet_Base)
  ['{E1EBCB73-25D6-5281-BA9E-E08B0A347071}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapStyleSheet)]
  Maps_IMapStyleSheetStatics = interface(IInspectable)
  ['{ABBD00AD-0A1C-4335-82F4-61D936AA197D}']
    function Aerial: Maps_IMapStyleSheet; safecall;
    function AerialWithOverlay: Maps_IMapStyleSheet; safecall;
    function RoadLight: Maps_IMapStyleSheet; safecall;
    function RoadDark: Maps_IMapStyleSheet; safecall;
    function RoadHighContrastLight: Maps_IMapStyleSheet; safecall;
    function RoadHighContrastDark: Maps_IMapStyleSheet; safecall;
    function Combine(styleSheets: IIterable_1__Maps_IMapStyleSheet): Maps_IMapStyleSheet; safecall;
    function ParseFromJson(styleAsJson: HSTRING): Maps_IMapStyleSheet; safecall;
    function TryParseFromJson(styleAsJson: HSTRING; out styleSheet: Maps_IMapStyleSheet): Boolean; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2
  Maps_IMapTargetCameraChangedEventArgs2 = interface(IInspectable)
  ['{97C0B332-F2B6-460B-8D91-AC020A2383DD}']
    function get_ChangeReason: Maps_MapCameraChangeReason; safecall;
    property ChangeReason: Maps_MapCameraChangeReason read get_ChangeReason;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2
  Maps_IMapTileBitmapRequestedEventArgs2 = interface(IInspectable)
  ['{0261D114-246A-5296-BC85-590F53AA39C8}']
    function get_FrameIndex: Integer; safecall;
    property FrameIndex: Integer read get_FrameIndex;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileDataSource)]
  Maps_IMapTileDataSourceFactory = interface(IInspectable)
  ['{A3920FBD-E446-4648-A74D-FD2C5D557C06}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileDataSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileSource2
  Maps_IMapTileSource2 = interface(IInspectable)
  ['{8E65EBBD-4095-5C15-99F1-1260B4E8B0A9}']
    function get_AnimationState: Maps_MapTileAnimationState; safecall;
    function get_AutoPlay: Boolean; safecall;
    procedure put_AutoPlay(value: Boolean); safecall;
    function get_FrameCount: Integer; safecall;
    procedure put_FrameCount(value: Integer); safecall;
    function get_FrameDuration: TimeSpan; safecall;
    procedure put_FrameDuration(value: TimeSpan); safecall;
    procedure Pause; safecall;
    procedure Play; safecall;
    procedure Stop; safecall;
    property AnimationState: Maps_MapTileAnimationState read get_AnimationState;
    property AutoPlay: Boolean read get_AutoPlay write put_AutoPlay;
    property FrameCount: Integer read get_FrameCount write put_FrameCount;
    property FrameDuration: TimeSpan read get_FrameDuration write put_FrameDuration;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileSource)]
  Maps_IMapTileSourceFactory = interface(IInspectable)
  ['{CD7F811F-77FA-482B-9D34-71D31D465C48}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; safecall;
    function CreateInstanceWithDataSource(dataSource: Maps_IMapTileDataSource; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; safecall;
    function CreateInstanceWithDataSourceAndZoomRange(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; safecall;
    function CreateInstanceWithDataSourceZoomRangeAndBounds(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; bounds: IGeoboundingBox; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; safecall;
    function CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; bounds: IGeoboundingBox; tileSizeInPixels: Integer; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileSource)]
  Maps_IMapTileSourceStatics = interface(IInspectable)
  ['{93FCC93C-7035-4603-99B1-E659921B6093}']
    function get_DataSourceProperty: IDependencyProperty; safecall;
    function get_LayerProperty: IDependencyProperty; safecall;
    function get_ZoomLevelRangeProperty: IDependencyProperty; safecall;
    function get_BoundsProperty: IDependencyProperty; safecall;
    function get_AllowOverstretchProperty: IDependencyProperty; safecall;
    function get_IsFadingEnabledProperty: IDependencyProperty; safecall;
    function get_IsTransparencyEnabledProperty: IDependencyProperty; safecall;
    function get_IsRetryEnabledProperty: IDependencyProperty; safecall;
    function get_ZIndexProperty: IDependencyProperty; safecall;
    function get_TilePixelSizeProperty: IDependencyProperty; safecall;
    function get_VisibleProperty: IDependencyProperty; safecall;
    property AllowOverstretchProperty: IDependencyProperty read get_AllowOverstretchProperty;
    property BoundsProperty: IDependencyProperty read get_BoundsProperty;
    property DataSourceProperty: IDependencyProperty read get_DataSourceProperty;
    property IsFadingEnabledProperty: IDependencyProperty read get_IsFadingEnabledProperty;
    property IsRetryEnabledProperty: IDependencyProperty read get_IsRetryEnabledProperty;
    property IsTransparencyEnabledProperty: IDependencyProperty read get_IsTransparencyEnabledProperty;
    property LayerProperty: IDependencyProperty read get_LayerProperty;
    property TilePixelSizeProperty: IDependencyProperty read get_TilePixelSizeProperty;
    property VisibleProperty: IDependencyProperty read get_VisibleProperty;
    property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;
    property ZoomLevelRangeProperty: IDependencyProperty read get_ZoomLevelRangeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_MapTileSource)]
  Maps_IMapTileSourceStatics2 = interface(IInspectable)
  ['{75CDD47E-669C-50FD-AD85-5EA5174CF59B}']
    function get_AnimationStateProperty: IDependencyProperty; safecall;
    function get_AutoPlayProperty: IDependencyProperty; safecall;
    function get_FrameCountProperty: IDependencyProperty; safecall;
    function get_FrameDurationProperty: IDependencyProperty; safecall;
    property AnimationStateProperty: IDependencyProperty read get_AnimationStateProperty;
    property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    property FrameCountProperty: IDependencyProperty read get_FrameCountProperty;
    property FrameDurationProperty: IDependencyProperty read get_FrameDurationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2
  Maps_IMapTileUriRequestedEventArgs2 = interface(IInspectable)
  ['{2302185D-33B5-5A55-92F5-74A86A22EFA6}']
    function get_FrameIndex: Integer; safecall;
    property FrameIndex: Integer read get_FrameIndex;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IStreetsideExperience
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_StreetsideExperience)]
  Maps_IStreetsideExperience = interface(IInspectable)
  ['{A558AEC9-E30C-46C8-8116-484691675558}']
    function get_AddressTextVisible: Boolean; safecall;
    procedure put_AddressTextVisible(value: Boolean); safecall;
    function get_CursorVisible: Boolean; safecall;
    procedure put_CursorVisible(value: Boolean); safecall;
    function get_OverviewMapVisible: Boolean; safecall;
    procedure put_OverviewMapVisible(value: Boolean); safecall;
    function get_StreetLabelsVisible: Boolean; safecall;
    procedure put_StreetLabelsVisible(value: Boolean); safecall;
    function get_ExitButtonVisible: Boolean; safecall;
    procedure put_ExitButtonVisible(value: Boolean); safecall;
    function get_ZoomButtonsVisible: Boolean; safecall;
    procedure put_ZoomButtonsVisible(value: Boolean); safecall;
    property AddressTextVisible: Boolean read get_AddressTextVisible write put_AddressTextVisible;
    property CursorVisible: Boolean read get_CursorVisible write put_CursorVisible;
    property ExitButtonVisible: Boolean read get_ExitButtonVisible write put_ExitButtonVisible;
    property OverviewMapVisible: Boolean read get_OverviewMapVisible write put_OverviewMapVisible;
    property StreetLabelsVisible: Boolean read get_StreetLabelsVisible write put_StreetLabelsVisible;
    property ZoomButtonsVisible: Boolean read get_ZoomButtonsVisible write put_ZoomButtonsVisible;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_StreetsidePanorama)]
  Maps_IStreetsidePanorama = interface(IInspectable)
  ['{6FE00FD8-AD60-4664-B539-B1069F16C5AF}']
    function get_Location: IGeopoint; safecall;
    property Location: IGeopoint read get_Location;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_StreetsideExperience)]
  Maps_IStreetsideExperienceFactory = interface(IInspectable)
  ['{7A5BCF3C-649E-4342-9995-68A6CF5961A7}']
    function CreateInstanceWithPanorama(panorama: Maps_IStreetsidePanorama): Maps_IStreetsideExperience; safecall;
    function CreateInstanceWithPanoramaHeadingPitchAndFieldOfView(panorama: Maps_IStreetsidePanorama; headingInDegrees: Double; pitchInDegrees: Double; fieldOfViewInDegrees: Double): Maps_IStreetsideExperience; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama>
  AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama_Delegate_Base = interface(IUnknown)
  ['{F6F3B17C-4527-5528-86AA-1CF1FB78A5EB}']
    procedure Invoke(asyncInfo: IAsyncOperation_1__Maps_IStreetsidePanorama; asyncStatus: AsyncStatus); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama>
  AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama = interface(AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama_Delegate_Base)
  ['{DD8132B0-21CE-503D-821E-39995FACEDB4}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama>
  IAsyncOperation_1__Maps_IStreetsidePanorama_Base = interface(IInspectable)
  ['{6AD8EA47-6670-51D8-A1DB-33FE75491F0C}']
    procedure put_Completed(handler: AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama); safecall;
    function get_Completed: AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama; safecall;
    function GetResults: Maps_IStreetsidePanorama; safecall;
    property Completed: AsyncOperationCompletedHandler_1__Maps_IStreetsidePanorama read get_Completed write put_Completed;
  end;
  // UsedAPI Interface
  // Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama>
  IAsyncOperation_1__Maps_IStreetsidePanorama = interface(IAsyncOperation_1__Maps_IStreetsidePanorama_Base)
  ['{B1017BB3-4784-58EF-AFEF-2EABD848DC3F}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Maps_StreetsidePanorama)]
  Maps_IStreetsidePanoramaStatics = interface(IInspectable)
  ['{D3B47F69-54B3-4EC5-B2A0-4F8204576507}']
    function FindNearbyAsync(location: IGeopoint): IAsyncOperation_1__Maps_IStreetsidePanorama; overload; safecall;
    function FindNearbyAsync(location: IGeopoint; radiusInMeters: Double): IAsyncOperation_1__Maps_IStreetsidePanorama; overload; safecall;
  end;

  // Windows.UI.Xaml.Controls.Primitives.IAppBarTemplateSettings2
  Primitives_IAppBarTemplateSettings2 = interface(IInspectable)
  ['{CBE66259-0399-5BCC-B925-4D5F5C9A4568}']
    function get_NegativeCompactVerticalDelta: Double; safecall;
    function get_NegativeMinimalVerticalDelta: Double; safecall;
    function get_NegativeHiddenVerticalDelta: Double; safecall;
    property NegativeCompactVerticalDelta: Double read get_NegativeCompactVerticalDelta;
    property NegativeHiddenVerticalDelta: Double read get_NegativeHiddenVerticalDelta;
    property NegativeMinimalVerticalDelta: Double read get_NegativeMinimalVerticalDelta;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IButtonBaseFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ButtonBase)]
  Primitives_IButtonBaseFactory = interface(IInspectable)
  ['{389B7C71-5220-42B2-9992-2690C1A6702F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IButtonBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IButtonBaseStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ButtonBase)]
  Primitives_IButtonBaseStatics = interface(IInspectable)
  ['{67EF17E1-FE37-474F-9E97-3B5E0B30F2DF}']
    function get_ClickModeProperty: IDependencyProperty; safecall;
    function get_IsPointerOverProperty: IDependencyProperty; safecall;
    function get_IsPressedProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    property ClickModeProperty: IDependencyProperty read get_ClickModeProperty;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property IsPointerOverProperty: IDependencyProperty read get_IsPointerOverProperty;
    property IsPressedProperty: IDependencyProperty read get_IsPressedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICalendarPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_CalendarPanel)]
  Primitives_ICalendarPanel = interface(IInspectable)
  ['{FCD55A2D-02D3-4EE6-9A90-9DF3EAD00994}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICarouselPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_CarouselPanel)]
  Primitives_ICarouselPanel = interface(IInspectable)
  ['{DEAB78B2-373B-4151-8785-E544D0D9362B}']
    function get_CanVerticallyScroll: Boolean; safecall;
    procedure put_CanVerticallyScroll(value: Boolean); safecall;
    function get_CanHorizontallyScroll: Boolean; safecall;
    procedure put_CanHorizontallyScroll(value: Boolean); safecall;
    function get_ExtentWidth: Double; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ScrollOwner: IInspectable; safecall;
    procedure put_ScrollOwner(value: IInspectable); safecall;
    procedure LineUp; safecall;
    procedure LineDown; safecall;
    procedure LineLeft; safecall;
    procedure LineRight; safecall;
    procedure PageUp; safecall;
    procedure PageDown; safecall;
    procedure PageLeft; safecall;
    procedure PageRight; safecall;
    procedure MouseWheelUp; safecall;
    procedure MouseWheelDown; safecall;
    procedure MouseWheelLeft; safecall;
    procedure MouseWheelRight; safecall;
    procedure SetHorizontalOffset(offset: Double); safecall;
    procedure SetVerticalOffset(offset: Double); safecall;
    function MakeVisible(visual: IUIElement; rectangle: TRectF): TRectF; safecall;
    property CanHorizontallyScroll: Boolean read get_CanHorizontallyScroll write put_CanHorizontallyScroll;
    property CanVerticallyScroll: Boolean read get_CanVerticallyScroll write put_CanVerticallyScroll;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property ScrollOwner: IInspectable read get_ScrollOwner write put_ScrollOwner;
    property VerticalOffset: Double read get_VerticalOffset;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICarouselPanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_CarouselPanel)]
  Primitives_ICarouselPanelFactory = interface(IInspectable)
  ['{C1109404-9AE1-440E-A0DD-BBB6E2293CBE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICarouselPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ColorPickerSlider)]
  Primitives_IColorPickerSliderFactory = interface(IInspectable)
  ['{06D879A2-8C07-4B1E-A940-9FBCE8F49639}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorPickerSlider; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ColorPickerSlider)]
  Primitives_IColorPickerSliderStatics = interface(IInspectable)
  ['{22EAFC6A-9FE3-4EEE-8734-A1398EC4413A}']
    function get_ColorChannelProperty: IDependencyProperty; safecall;
    property ColorChannelProperty: IDependencyProperty read get_ColorChannelProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IColorSpectrumFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ColorSpectrum)]
  Primitives_IColorSpectrumFactory = interface(IInspectable)
  ['{90C7E61E-904D-42AB-B44F-E68DBF0CDEE9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorSpectrum; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IColorSpectrumStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ColorSpectrum)]
  Primitives_IColorSpectrumStatics = interface(IInspectable)
  ['{906BEE7C-2CEE-4E90-968B-F0A5BD691B4A}']
    function get_ColorProperty: IDependencyProperty; safecall;
    function get_HsvColorProperty: IDependencyProperty; safecall;
    function get_MinHueProperty: IDependencyProperty; safecall;
    function get_MaxHueProperty: IDependencyProperty; safecall;
    function get_MinSaturationProperty: IDependencyProperty; safecall;
    function get_MaxSaturationProperty: IDependencyProperty; safecall;
    function get_MinValueProperty: IDependencyProperty; safecall;
    function get_MaxValueProperty: IDependencyProperty; safecall;
    function get_ShapeProperty: IDependencyProperty; safecall;
    function get_ComponentsProperty: IDependencyProperty; safecall;
    property ColorProperty: IDependencyProperty read get_ColorProperty;
    property ComponentsProperty: IDependencyProperty read get_ComponentsProperty;
    property HsvColorProperty: IDependencyProperty read get_HsvColorProperty;
    property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    property ShapeProperty: IDependencyProperty read get_ShapeProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.IComboBoxTemplateSettings2
  Primitives_IComboBoxTemplateSettings2 = interface(IInspectable)
  ['{00E90CD7-68BE-449D-B5A7-76E26F703E9B}']
    function get_DropDownContentMinWidth: Double; safecall;
    property DropDownContentMinWidth: Double read get_DropDownContentMinWidth;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings
  Primitives_ICommandBarFlyoutCommandBarTemplateSettings = interface(IInspectable)
  ['{47642C44-26FF-5D14-9CFC-77DC64F3A447}']
    function get_OpenAnimationStartPosition: Double; safecall;
    function get_OpenAnimationEndPosition: Double; safecall;
    function get_CloseAnimationEndPosition: Double; safecall;
    function get_CurrentWidth: Double; safecall;
    function get_ExpandedWidth: Double; safecall;
    function get_WidthExpansionDelta: Double; safecall;
    function get_WidthExpansionAnimationStartPosition: Double; safecall;
    function get_WidthExpansionAnimationEndPosition: Double; safecall;
    function get_WidthExpansionMoreButtonAnimationStartPosition: Double; safecall;
    function get_WidthExpansionMoreButtonAnimationEndPosition: Double; safecall;
    function get_ExpandUpOverflowVerticalPosition: Double; safecall;
    function get_ExpandDownOverflowVerticalPosition: Double; safecall;
    function get_ExpandUpAnimationStartPosition: Double; safecall;
    function get_ExpandUpAnimationEndPosition: Double; safecall;
    function get_ExpandUpAnimationHoldPosition: Double; safecall;
    function get_ExpandDownAnimationStartPosition: Double; safecall;
    function get_ExpandDownAnimationEndPosition: Double; safecall;
    function get_ExpandDownAnimationHoldPosition: Double; safecall;
    function get_ContentClipRect: TRectF; safecall;
    function get_OverflowContentClipRect: TRectF; safecall;
    property CloseAnimationEndPosition: Double read get_CloseAnimationEndPosition;
    property ContentClipRect: TRectF read get_ContentClipRect;
    property CurrentWidth: Double read get_CurrentWidth;
    property ExpandDownAnimationEndPosition: Double read get_ExpandDownAnimationEndPosition;
    property ExpandDownAnimationHoldPosition: Double read get_ExpandDownAnimationHoldPosition;
    property ExpandDownAnimationStartPosition: Double read get_ExpandDownAnimationStartPosition;
    property ExpandDownOverflowVerticalPosition: Double read get_ExpandDownOverflowVerticalPosition;
    property ExpandUpAnimationEndPosition: Double read get_ExpandUpAnimationEndPosition;
    property ExpandUpAnimationHoldPosition: Double read get_ExpandUpAnimationHoldPosition;
    property ExpandUpAnimationStartPosition: Double read get_ExpandUpAnimationStartPosition;
    property ExpandUpOverflowVerticalPosition: Double read get_ExpandUpOverflowVerticalPosition;
    property ExpandedWidth: Double read get_ExpandedWidth;
    property OpenAnimationEndPosition: Double read get_OpenAnimationEndPosition;
    property OpenAnimationStartPosition: Double read get_OpenAnimationStartPosition;
    property OverflowContentClipRect: TRectF read get_OverflowContentClipRect;
    property WidthExpansionAnimationEndPosition: Double read get_WidthExpansionAnimationEndPosition;
    property WidthExpansionAnimationStartPosition: Double read get_WidthExpansionAnimationStartPosition;
    property WidthExpansionDelta: Double read get_WidthExpansionDelta;
    property WidthExpansionMoreButtonAnimationEndPosition: Double read get_WidthExpansionMoreButtonAnimationEndPosition;
    property WidthExpansionMoreButtonAnimationStartPosition: Double read get_WidthExpansionMoreButtonAnimationStartPosition;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_CommandBarFlyoutCommandBar)]
  Primitives_ICommandBarFlyoutCommandBar = interface(IInspectable)
  ['{14146E7C-38C4-55C4-B706-CE18F6061E7E}']
    function get_FlyoutTemplateSettings: Primitives_ICommandBarFlyoutCommandBarTemplateSettings; safecall;
    property FlyoutTemplateSettings: Primitives_ICommandBarFlyoutCommandBarTemplateSettings read get_FlyoutTemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_CommandBarFlyoutCommandBar)]
  Primitives_ICommandBarFlyoutCommandBarFactory = interface(IInspectable)
  ['{F8236F9F-5559-5697-8E6F-20D70CA17DD0}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICommandBarFlyoutCommandBar; safecall;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings2
  Primitives_ICommandBarTemplateSettings2 = interface(IInspectable)
  ['{FBB24F93-C2E2-4177-A2B6-3CD705073CF6}']
    function get_OverflowContentMaxWidth: Double; safecall;
    property OverflowContentMaxWidth: Double read get_OverflowContentMaxWidth;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings3
  Primitives_ICommandBarTemplateSettings3 = interface(IInspectable)
  ['{3BD71EBA-3403-4BFE-842D-2CE8C511D245}']
    function get_EffectiveOverflowButtonVisibility: Visibility; safecall;
    property EffectiveOverflowButtonVisibility: Visibility read get_EffectiveOverflowButtonVisibility;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings4
  Primitives_ICommandBarTemplateSettings4 = interface(IInspectable)
  ['{F2562DD3-AA58-59C5-853B-828A19D1214E}']
    function get_OverflowContentCompactYTranslation: Double; safecall;
    function get_OverflowContentMinimalYTranslation: Double; safecall;
    function get_OverflowContentHiddenYTranslation: Double; safecall;
    property OverflowContentCompactYTranslation: Double read get_OverflowContentCompactYTranslation;
    property OverflowContentHiddenYTranslation: Double read get_OverflowContentHiddenYTranslation;
    property OverflowContentMinimalYTranslation: Double read get_OverflowContentMinimalYTranslation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_DragCompletedEventArgs)]
  Primitives_IDragCompletedEventArgsFactory = interface(IInspectable)
  ['{36A7D99D-148C-495F-A0FC-AFC871D62F33}']
    function CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange: Double; verticalChange: Double; canceled: Boolean; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragCompletedEventArgs; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_DragDeltaEventArgs)]
  Primitives_IDragDeltaEventArgsFactory = interface(IInspectable)
  ['{46E7A1EF-AE15-44A6-8A04-95B0BF9AB876}']
    function CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange: Double; verticalChange: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragDeltaEventArgs; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_DragStartedEventArgs)]
  Primitives_IDragStartedEventArgsFactory = interface(IInspectable)
  ['{5EEFE579-C706-4781-A308-C9E7F4C6A1D7}']
    function CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset: Double; verticalOffset: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragStartedEventArgs; safecall;
  end;

  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs
  Primitives_IFlyoutBaseClosingEventArgs = interface(IInspectable)
  ['{D075852D-B09A-4FD1-B005-DB2BA01206FB}']
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Primitives.IFlyoutBase,Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs>
  TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs_Delegate_Base = interface(IUnknown)
  ['{96E17FBC-78C7-5560-AC3A-587F46DB70D6}']
    procedure Invoke(sender: Primitives_IFlyoutBase; args: Primitives_IFlyoutBaseClosingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Primitives.IFlyoutBase,Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs>
  TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs = interface(TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs_Delegate_Base)
  ['{87B4DA42-03AD-5764-BDDB-4FEA91CFFDD3}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2
  Primitives_IFlyoutBase2 = interface(IInspectable)
  ['{F82B435E-65B3-41C6-A9E2-77B67BC4C00C}']
    function get_Target: IFrameworkElement; safecall;
    function get_AllowFocusOnInteraction: Boolean; safecall;
    procedure put_AllowFocusOnInteraction(value: Boolean); safecall;
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    function get_AllowFocusWhenDisabled: Boolean; safecall;
    procedure put_AllowFocusWhenDisabled(value: Boolean); safecall;
    function get_ElementSoundMode: ElementSoundMode; safecall;
    procedure put_ElementSoundMode(value: ElementSoundMode); safecall;
    function add_Closing(handler: TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs): EventRegistrationToken; safecall;
    procedure remove_Closing(token: EventRegistrationToken); safecall;
    property AllowFocusOnInteraction: Boolean read get_AllowFocusOnInteraction write put_AllowFocusOnInteraction;
    property AllowFocusWhenDisabled: Boolean read get_AllowFocusWhenDisabled write put_AllowFocusWhenDisabled;
    property ElementSoundMode_: ElementSoundMode read get_ElementSoundMode write put_ElementSoundMode;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
    property Target: IFrameworkElement read get_Target;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase3
  Primitives_IFlyoutBase3 = interface(IInspectable)
  ['{A89C9712-48E0-4240-95B9-0DFD0826A8D3}']
    function get_OverlayInputPassThroughElement: IDependencyObject; safecall;
    procedure put_OverlayInputPassThroughElement(value: IDependencyObject); safecall;
    property OverlayInputPassThroughElement: IDependencyObject read get_OverlayInputPassThroughElement write put_OverlayInputPassThroughElement;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase4
  Primitives_IFlyoutBase4 = interface(IInspectable)
  ['{E3897D69-A37F-4828-9B70-0EF67C03B5F8}']
    procedure TryInvokeKeyboardAccelerator(args: Input_IProcessKeyboardAcceleratorEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptions
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutShowOptions)]
  Primitives_IFlyoutShowOptions = interface(IInspectable)
  ['{57D693AD-0C74-54DD-B110-1EE43FABADD9}']
    function get_Position: IReference_1__Point; safecall;
    procedure put_Position(value: IReference_1__Point); safecall;
    function get_ExclusionRect: IReference_1__Rect; safecall;
    procedure put_ExclusionRect(value: IReference_1__Rect); safecall;
    function get_ShowMode: Primitives_FlyoutShowMode; safecall;
    procedure put_ShowMode(value: Primitives_FlyoutShowMode); safecall;
    function get_Placement: Primitives_FlyoutPlacementMode; safecall;
    procedure put_Placement(value: Primitives_FlyoutPlacementMode); safecall;
    property ExclusionRect: IReference_1__Rect read get_ExclusionRect write put_ExclusionRect;
    property Placement: Primitives_FlyoutPlacementMode read get_Placement write put_Placement;
    property Position: IReference_1__Point read get_Position write put_Position;
    property ShowMode: Primitives_FlyoutShowMode read get_ShowMode write put_ShowMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase5
  Primitives_IFlyoutBase5 = interface(IInspectable)
  ['{AD3EC0C7-12BB-5A73-B78E-105192CA73D6}']
    function get_ShowMode: Primitives_FlyoutShowMode; safecall;
    procedure put_ShowMode(value: Primitives_FlyoutShowMode); safecall;
    function get_InputDevicePrefersPrimaryCommands: Boolean; safecall;
    function get_AreOpenCloseAnimationsEnabled: Boolean; safecall;
    procedure put_AreOpenCloseAnimationsEnabled(value: Boolean); safecall;
    function get_IsOpen: Boolean; safecall;
    procedure ShowAt(placementTarget: IDependencyObject; showOptions: Primitives_IFlyoutShowOptions); safecall;
    property AreOpenCloseAnimationsEnabled: Boolean read get_AreOpenCloseAnimationsEnabled write put_AreOpenCloseAnimationsEnabled;
    property InputDevicePrefersPrimaryCommands: Boolean read get_InputDevicePrefersPrimaryCommands;
    property IsOpen: Boolean read get_IsOpen;
    property ShowMode: Primitives_FlyoutShowMode read get_ShowMode write put_ShowMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBase6
  Primitives_IFlyoutBase6 = interface(IInspectable)
  ['{5399DE8C-06CC-5B52-B65A-FF9322D1C940}']
    function get_ShouldConstrainToRootBounds: Boolean; safecall;
    procedure put_ShouldConstrainToRootBounds(value: Boolean); safecall;
    function get_IsConstrainedToRootBounds: Boolean; safecall;
    function get_XamlRoot: IXamlRoot; safecall;
    procedure put_XamlRoot(value: IXamlRoot); safecall;
    property IsConstrainedToRootBounds: Boolean read get_IsConstrainedToRootBounds;
    property ShouldConstrainToRootBounds: Boolean read get_ShouldConstrainToRootBounds write put_ShouldConstrainToRootBounds;
    property XamlRoot: IXamlRoot read get_XamlRoot write put_XamlRoot;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseFactory = interface(IInspectable)
  ['{1C3363D7-FCA7-407E-920E-70E15E9F0BF1}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides
  Primitives_IFlyoutBaseOverrides = interface(IInspectable)
  ['{101DEC86-6F4D-45A4-9D0E-3ECE6F16977E}']
    function CreatePresenter: IControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4
  Primitives_IFlyoutBaseOverrides4 = interface(IInspectable)
  ['{A6BFD04D-5FF3-4418-ADD8-4042A88D2DA5}']
    procedure OnProcessKeyboardAccelerators(args: Input_IProcessKeyboardAcceleratorEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseStatics = interface(IInspectable)
  ['{E2D795E3-85C0-4DE2-BAC1-5294CA011A78}']
    function get_PlacementProperty: IDependencyProperty; safecall;
    function get_AttachedFlyoutProperty: IDependencyProperty; safecall;
    function GetAttachedFlyout(element: IFrameworkElement): Primitives_IFlyoutBase; safecall;
    procedure SetAttachedFlyout(element: IFrameworkElement; value: Primitives_IFlyoutBase); safecall;
    procedure ShowAttachedFlyout(flyoutOwner: IFrameworkElement); safecall;
    property AttachedFlyoutProperty: IDependencyProperty read get_AttachedFlyoutProperty;
    property PlacementProperty: IDependencyProperty read get_PlacementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseStatics2 = interface(IInspectable)
  ['{A8E913FE-2D60-4307-AAD9-56B450121B58}']
    function get_AllowFocusOnInteractionProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_AllowFocusWhenDisabledProperty: IDependencyProperty; safecall;
    function get_ElementSoundModeProperty: IDependencyProperty; safecall;
    property AllowFocusOnInteractionProperty: IDependencyProperty read get_AllowFocusOnInteractionProperty;
    property AllowFocusWhenDisabledProperty: IDependencyProperty read get_AllowFocusWhenDisabledProperty;
    property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseStatics3 = interface(IInspectable)
  ['{7BA92E4F-DD16-4BE4-99DB-BD9D4406C0F8}']
    function get_OverlayInputPassThroughElementProperty: IDependencyProperty; safecall;
    property OverlayInputPassThroughElementProperty: IDependencyProperty read get_OverlayInputPassThroughElementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics5
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseStatics5 = interface(IInspectable)
  ['{69EDB25C-992A-542B-BCFF-2F7F855523BD}']
    function get_TargetProperty: IDependencyProperty; safecall;
    function get_ShowModeProperty: IDependencyProperty; safecall;
    function get_InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty; safecall;
    function get_AreOpenCloseAnimationsEnabledProperty: IDependencyProperty; safecall;
    function get_IsOpenProperty: IDependencyProperty; safecall;
    property AreOpenCloseAnimationsEnabledProperty: IDependencyProperty read get_AreOpenCloseAnimationsEnabledProperty;
    property InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty read get_InputDevicePrefersPrimaryCommandsProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property ShowModeProperty: IDependencyProperty read get_ShowModeProperty;
    property TargetProperty: IDependencyProperty read get_TargetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics6
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseStatics6 = interface(IInspectable)
  ['{96D49254-C91B-5246-8B39-AFC2A2C50CF8}']
    function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; safecall;
    property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_FlyoutShowOptions)]
  Primitives_IFlyoutShowOptionsFactory = interface(IInspectable)
  ['{CE596F61-2EB4-5B4E-AF69-F9AF42320EEE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutShowOptions; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelper
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_GeneratorPositionHelper)]
  Primitives_IGeneratorPositionHelper = interface(IInspectable)
  ['{CD40318D-7745-40D9-AB9D-ABBDA4A7FFEA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelperStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_GeneratorPositionHelper)]
  Primitives_IGeneratorPositionHelperStatics = interface(IInspectable)
  ['{AD4095CD-60EC-4588-8D60-39D29097A4DF}']
    function FromIndexAndOffset(index: Integer; offset: Integer): Primitives_GeneratorPosition; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_GridViewItemPresenter)]
  Primitives_IGridViewItemPresenter = interface(IInspectable)
  ['{214F9010-56E2-4821-8A1C-2305709AF94B}']
    function get_SelectionCheckMarkVisualEnabled: Boolean; safecall;
    procedure put_SelectionCheckMarkVisualEnabled(value: Boolean); safecall;
    function get_CheckHintBrush: IBrush; safecall;
    procedure put_CheckHintBrush(value: IBrush); safecall;
    function get_CheckSelectingBrush: IBrush; safecall;
    procedure put_CheckSelectingBrush(value: IBrush); safecall;
    function get_CheckBrush: IBrush; safecall;
    procedure put_CheckBrush(value: IBrush); safecall;
    function get_DragBackground: IBrush; safecall;
    procedure put_DragBackground(value: IBrush); safecall;
    function get_DragForeground: IBrush; safecall;
    procedure put_DragForeground(value: IBrush); safecall;
    function get_FocusBorderBrush: IBrush; safecall;
    procedure put_FocusBorderBrush(value: IBrush); safecall;
    function get_PlaceholderBackground: IBrush; safecall;
    procedure put_PlaceholderBackground(value: IBrush); safecall;
    function get_PointerOverBackground: IBrush; safecall;
    procedure put_PointerOverBackground(value: IBrush); safecall;
    function get_SelectedBackground: IBrush; safecall;
    procedure put_SelectedBackground(value: IBrush); safecall;
    function get_SelectedForeground: IBrush; safecall;
    procedure put_SelectedForeground(value: IBrush); safecall;
    function get_SelectedPointerOverBackground: IBrush; safecall;
    procedure put_SelectedPointerOverBackground(value: IBrush); safecall;
    function get_SelectedPointerOverBorderBrush: IBrush; safecall;
    procedure put_SelectedPointerOverBorderBrush(value: IBrush); safecall;
    function get_SelectedBorderThickness: Thickness; safecall;
    procedure put_SelectedBorderThickness(value: Thickness); safecall;
    function get_DisabledOpacity: Double; safecall;
    procedure put_DisabledOpacity(value: Double); safecall;
    function get_DragOpacity: Double; safecall;
    procedure put_DragOpacity(value: Double); safecall;
    function get_ReorderHintOffset: Double; safecall;
    procedure put_ReorderHintOffset(value: Double); safecall;
    function get_GridViewItemPresenterHorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_GridViewItemPresenterHorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_GridViewItemPresenterVerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_GridViewItemPresenterVerticalContentAlignment(value: VerticalAlignment); safecall;
    function get_GridViewItemPresenterPadding: Thickness; safecall;
    procedure put_GridViewItemPresenterPadding(value: Thickness); safecall;
    function get_PointerOverBackgroundMargin: Thickness; safecall;
    procedure put_PointerOverBackgroundMargin(value: Thickness); safecall;
    function get_ContentMargin: Thickness; safecall;
    procedure put_ContentMargin(value: Thickness); safecall;
    property CheckBrush: IBrush read get_CheckBrush write put_CheckBrush;
    property CheckHintBrush: IBrush read get_CheckHintBrush write put_CheckHintBrush;
    property CheckSelectingBrush: IBrush read get_CheckSelectingBrush write put_CheckSelectingBrush;
    property ContentMargin: Thickness read get_ContentMargin write put_ContentMargin;
    property DisabledOpacity: Double read get_DisabledOpacity write put_DisabledOpacity;
    property DragBackground: IBrush read get_DragBackground write put_DragBackground;
    property DragForeground: IBrush read get_DragForeground write put_DragForeground;
    property DragOpacity: Double read get_DragOpacity write put_DragOpacity;
    property FocusBorderBrush: IBrush read get_FocusBorderBrush write put_FocusBorderBrush;
    property GridViewItemPresenterHorizontalContentAlignment: HorizontalAlignment read get_GridViewItemPresenterHorizontalContentAlignment write put_GridViewItemPresenterHorizontalContentAlignment;
    property GridViewItemPresenterPadding: Thickness read get_GridViewItemPresenterPadding write put_GridViewItemPresenterPadding;
    property GridViewItemPresenterVerticalContentAlignment: VerticalAlignment read get_GridViewItemPresenterVerticalContentAlignment write put_GridViewItemPresenterVerticalContentAlignment;
    property PlaceholderBackground: IBrush read get_PlaceholderBackground write put_PlaceholderBackground;
    property PointerOverBackground: IBrush read get_PointerOverBackground write put_PointerOverBackground;
    property PointerOverBackgroundMargin: Thickness read get_PointerOverBackgroundMargin write put_PointerOverBackgroundMargin;
    property ReorderHintOffset: Double read get_ReorderHintOffset write put_ReorderHintOffset;
    property SelectedBackground: IBrush read get_SelectedBackground write put_SelectedBackground;
    property SelectedBorderThickness: Thickness read get_SelectedBorderThickness write put_SelectedBorderThickness;
    property SelectedForeground: IBrush read get_SelectedForeground write put_SelectedForeground;
    property SelectedPointerOverBackground: IBrush read get_SelectedPointerOverBackground write put_SelectedPointerOverBackground;
    property SelectedPointerOverBorderBrush: IBrush read get_SelectedPointerOverBorderBrush write put_SelectedPointerOverBorderBrush;
    property SelectionCheckMarkVisualEnabled: Boolean read get_SelectionCheckMarkVisualEnabled write put_SelectionCheckMarkVisualEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_GridViewItemPresenter)]
  Primitives_IGridViewItemPresenterFactory = interface(IInspectable)
  ['{53C12178-63BB-4A65-A3F1-AB114CFC6FFE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IGridViewItemPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_GridViewItemPresenter)]
  Primitives_IGridViewItemPresenterStatics = interface(IInspectable)
  ['{E958F8C4-277E-4A72-A01E-9E1688980178}']
    function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; safecall;
    function get_CheckHintBrushProperty: IDependencyProperty; safecall;
    function get_CheckSelectingBrushProperty: IDependencyProperty; safecall;
    function get_CheckBrushProperty: IDependencyProperty; safecall;
    function get_DragBackgroundProperty: IDependencyProperty; safecall;
    function get_DragForegroundProperty: IDependencyProperty; safecall;
    function get_FocusBorderBrushProperty: IDependencyProperty; safecall;
    function get_PlaceholderBackgroundProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBorderThicknessProperty: IDependencyProperty; safecall;
    function get_DisabledOpacityProperty: IDependencyProperty; safecall;
    function get_DragOpacityProperty: IDependencyProperty; safecall;
    function get_ReorderHintOffsetProperty: IDependencyProperty; safecall;
    function get_GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_GridViewItemPresenterPaddingProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundMarginProperty: IDependencyProperty; safecall;
    function get_ContentMarginProperty: IDependencyProperty; safecall;
    property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    property GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterHorizontalContentAlignmentProperty;
    property GridViewItemPresenterPaddingProperty: IDependencyProperty read get_GridViewItemPresenterPaddingProperty;
    property GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterVerticalContentAlignmentProperty;
    property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_JumpListItemBackgroundConverter)]
  Primitives_IJumpListItemBackgroundConverter = interface(IInspectable)
  ['{81177858-D224-410C-B16C-C5B6BB6188B2}']
    function get_Enabled: IBrush; safecall;
    procedure put_Enabled(value: IBrush); safecall;
    function get_Disabled: IBrush; safecall;
    procedure put_Disabled(value: IBrush); safecall;
    property Disabled: IBrush read get_Disabled write put_Disabled;
    property Enabled: IBrush read get_Enabled write put_Enabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_JumpListItemBackgroundConverter)]
  Primitives_IJumpListItemBackgroundConverterStatics = interface(IInspectable)
  ['{20E7C3DD-6F27-4808-B0BE-83E0E9B5CC45}']
    function get_EnabledProperty: IDependencyProperty; safecall;
    function get_DisabledProperty: IDependencyProperty; safecall;
    property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_JumpListItemForegroundConverter)]
  Primitives_IJumpListItemForegroundConverter = interface(IInspectable)
  ['{1590ED38-C504-4796-A63A-5BFC9EEFAAE8}']
    function get_Enabled: IBrush; safecall;
    procedure put_Enabled(value: IBrush); safecall;
    function get_Disabled: IBrush; safecall;
    procedure put_Disabled(value: IBrush); safecall;
    property Disabled: IBrush read get_Disabled write put_Disabled;
    property Enabled: IBrush read get_Enabled write put_Enabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_JumpListItemForegroundConverter)]
  Primitives_IJumpListItemForegroundConverterStatics = interface(IInspectable)
  ['{474E7352-210C-4673-AC6A-413F0E2C7750}']
    function get_EnabledProperty: IDependencyProperty; safecall;
    function get_DisabledProperty: IDependencyProperty; safecall;
    property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ILayoutInformation
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_LayoutInformation)]
  Primitives_ILayoutInformation = interface(IInspectable)
  ['{B5384C9B-C8CF-41B3-BF16-18C8420E72C9}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ILayoutInformationStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_LayoutInformation)]
  Primitives_ILayoutInformationStatics = interface(IInspectable)
  ['{CF06CF99-58E9-4682-8326-50CAAB65ED7C}']
    function GetLayoutExceptionElement(dispatcher: IInspectable): IUIElement; safecall;
    function GetLayoutSlot(element: IFrameworkElement): TRectF; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ILayoutInformationStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_LayoutInformation)]
  Primitives_ILayoutInformationStatics2 = interface(IInspectable)
  ['{760315B5-6D4E-4939-AC61-639863CEA36B}']
    function GetAvailableSize(element: IUIElement): TSizeF; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenter = interface(IInspectable)
  ['{FC8946BD-A3A2-4969-8174-25B5D3C28033}']
    function get_SelectionCheckMarkVisualEnabled: Boolean; safecall;
    procedure put_SelectionCheckMarkVisualEnabled(value: Boolean); safecall;
    function get_CheckHintBrush: IBrush; safecall;
    procedure put_CheckHintBrush(value: IBrush); safecall;
    function get_CheckSelectingBrush: IBrush; safecall;
    procedure put_CheckSelectingBrush(value: IBrush); safecall;
    function get_CheckBrush: IBrush; safecall;
    procedure put_CheckBrush(value: IBrush); safecall;
    function get_DragBackground: IBrush; safecall;
    procedure put_DragBackground(value: IBrush); safecall;
    function get_DragForeground: IBrush; safecall;
    procedure put_DragForeground(value: IBrush); safecall;
    function get_FocusBorderBrush: IBrush; safecall;
    procedure put_FocusBorderBrush(value: IBrush); safecall;
    function get_PlaceholderBackground: IBrush; safecall;
    procedure put_PlaceholderBackground(value: IBrush); safecall;
    function get_PointerOverBackground: IBrush; safecall;
    procedure put_PointerOverBackground(value: IBrush); safecall;
    function get_SelectedBackground: IBrush; safecall;
    procedure put_SelectedBackground(value: IBrush); safecall;
    function get_SelectedForeground: IBrush; safecall;
    procedure put_SelectedForeground(value: IBrush); safecall;
    function get_SelectedPointerOverBackground: IBrush; safecall;
    procedure put_SelectedPointerOverBackground(value: IBrush); safecall;
    function get_SelectedPointerOverBorderBrush: IBrush; safecall;
    procedure put_SelectedPointerOverBorderBrush(value: IBrush); safecall;
    function get_SelectedBorderThickness: Thickness; safecall;
    procedure put_SelectedBorderThickness(value: Thickness); safecall;
    function get_DisabledOpacity: Double; safecall;
    procedure put_DisabledOpacity(value: Double); safecall;
    function get_DragOpacity: Double; safecall;
    procedure put_DragOpacity(value: Double); safecall;
    function get_ReorderHintOffset: Double; safecall;
    procedure put_ReorderHintOffset(value: Double); safecall;
    function get_ListViewItemPresenterHorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_ListViewItemPresenterHorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_ListViewItemPresenterVerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_ListViewItemPresenterVerticalContentAlignment(value: VerticalAlignment); safecall;
    function get_ListViewItemPresenterPadding: Thickness; safecall;
    procedure put_ListViewItemPresenterPadding(value: Thickness); safecall;
    function get_PointerOverBackgroundMargin: Thickness; safecall;
    procedure put_PointerOverBackgroundMargin(value: Thickness); safecall;
    function get_ContentMargin: Thickness; safecall;
    procedure put_ContentMargin(value: Thickness); safecall;
    property CheckBrush: IBrush read get_CheckBrush write put_CheckBrush;
    property CheckHintBrush: IBrush read get_CheckHintBrush write put_CheckHintBrush;
    property CheckSelectingBrush: IBrush read get_CheckSelectingBrush write put_CheckSelectingBrush;
    property ContentMargin: Thickness read get_ContentMargin write put_ContentMargin;
    property DisabledOpacity: Double read get_DisabledOpacity write put_DisabledOpacity;
    property DragBackground: IBrush read get_DragBackground write put_DragBackground;
    property DragForeground: IBrush read get_DragForeground write put_DragForeground;
    property DragOpacity: Double read get_DragOpacity write put_DragOpacity;
    property FocusBorderBrush: IBrush read get_FocusBorderBrush write put_FocusBorderBrush;
    property ListViewItemPresenterHorizontalContentAlignment: HorizontalAlignment read get_ListViewItemPresenterHorizontalContentAlignment write put_ListViewItemPresenterHorizontalContentAlignment;
    property ListViewItemPresenterPadding: Thickness read get_ListViewItemPresenterPadding write put_ListViewItemPresenterPadding;
    property ListViewItemPresenterVerticalContentAlignment: VerticalAlignment read get_ListViewItemPresenterVerticalContentAlignment write put_ListViewItemPresenterVerticalContentAlignment;
    property PlaceholderBackground: IBrush read get_PlaceholderBackground write put_PlaceholderBackground;
    property PointerOverBackground: IBrush read get_PointerOverBackground write put_PointerOverBackground;
    property PointerOverBackgroundMargin: Thickness read get_PointerOverBackgroundMargin write put_PointerOverBackgroundMargin;
    property ReorderHintOffset: Double read get_ReorderHintOffset write put_ReorderHintOffset;
    property SelectedBackground: IBrush read get_SelectedBackground write put_SelectedBackground;
    property SelectedBorderThickness: Thickness read get_SelectedBorderThickness write put_SelectedBorderThickness;
    property SelectedForeground: IBrush read get_SelectedForeground write put_SelectedForeground;
    property SelectedPointerOverBackground: IBrush read get_SelectedPointerOverBackground write put_SelectedPointerOverBackground;
    property SelectedPointerOverBorderBrush: IBrush read get_SelectedPointerOverBorderBrush write put_SelectedPointerOverBorderBrush;
    property SelectionCheckMarkVisualEnabled: Boolean read get_SelectionCheckMarkVisualEnabled write put_SelectionCheckMarkVisualEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter2
  Primitives_IListViewItemPresenter2 = interface(IInspectable)
  ['{F5DC5496-E122-4C57-A625-AC4B08FB2D4C}']
    function get_SelectedPressedBackground: IBrush; safecall;
    procedure put_SelectedPressedBackground(value: IBrush); safecall;
    function get_PressedBackground: IBrush; safecall;
    procedure put_PressedBackground(value: IBrush); safecall;
    function get_CheckBoxBrush: IBrush; safecall;
    procedure put_CheckBoxBrush(value: IBrush); safecall;
    function get_FocusSecondaryBorderBrush: IBrush; safecall;
    procedure put_FocusSecondaryBorderBrush(value: IBrush); safecall;
    function get_CheckMode: Primitives_ListViewItemPresenterCheckMode; safecall;
    procedure put_CheckMode(value: Primitives_ListViewItemPresenterCheckMode); safecall;
    function get_PointerOverForeground: IBrush; safecall;
    procedure put_PointerOverForeground(value: IBrush); safecall;
    property CheckBoxBrush: IBrush read get_CheckBoxBrush write put_CheckBoxBrush;
    property CheckMode: Primitives_ListViewItemPresenterCheckMode read get_CheckMode write put_CheckMode;
    property FocusSecondaryBorderBrush: IBrush read get_FocusSecondaryBorderBrush write put_FocusSecondaryBorderBrush;
    property PointerOverForeground: IBrush read get_PointerOverForeground write put_PointerOverForeground;
    property PressedBackground: IBrush read get_PressedBackground write put_PressedBackground;
    property SelectedPressedBackground: IBrush read get_SelectedPressedBackground write put_SelectedPressedBackground;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter3
  Primitives_IListViewItemPresenter3 = interface(IInspectable)
  ['{36620013-0390-4E30-AD97-8744404F7010}']
    function get_RevealBackground: IBrush; safecall;
    procedure put_RevealBackground(value: IBrush); safecall;
    function get_RevealBorderBrush: IBrush; safecall;
    procedure put_RevealBorderBrush(value: IBrush); safecall;
    function get_RevealBorderThickness: Thickness; safecall;
    procedure put_RevealBorderThickness(value: Thickness); safecall;
    function get_RevealBackgroundShowsAboveContent: Boolean; safecall;
    procedure put_RevealBackgroundShowsAboveContent(value: Boolean); safecall;
    property RevealBackground: IBrush read get_RevealBackground write put_RevealBackground;
    property RevealBackgroundShowsAboveContent: Boolean read get_RevealBackgroundShowsAboveContent write put_RevealBackgroundShowsAboveContent;
    property RevealBorderBrush: IBrush read get_RevealBorderBrush write put_RevealBorderBrush;
    property RevealBorderThickness: Thickness read get_RevealBorderThickness write put_RevealBorderThickness;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenterFactory = interface(IInspectable)
  ['{E0777CFD-F7E4-4A67-9AC0-A994FCACD020}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IListViewItemPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenterStatics = interface(IInspectable)
  ['{6504A55A-15DD-42FB-AA5D-2D8CE2E9C294}']
    function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; safecall;
    function get_CheckHintBrushProperty: IDependencyProperty; safecall;
    function get_CheckSelectingBrushProperty: IDependencyProperty; safecall;
    function get_CheckBrushProperty: IDependencyProperty; safecall;
    function get_DragBackgroundProperty: IDependencyProperty; safecall;
    function get_DragForegroundProperty: IDependencyProperty; safecall;
    function get_FocusBorderBrushProperty: IDependencyProperty; safecall;
    function get_PlaceholderBackgroundProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBorderThicknessProperty: IDependencyProperty; safecall;
    function get_DisabledOpacityProperty: IDependencyProperty; safecall;
    function get_DragOpacityProperty: IDependencyProperty; safecall;
    function get_ReorderHintOffsetProperty: IDependencyProperty; safecall;
    function get_ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_ListViewItemPresenterPaddingProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundMarginProperty: IDependencyProperty; safecall;
    function get_ContentMarginProperty: IDependencyProperty; safecall;
    property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    property ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterHorizontalContentAlignmentProperty;
    property ListViewItemPresenterPaddingProperty: IDependencyProperty read get_ListViewItemPresenterPaddingProperty;
    property ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterVerticalContentAlignmentProperty;
    property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenterStatics2 = interface(IInspectable)
  ['{4CB3B945-D24D-42A3-9E83-A86D0618BF1B}']
    function get_SelectedPressedBackgroundProperty: IDependencyProperty; safecall;
    function get_PressedBackgroundProperty: IDependencyProperty; safecall;
    function get_CheckBoxBrushProperty: IDependencyProperty; safecall;
    function get_FocusSecondaryBorderBrushProperty: IDependencyProperty; safecall;
    function get_CheckModeProperty: IDependencyProperty; safecall;
    function get_PointerOverForegroundProperty: IDependencyProperty; safecall;
    property CheckBoxBrushProperty: IDependencyProperty read get_CheckBoxBrushProperty;
    property CheckModeProperty: IDependencyProperty read get_CheckModeProperty;
    property FocusSecondaryBorderBrushProperty: IDependencyProperty read get_FocusSecondaryBorderBrushProperty;
    property PointerOverForegroundProperty: IDependencyProperty read get_PointerOverForegroundProperty;
    property PressedBackgroundProperty: IDependencyProperty read get_PressedBackgroundProperty;
    property SelectedPressedBackgroundProperty: IDependencyProperty read get_SelectedPressedBackgroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenterStatics3 = interface(IInspectable)
  ['{C3D3D11E-FA26-4CE7-A4ED-FF948F01B7C0}']
    function get_RevealBackgroundProperty: IDependencyProperty; safecall;
    function get_RevealBorderBrushProperty: IDependencyProperty; safecall;
    function get_RevealBorderThicknessProperty: IDependencyProperty; safecall;
    function get_RevealBackgroundShowsAboveContentProperty: IDependencyProperty; safecall;
    property RevealBackgroundProperty: IDependencyProperty read get_RevealBackgroundProperty;
    property RevealBackgroundShowsAboveContentProperty: IDependencyProperty read get_RevealBackgroundShowsAboveContentProperty;
    property RevealBorderBrushProperty: IDependencyProperty read get_RevealBorderBrushProperty;
    property RevealBorderThicknessProperty: IDependencyProperty read get_RevealBorderThicknessProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelector
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_LoopingSelector)]
  Primitives_ILoopingSelector = interface(IInspectable)
  ['{4C9A3E04-4827-49D9-8806-093957B0FD21}']
    function get_ShouldLoop: Boolean; safecall;
    procedure put_ShouldLoop(value: Boolean); safecall;
    function get_Items: IVector_1__IInspectable; safecall;
    procedure put_Items(value: IVector_1__IInspectable); safecall;
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_ItemWidth: Integer; safecall;
    procedure put_ItemWidth(value: Integer); safecall;
    function get_ItemHeight: Integer; safecall;
    procedure put_ItemHeight(value: Integer); safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function add_SelectionChanged(handler: SelectionChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    property ItemHeight: Integer read get_ItemHeight write put_ItemHeight;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemWidth: Integer read get_ItemWidth write put_ItemWidth;
    property Items: IVector_1__IInspectable read get_Items write put_Items;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property ShouldLoop: Boolean read get_ShouldLoop write put_ShouldLoop;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorItem
  Primitives_ILoopingSelectorItem = interface(IInspectable)
  ['{C69714B9-27C6-4433-9D7C-0DBFB2F4344F}']
  end;

  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorPanel
  Primitives_ILoopingSelectorPanel = interface(IInspectable)
  ['{40A9BA70-1011-4778-87F7-6BFD20D6377D}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_LoopingSelector)]
  Primitives_ILoopingSelectorStatics = interface(IInspectable)
  ['{03E8BAFA-8C7D-4FC5-B92A-F049FB933CC5}']
    function get_ShouldLoopProperty: IDependencyProperty; safecall;
    function get_ItemsProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property ShouldLoopProperty: IDependencyProperty read get_ShouldLoopProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_NavigationViewItemPresenter)]
  Primitives_INavigationViewItemPresenter = interface(IInspectable)
  ['{9956D3FC-4693-59CB-B6BF-37249058BE96}']
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_NavigationViewItemPresenter)]
  Primitives_INavigationViewItemPresenterFactory = interface(IInspectable)
  ['{BB062C50-4A36-52E7-9459-E89D02F3FC42}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_NavigationViewItemPresenter)]
  Primitives_INavigationViewItemPresenterStatics = interface(IInspectable)
  ['{52814604-CFC1-5AD5-A3AA-FA355BE6BD76}']
    function get_IconProperty: IDependencyProperty; safecall;
    property IconProperty: IDependencyProperty read get_IconProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_OrientedVirtualizingPanel)]
  Primitives_IOrientedVirtualizingPanel = interface(IInspectable)
  ['{F077B577-39BD-46EE-BDD7-0826BEED71B8}']
    function get_CanVerticallyScroll: Boolean; safecall;
    procedure put_CanVerticallyScroll(value: Boolean); safecall;
    function get_CanHorizontallyScroll: Boolean; safecall;
    procedure put_CanHorizontallyScroll(value: Boolean); safecall;
    function get_ExtentWidth: Double; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ScrollOwner: IInspectable; safecall;
    procedure put_ScrollOwner(value: IInspectable); safecall;
    procedure LineUp; safecall;
    procedure LineDown; safecall;
    procedure LineLeft; safecall;
    procedure LineRight; safecall;
    procedure PageUp; safecall;
    procedure PageDown; safecall;
    procedure PageLeft; safecall;
    procedure PageRight; safecall;
    procedure MouseWheelUp; safecall;
    procedure MouseWheelDown; safecall;
    procedure MouseWheelLeft; safecall;
    procedure MouseWheelRight; safecall;
    procedure SetHorizontalOffset(offset: Double); safecall;
    procedure SetVerticalOffset(offset: Double); safecall;
    function MakeVisible(visual: IUIElement; rectangle: TRectF): TRectF; safecall;
    property CanHorizontallyScroll: Boolean read get_CanHorizontallyScroll write put_CanHorizontallyScroll;
    property CanVerticallyScroll: Boolean read get_CanVerticallyScroll write put_CanVerticallyScroll;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property ScrollOwner: IInspectable read get_ScrollOwner write put_ScrollOwner;
    property VerticalOffset: Double read get_VerticalOffset;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_OrientedVirtualizingPanel)]
  Primitives_IOrientedVirtualizingPanelFactory = interface(IInspectable)
  ['{7B8EAEAF-F92F-439D-9EBF-E9919F56C94D}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBase
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_PickerFlyoutBase)]
  Primitives_IPickerFlyoutBase = interface(IInspectable)
  ['{E33574EA-1076-44D1-9383-DC24AC5CFF2A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_PickerFlyoutBase)]
  Primitives_IPickerFlyoutBaseFactory = interface(IInspectable)
  ['{7EC27A53-9502-4BEB-B342-00566C8F16B0}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPickerFlyoutBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseOverrides
  Primitives_IPickerFlyoutBaseOverrides = interface(IInspectable)
  ['{5BFC4F4A-4822-47B4-A958-77C20BA120D3}']
    procedure OnConfirmed; safecall;
    function ShouldShowConfirmationButtons: Boolean; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_PickerFlyoutBase)]
  Primitives_IPickerFlyoutBaseStatics = interface(IInspectable)
  ['{5A4D0AC5-89AE-40E5-A7F1-BB702355ADF3}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function GetTitle(element: IDependencyObject): HSTRING; safecall;
    procedure SetTitle(element: IDependencyObject; value: HSTRING); safecall;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPivotHeaderItem
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_PivotHeaderItem)]
  Primitives_IPivotHeaderItem = interface(IInspectable)
  ['{594572C2-82AA-410B-9E55-FD8E2C98862D}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_PivotHeaderItem)]
  Primitives_IPivotHeaderItemFactory = interface(IInspectable)
  ['{14308B37-185B-4117-BC77-DDA2EB261B99}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPivotHeaderItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPivotHeaderPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_PivotHeaderPanel)]
  Primitives_IPivotHeaderPanel = interface(IInspectable)
  ['{21484EBC-9241-4203-BD37-6C08FB096612}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPivotPanel
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_PivotPanel)]
  Primitives_IPivotPanel = interface(IInspectable)
  ['{AD4EBE80-22A9-4CA3-9212-2773B6359FF3}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPopup2
  Primitives_IPopup2 = interface(IInspectable)
  ['{376A8C4C-AAC0-4B20-966A-0B9364FEB4B5}']
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPopup3
  Primitives_IPopup3 = interface(IInspectable)
  ['{F9C46915-A65C-5F68-9F54-310A1B51095F}']
    function get_ShouldConstrainToRootBounds: Boolean; safecall;
    procedure put_ShouldConstrainToRootBounds(value: Boolean); safecall;
    function get_IsConstrainedToRootBounds: Boolean; safecall;
    property IsConstrainedToRootBounds: Boolean read get_IsConstrainedToRootBounds;
    property ShouldConstrainToRootBounds: Boolean read get_ShouldConstrainToRootBounds write put_ShouldConstrainToRootBounds;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPopupStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Popup)]
  Primitives_IPopupStatics = interface(IInspectable)
  ['{5AE3BF1A-6E34-40D6-8A7F-CA822AAF59E3}']
    function get_ChildProperty: IDependencyProperty; safecall;
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_HorizontalOffsetProperty: IDependencyProperty; safecall;
    function get_VerticalOffsetProperty: IDependencyProperty; safecall;
    function get_ChildTransitionsProperty: IDependencyProperty; safecall;
    function get_IsLightDismissEnabledProperty: IDependencyProperty; safecall;
    property ChildProperty: IDependencyProperty read get_ChildProperty;
    property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    property IsLightDismissEnabledProperty: IDependencyProperty read get_IsLightDismissEnabledProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPopupStatics2
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Popup)]
  Primitives_IPopupStatics2 = interface(IInspectable)
  ['{2B9AE9EC-55EF-43B6-B459-12E40FFA4302}']
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IPopupStatics3
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Popup)]
  Primitives_IPopupStatics3 = interface(IInspectable)
  ['{00789589-C580-558F-945A-7D02EE004D3E}']
    function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; safecall;
    property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_RangeBase)]
  Primitives_IRangeBaseFactory = interface(IInspectable)
  ['{389B7C71-5220-42B2-9992-2690C1A67030}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IRangeBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides
  Primitives_IRangeBaseOverrides = interface(IInspectable)
  ['{4291AF39-7F0B-4BC2-99C4-06E7062682D8}']
    procedure OnMinimumChanged(oldMinimum: Double; newMinimum: Double); safecall;
    procedure OnMaximumChanged(oldMaximum: Double; newMaximum: Double); safecall;
    procedure OnValueChanged(oldValue: Double; newValue: Double); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IRangeBaseStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_RangeBase)]
  Primitives_IRangeBaseStatics = interface(IInspectable)
  ['{67EF17E1-FE37-474F-9E97-3B5E0B30F2E0}']
    function get_MinimumProperty: IDependencyProperty; safecall;
    function get_MaximumProperty: IDependencyProperty; safecall;
    function get_SmallChangeProperty: IDependencyProperty; safecall;
    function get_LargeChangeProperty: IDependencyProperty; safecall;
    function get_ValueProperty: IDependencyProperty; safecall;
    property LargeChangeProperty: IDependencyProperty read get_LargeChangeProperty;
    property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    property SmallChangeProperty: IDependencyProperty read get_SmallChangeProperty;
    property ValueProperty: IDependencyProperty read get_ValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IRepeatButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_RepeatButton)]
  Primitives_IRepeatButtonStatics = interface(IInspectable)
  ['{3914AC4E-F462-4F73-8197-E8846639C682}']
    function get_DelayProperty: IDependencyProperty; safecall;
    function get_IntervalProperty: IDependencyProperty; safecall;
    property DelayProperty: IDependencyProperty read get_DelayProperty;
    property IntervalProperty: IDependencyProperty read get_IntervalProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IScrollBarStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ScrollBar)]
  Primitives_IScrollBarStatics = interface(IInspectable)
  ['{45EAF38D-B814-48CF-97F2-539EB16DFD4D}']
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_ViewportSizeProperty: IDependencyProperty; safecall;
    function get_IndicatorModeProperty: IDependencyProperty; safecall;
    property IndicatorModeProperty: IDependencyProperty read get_IndicatorModeProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property ViewportSizeProperty: IDependencyProperty read get_ViewportSizeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  Primitives_IScrollSnapPointsInfo = interface(IInspectable)
  ['{1B5D1336-E61B-4D51-BE41-FD8DDC55C58C}']
    function get_AreHorizontalSnapPointsRegular: Boolean; safecall;
    function get_AreVerticalSnapPointsRegular: Boolean; safecall;
    function add_HorizontalSnapPointsChanged(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_HorizontalSnapPointsChanged(token: EventRegistrationToken); safecall;
    function add_VerticalSnapPointsChanged(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_VerticalSnapPointsChanged(token: EventRegistrationToken); safecall;
    function GetIrregularSnapPoints(orientation: Orientation; alignment: Primitives_SnapPointsAlignment): IVectorView_1__Single; safecall;
    function GetRegularSnapPoints(orientation: Orientation; alignment: Primitives_SnapPointsAlignment; out offset: Single): Single; safecall;
    property AreHorizontalSnapPointsRegular: Boolean read get_AreHorizontalSnapPointsRegular;
    property AreVerticalSnapPointsRegular: Boolean read get_AreVerticalSnapPointsRegular;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ISelectorFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Selector)]
  Primitives_ISelectorFactory = interface(IInspectable)
  ['{C9BE2995-D136-4600-B187-8AD56079B48A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ISelectorItemFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_SelectorItem)]
  Primitives_ISelectorItemFactory = interface(IInspectable)
  ['{B9363945-C86A-4B1E-9440-1879378D5313}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ISelectorItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ISelectorItemStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_SelectorItem)]
  Primitives_ISelectorItemStatics = interface(IInspectable)
  ['{2A353AB8-CBE9-4303-92E7-C8906E218392}']
    function get_IsSelectedProperty: IDependencyProperty; safecall;
    property IsSelectedProperty: IDependencyProperty read get_IsSelectedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ISelectorStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Selector)]
  Primitives_ISelectorStatics = interface(IInspectable)
  ['{13300B06-BD10-4E09-BFF7-71EFB8BBB42B}']
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_SelectedValueProperty: IDependencyProperty; safecall;
    function get_SelectedValuePathProperty: IDependencyProperty; safecall;
    function get_IsSynchronizedWithCurrentItemProperty: IDependencyProperty; safecall;
    function GetIsSelectionActive(element: IDependencyObject): Boolean; safecall;
    property IsSynchronizedWithCurrentItemProperty: IDependencyProperty read get_IsSynchronizedWithCurrentItemProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IThumbStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_Thumb)]
  Primitives_IThumbStatics = interface(IInspectable)
  ['{955024EB-36F3-4672-A186-BAAF626AC4AD}']
    function get_IsDraggingProperty: IDependencyProperty; safecall;
    property IsDraggingProperty: IDependencyProperty read get_IsDraggingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ITickBar
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_TickBar)]
  Primitives_ITickBar = interface(IInspectable)
  ['{994683FA-F1F6-487D-A5AC-C15921BFA995}']
    function get_Fill: IBrush; safecall;
    procedure put_Fill(value: IBrush); safecall;
    property Fill: IBrush read get_Fill write put_Fill;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.ITickBarStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_TickBar)]
  Primitives_ITickBarStatics = interface(IInspectable)
  ['{2C6D7E40-799D-4A54-BE09-1FEFC61D018E}']
    function get_FillProperty: IDependencyProperty; safecall;
    property FillProperty: IDependencyProperty read get_FillProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ToggleButton)]
  Primitives_IToggleButtonFactory = interface(IInspectable)
  ['{D56AA2FC-FC7F-449C-9855-7A1055D668A8}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IToggleButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IToggleButtonOverrides
  Primitives_IToggleButtonOverrides = interface(IInspectable)
  ['{D20E4C28-F18B-491A-9A45-F1A04A9369A4}']
    procedure OnToggle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Windows.UI.Xaml.Controls.Primitives.IToggleButtonStatics
  [WinRTClassNameAttribute(SWindows_UI_Xaml_Controls_Primitives_ToggleButton)]
  Primitives_IToggleButtonStatics = interface(IInspectable)
  ['{AF1EAB12-0128-4F67-9C5A-82320C445D19}']
    function get_IsCheckedProperty: IDependencyProperty; safecall;
    function get_IsThreeStateProperty: IDependencyProperty; safecall;
    property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
    property IsThreeStateProperty: IDependencyProperty read get_IsThreeStateProperty;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Primitives.IPopup>
  IIterator_1__Primitives_IPopup_Base = interface(IInspectable)
  ['{5BCB0970-5472-56E8-B184-D01FB81E408A}']
    function get_Current: Primitives_IPopup; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PPrimitives_IPopup): Cardinal; safecall;
    property Current: Primitives_IPopup read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Primitives.IPopup>
  IIterator_1__Primitives_IPopup = interface(IIterator_1__Primitives_IPopup_Base)
  ['{6A679628-0C4B-553E-8B20-90BD6FDD9ADB}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Primitives.IPopup>
  IIterable_1__Primitives_IPopup_Base = interface(IInspectable)
  ['{0AF05CE9-3B0F-5A6D-A053-D01A1A554F8C}']
    function First: IIterator_1__Primitives_IPopup; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Primitives.IPopup>
  IIterable_1__Primitives_IPopup = interface(IIterable_1__Primitives_IPopup_Base)
  ['{F176D9DB-2098-5C8D-A3D1-1ED1641838C8}']
  end;

  // Windows.UI.Xaml.Controls.Control
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IControl
  // Implements: Windows.UI.Xaml.Controls.IControl2
  // Implements: Windows.UI.Xaml.Controls.IControl3
  // Implements: Windows.UI.Xaml.Controls.IControl4
  // Implements: Windows.UI.Xaml.Controls.IControl5
  // Implements: Windows.UI.Xaml.Controls.IControl7
  // Implements: Windows.UI.Xaml.Controls.IControlProtected
  // Implements: Windows.UI.Xaml.Controls.IControlOverrides
  // Implements: Windows.UI.Xaml.Controls.IControlOverrides6
  // Statics: "Windows.UI.Xaml.Controls.IControlStatics"
  // Statics: "Windows.UI.Xaml.Controls.IControlStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IControlStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IControlStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IControlStatics5"
  // Statics: "Windows.UI.Xaml.Controls.IControlStatics7"
  // Factory: "Windows.UI.Xaml.Controls.IControlFactory"
  // Instantiable: "IControl"
  TControl = class(TWinRTGenericImportFS6I<IControlFactory, IControlStatics, IControlStatics2, IControlStatics3, IControlStatics4, IControlStatics5, IControlStatics7, IControl>)
  public
    // -> IControlStatics
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_IsTabStopProperty: IDependencyProperty; static; inline;
    class function get_IsEnabledProperty: IDependencyProperty; static; inline;
    class function get_TabIndexProperty: IDependencyProperty; static; inline;
    class function get_TabNavigationProperty: IDependencyProperty; static; inline;
    class function get_TemplateProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_HorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_DefaultStyleKeyProperty: IDependencyProperty; static; inline;
    class function get_FocusStateProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property DefaultStyleKeyProperty: IDependencyProperty read get_DefaultStyleKeyProperty;
    class property FocusStateProperty: IDependencyProperty read get_FocusStateProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    class property IsEnabledProperty: IDependencyProperty read get_IsEnabledProperty;
    class property IsTabStopProperty: IDependencyProperty read get_IsTabStopProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property TabIndexProperty: IDependencyProperty read get_TabIndexProperty;
    class property TabNavigationProperty: IDependencyProperty read get_TabNavigationProperty;
    class property TemplateProperty: IDependencyProperty read get_TemplateProperty;
    class property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;

    // -> IControlStatics2
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;

    // -> IControlStatics3
    class function get_UseSystemFocusVisualsProperty: IDependencyProperty; static; inline;
    class function get_IsTemplateFocusTargetProperty: IDependencyProperty; static; inline;
    class function GetIsTemplateFocusTarget(element: IFrameworkElement): Boolean; static; inline;
    class procedure SetIsTemplateFocusTarget(element: IFrameworkElement; value: Boolean); static; inline;
    class property IsTemplateFocusTargetProperty: IDependencyProperty read get_IsTemplateFocusTargetProperty;
    class property UseSystemFocusVisualsProperty: IDependencyProperty read get_UseSystemFocusVisualsProperty;

    // -> IControlStatics4
    class function get_IsFocusEngagementEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsFocusEngagedProperty: IDependencyProperty; static; inline;
    class function get_RequiresPointerProperty: IDependencyProperty; static; inline;
    class function get_XYFocusLeftProperty: IDependencyProperty; static; inline;
    class function get_XYFocusRightProperty: IDependencyProperty; static; inline;
    class function get_XYFocusUpProperty: IDependencyProperty; static; inline;
    class function get_XYFocusDownProperty: IDependencyProperty; static; inline;
    class function get_ElementSoundModeProperty: IDependencyProperty; static; inline;
    class property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    class property IsFocusEngagedProperty: IDependencyProperty read get_IsFocusEngagedProperty;
    class property IsFocusEngagementEnabledProperty: IDependencyProperty read get_IsFocusEngagementEnabledProperty;
    class property RequiresPointerProperty: IDependencyProperty read get_RequiresPointerProperty;
    class property XYFocusDownProperty: IDependencyProperty read get_XYFocusDownProperty;
    class property XYFocusLeftProperty: IDependencyProperty read get_XYFocusLeftProperty;
    class property XYFocusRightProperty: IDependencyProperty read get_XYFocusRightProperty;
    class property XYFocusUpProperty: IDependencyProperty read get_XYFocusUpProperty;

    // -> IControlStatics5
    class function get_DefaultStyleResourceUriProperty: IDependencyProperty; static; inline;
    class function get_IsTemplateKeyTipTargetProperty: IDependencyProperty; static; inline;
    class function GetIsTemplateKeyTipTarget(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsTemplateKeyTipTarget(element: IDependencyObject; value: Boolean); static; inline;
    class property DefaultStyleResourceUriProperty: IDependencyProperty read get_DefaultStyleResourceUriProperty;
    class property IsTemplateKeyTipTargetProperty: IDependencyProperty read get_IsTemplateKeyTipTargetProperty;

    // -> IControlStatics7
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;

    // -> IControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IControl; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ContentControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IContentControl
  // Implements: Windows.UI.Xaml.Controls.IContentControl2
  // Implements: Windows.UI.Xaml.Controls.IContentControlOverrides
  // Statics: "Windows.UI.Xaml.Controls.IContentControlStatics"
  // Factory: "Windows.UI.Xaml.Controls.IContentControlFactory"
  // Instantiable: "IContentControl"
  TContentControl = class(TWinRTGenericImportFSI<IContentControlFactory, IContentControlStatics, IContentControl>)
  public
    // -> IContentControlStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ContentTransitionsProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    class property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    class property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;

    // -> IContentControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentControl; static; inline;
  end;

  // Windows.UI.Xaml.Controls.AppBar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAppBar
  // Implements: Windows.UI.Xaml.Controls.IAppBar2
  // Implements: Windows.UI.Xaml.Controls.IAppBar3
  // Implements: Windows.UI.Xaml.Controls.IAppBar4
  // Implements: Windows.UI.Xaml.Controls.IAppBarOverrides
  // Implements: Windows.UI.Xaml.Controls.IAppBarOverrides3
  // Statics: "Windows.UI.Xaml.Controls.IAppBarStatics"
  // Statics: "Windows.UI.Xaml.Controls.IAppBarStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IAppBarStatics4"
  // Factory: "Windows.UI.Xaml.Controls.IAppBarFactory"
  // Instantiable: "IAppBar"
  TAppBar = class(TWinRTGenericImportFS3I<IAppBarFactory, IAppBarStatics, IAppBarStatics2, IAppBarStatics4, IAppBar>)
  public
    // -> IAppBarStatics
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_IsStickyProperty: IDependencyProperty; static; inline;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property IsStickyProperty: IDependencyProperty read get_IsStickyProperty;

    // -> IAppBarStatics2
    class function get_ClosedDisplayModeProperty: IDependencyProperty; static; inline;
    class property ClosedDisplayModeProperty: IDependencyProperty read get_ClosedDisplayModeProperty;

    // -> IAppBarStatics4
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> IAppBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBar; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ButtonBase
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IButtonBase
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IButtonBaseStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IButtonBaseFactory"
  // Instantiable: "Primitives_IButtonBase"
  TPrimitives_ButtonBase = class(TWinRTGenericImportFSI<Primitives_IButtonBaseFactory, Primitives_IButtonBaseStatics, Primitives_IButtonBase>)
  public
    // -> Primitives_IButtonBaseStatics
    class function get_ClickModeProperty: IDependencyProperty; static; inline;
    class function get_IsPointerOverProperty: IDependencyProperty; static; inline;
    class function get_IsPressedProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class property ClickModeProperty: IDependencyProperty read get_ClickModeProperty;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property IsPointerOverProperty: IDependencyProperty read get_IsPointerOverProperty;
    class property IsPressedProperty: IDependencyProperty read get_IsPressedProperty;

    // -> Primitives_IButtonBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IButtonBase; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Button
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IButton
  // Implements: Windows.UI.Xaml.Controls.IButtonWithFlyout
  // Statics: "Windows.UI.Xaml.Controls.IButtonStaticsWithFlyout"
  // Factory: "Windows.UI.Xaml.Controls.IButtonFactory"
  // Instantiable: "IButton"
  TButton = class(TWinRTGenericImportFSI<IButtonFactory, IButtonStaticsWithFlyout, IButton>)
  public
    // -> IButtonStaticsWithFlyout
    class function get_FlyoutProperty: IDependencyProperty; static; inline;
    class property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;

    // -> IButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.AppBarButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAppBarButton
  // Implements: Windows.UI.Xaml.Controls.IAppBarButton3
  // Implements: Windows.UI.Xaml.Controls.IAppBarButton4
  // Implements: Windows.UI.Xaml.Controls.IAppBarButton5
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement2
  // Statics: "Windows.UI.Xaml.Controls.IAppBarButtonStatics"
  // Statics: "Windows.UI.Xaml.Controls.IAppBarButtonStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IAppBarButtonStatics4"
  // Factory: "Windows.UI.Xaml.Controls.IAppBarButtonFactory"
  // Instantiable: "IAppBarButton"
  TAppBarButton = class(TWinRTGenericImportFS3I<IAppBarButtonFactory, IAppBarButtonStatics, IAppBarButtonStatics3, IAppBarButtonStatics4, IAppBarButton>)
  public
    // -> IAppBarButtonStatics
    class function get_LabelProperty: IDependencyProperty; static; inline;
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class property IconProperty: IDependencyProperty read get_IconProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property LabelProperty: IDependencyProperty read get_LabelProperty;

    // -> IAppBarButtonStatics3
    class function get_LabelPositionProperty: IDependencyProperty; static; inline;
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    class property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;

    // -> IAppBarButtonStatics4
    class function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; static; inline;
    class property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;

    // -> IAppBarButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.AppBarElementContainer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAppBarElementContainer
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement2
  // Statics: "Windows.UI.Xaml.Controls.IAppBarElementContainerStatics"
  // Factory: "Windows.UI.Xaml.Controls.IAppBarElementContainerFactory"
  // Instantiable: "IAppBarElementContainer"
  TAppBarElementContainer = class(TWinRTGenericImportFSI<IAppBarElementContainerFactory, IAppBarElementContainerStatics, IAppBarElementContainer>)
  public
    // -> IAppBarElementContainerStatics
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;

    // -> IAppBarElementContainerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarElementContainer; static; inline;
  end;

  // Windows.UI.Xaml.Controls.AppBarSeparator
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAppBarSeparator
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement2
  // Statics: "Windows.UI.Xaml.Controls.IAppBarSeparatorStatics"
  // Statics: "Windows.UI.Xaml.Controls.IAppBarSeparatorStatics3"
  // Factory: "Windows.UI.Xaml.Controls.IAppBarSeparatorFactory"
  // Instantiable: "IAppBarSeparator"
  TAppBarSeparator = class(TWinRTGenericImportFS2I<IAppBarSeparatorFactory, IAppBarSeparatorStatics, IAppBarSeparatorStatics3, IAppBarSeparator>)
  public
    // -> IAppBarSeparatorStatics
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;

    // -> IAppBarSeparatorStatics3
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;

    // -> IAppBarSeparatorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarSeparator; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ToggleButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IToggleButton
  // Implements: Windows.UI.Xaml.Controls.Primitives.IToggleButtonOverrides
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IToggleButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory"
  // Instantiable: "Primitives_IToggleButton"
  TPrimitives_ToggleButton = class(TWinRTGenericImportFSI<Primitives_IToggleButtonFactory, Primitives_IToggleButtonStatics, Primitives_IToggleButton>)
  public
    // -> Primitives_IToggleButtonStatics
    class function get_IsCheckedProperty: IDependencyProperty; static; inline;
    class function get_IsThreeStateProperty: IDependencyProperty; static; inline;
    class property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
    class property IsThreeStateProperty: IDependencyProperty read get_IsThreeStateProperty;

    // -> Primitives_IToggleButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IToggleButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.AppBarToggleButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAppBarToggleButton
  // Implements: Windows.UI.Xaml.Controls.IAppBarToggleButton3
  // Implements: Windows.UI.Xaml.Controls.IAppBarToggleButton4
  // Implements: Windows.UI.Xaml.Controls.IAppBarToggleButton5
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement
  // Implements: Windows.UI.Xaml.Controls.ICommandBarElement2
  // Statics: "Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics"
  // Statics: "Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics4"
  // Factory: "Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory"
  // Instantiable: "IAppBarToggleButton"
  TAppBarToggleButton = class(TWinRTGenericImportFS3I<IAppBarToggleButtonFactory, IAppBarToggleButtonStatics, IAppBarToggleButtonStatics3, IAppBarToggleButtonStatics4, IAppBarToggleButton>)
  public
    // -> IAppBarToggleButtonStatics
    class function get_LabelProperty: IDependencyProperty; static; inline;
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class property IconProperty: IDependencyProperty read get_IconProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property LabelProperty: IDependencyProperty read get_LabelProperty;

    // -> IAppBarToggleButtonStatics3
    class function get_LabelPositionProperty: IDependencyProperty; static; inline;
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    class property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;

    // -> IAppBarToggleButtonStatics4
    class function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; static; inline;
    class property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;

    // -> IAppBarToggleButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarToggleButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ItemsControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IItemsControl
  // Implements: Windows.UI.Xaml.Controls.IItemsControl2
  // Implements: Windows.UI.Xaml.Controls.IItemsControl3
  // Implements: Windows.UI.Xaml.Controls.IItemsControlOverrides
  // Implements: Windows.UI.Xaml.Controls.IItemContainerMapping
  // Statics: "Windows.UI.Xaml.Controls.IItemsControlStatics"
  // Factory: "Windows.UI.Xaml.Controls.IItemsControlFactory"
  // Instantiable: "IItemsControl"
  TItemsControl = class(TWinRTGenericImportFSI<IItemsControlFactory, IItemsControlStatics, IItemsControl>)
  public
    // -> IItemsControlStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemsPanelProperty: IDependencyProperty; static; inline;
    class function get_DisplayMemberPathProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerTransitionsProperty: IDependencyProperty; static; inline;
    class function get_GroupStyleSelectorProperty: IDependencyProperty; static; inline;
    class function get_IsGroupingProperty: IDependencyProperty; static; inline;
    class function GetItemsOwner(element: IDependencyObject): IItemsControl; static; inline;
    class function ItemsControlFromItemContainer(container: IDependencyObject): IItemsControl; static; inline;
    class property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    class property GroupStyleSelectorProperty: IDependencyProperty read get_GroupStyleSelectorProperty;
    class property IsGroupingProperty: IDependencyProperty read get_IsGroupingProperty;
    class property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    class property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    class property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    class property ItemsPanelProperty: IDependencyProperty read get_ItemsPanelProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;

    // -> IItemsControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsControl; static; inline;
  end;

  // Windows.UI.Xaml.Controls.AutoSuggestBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAutoSuggestBox
  // Implements: Windows.UI.Xaml.Controls.IAutoSuggestBox2
  // Implements: Windows.UI.Xaml.Controls.IAutoSuggestBox3
  // Implements: Windows.UI.Xaml.Controls.IAutoSuggestBox4
  // Statics: "Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics"
  // Statics: "Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IAutoSuggestBoxStatics4"
  // Instantiable: "IAutoSuggestBox"
  TAutoSuggestBox = class(TWinRTGenericImportS4I<IAutoSuggestBoxStatics, IAutoSuggestBoxStatics2, IAutoSuggestBoxStatics3, IAutoSuggestBoxStatics4, IAutoSuggestBox>)
  public
    // -> IAutoSuggestBoxStatics
    class function get_MaxSuggestionListHeightProperty: IDependencyProperty; static; inline;
    class function get_IsSuggestionListOpenProperty: IDependencyProperty; static; inline;
    class function get_TextMemberPathProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_UpdateTextOnSelectProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_AutoMaximizeSuggestionAreaProperty: IDependencyProperty; static; inline;
    class function get_TextBoxStyleProperty: IDependencyProperty; static; inline;
    class property AutoMaximizeSuggestionAreaProperty: IDependencyProperty read get_AutoMaximizeSuggestionAreaProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property IsSuggestionListOpenProperty: IDependencyProperty read get_IsSuggestionListOpenProperty;
    class property MaxSuggestionListHeightProperty: IDependencyProperty read get_MaxSuggestionListHeightProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    class property TextMemberPathProperty: IDependencyProperty read get_TextMemberPathProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
    class property UpdateTextOnSelectProperty: IDependencyProperty read get_UpdateTextOnSelectProperty;

    // -> IAutoSuggestBoxStatics2
    class function get_QueryIconProperty: IDependencyProperty; static; inline;
    class property QueryIconProperty: IDependencyProperty read get_QueryIconProperty;

    // -> IAutoSuggestBoxStatics3
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> IAutoSuggestBoxStatics4
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
  end;

  // Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs
  // Instantiable: "IAutoSuggestBoxQuerySubmittedEventArgs"
  TAutoSuggestBoxQuerySubmittedEventArgs = class(TWinRTGenericImportI<IAutoSuggestBoxQuerySubmittedEventArgs>) end;

  // Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs
  // Instantiable: "IAutoSuggestBoxSuggestionChosenEventArgs"
  TAutoSuggestBoxSuggestionChosenEventArgs = class(TWinRTGenericImportI<IAutoSuggestBoxSuggestionChosenEventArgs>) end;

  // Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs
  // Statics: "Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics"
  // Instantiable: "IAutoSuggestBoxTextChangedEventArgs"
  TAutoSuggestBoxTextChangedEventArgs = class(TWinRTGenericImportSI<IAutoSuggestBoxTextChangedEventArgsStatics, IAutoSuggestBoxTextChangedEventArgs>)
  public
    // -> IAutoSuggestBoxTextChangedEventArgsStatics
    class function get_ReasonProperty: IDependencyProperty; static; inline;
    class property ReasonProperty: IDependencyProperty read get_ReasonProperty;
  end;

  // Windows.UI.Xaml.Controls.BackClickEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IBackClickEventArgs
  // Instantiable: "IBackClickEventArgs"
  TBackClickEventArgs = class(TWinRTGenericImportI<IBackClickEventArgs>) end;

  // Windows.UI.Xaml.Controls.IconElement
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IIconElement
  // Statics: "Windows.UI.Xaml.Controls.IIconElementStatics"
  // Factory: "Windows.UI.Xaml.Controls.IIconElementFactory"
  // Instantiable: "IIconElement"
  TIconElement = class(TWinRTGenericImportFSI<IIconElementFactory, IIconElementStatics, IIconElement>)
  public
    // -> IIconElementStatics
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;

    // -> IIconElementFactory
  end;

  // Windows.UI.Xaml.Controls.BitmapIcon
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IBitmapIcon
  // Implements: Windows.UI.Xaml.Controls.IBitmapIcon2
  // Statics: "Windows.UI.Xaml.Controls.IBitmapIconStatics"
  // Statics: "Windows.UI.Xaml.Controls.IBitmapIconStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IBitmapIconFactory"
  // Instantiable: "IBitmapIcon"
  TBitmapIcon = class(TWinRTGenericImportFS2I<IBitmapIconFactory, IBitmapIconStatics, IBitmapIconStatics2, IBitmapIcon>)
  public
    // -> IBitmapIconStatics
    class function get_UriSourceProperty: IDependencyProperty; static; inline;
    class property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;

    // -> IBitmapIconStatics2
    class function get_ShowAsMonochromeProperty: IDependencyProperty; static; inline;
    class property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;

    // -> IBitmapIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIcon; static; inline;
  end;

  // Windows.UI.Xaml.Controls.IconSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IIconSource
  // Statics: "Windows.UI.Xaml.Controls.IIconSourceStatics"
  // Factory: "Windows.UI.Xaml.Controls.IIconSourceFactory"
  // Instantiable: "IIconSource"
  TIconSource = class(TWinRTGenericImportFSI<IIconSourceFactory, IIconSourceStatics, IIconSource>)
  public
    // -> IIconSourceStatics
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;

    // -> IIconSourceFactory
  end;

  // Windows.UI.Xaml.Controls.BitmapIconSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IBitmapIconSource
  // Statics: "Windows.UI.Xaml.Controls.IBitmapIconSourceStatics"
  // Factory: "Windows.UI.Xaml.Controls.IBitmapIconSourceFactory"
  // Instantiable: "IBitmapIconSource"
  TBitmapIconSource = class(TWinRTGenericImportFSI<IBitmapIconSourceFactory, IBitmapIconSourceStatics, IBitmapIconSource>)
  public
    // -> IBitmapIconSourceStatics
    class function get_UriSourceProperty: IDependencyProperty; static; inline;
    class function get_ShowAsMonochromeProperty: IDependencyProperty; static; inline;
    class property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;
    class property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;

    // -> IBitmapIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIconSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Border
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IBorder
  // Implements: Windows.UI.Xaml.Controls.IBorder2
  // Statics: "Windows.UI.Xaml.Controls.IBorderStatics"
  // Statics: "Windows.UI.Xaml.Controls.IBorderStatics2"
  // Instantiable: "IBorder"
  TBorder = class(TWinRTGenericImportS2I<IBorderStatics, IBorderStatics2, IBorder>)
  public
    // -> IBorderStatics
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_ChildTransitionsProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;

    // -> IBorderStatics2
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
  end;

  // Windows.UI.Xaml.Controls.CalendarDatePicker
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICalendarDatePicker
  // Implements: Windows.UI.Xaml.Controls.ICalendarDatePicker2
  // Implements: Windows.UI.Xaml.Controls.ICalendarDatePicker3
  // Statics: "Windows.UI.Xaml.Controls.ICalendarDatePickerStatics"
  // Statics: "Windows.UI.Xaml.Controls.ICalendarDatePickerStatics2"
  // Statics: "Windows.UI.Xaml.Controls.ICalendarDatePickerStatics3"
  // Factory: "Windows.UI.Xaml.Controls.ICalendarDatePickerFactory"
  // Instantiable: "ICalendarDatePicker"
  TCalendarDatePicker = class(TWinRTGenericImportFS3I<ICalendarDatePickerFactory, ICalendarDatePickerStatics, ICalendarDatePickerStatics2, ICalendarDatePickerStatics3, ICalendarDatePicker>)
  public
    // -> ICalendarDatePickerStatics
    class function get_DateProperty: IDependencyProperty; static; inline;
    class function get_IsCalendarOpenProperty: IDependencyProperty; static; inline;
    class function get_DateFormatProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_CalendarViewStyleProperty: IDependencyProperty; static; inline;
    class function get_MinDateProperty: IDependencyProperty; static; inline;
    class function get_MaxDateProperty: IDependencyProperty; static; inline;
    class function get_IsTodayHighlightedProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_FirstDayOfWeekProperty: IDependencyProperty; static; inline;
    class function get_DayOfWeekFormatProperty: IDependencyProperty; static; inline;
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_IsOutOfScopeEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsGroupLabelVisibleProperty: IDependencyProperty; static; inline;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property CalendarViewStyleProperty: IDependencyProperty read get_CalendarViewStyleProperty;
    class property DateFormatProperty: IDependencyProperty read get_DateFormatProperty;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsCalendarOpenProperty: IDependencyProperty read get_IsCalendarOpenProperty;
    class property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    class property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    class property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    class property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    class property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;

    // -> ICalendarDatePickerStatics2
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> ICalendarDatePickerStatics3
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;

    // -> ICalendarDatePickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarDatePicker; static; inline;
  end;

  // Windows.UI.Xaml.Controls.CalendarView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICalendarView
  // Statics: "Windows.UI.Xaml.Controls.ICalendarViewStatics"
  // Factory: "Windows.UI.Xaml.Controls.ICalendarViewFactory"
  // Instantiable: "ICalendarView"
  TCalendarView = class(TWinRTGenericImportFSI<ICalendarViewFactory, ICalendarViewStatics, ICalendarView>)
  public
    // -> ICalendarViewStatics
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_DayOfWeekFormatProperty: IDependencyProperty; static; inline;
    class function get_IsGroupLabelVisibleProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_FirstDayOfWeekProperty: IDependencyProperty; static; inline;
    class function get_IsOutOfScopeEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsTodayHighlightedProperty: IDependencyProperty; static; inline;
    class function get_MaxDateProperty: IDependencyProperty; static; inline;
    class function get_MinDateProperty: IDependencyProperty; static; inline;
    class function get_NumberOfWeeksInViewProperty: IDependencyProperty; static; inline;
    class function get_SelectedDatesProperty: IDependencyProperty; static; inline;
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class function get_FocusBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedHoverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedPressedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_HoverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_PressedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_OutOfScopeBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PressedForegroundProperty: IDependencyProperty; static; inline;
    class function get_TodayForegroundProperty: IDependencyProperty; static; inline;
    class function get_BlackoutForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedForegroundProperty: IDependencyProperty; static; inline;
    class function get_OutOfScopeForegroundProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemForegroundProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontSizeProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontStyleProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontWeightProperty: IDependencyProperty; static; inline;
    class function get_TodayFontWeightProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontSizeProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontStyleProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontWeightProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontSizeProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontStyleProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontWeightProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty; static; inline;
    class function get_HorizontalDayItemAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalDayItemAlignmentProperty: IDependencyProperty; static; inline;
    class function get_HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CalendarViewDayItemStyleProperty: IDependencyProperty; static; inline;
    class property BlackoutForegroundProperty: IDependencyProperty read get_BlackoutForegroundProperty;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property CalendarItemBackgroundProperty: IDependencyProperty read get_CalendarItemBackgroundProperty;
    class property CalendarItemBorderBrushProperty: IDependencyProperty read get_CalendarItemBorderBrushProperty;
    class property CalendarItemBorderThicknessProperty: IDependencyProperty read get_CalendarItemBorderThicknessProperty;
    class property CalendarItemForegroundProperty: IDependencyProperty read get_CalendarItemForegroundProperty;
    class property CalendarViewDayItemStyleProperty: IDependencyProperty read get_CalendarViewDayItemStyleProperty;
    class property DayItemFontFamilyProperty: IDependencyProperty read get_DayItemFontFamilyProperty;
    class property DayItemFontSizeProperty: IDependencyProperty read get_DayItemFontSizeProperty;
    class property DayItemFontStyleProperty: IDependencyProperty read get_DayItemFontStyleProperty;
    class property DayItemFontWeightProperty: IDependencyProperty read get_DayItemFontWeightProperty;
    class property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    class property FirstOfMonthLabelFontFamilyProperty: IDependencyProperty read get_FirstOfMonthLabelFontFamilyProperty;
    class property FirstOfMonthLabelFontSizeProperty: IDependencyProperty read get_FirstOfMonthLabelFontSizeProperty;
    class property FirstOfMonthLabelFontStyleProperty: IDependencyProperty read get_FirstOfMonthLabelFontStyleProperty;
    class property FirstOfMonthLabelFontWeightProperty: IDependencyProperty read get_FirstOfMonthLabelFontWeightProperty;
    class property FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontFamilyProperty;
    class property FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontSizeProperty;
    class property FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontStyleProperty;
    class property FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontWeightProperty;
    class property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    class property HorizontalDayItemAlignmentProperty: IDependencyProperty read get_HorizontalDayItemAlignmentProperty;
    class property HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_HorizontalFirstOfMonthLabelAlignmentProperty;
    class property HoverBorderBrushProperty: IDependencyProperty read get_HoverBorderBrushProperty;
    class property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    class property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    class property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    class property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    class property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    class property MonthYearItemFontFamilyProperty: IDependencyProperty read get_MonthYearItemFontFamilyProperty;
    class property MonthYearItemFontSizeProperty: IDependencyProperty read get_MonthYearItemFontSizeProperty;
    class property MonthYearItemFontStyleProperty: IDependencyProperty read get_MonthYearItemFontStyleProperty;
    class property MonthYearItemFontWeightProperty: IDependencyProperty read get_MonthYearItemFontWeightProperty;
    class property NumberOfWeeksInViewProperty: IDependencyProperty read get_NumberOfWeeksInViewProperty;
    class property OutOfScopeBackgroundProperty: IDependencyProperty read get_OutOfScopeBackgroundProperty;
    class property OutOfScopeForegroundProperty: IDependencyProperty read get_OutOfScopeForegroundProperty;
    class property PressedBorderBrushProperty: IDependencyProperty read get_PressedBorderBrushProperty;
    class property PressedForegroundProperty: IDependencyProperty read get_PressedForegroundProperty;
    class property SelectedBorderBrushProperty: IDependencyProperty read get_SelectedBorderBrushProperty;
    class property SelectedDatesProperty: IDependencyProperty read get_SelectedDatesProperty;
    class property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    class property SelectedHoverBorderBrushProperty: IDependencyProperty read get_SelectedHoverBorderBrushProperty;
    class property SelectedPressedBorderBrushProperty: IDependencyProperty read get_SelectedPressedBorderBrushProperty;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    class property TodayFontWeightProperty: IDependencyProperty read get_TodayFontWeightProperty;
    class property TodayForegroundProperty: IDependencyProperty read get_TodayForegroundProperty;
    class property VerticalDayItemAlignmentProperty: IDependencyProperty read get_VerticalDayItemAlignmentProperty;
    class property VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_VerticalFirstOfMonthLabelAlignmentProperty;

    // -> ICalendarViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.CalendarViewDayItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICalendarViewDayItem
  // Statics: "Windows.UI.Xaml.Controls.ICalendarViewDayItemStatics"
  // Factory: "Windows.UI.Xaml.Controls.ICalendarViewDayItemFactory"
  // Instantiable: "ICalendarViewDayItem"
  TCalendarViewDayItem = class(TWinRTGenericImportFSI<ICalendarViewDayItemFactory, ICalendarViewDayItemStatics, ICalendarViewDayItem>)
  public
    // -> ICalendarViewDayItemStatics
    class function get_IsBlackoutProperty: IDependencyProperty; static; inline;
    class function get_DateProperty: IDependencyProperty; static; inline;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property IsBlackoutProperty: IDependencyProperty read get_IsBlackoutProperty;

    // -> ICalendarViewDayItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarViewDayItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Panel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPanel
  // Implements: Windows.UI.Xaml.Controls.IPanel2
  // Statics: "Windows.UI.Xaml.Controls.IPanelStatics"
  // Factory: "Windows.UI.Xaml.Controls.IPanelFactory"
  // Instantiable: "IPanel"
  TPanel = class(TWinRTGenericImportFSI<IPanelFactory, IPanelStatics, IPanel>)
  public
    // -> IPanelStatics
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_IsItemsHostProperty: IDependencyProperty; static; inline;
    class function get_ChildrenTransitionsProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property ChildrenTransitionsProperty: IDependencyProperty read get_ChildrenTransitionsProperty;
    class property IsItemsHostProperty: IDependencyProperty read get_IsItemsHostProperty;

    // -> IPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPanel; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Canvas
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICanvas
  // Statics: "Windows.UI.Xaml.Controls.ICanvasStatics"
  // Factory: "Windows.UI.Xaml.Controls.ICanvasFactory"
  // Instantiable: "ICanvas"
  TCanvas = class(TWinRTGenericImportFSI<ICanvasFactory, ICanvasStatics, ICanvas>)
  public
    // -> ICanvasStatics
    class function get_LeftProperty: IDependencyProperty; static; inline;
    class function GetLeft(element: IUIElement): Double; static; inline;
    class procedure SetLeft(element: IUIElement; length: Double); static; inline;
    class function get_TopProperty: IDependencyProperty; static; inline;
    class function GetTop(element: IUIElement): Double; static; inline;
    class procedure SetTop(element: IUIElement; length: Double); static; inline;
    class function get_ZIndexProperty: IDependencyProperty; static; inline;
    class function GetZIndex(element: IUIElement): Integer; static; inline;
    class procedure SetZIndex(element: IUIElement; value: Integer); static; inline;
    class property LeftProperty: IDependencyProperty read get_LeftProperty;
    class property TopProperty: IDependencyProperty read get_TopProperty;
    class property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;

    // -> ICanvasFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICanvas; static; inline;
  end;

  // Windows.UI.Xaml.Controls.CaptureElement
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICaptureElement
  // Statics: "Windows.UI.Xaml.Controls.ICaptureElementStatics"
  // Instantiable: "ICaptureElement"
  TCaptureElement = class(TWinRTGenericImportSI<ICaptureElementStatics, ICaptureElement>)
  public
    // -> ICaptureElementStatics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // Windows.UI.Xaml.Controls.CheckBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICheckBox
  // Factory: "Windows.UI.Xaml.Controls.ICheckBoxFactory"
  // Instantiable: "ICheckBox"
  TCheckBox = class(TWinRTGenericImportFI<ICheckBoxFactory, ICheckBox>)
  public
    // -> ICheckBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICheckBox; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs
  // Instantiable: "IChoosingGroupHeaderContainerEventArgs"
  TChoosingGroupHeaderContainerEventArgs = class(TWinRTGenericImportI<IChoosingGroupHeaderContainerEventArgs>) end;

  // Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs
  // Instantiable: "IChoosingItemContainerEventArgs"
  TChoosingItemContainerEventArgs = class(TWinRTGenericImportI<IChoosingItemContainerEventArgs>) end;

  // Windows.UI.Xaml.Controls.ColorPicker
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IColorPicker
  // Statics: "Windows.UI.Xaml.Controls.IColorPickerStatics"
  // Factory: "Windows.UI.Xaml.Controls.IColorPickerFactory"
  // Instantiable: "IColorPicker"
  TColorPicker = class(TWinRTGenericImportFSI<IColorPickerFactory, IColorPickerStatics, IColorPicker>)
  public
    // -> IColorPickerStatics
    class function get_ColorProperty: IDependencyProperty; static; inline;
    class function get_PreviousColorProperty: IDependencyProperty; static; inline;
    class function get_IsAlphaEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsColorSpectrumVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsColorPreviewVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsColorSliderVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsAlphaSliderVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsMoreButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsColorChannelTextInputVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsAlphaTextInputVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsHexInputVisibleProperty: IDependencyProperty; static; inline;
    class function get_MinHueProperty: IDependencyProperty; static; inline;
    class function get_MaxHueProperty: IDependencyProperty; static; inline;
    class function get_MinSaturationProperty: IDependencyProperty; static; inline;
    class function get_MaxSaturationProperty: IDependencyProperty; static; inline;
    class function get_MinValueProperty: IDependencyProperty; static; inline;
    class function get_MaxValueProperty: IDependencyProperty; static; inline;
    class function get_ColorSpectrumShapeProperty: IDependencyProperty; static; inline;
    class function get_ColorSpectrumComponentsProperty: IDependencyProperty; static; inline;
    class property ColorProperty: IDependencyProperty read get_ColorProperty;
    class property ColorSpectrumComponentsProperty: IDependencyProperty read get_ColorSpectrumComponentsProperty;
    class property ColorSpectrumShapeProperty: IDependencyProperty read get_ColorSpectrumShapeProperty;
    class property IsAlphaEnabledProperty: IDependencyProperty read get_IsAlphaEnabledProperty;
    class property IsAlphaSliderVisibleProperty: IDependencyProperty read get_IsAlphaSliderVisibleProperty;
    class property IsAlphaTextInputVisibleProperty: IDependencyProperty read get_IsAlphaTextInputVisibleProperty;
    class property IsColorChannelTextInputVisibleProperty: IDependencyProperty read get_IsColorChannelTextInputVisibleProperty;
    class property IsColorPreviewVisibleProperty: IDependencyProperty read get_IsColorPreviewVisibleProperty;
    class property IsColorSliderVisibleProperty: IDependencyProperty read get_IsColorSliderVisibleProperty;
    class property IsColorSpectrumVisibleProperty: IDependencyProperty read get_IsColorSpectrumVisibleProperty;
    class property IsHexInputVisibleProperty: IDependencyProperty read get_IsHexInputVisibleProperty;
    class property IsMoreButtonVisibleProperty: IDependencyProperty read get_IsMoreButtonVisibleProperty;
    class property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    class property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    class property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    class property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    class property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    class property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    class property PreviousColorProperty: IDependencyProperty read get_PreviousColorProperty;

    // -> IColorPickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IColorPicker; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ColumnDefinition
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IColumnDefinition
  // Statics: "Windows.UI.Xaml.Controls.IColumnDefinitionStatics"
  // Instantiable: "IColumnDefinition"
  TColumnDefinition = class(TWinRTGenericImportSI<IColumnDefinitionStatics, IColumnDefinition>)
  public
    // -> IColumnDefinitionStatics
    class function get_WidthProperty: IDependencyProperty; static; inline;
    class function get_MaxWidthProperty: IDependencyProperty; static; inline;
    class function get_MinWidthProperty: IDependencyProperty; static; inline;
    class property MaxWidthProperty: IDependencyProperty read get_MaxWidthProperty;
    class property MinWidthProperty: IDependencyProperty read get_MinWidthProperty;
    class property WidthProperty: IDependencyProperty read get_WidthProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.Selector
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ISelector
  // Statics: "Windows.UI.Xaml.Controls.Primitives.ISelectorStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.ISelectorFactory"
  // Instantiable: "Primitives_ISelector"
  TPrimitives_Selector = class(TWinRTGenericImportFSI<Primitives_ISelectorFactory, Primitives_ISelectorStatics, Primitives_ISelector>)
  public
    // -> Primitives_ISelectorStatics
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_SelectedValueProperty: IDependencyProperty; static; inline;
    class function get_SelectedValuePathProperty: IDependencyProperty; static; inline;
    class function get_IsSynchronizedWithCurrentItemProperty: IDependencyProperty; static; inline;
    class function GetIsSelectionActive(element: IDependencyObject): Boolean; static; inline;
    class property IsSynchronizedWithCurrentItemProperty: IDependencyProperty read get_IsSynchronizedWithCurrentItemProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    class property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;

    // -> Primitives_ISelectorFactory
  end;

  // Windows.UI.Xaml.Controls.ComboBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IComboBox
  // Implements: Windows.UI.Xaml.Controls.IComboBox2
  // Implements: Windows.UI.Xaml.Controls.IComboBox3
  // Implements: Windows.UI.Xaml.Controls.IComboBox4
  // Implements: Windows.UI.Xaml.Controls.IComboBox5
  // Implements: Windows.UI.Xaml.Controls.IComboBox6
  // Implements: Windows.UI.Xaml.Controls.IComboBoxOverrides
  // Statics: "Windows.UI.Xaml.Controls.IComboBoxStatics"
  // Statics: "Windows.UI.Xaml.Controls.IComboBoxStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IComboBoxStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IComboBoxStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IComboBoxStatics5"
  // Statics: "Windows.UI.Xaml.Controls.IComboBoxStatics6"
  // Factory: "Windows.UI.Xaml.Controls.IComboBoxFactory"
  // Instantiable: "IComboBox"
  TComboBox = class(TWinRTGenericImportFS6I<IComboBoxFactory, IComboBoxStatics, IComboBoxStatics2, IComboBoxStatics3, IComboBoxStatics4, IComboBoxStatics5, IComboBoxStatics6, IComboBox>)
  public
    // -> IComboBoxStatics
    class function get_IsDropDownOpenProperty: IDependencyProperty; static; inline;
    class function get_MaxDropDownHeightProperty: IDependencyProperty; static; inline;
    class property IsDropDownOpenProperty: IDependencyProperty read get_IsDropDownOpenProperty;
    class property MaxDropDownHeightProperty: IDependencyProperty read get_MaxDropDownHeightProperty;

    // -> IComboBoxStatics2
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;

    // -> IComboBoxStatics3
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_IsTextSearchEnabledProperty: IDependencyProperty; static; inline;
    class property IsTextSearchEnabledProperty: IDependencyProperty read get_IsTextSearchEnabledProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> IComboBoxStatics4
    class function get_SelectionChangedTriggerProperty: IDependencyProperty; static; inline;
    class property SelectionChangedTriggerProperty: IDependencyProperty read get_SelectionChangedTriggerProperty;

    // -> IComboBoxStatics5
    class function get_PlaceholderForegroundProperty: IDependencyProperty; static; inline;
    class property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;

    // -> IComboBoxStatics6
    class function get_IsEditableProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_TextBoxStyleProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property IsEditableProperty: IDependencyProperty read get_IsEditableProperty;
    class property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;

    // -> IComboBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBox; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.SelectorItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ISelectorItem
  // Statics: "Windows.UI.Xaml.Controls.Primitives.ISelectorItemStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.ISelectorItemFactory"
  // Instantiable: "Primitives_ISelectorItem"
  TPrimitives_SelectorItem = class(TWinRTGenericImportFSI<Primitives_ISelectorItemFactory, Primitives_ISelectorItemStatics, Primitives_ISelectorItem>)
  public
    // -> Primitives_ISelectorItemStatics
    class function get_IsSelectedProperty: IDependencyProperty; static; inline;
    class property IsSelectedProperty: IDependencyProperty read get_IsSelectedProperty;

    // -> Primitives_ISelectorItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ISelectorItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ComboBoxItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IComboBoxItem
  // Factory: "Windows.UI.Xaml.Controls.IComboBoxItemFactory"
  // Instantiable: "IComboBoxItem"
  TComboBoxItem = class(TWinRTGenericImportFI<IComboBoxItemFactory, IComboBoxItem>)
  public
    // -> IComboBoxItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBoxItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.CommandBar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICommandBar
  // Implements: Windows.UI.Xaml.Controls.ICommandBar2
  // Implements: Windows.UI.Xaml.Controls.ICommandBar3
  // Statics: "Windows.UI.Xaml.Controls.ICommandBarStatics"
  // Statics: "Windows.UI.Xaml.Controls.ICommandBarStatics2"
  // Statics: "Windows.UI.Xaml.Controls.ICommandBarStatics3"
  // Factory: "Windows.UI.Xaml.Controls.ICommandBarFactory"
  // Instantiable: "ICommandBar"
  TCommandBar = class(TWinRTGenericImportFS3I<ICommandBarFactory, ICommandBarStatics, ICommandBarStatics2, ICommandBarStatics3, ICommandBar>)
  public
    // -> ICommandBarStatics
    class function get_PrimaryCommandsProperty: IDependencyProperty; static; inline;
    class function get_SecondaryCommandsProperty: IDependencyProperty; static; inline;
    class property PrimaryCommandsProperty: IDependencyProperty read get_PrimaryCommandsProperty;
    class property SecondaryCommandsProperty: IDependencyProperty read get_SecondaryCommandsProperty;

    // -> ICommandBarStatics2
    class function get_CommandBarOverflowPresenterStyleProperty: IDependencyProperty; static; inline;
    class property CommandBarOverflowPresenterStyleProperty: IDependencyProperty read get_CommandBarOverflowPresenterStyleProperty;

    // -> ICommandBarStatics3
    class function get_DefaultLabelPositionProperty: IDependencyProperty; static; inline;
    class function get_OverflowButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_IsDynamicOverflowEnabledProperty: IDependencyProperty; static; inline;
    class property DefaultLabelPositionProperty: IDependencyProperty read get_DefaultLabelPositionProperty;
    class property IsDynamicOverflowEnabledProperty: IDependencyProperty read get_IsDynamicOverflowEnabledProperty;
    class property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;

    // -> ICommandBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBar; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.FlyoutBase
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBase
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBase3
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBase4
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBase5
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBase6
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics2"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics3"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics5"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics6"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory"
  // Instantiable: "Primitives_IFlyoutBase"
  TPrimitives_FlyoutBase = class(TWinRTGenericImportFS5I<Primitives_IFlyoutBaseFactory, Primitives_IFlyoutBaseStatics, Primitives_IFlyoutBaseStatics2, Primitives_IFlyoutBaseStatics3, Primitives_IFlyoutBaseStatics5, Primitives_IFlyoutBaseStatics6, Primitives_IFlyoutBase>)
  public
    // -> Primitives_IFlyoutBaseStatics
    class function get_PlacementProperty: IDependencyProperty; static; inline;
    class function get_AttachedFlyoutProperty: IDependencyProperty; static; inline;
    class function GetAttachedFlyout(element: IFrameworkElement): Primitives_IFlyoutBase; static; inline;
    class procedure SetAttachedFlyout(element: IFrameworkElement; value: Primitives_IFlyoutBase); static; inline;
    class procedure ShowAttachedFlyout(flyoutOwner: IFrameworkElement); static; inline;
    class property AttachedFlyoutProperty: IDependencyProperty read get_AttachedFlyoutProperty;
    class property PlacementProperty: IDependencyProperty read get_PlacementProperty;

    // -> Primitives_IFlyoutBaseStatics2
    class function get_AllowFocusOnInteractionProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_AllowFocusWhenDisabledProperty: IDependencyProperty; static; inline;
    class function get_ElementSoundModeProperty: IDependencyProperty; static; inline;
    class property AllowFocusOnInteractionProperty: IDependencyProperty read get_AllowFocusOnInteractionProperty;
    class property AllowFocusWhenDisabledProperty: IDependencyProperty read get_AllowFocusWhenDisabledProperty;
    class property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> Primitives_IFlyoutBaseStatics3
    class function get_OverlayInputPassThroughElementProperty: IDependencyProperty; static; inline;
    class property OverlayInputPassThroughElementProperty: IDependencyProperty read get_OverlayInputPassThroughElementProperty;

    // -> Primitives_IFlyoutBaseStatics5
    class function get_TargetProperty: IDependencyProperty; static; inline;
    class function get_ShowModeProperty: IDependencyProperty; static; inline;
    class function get_InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty; static; inline;
    class function get_AreOpenCloseAnimationsEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class property AreOpenCloseAnimationsEnabledProperty: IDependencyProperty read get_AreOpenCloseAnimationsEnabledProperty;
    class property InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty read get_InputDevicePrefersPrimaryCommandsProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property ShowModeProperty: IDependencyProperty read get_ShowModeProperty;
    class property TargetProperty: IDependencyProperty read get_TargetProperty;

    // -> Primitives_IFlyoutBaseStatics6
    class function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; static; inline;
    class property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;

    // -> Primitives_IFlyoutBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutBase; static; inline;
  end;

  // Windows.UI.Xaml.Controls.CommandBarFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICommandBarFlyout
  // Factory: "Windows.UI.Xaml.Controls.ICommandBarFlyoutFactory"
  // Instantiable: "ICommandBarFlyout"
  TCommandBarFlyout = class(TWinRTGenericImportFI<ICommandBarFlyoutFactory, ICommandBarFlyout>)
  public
    // -> ICommandBarFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarFlyout; static; inline;
  end;

  // Windows.UI.Xaml.Controls.CommandBarOverflowPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ICommandBarOverflowPresenter
  // Factory: "Windows.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory"
  // Instantiable: "ICommandBarOverflowPresenter"
  TCommandBarOverflowPresenter = class(TWinRTGenericImportFI<ICommandBarOverflowPresenterFactory, ICommandBarOverflowPresenter>)
  public
    // -> ICommandBarOverflowPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarOverflowPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs
  // Instantiable: "IContainerContentChangingEventArgs"
  TContainerContentChangingEventArgs = class(TWinRTGenericImportI<IContainerContentChangingEventArgs>) end;

  // Windows.UI.Xaml.Controls.ContentDialog
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IContentDialog
  // Implements: Windows.UI.Xaml.Controls.IContentDialog2
  // Implements: Windows.UI.Xaml.Controls.IContentDialog3
  // Statics: "Windows.UI.Xaml.Controls.IContentDialogStatics"
  // Statics: "Windows.UI.Xaml.Controls.IContentDialogStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IContentDialogFactory"
  // Instantiable: "IContentDialog"
  TContentDialog = class(TWinRTGenericImportFS2I<IContentDialogFactory, IContentDialogStatics, IContentDialogStatics2, IContentDialog>)
  public
    // -> IContentDialogStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_TitleTemplateProperty: IDependencyProperty; static; inline;
    class function get_FullSizeDesiredProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonTextProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonTextProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_IsPrimaryButtonEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsSecondaryButtonEnabledProperty: IDependencyProperty; static; inline;
    class property FullSizeDesiredProperty: IDependencyProperty read get_FullSizeDesiredProperty;
    class property IsPrimaryButtonEnabledProperty: IDependencyProperty read get_IsPrimaryButtonEnabledProperty;
    class property IsSecondaryButtonEnabledProperty: IDependencyProperty read get_IsSecondaryButtonEnabledProperty;
    class property PrimaryButtonCommandParameterProperty: IDependencyProperty read get_PrimaryButtonCommandParameterProperty;
    class property PrimaryButtonCommandProperty: IDependencyProperty read get_PrimaryButtonCommandProperty;
    class property PrimaryButtonTextProperty: IDependencyProperty read get_PrimaryButtonTextProperty;
    class property SecondaryButtonCommandParameterProperty: IDependencyProperty read get_SecondaryButtonCommandParameterProperty;
    class property SecondaryButtonCommandProperty: IDependencyProperty read get_SecondaryButtonCommandProperty;
    class property SecondaryButtonTextProperty: IDependencyProperty read get_SecondaryButtonTextProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;
    class property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;

    // -> IContentDialogStatics2
    class function get_CloseButtonTextProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_DefaultButtonProperty: IDependencyProperty; static; inline;
    class property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    class property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    class property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    class property CloseButtonTextProperty: IDependencyProperty read get_CloseButtonTextProperty;
    class property DefaultButtonProperty: IDependencyProperty read get_DefaultButtonProperty;
    class property PrimaryButtonStyleProperty: IDependencyProperty read get_PrimaryButtonStyleProperty;
    class property SecondaryButtonStyleProperty: IDependencyProperty read get_SecondaryButtonStyleProperty;

    // -> IContentDialogFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentDialog; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ContentPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IContentPresenter
  // Implements: Windows.UI.Xaml.Controls.IContentPresenter2
  // Implements: Windows.UI.Xaml.Controls.IContentPresenter3
  // Implements: Windows.UI.Xaml.Controls.IContentPresenter4
  // Implements: Windows.UI.Xaml.Controls.IContentPresenter5
  // Implements: Windows.UI.Xaml.Controls.IContentPresenterOverrides
  // Statics: "Windows.UI.Xaml.Controls.IContentPresenterStatics"
  // Statics: "Windows.UI.Xaml.Controls.IContentPresenterStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IContentPresenterStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IContentPresenterStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IContentPresenterStatics5"
  // Factory: "Windows.UI.Xaml.Controls.IContentPresenterFactory"
  // Instantiable: "IContentPresenter"
  TContentPresenter = class(TWinRTGenericImportFS5I<IContentPresenterFactory, IContentPresenterStatics, IContentPresenterStatics2, IContentPresenterStatics3, IContentPresenterStatics4, IContentPresenterStatics5, IContentPresenter>)
  public
    // -> IContentPresenterStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ContentTransitionsProperty: IDependencyProperty; static; inline;
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    class property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    class property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;

    // -> IContentPresenterStatics2
    class function get_OpticalMarginAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextLineBoundsProperty: IDependencyProperty; static; inline;
    class property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    class property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;

    // -> IContentPresenterStatics3
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;

    // -> IContentPresenterStatics4
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class function get_LineStackingStrategyProperty: IDependencyProperty; static; inline;
    class function get_LineHeightProperty: IDependencyProperty; static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_HorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    class property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    class property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
    class property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;

    // -> IContentPresenterStatics5
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;

    // -> IContentPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ControlTemplate
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IControlTemplate
  // Instantiable: "IControlTemplate"
  TControlTemplate = class(TWinRTGenericImportI<IControlTemplate>) end;

  // Windows.UI.Xaml.Controls.DataTemplateSelector
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDataTemplateSelector
  // Implements: Windows.UI.Xaml.Controls.IDataTemplateSelector2
  // Implements: Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides
  // Implements: Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2
  // Implements: Windows.UI.Xaml.IElementFactory
  // Factory: "Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory"
  // Instantiable: "IDataTemplateSelector"
  TDataTemplateSelector = class(TWinRTGenericImportFI<IDataTemplateSelectorFactory, IDataTemplateSelector>)
  public
    // -> IDataTemplateSelectorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDataTemplateSelector; static; inline;
  end;

  // Windows.UI.Xaml.Controls.DatePickedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDatePickedEventArgs
  // Instantiable: "IDatePickedEventArgs"
  TDatePickedEventArgs = class(TWinRTGenericImportI<IDatePickedEventArgs>) end;

  // Windows.UI.Xaml.Controls.DatePicker
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDatePicker
  // Implements: Windows.UI.Xaml.Controls.IDatePicker2
  // Implements: Windows.UI.Xaml.Controls.IDatePicker3
  // Statics: "Windows.UI.Xaml.Controls.IDatePickerStatics"
  // Statics: "Windows.UI.Xaml.Controls.IDatePickerStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IDatePickerStatics3"
  // Factory: "Windows.UI.Xaml.Controls.IDatePickerFactory"
  // Instantiable: "IDatePicker"
  TDatePicker = class(TWinRTGenericImportFS3I<IDatePickerFactory, IDatePickerStatics, IDatePickerStatics2, IDatePickerStatics3, IDatePicker>)
  public
    // -> IDatePickerStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_DateProperty: IDependencyProperty; static; inline;
    class function get_DayVisibleProperty: IDependencyProperty; static; inline;
    class function get_MonthVisibleProperty: IDependencyProperty; static; inline;
    class function get_YearVisibleProperty: IDependencyProperty; static; inline;
    class function get_DayFormatProperty: IDependencyProperty; static; inline;
    class function get_MonthFormatProperty: IDependencyProperty; static; inline;
    class function get_YearFormatProperty: IDependencyProperty; static; inline;
    class function get_MinYearProperty: IDependencyProperty; static; inline;
    class function get_MaxYearProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    class property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    class property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    class property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    class property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
    class property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;

    // -> IDatePickerStatics2
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> IDatePickerStatics3
    class function get_SelectedDateProperty: IDependencyProperty; static; inline;
    class property SelectedDateProperty: IDependencyProperty read get_SelectedDateProperty;

    // -> IDatePickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDatePicker; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBase
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseOverrides
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory"
  // Instantiable: "Primitives_IPickerFlyoutBase"
  TPrimitives_PickerFlyoutBase = class(TWinRTGenericImportFSI<Primitives_IPickerFlyoutBaseFactory, Primitives_IPickerFlyoutBaseStatics, Primitives_IPickerFlyoutBase>)
  public
    // -> Primitives_IPickerFlyoutBaseStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function GetTitle(element: IDependencyObject): HSTRING; static; inline;
    class procedure SetTitle(element: IDependencyObject; value: HSTRING); static; inline;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> Primitives_IPickerFlyoutBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPickerFlyoutBase; static; inline;
  end;

  // Windows.UI.Xaml.Controls.DatePickerFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDatePickerFlyout
  // Implements: Windows.UI.Xaml.Controls.IDatePickerFlyout2
  // Statics: "Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics"
  // Statics: "Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics2"
  // Instantiable: "IDatePickerFlyout"
  TDatePickerFlyout = class(TWinRTGenericImportS2I<IDatePickerFlyoutStatics, IDatePickerFlyoutStatics2, IDatePickerFlyout>)
  public
    // -> IDatePickerFlyoutStatics
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_DateProperty: IDependencyProperty; static; inline;
    class function get_DayVisibleProperty: IDependencyProperty; static; inline;
    class function get_MonthVisibleProperty: IDependencyProperty; static; inline;
    class function get_YearVisibleProperty: IDependencyProperty; static; inline;
    class function get_MinYearProperty: IDependencyProperty; static; inline;
    class function get_MaxYearProperty: IDependencyProperty; static; inline;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    class property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    class property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    class property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    class property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;

    // -> IDatePickerFlyoutStatics2
    class function get_DayFormatProperty: IDependencyProperty; static; inline;
    class function get_MonthFormatProperty: IDependencyProperty; static; inline;
    class function get_YearFormatProperty: IDependencyProperty; static; inline;
    class property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    class property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    class property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
  end;

  // Windows.UI.Xaml.Controls.DatePickerFlyoutItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDatePickerFlyoutItem
  // Implements: Windows.UI.Xaml.Data.ICustomPropertyProvider
  // Statics: "Windows.UI.Xaml.Controls.IDatePickerFlyoutItemStatics"
  TDatePickerFlyoutItem = class(TWinRTGenericImportS<IDatePickerFlyoutItemStatics>)
  public
    // -> IDatePickerFlyoutItemStatics
    class function get_PrimaryTextProperty: IDependencyProperty; static; inline;
    class function get_SecondaryTextProperty: IDependencyProperty; static; inline;
    class property PrimaryTextProperty: IDependencyProperty read get_PrimaryTextProperty;
    class property SecondaryTextProperty: IDependencyProperty read get_SecondaryTextProperty;
  end;

  // Windows.UI.Xaml.Controls.DatePickerFlyoutPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter
  // Implements: Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenter2
  // Statics: "Windows.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics2"
  TDatePickerFlyoutPresenter = class(TWinRTGenericImportS<IDatePickerFlyoutPresenterStatics2>)
  public
    // -> IDatePickerFlyoutPresenterStatics2
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // Windows.UI.Xaml.Controls.DragItemsStartingEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs
  // Instantiable: "IDragItemsStartingEventArgs"
  TDragItemsStartingEventArgs = class(TWinRTGenericImportI<IDragItemsStartingEventArgs>) end;

  // Windows.UI.Xaml.Controls.DropDownButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDropDownButton
  // Factory: "Windows.UI.Xaml.Controls.IDropDownButtonFactory"
  // Instantiable: "IDropDownButton"
  TDropDownButton = class(TWinRTGenericImportFI<IDropDownButtonFactory, IDropDownButton>)
  public
    // -> IDropDownButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.DropDownButtonAutomationPeer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeer
  // Implements: Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
  // Factory: "Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeerFactory"
  // Instantiable: "IDropDownButtonAutomationPeer"
  TDropDownButtonAutomationPeer = class(TWinRTGenericImportFI<IDropDownButtonAutomationPeerFactory, IDropDownButtonAutomationPeer>)
  public
    // -> IDropDownButtonAutomationPeerFactory
    class function CreateInstance(owner: IDropDownButton; baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButtonAutomationPeer; static; inline;
  end;

  // Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs
  // Instantiable: "IDynamicOverflowItemsChangingEventArgs"
  TDynamicOverflowItemsChangingEventArgs = class(TWinRTGenericImportI<IDynamicOverflowItemsChangingEventArgs>) end;

  // Windows.UI.Xaml.Controls.FlipView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IFlipView
  // Implements: Windows.UI.Xaml.Controls.IFlipView2
  // Statics: "Windows.UI.Xaml.Controls.IFlipViewStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IFlipViewFactory"
  // Instantiable: "IFlipView"
  TFlipView = class(TWinRTGenericImportFSI<IFlipViewFactory, IFlipViewStatics2, IFlipView>)
  public
    // -> IFlipViewStatics2
    class function get_UseTouchAnimationsForAllNavigationProperty: IDependencyProperty; static; inline;
    class property UseTouchAnimationsForAllNavigationProperty: IDependencyProperty read get_UseTouchAnimationsForAllNavigationProperty;

    // -> IFlipViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.FlipViewItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IFlipViewItem
  // Factory: "Windows.UI.Xaml.Controls.IFlipViewItemFactory"
  // Instantiable: "IFlipViewItem"
  TFlipViewItem = class(TWinRTGenericImportFI<IFlipViewItemFactory, IFlipViewItem>)
  public
    // -> IFlipViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipViewItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Flyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IFlyout
  // Statics: "Windows.UI.Xaml.Controls.IFlyoutStatics"
  // Factory: "Windows.UI.Xaml.Controls.IFlyoutFactory"
  // Instantiable: "IFlyout"
  TFlyout = class(TWinRTGenericImportFSI<IFlyoutFactory, IFlyoutStatics, IFlyout>)
  public
    // -> IFlyoutStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_FlyoutPresenterStyleProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property FlyoutPresenterStyleProperty: IDependencyProperty read get_FlyoutPresenterStyleProperty;

    // -> IFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyout; static; inline;
  end;

  // Windows.UI.Xaml.Controls.FlyoutPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IFlyoutPresenter
  // Implements: Windows.UI.Xaml.Controls.IFlyoutPresenter2
  // Statics: "Windows.UI.Xaml.Controls.IFlyoutPresenterStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IFlyoutPresenterFactory"
  // Instantiable: "IFlyoutPresenter"
  TFlyoutPresenter = class(TWinRTGenericImportFSI<IFlyoutPresenterFactory, IFlyoutPresenterStatics2, IFlyoutPresenter>)
  public
    // -> IFlyoutPresenterStatics2
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;

    // -> IFlyoutPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyoutPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.FontIcon
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IFontIcon
  // Implements: Windows.UI.Xaml.Controls.IFontIcon2
  // Implements: Windows.UI.Xaml.Controls.IFontIcon3
  // Statics: "Windows.UI.Xaml.Controls.IFontIconStatics"
  // Statics: "Windows.UI.Xaml.Controls.IFontIconStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IFontIconStatics3"
  // Factory: "Windows.UI.Xaml.Controls.IFontIconFactory"
  // Instantiable: "IFontIcon"
  TFontIcon = class(TWinRTGenericImportFS3I<IFontIconFactory, IFontIconStatics, IFontIconStatics2, IFontIconStatics3, IFontIcon>)
  public
    // -> IFontIconStatics
    class function get_GlyphProperty: IDependencyProperty; static; inline;
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property GlyphProperty: IDependencyProperty read get_GlyphProperty;

    // -> IFontIconStatics2
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;

    // -> IFontIconStatics3
    class function get_MirroredWhenRightToLeftProperty: IDependencyProperty; static; inline;
    class property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;

    // -> IFontIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIcon; static; inline;
  end;

  // Windows.UI.Xaml.Controls.FontIconSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IFontIconSource
  // Statics: "Windows.UI.Xaml.Controls.IFontIconSourceStatics"
  // Factory: "Windows.UI.Xaml.Controls.IFontIconSourceFactory"
  // Instantiable: "IFontIconSource"
  TFontIconSource = class(TWinRTGenericImportFSI<IFontIconSourceFactory, IFontIconSourceStatics, IFontIconSource>)
  public
    // -> IFontIconSourceStatics
    class function get_GlyphProperty: IDependencyProperty; static; inline;
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class function get_MirroredWhenRightToLeftProperty: IDependencyProperty; static; inline;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    class property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;

    // -> IFontIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIconSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Frame
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IFrame
  // Implements: Windows.UI.Xaml.Controls.IFrame2
  // Implements: Windows.UI.Xaml.Controls.IFrame3
  // Implements: Windows.UI.Xaml.Controls.IFrame4
  // Implements: Windows.UI.Xaml.Controls.IFrame5
  // Implements: Windows.UI.Xaml.Controls.INavigate
  // Statics: "Windows.UI.Xaml.Controls.IFrameStatics"
  // Statics: "Windows.UI.Xaml.Controls.IFrameStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IFrameStatics5"
  // Factory: "Windows.UI.Xaml.Controls.IFrameFactory"
  // Instantiable: "IFrame"
  TFrame = class(TWinRTGenericImportFS3I<IFrameFactory, IFrameStatics, IFrameStatics2, IFrameStatics5, IFrame>)
  public
    // -> IFrameStatics
    class function get_CacheSizeProperty: IDependencyProperty; static; inline;
    class function get_CanGoBackProperty: IDependencyProperty; static; inline;
    class function get_CanGoForwardProperty: IDependencyProperty; static; inline;
    class function get_CurrentSourcePageTypeProperty: IDependencyProperty; static; inline;
    class function get_SourcePageTypeProperty: IDependencyProperty; static; inline;
    class function get_BackStackDepthProperty: IDependencyProperty; static; inline;
    class property BackStackDepthProperty: IDependencyProperty read get_BackStackDepthProperty;
    class property CacheSizeProperty: IDependencyProperty read get_CacheSizeProperty;
    class property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    class property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    class property CurrentSourcePageTypeProperty: IDependencyProperty read get_CurrentSourcePageTypeProperty;
    class property SourcePageTypeProperty: IDependencyProperty read get_SourcePageTypeProperty;

    // -> IFrameStatics2
    class function get_BackStackProperty: IDependencyProperty; static; inline;
    class function get_ForwardStackProperty: IDependencyProperty; static; inline;
    class property BackStackProperty: IDependencyProperty read get_BackStackProperty;
    class property ForwardStackProperty: IDependencyProperty read get_ForwardStackProperty;

    // -> IFrameStatics5
    class function get_IsNavigationStackEnabledProperty: IDependencyProperty; static; inline;
    class property IsNavigationStackEnabledProperty: IDependencyProperty read get_IsNavigationStackEnabledProperty;

    // -> IFrameFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFrame; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Grid
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IGrid
  // Implements: Windows.UI.Xaml.Controls.IGrid2
  // Implements: Windows.UI.Xaml.Controls.IGrid3
  // Implements: Windows.UI.Xaml.Controls.IGrid4
  // Statics: "Windows.UI.Xaml.Controls.IGridStatics"
  // Statics: "Windows.UI.Xaml.Controls.IGridStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IGridStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IGridStatics4"
  // Factory: "Windows.UI.Xaml.Controls.IGridFactory"
  // Instantiable: "IGrid"
  TGrid = class(TWinRTGenericImportFS4I<IGridFactory, IGridStatics, IGridStatics2, IGridStatics3, IGridStatics4, IGrid>)
  public
    // -> IGridStatics
    class function get_RowProperty: IDependencyProperty; static; inline;
    class function GetRow(element: IFrameworkElement): Integer; static; inline;
    class procedure SetRow(element: IFrameworkElement; value: Integer); static; inline;
    class function get_ColumnProperty: IDependencyProperty; static; inline;
    class function GetColumn(element: IFrameworkElement): Integer; static; inline;
    class procedure SetColumn(element: IFrameworkElement; value: Integer); static; inline;
    class function get_RowSpanProperty: IDependencyProperty; static; inline;
    class function GetRowSpan(element: IFrameworkElement): Integer; static; inline;
    class procedure SetRowSpan(element: IFrameworkElement; value: Integer); static; inline;
    class function get_ColumnSpanProperty: IDependencyProperty; static; inline;
    class function GetColumnSpan(element: IFrameworkElement): Integer; static; inline;
    class procedure SetColumnSpan(element: IFrameworkElement; value: Integer); static; inline;
    class property ColumnProperty: IDependencyProperty read get_ColumnProperty;
    class property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    class property RowProperty: IDependencyProperty read get_RowProperty;
    class property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;

    // -> IGridStatics2
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;

    // -> IGridStatics3
    class function get_RowSpacingProperty: IDependencyProperty; static; inline;
    class function get_ColumnSpacingProperty: IDependencyProperty; static; inline;
    class property ColumnSpacingProperty: IDependencyProperty read get_ColumnSpacingProperty;
    class property RowSpacingProperty: IDependencyProperty read get_RowSpacingProperty;

    // -> IGridStatics4
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;

    // -> IGridFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGrid; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ListViewBase
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListViewBase
  // Implements: Windows.UI.Xaml.Controls.IListViewBase2
  // Implements: Windows.UI.Xaml.Controls.IListViewBase3
  // Implements: Windows.UI.Xaml.Controls.IListViewBase4
  // Implements: Windows.UI.Xaml.Controls.IListViewBase5
  // Implements: Windows.UI.Xaml.Controls.IListViewBase6
  // Implements: Windows.UI.Xaml.Controls.ISemanticZoomInformation
  // Statics: "Windows.UI.Xaml.Controls.IListViewBaseStatics"
  // Statics: "Windows.UI.Xaml.Controls.IListViewBaseStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IListViewBaseStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IListViewBaseStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IListViewBaseStatics5"
  // Factory: "Windows.UI.Xaml.Controls.IListViewBaseFactory"
  // Instantiable: "IListViewBase"
  TListViewBase = class(TWinRTGenericImportFS5I<IListViewBaseFactory, IListViewBaseStatics, IListViewBaseStatics2, IListViewBaseStatics3, IListViewBaseStatics4, IListViewBaseStatics5, IListViewBase>)
  public
    // -> IListViewBaseStatics
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class function get_IsSwipeEnabledProperty: IDependencyProperty; static; inline;
    class function get_CanDragItemsProperty: IDependencyProperty; static; inline;
    class function get_CanReorderItemsProperty: IDependencyProperty; static; inline;
    class function get_IsItemClickEnabledProperty: IDependencyProperty; static; inline;
    class function get_DataFetchSizeProperty: IDependencyProperty; static; inline;
    class function get_IncrementalLoadingThresholdProperty: IDependencyProperty; static; inline;
    class function get_IncrementalLoadingTriggerProperty: IDependencyProperty; static; inline;
    class function get_SemanticZoomOwnerProperty: IDependencyProperty; static; inline;
    class function get_IsActiveViewProperty: IDependencyProperty; static; inline;
    class function get_IsZoomedInViewProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_HeaderTransitionsProperty: IDependencyProperty; static; inline;
    class property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    class property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    class property DataFetchSizeProperty: IDependencyProperty read get_DataFetchSizeProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    class property IncrementalLoadingThresholdProperty: IDependencyProperty read get_IncrementalLoadingThresholdProperty;
    class property IncrementalLoadingTriggerProperty: IDependencyProperty read get_IncrementalLoadingTriggerProperty;
    class property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    class property IsItemClickEnabledProperty: IDependencyProperty read get_IsItemClickEnabledProperty;
    class property IsSwipeEnabledProperty: IDependencyProperty read get_IsSwipeEnabledProperty;
    class property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    class property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;

    // -> IListViewBaseStatics2
    class function get_ShowsScrollingPlaceholdersProperty: IDependencyProperty; static; inline;
    class function get_FooterProperty: IDependencyProperty; static; inline;
    class function get_FooterTemplateProperty: IDependencyProperty; static; inline;
    class function get_FooterTransitionsProperty: IDependencyProperty; static; inline;
    class property FooterProperty: IDependencyProperty read get_FooterProperty;
    class property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    class property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
    class property ShowsScrollingPlaceholdersProperty: IDependencyProperty read get_ShowsScrollingPlaceholdersProperty;

    // -> IListViewBaseStatics3
    class function get_ReorderModeProperty: IDependencyProperty; static; inline;
    class property ReorderModeProperty: IDependencyProperty read get_ReorderModeProperty;

    // -> IListViewBaseStatics4
    class function get_IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty; static; inline;
    class property IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty read get_IsMultiSelectCheckBoxEnabledProperty;

    // -> IListViewBaseStatics5
    class function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;

    // -> IListViewBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewBase; static; inline;
  end;

  // Windows.UI.Xaml.Controls.GridView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IGridView
  // Factory: "Windows.UI.Xaml.Controls.IGridViewFactory"
  // Instantiable: "IGridView"
  TGridView = class(TWinRTGenericImportFI<IGridViewFactory, IGridView>)
  public
    // -> IGridViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ListViewBaseHeaderItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListViewBaseHeaderItem
  // Factory: "Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory"
  // Instantiable: "IListViewBaseHeaderItem"
  TListViewBaseHeaderItem = class(TWinRTGenericImportFI<IListViewBaseHeaderItemFactory, IListViewBaseHeaderItem>)
  public
    // -> IListViewBaseHeaderItemFactory
  end;

  // Windows.UI.Xaml.Controls.GridViewHeaderItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IGridViewHeaderItem
  // Factory: "Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory"
  // Instantiable: "IGridViewHeaderItem"
  TGridViewHeaderItem = class(TWinRTGenericImportFI<IGridViewHeaderItemFactory, IGridViewHeaderItem>)
  public
    // -> IGridViewHeaderItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewHeaderItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.GridViewItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IGridViewItem
  // Factory: "Windows.UI.Xaml.Controls.IGridViewItemFactory"
  // Instantiable: "IGridViewItem"
  TGridViewItem = class(TWinRTGenericImportFI<IGridViewItemFactory, IGridViewItem>)
  public
    // -> IGridViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.GroupItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IGroupItem
  // Factory: "Windows.UI.Xaml.Controls.IGroupItemFactory"
  // Instantiable: "IGroupItem"
  TGroupItem = class(TWinRTGenericImportFI<IGroupItemFactory, IGroupItem>)
  public
    // -> IGroupItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.GroupStyle
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IGroupStyle
  // Implements: Windows.UI.Xaml.Controls.IGroupStyle2
  // Implements: Windows.UI.Xaml.Data.INotifyPropertyChanged
  // Factory: "Windows.UI.Xaml.Controls.IGroupStyleFactory"
  // Instantiable: "IGroupStyle"
  TGroupStyle = class(TWinRTGenericImportFI<IGroupStyleFactory, IGroupStyle>)
  public
    // -> IGroupStyleFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyle; static; inline;
  end;

  // Windows.UI.Xaml.Controls.GroupStyleSelector
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IGroupStyleSelector
  // Implements: Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides
  // Factory: "Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory"
  // Instantiable: "IGroupStyleSelector"
  TGroupStyleSelector = class(TWinRTGenericImportFI<IGroupStyleSelectorFactory, IGroupStyleSelector>)
  public
    // -> IGroupStyleSelectorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyleSelector; static; inline;
  end;

  // Windows.UI.Xaml.Controls.HandwritingView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IHandwritingView
  // Statics: "Windows.UI.Xaml.Controls.IHandwritingViewStatics"
  // Factory: "Windows.UI.Xaml.Controls.IHandwritingViewFactory"
  // Instantiable: "IHandwritingView"
  THandwritingView = class(TWinRTGenericImportFSI<IHandwritingViewFactory, IHandwritingViewStatics, IHandwritingView>)
  public
    // -> IHandwritingViewStatics
    class function get_PlacementTargetProperty: IDependencyProperty; static; inline;
    class function get_PlacementAlignmentProperty: IDependencyProperty; static; inline;
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_AreCandidatesEnabledProperty: IDependencyProperty; static; inline;
    class property AreCandidatesEnabledProperty: IDependencyProperty read get_AreCandidatesEnabledProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property PlacementAlignmentProperty: IDependencyProperty read get_PlacementAlignmentProperty;
    class property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;

    // -> IHandwritingViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHandwritingView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Hub
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IHub
  // Implements: Windows.UI.Xaml.Controls.ISemanticZoomInformation
  // Statics: "Windows.UI.Xaml.Controls.IHubStatics"
  // Factory: "Windows.UI.Xaml.Controls.IHubFactory"
  // Instantiable: "IHub"
  THub = class(TWinRTGenericImportFSI<IHubFactory, IHubStatics, IHub>)
  public
    // -> IHubStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_DefaultSectionIndexProperty: IDependencyProperty; static; inline;
    class function get_SemanticZoomOwnerProperty: IDependencyProperty; static; inline;
    class function get_IsActiveViewProperty: IDependencyProperty; static; inline;
    class function get_IsZoomedInViewProperty: IDependencyProperty; static; inline;
    class property DefaultSectionIndexProperty: IDependencyProperty read get_DefaultSectionIndexProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    class property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;

    // -> IHubFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHub; static; inline;
  end;

  // Windows.UI.Xaml.Controls.HubSection
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IHubSection
  // Statics: "Windows.UI.Xaml.Controls.IHubSectionStatics"
  // Factory: "Windows.UI.Xaml.Controls.IHubSectionFactory"
  // Instantiable: "IHubSection"
  THubSection = class(TWinRTGenericImportFSI<IHubSectionFactory, IHubSectionStatics, IHubSection>)
  public
    // -> IHubSectionStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_IsHeaderInteractiveProperty: IDependencyProperty; static; inline;
    class property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsHeaderInteractiveProperty: IDependencyProperty read get_IsHeaderInteractiveProperty;

    // -> IHubSectionFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHubSection; static; inline;
  end;

  // Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs
  // Instantiable: "IHubSectionHeaderClickEventArgs"
  THubSectionHeaderClickEventArgs = class(TWinRTGenericImportI<IHubSectionHeaderClickEventArgs>) end;

  // Windows.UI.Xaml.Controls.HyperlinkButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IHyperlinkButton
  // Statics: "Windows.UI.Xaml.Controls.IHyperlinkButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IHyperlinkButtonFactory"
  // Instantiable: "IHyperlinkButton"
  THyperlinkButton = class(TWinRTGenericImportFSI<IHyperlinkButtonFactory, IHyperlinkButtonStatics, IHyperlinkButton>)
  public
    // -> IHyperlinkButtonStatics
    class function get_NavigateUriProperty: IDependencyProperty; static; inline;
    class property NavigateUriProperty: IDependencyProperty read get_NavigateUriProperty;

    // -> IHyperlinkButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHyperlinkButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.IconSourceElement
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IIconSourceElement
  // Statics: "Windows.UI.Xaml.Controls.IIconSourceElementStatics"
  // Factory: "Windows.UI.Xaml.Controls.IIconSourceElementFactory"
  // Instantiable: "IIconSourceElement"
  TIconSourceElement = class(TWinRTGenericImportFSI<IIconSourceElementFactory, IIconSourceElementStatics, IIconSourceElement>)
  public
    // -> IIconSourceElementStatics
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;

    // -> IIconSourceElementFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IIconSourceElement; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Image
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IImage
  // Implements: Windows.UI.Xaml.Controls.IImage2
  // Implements: Windows.UI.Xaml.Controls.IImage3
  // Statics: "Windows.UI.Xaml.Controls.IImageStatics"
  // Instantiable: "IImage"
  TImage = class(TWinRTGenericImportSI<IImageStatics, IImage>)
  public
    // -> IImageStatics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_NineGridProperty: IDependencyProperty; static; inline;
    class function get_PlayToSourceProperty: IDependencyProperty; static; inline;
    class property NineGridProperty: IDependencyProperty read get_NineGridProperty;
    class property PlayToSourceProperty: IDependencyProperty read get_PlayToSourceProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // Windows.UI.Xaml.Controls.InkCanvas
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkCanvas
  // Factory: "Windows.UI.Xaml.Controls.IInkCanvasFactory"
  // Instantiable: "IInkCanvas"
  TInkCanvas = class(TWinRTGenericImportFI<IInkCanvasFactory, IInkCanvas>)
  public
    // -> IInkCanvasFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkCanvas; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbar
  // Implements: Windows.UI.Xaml.Controls.IInkToolbar2
  // Implements: Windows.UI.Xaml.Controls.IInkToolbar3
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarStatics"
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarStatics3"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarFactory"
  // Instantiable: "IInkToolbar"
  TInkToolbar = class(TWinRTGenericImportFS3I<IInkToolbarFactory, IInkToolbarStatics, IInkToolbarStatics2, IInkToolbarStatics3, IInkToolbar>)
  public
    // -> IInkToolbarStatics
    class function get_InitialControlsProperty: IDependencyProperty; static; inline;
    class function get_ChildrenProperty: IDependencyProperty; static; inline;
    class function get_ActiveToolProperty: IDependencyProperty; static; inline;
    class function get_InkDrawingAttributesProperty: IDependencyProperty; static; inline;
    class function get_IsRulerButtonCheckedProperty: IDependencyProperty; static; inline;
    class function get_TargetInkCanvasProperty: IDependencyProperty; static; inline;
    class property ActiveToolProperty: IDependencyProperty read get_ActiveToolProperty;
    class property ChildrenProperty: IDependencyProperty read get_ChildrenProperty;
    class property InitialControlsProperty: IDependencyProperty read get_InitialControlsProperty;
    class property InkDrawingAttributesProperty: IDependencyProperty read get_InkDrawingAttributesProperty;
    class property IsRulerButtonCheckedProperty: IDependencyProperty read get_IsRulerButtonCheckedProperty;
    class property TargetInkCanvasProperty: IDependencyProperty read get_TargetInkCanvasProperty;

    // -> IInkToolbarStatics2
    class function get_IsStencilButtonCheckedProperty: IDependencyProperty; static; inline;
    class function get_ButtonFlyoutPlacementProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class property ButtonFlyoutPlacementProperty: IDependencyProperty read get_ButtonFlyoutPlacementProperty;
    class property IsStencilButtonCheckedProperty: IDependencyProperty read get_IsStencilButtonCheckedProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;

    // -> IInkToolbarStatics3
    class function get_TargetInkPresenterProperty: IDependencyProperty; static; inline;
    class property TargetInkPresenterProperty: IDependencyProperty read get_TargetInkPresenterProperty;

    // -> IInkToolbarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbar; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RadioButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRadioButton
  // Statics: "Windows.UI.Xaml.Controls.IRadioButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IRadioButtonFactory"
  // Instantiable: "IRadioButton"
  TRadioButton = class(TWinRTGenericImportFSI<IRadioButtonFactory, IRadioButtonStatics, IRadioButton>)
  public
    // -> IRadioButtonStatics
    class function get_GroupNameProperty: IDependencyProperty; static; inline;
    class property GroupNameProperty: IDependencyProperty read get_GroupNameProperty;

    // -> IRadioButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarToolButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarToolButton
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarToolButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarToolButtonFactory"
  // Instantiable: "IInkToolbarToolButton"
  TInkToolbarToolButton = class(TWinRTGenericImportFSI<IInkToolbarToolButtonFactory, IInkToolbarToolButtonStatics, IInkToolbarToolButton>)
  public
    // -> IInkToolbarToolButtonStatics
    class function get_IsExtensionGlyphShownProperty: IDependencyProperty; static; inline;
    class property IsExtensionGlyphShownProperty: IDependencyProperty read get_IsExtensionGlyphShownProperty;

    // -> IInkToolbarToolButtonFactory
  end;

  // Windows.UI.Xaml.Controls.InkToolbarPenButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarPenButton
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarPenButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarPenButtonFactory"
  // Instantiable: "IInkToolbarPenButton"
  TInkToolbarPenButton = class(TWinRTGenericImportFSI<IInkToolbarPenButtonFactory, IInkToolbarPenButtonStatics, IInkToolbarPenButton>)
  public
    // -> IInkToolbarPenButtonStatics
    class function get_PaletteProperty: IDependencyProperty; static; inline;
    class function get_MinStrokeWidthProperty: IDependencyProperty; static; inline;
    class function get_MaxStrokeWidthProperty: IDependencyProperty; static; inline;
    class function get_SelectedBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBrushIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedStrokeWidthProperty: IDependencyProperty; static; inline;
    class property MaxStrokeWidthProperty: IDependencyProperty read get_MaxStrokeWidthProperty;
    class property MinStrokeWidthProperty: IDependencyProperty read get_MinStrokeWidthProperty;
    class property PaletteProperty: IDependencyProperty read get_PaletteProperty;
    class property SelectedBrushIndexProperty: IDependencyProperty read get_SelectedBrushIndexProperty;
    class property SelectedBrushProperty: IDependencyProperty read get_SelectedBrushProperty;
    class property SelectedStrokeWidthProperty: IDependencyProperty read get_SelectedStrokeWidthProperty;

    // -> IInkToolbarPenButtonFactory
  end;

  // Windows.UI.Xaml.Controls.InkToolbarBallpointPenButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButton
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButtonFactory"
  // Instantiable: "IInkToolbarBallpointPenButton"
  TInkToolbarBallpointPenButton = class(TWinRTGenericImportFI<IInkToolbarBallpointPenButtonFactory, IInkToolbarBallpointPenButton>)
  public
    // -> IInkToolbarBallpointPenButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarBallpointPenButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarCustomPen
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarCustomPen
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarCustomPenOverrides
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomPenFactory"
  // Instantiable: "IInkToolbarCustomPen"
  TInkToolbarCustomPen = class(TWinRTGenericImportFI<IInkToolbarCustomPenFactory, IInkToolbarCustomPen>)
  public
    // -> IInkToolbarCustomPenFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomPen; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarCustomPenButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarCustomPenButton
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonFactory"
  // Instantiable: "IInkToolbarCustomPenButton"
  TInkToolbarCustomPenButton = class(TWinRTGenericImportFSI<IInkToolbarCustomPenButtonFactory, IInkToolbarCustomPenButtonStatics, IInkToolbarCustomPenButton>)
  public
    // -> IInkToolbarCustomPenButtonStatics
    class function get_CustomPenProperty: IDependencyProperty; static; inline;
    class function get_ConfigurationContentProperty: IDependencyProperty; static; inline;
    class property ConfigurationContentProperty: IDependencyProperty read get_ConfigurationContentProperty;
    class property CustomPenProperty: IDependencyProperty read get_CustomPenProperty;

    // -> IInkToolbarCustomPenButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomPenButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarToggleButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarToggleButton
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarToggleButtonFactory"
  // Instantiable: "IInkToolbarToggleButton"
  TInkToolbarToggleButton = class(TWinRTGenericImportFI<IInkToolbarToggleButtonFactory, IInkToolbarToggleButton>)
  public
    // -> IInkToolbarToggleButtonFactory
  end;

  // Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButton
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButtonFactory"
  // Instantiable: "IInkToolbarCustomToggleButton"
  TInkToolbarCustomToggleButton = class(TWinRTGenericImportFI<IInkToolbarCustomToggleButtonFactory, IInkToolbarCustomToggleButton>)
  public
    // -> IInkToolbarCustomToggleButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomToggleButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarCustomToolButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarCustomToolButton
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonFactory"
  // Instantiable: "IInkToolbarCustomToolButton"
  TInkToolbarCustomToolButton = class(TWinRTGenericImportFSI<IInkToolbarCustomToolButtonFactory, IInkToolbarCustomToolButtonStatics, IInkToolbarCustomToolButton>)
  public
    // -> IInkToolbarCustomToolButtonStatics
    class function get_ConfigurationContentProperty: IDependencyProperty; static; inline;
    class property ConfigurationContentProperty: IDependencyProperty read get_ConfigurationContentProperty;

    // -> IInkToolbarCustomToolButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomToolButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarEraserButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarEraserButton
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarEraserButton2
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarEraserButtonStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarEraserButtonFactory"
  // Instantiable: "IInkToolbarEraserButton"
  TInkToolbarEraserButton = class(TWinRTGenericImportFSI<IInkToolbarEraserButtonFactory, IInkToolbarEraserButtonStatics2, IInkToolbarEraserButton>)
  public
    // -> IInkToolbarEraserButtonStatics2
    class function get_IsClearAllVisibleProperty: IDependencyProperty; static; inline;
    class property IsClearAllVisibleProperty: IDependencyProperty read get_IsClearAllVisibleProperty;

    // -> IInkToolbarEraserButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarEraserButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarFlyoutItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarFlyoutItem
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemFactory"
  // Instantiable: "IInkToolbarFlyoutItem"
  TInkToolbarFlyoutItem = class(TWinRTGenericImportFSI<IInkToolbarFlyoutItemFactory, IInkToolbarFlyoutItemStatics, IInkToolbarFlyoutItem>)
  public
    // -> IInkToolbarFlyoutItemStatics
    class function get_KindProperty: IDependencyProperty; static; inline;
    class function get_IsCheckedProperty: IDependencyProperty; static; inline;
    class property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
    class property KindProperty: IDependencyProperty read get_KindProperty;

    // -> IInkToolbarFlyoutItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarFlyoutItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarHighlighterButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarHighlighterButton
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarHighlighterButtonFactory"
  // Instantiable: "IInkToolbarHighlighterButton"
  TInkToolbarHighlighterButton = class(TWinRTGenericImportFI<IInkToolbarHighlighterButtonFactory, IInkToolbarHighlighterButton>)
  public
    // -> IInkToolbarHighlighterButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarHighlighterButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarIsStencilButtonCheckedChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarIsStencilButtonCheckedChangedEventArgs
  // Instantiable: "IInkToolbarIsStencilButtonCheckedChangedEventArgs"
  TInkToolbarIsStencilButtonCheckedChangedEventArgs = class(TWinRTGenericImportI<IInkToolbarIsStencilButtonCheckedChangedEventArgs>) end;

  // Windows.UI.Xaml.Controls.InkToolbarMenuButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarMenuButton
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarMenuButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarMenuButtonFactory"
  // Instantiable: "IInkToolbarMenuButton"
  TInkToolbarMenuButton = class(TWinRTGenericImportFSI<IInkToolbarMenuButtonFactory, IInkToolbarMenuButtonStatics, IInkToolbarMenuButton>)
  public
    // -> IInkToolbarMenuButtonStatics
    class function get_IsExtensionGlyphShownProperty: IDependencyProperty; static; inline;
    class property IsExtensionGlyphShownProperty: IDependencyProperty read get_IsExtensionGlyphShownProperty;

    // -> IInkToolbarMenuButtonFactory
  end;

  // Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControl
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlFactory"
  // Instantiable: "IInkToolbarPenConfigurationControl"
  TInkToolbarPenConfigurationControl = class(TWinRTGenericImportFSI<IInkToolbarPenConfigurationControlFactory, IInkToolbarPenConfigurationControlStatics, IInkToolbarPenConfigurationControl>)
  public
    // -> IInkToolbarPenConfigurationControlStatics
    class function get_PenButtonProperty: IDependencyProperty; static; inline;
    class property PenButtonProperty: IDependencyProperty read get_PenButtonProperty;

    // -> IInkToolbarPenConfigurationControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarPenConfigurationControl; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarPencilButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarPencilButton
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarPencilButtonFactory"
  // Instantiable: "IInkToolbarPencilButton"
  TInkToolbarPencilButton = class(TWinRTGenericImportFI<IInkToolbarPencilButtonFactory, IInkToolbarPencilButton>)
  public
    // -> IInkToolbarPencilButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarPencilButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarRulerButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarRulerButton
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarRulerButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarRulerButtonFactory"
  // Instantiable: "IInkToolbarRulerButton"
  TInkToolbarRulerButton = class(TWinRTGenericImportFSI<IInkToolbarRulerButtonFactory, IInkToolbarRulerButtonStatics, IInkToolbarRulerButton>)
  public
    // -> IInkToolbarRulerButtonStatics
    class function get_RulerProperty: IDependencyProperty; static; inline;
    class property RulerProperty: IDependencyProperty read get_RulerProperty;

    // -> IInkToolbarRulerButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarRulerButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.InkToolbarStencilButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IInkToolbarStencilButton
  // Statics: "Windows.UI.Xaml.Controls.IInkToolbarStencilButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.IInkToolbarStencilButtonFactory"
  // Instantiable: "IInkToolbarStencilButton"
  TInkToolbarStencilButton = class(TWinRTGenericImportFSI<IInkToolbarStencilButtonFactory, IInkToolbarStencilButtonStatics, IInkToolbarStencilButton>)
  public
    // -> IInkToolbarStencilButtonStatics
    class function get_RulerProperty: IDependencyProperty; static; inline;
    class function get_ProtractorProperty: IDependencyProperty; static; inline;
    class function get_SelectedStencilProperty: IDependencyProperty; static; inline;
    class function get_IsRulerItemVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsProtractorItemVisibleProperty: IDependencyProperty; static; inline;
    class property IsProtractorItemVisibleProperty: IDependencyProperty read get_IsProtractorItemVisibleProperty;
    class property IsRulerItemVisibleProperty: IDependencyProperty read get_IsRulerItemVisibleProperty;
    class property ProtractorProperty: IDependencyProperty read get_ProtractorProperty;
    class property RulerProperty: IDependencyProperty read get_RulerProperty;
    class property SelectedStencilProperty: IDependencyProperty read get_SelectedStencilProperty;

    // -> IInkToolbarStencilButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarStencilButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ItemClickEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IItemClickEventArgs
  // Instantiable: "IItemClickEventArgs"
  TItemClickEventArgs = class(TWinRTGenericImportI<IItemClickEventArgs>) end;

  // Windows.UI.Xaml.Controls.ItemsPanelTemplate
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IItemsPanelTemplate
  // Instantiable: "IItemsPanelTemplate"
  TItemsPanelTemplate = class(TWinRTGenericImportI<IItemsPanelTemplate>) end;

  // Windows.UI.Xaml.Controls.ItemsPickedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IItemsPickedEventArgs
  // Instantiable: "IItemsPickedEventArgs"
  TItemsPickedEventArgs = class(TWinRTGenericImportI<IItemsPickedEventArgs>) end;

  // Windows.UI.Xaml.Controls.ItemsPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IItemsPresenter
  // Implements: Windows.UI.Xaml.Controls.IItemsPresenter2
  // Implements: Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Statics: "Windows.UI.Xaml.Controls.IItemsPresenterStatics"
  // Statics: "Windows.UI.Xaml.Controls.IItemsPresenterStatics2"
  // Instantiable: "IItemsPresenter"
  TItemsPresenter = class(TWinRTGenericImportS2I<IItemsPresenterStatics, IItemsPresenterStatics2, IItemsPresenter>)
  public
    // -> IItemsPresenterStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_HeaderTransitionsProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;

    // -> IItemsPresenterStatics2
    class function get_FooterProperty: IDependencyProperty; static; inline;
    class function get_FooterTemplateProperty: IDependencyProperty; static; inline;
    class function get_FooterTransitionsProperty: IDependencyProperty; static; inline;
    class property FooterProperty: IDependencyProperty read get_FooterProperty;
    class property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    class property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
  end;

  // Windows.UI.Xaml.Controls.ItemsStackPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IItemsStackPanel
  // Implements: Windows.UI.Xaml.Controls.IItemsStackPanel2
  // Statics: "Windows.UI.Xaml.Controls.IItemsStackPanelStatics"
  // Statics: "Windows.UI.Xaml.Controls.IItemsStackPanelStatics2"
  // Instantiable: "IItemsStackPanel"
  TItemsStackPanel = class(TWinRTGenericImportS2I<IItemsStackPanelStatics, IItemsStackPanelStatics2, IItemsStackPanel>)
  public
    // -> IItemsStackPanelStatics
    class function get_GroupPaddingProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_GroupHeaderPlacementProperty: IDependencyProperty; static; inline;
    class function get_CacheLengthProperty: IDependencyProperty; static; inline;
    class property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    class property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    class property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;

    // -> IItemsStackPanelStatics2
    class function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; static; inline;
    class property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
  end;

  // Windows.UI.Xaml.Controls.ItemsWrapGrid
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IItemsWrapGrid
  // Implements: Windows.UI.Xaml.Controls.IItemsWrapGrid2
  // Statics: "Windows.UI.Xaml.Controls.IItemsWrapGridStatics"
  // Statics: "Windows.UI.Xaml.Controls.IItemsWrapGridStatics2"
  // Instantiable: "IItemsWrapGrid"
  TItemsWrapGrid = class(TWinRTGenericImportS2I<IItemsWrapGridStatics, IItemsWrapGridStatics2, IItemsWrapGrid>)
  public
    // -> IItemsWrapGridStatics
    class function get_GroupPaddingProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_MaximumRowsOrColumnsProperty: IDependencyProperty; static; inline;
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_GroupHeaderPlacementProperty: IDependencyProperty; static; inline;
    class function get_CacheLengthProperty: IDependencyProperty; static; inline;
    class property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    class property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    class property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;

    // -> IItemsWrapGridStatics2
    class function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; static; inline;
    class property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
  end;

  // Windows.UI.Xaml.Controls.ListBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListBox
  // Implements: Windows.UI.Xaml.Controls.IListBox2
  // Statics: "Windows.UI.Xaml.Controls.IListBoxStatics"
  // Statics: "Windows.UI.Xaml.Controls.IListBoxStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IListBoxFactory"
  // Instantiable: "IListBox"
  TListBox = class(TWinRTGenericImportFS2I<IListBoxFactory, IListBoxStatics, IListBoxStatics2, IListBox>)
  public
    // -> IListBoxStatics
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;

    // -> IListBoxStatics2
    class function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;

    // -> IListBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBox; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ListBoxItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListBoxItem
  // Factory: "Windows.UI.Xaml.Controls.IListBoxItemFactory"
  // Instantiable: "IListBoxItem"
  TListBoxItem = class(TWinRTGenericImportFI<IListBoxItemFactory, IListBoxItem>)
  public
    // -> IListBoxItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBoxItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ListPickerFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListPickerFlyout
  // Statics: "Windows.UI.Xaml.Controls.IListPickerFlyoutStatics"
  // Instantiable: "IListPickerFlyout"
  TListPickerFlyout = class(TWinRTGenericImportSI<IListPickerFlyoutStatics, IListPickerFlyout>)
  public
    // -> IListPickerFlyoutStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_DisplayMemberPathProperty: IDependencyProperty; static; inline;
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_SelectedValueProperty: IDependencyProperty; static; inline;
    class function get_SelectedValuePathProperty: IDependencyProperty; static; inline;
    class property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    class property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
  end;

  // Windows.UI.Xaml.Controls.ListView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListView
  // Factory: "Windows.UI.Xaml.Controls.IListViewFactory"
  // Instantiable: "IListView"
  TListView = class(TWinRTGenericImportFI<IListViewFactory, IListView>)
  public
    // -> IListViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ListViewHeaderItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListViewHeaderItem
  // Factory: "Windows.UI.Xaml.Controls.IListViewHeaderItemFactory"
  // Instantiable: "IListViewHeaderItem"
  TListViewHeaderItem = class(TWinRTGenericImportFI<IListViewHeaderItemFactory, IListViewHeaderItem>)
  public
    // -> IListViewHeaderItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewHeaderItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ListViewItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListViewItem
  // Factory: "Windows.UI.Xaml.Controls.IListViewItemFactory"
  // Instantiable: "IListViewItem"
  TListViewItem = class(TWinRTGenericImportFI<IListViewItemFactory, IListViewItem>)
  public
    // -> IListViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ListViewPersistenceHelper
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IListViewPersistenceHelper
  // Statics: "Windows.UI.Xaml.Controls.IListViewPersistenceHelperStatics"
  TListViewPersistenceHelper = class(TWinRTGenericImportS<IListViewPersistenceHelperStatics>)
  public
    // -> IListViewPersistenceHelperStatics
    class function GetRelativeScrollPosition(listViewBase: IListViewBase; itemToKeyHandler: ListViewItemToKeyHandler): HSTRING; static; inline;
    class function SetRelativeScrollPositionAsync(listViewBase: IListViewBase; relativeScrollPosition: HSTRING; keyToItemHandler: ListViewKeyToItemHandler): IAsyncAction; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapTileDataSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileDataSource
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory"
  // Instantiable: "Maps_IMapTileDataSource"
  TMaps_MapTileDataSource = class(TWinRTGenericImportFI<Maps_IMapTileDataSourceFactory, Maps_IMapTileDataSource>)
  public
    // -> Maps_IMapTileDataSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileDataSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource
  // Factory: "Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory"
  // Instantiable: "Maps_ICustomMapTileDataSource"
  TMaps_CustomMapTileDataSource = class(TWinRTGenericImportFI<Maps_ICustomMapTileDataSourceFactory, Maps_ICustomMapTileDataSource>)
  public
    // -> Maps_ICustomMapTileDataSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ICustomMapTileDataSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource
  // Factory: "Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory"
  // Instantiable: "Maps_IHttpMapTileDataSource"
  TMaps_HttpMapTileDataSource = class(TWinRTGenericImportFI<Maps_IHttpMapTileDataSourceFactory, Maps_IHttpMapTileDataSource>)
  public
    // -> Maps_IHttpMapTileDataSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IHttpMapTileDataSource; static; inline;
    class function CreateInstanceWithUriFormatString(uriFormatString: HSTRING; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IHttpMapTileDataSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource
  // Factory: "Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory"
  // Instantiable: "Maps_ILocalMapTileDataSource"
  TMaps_LocalMapTileDataSource = class(TWinRTGenericImportFI<Maps_ILocalMapTileDataSourceFactory, Maps_ILocalMapTileDataSource>)
  public
    // -> Maps_ILocalMapTileDataSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ILocalMapTileDataSource; static; inline;
    class function CreateInstanceWithUriFormatString(uriFormatString: HSTRING; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ILocalMapTileDataSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2
  // Instantiable: "Maps_IMapActualCameraChangedEventArgs"
  TMaps_MapActualCameraChangedEventArgs = class(TWinRTGenericImportI<Maps_IMapActualCameraChangedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2
  // Instantiable: "Maps_IMapActualCameraChangingEventArgs"
  TMaps_MapActualCameraChangingEventArgs = class(TWinRTGenericImportI<Maps_IMapActualCameraChangingEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapElement
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElement
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElement2
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElement3
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElement4
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapElementStatics"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapElementStatics2"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapElementStatics3"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapElementStatics4"
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapElementFactory"
  // Instantiable: "Maps_IMapElement"
  TMaps_MapElement = class(TWinRTGenericImportFS4I<Maps_IMapElementFactory, Maps_IMapElementStatics, Maps_IMapElementStatics2, Maps_IMapElementStatics3, Maps_IMapElementStatics4, Maps_IMapElement>)
  public
    // -> Maps_IMapElementStatics
    class function get_ZIndexProperty: IDependencyProperty; static; inline;
    class function get_VisibleProperty: IDependencyProperty; static; inline;
    class property VisibleProperty: IDependencyProperty read get_VisibleProperty;
    class property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;

    // -> Maps_IMapElementStatics2
    class function get_MapTabIndexProperty: IDependencyProperty; static; inline;
    class property MapTabIndexProperty: IDependencyProperty read get_MapTabIndexProperty;

    // -> Maps_IMapElementStatics3
    class function get_MapStyleSheetEntryProperty: IDependencyProperty; static; inline;
    class function get_MapStyleSheetEntryStateProperty: IDependencyProperty; static; inline;
    class function get_TagProperty: IDependencyProperty; static; inline;
    class property MapStyleSheetEntryProperty: IDependencyProperty read get_MapStyleSheetEntryProperty;
    class property MapStyleSheetEntryStateProperty: IDependencyProperty read get_MapStyleSheetEntryStateProperty;
    class property TagProperty: IDependencyProperty read get_TagProperty;

    // -> Maps_IMapElementStatics4
    class function get_IsEnabledProperty: IDependencyProperty; static; inline;
    class property IsEnabledProperty: IDependencyProperty read get_IsEnabledProperty;

    // -> Maps_IMapElementFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapElement; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapBillboard
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapBillboard
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics"
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory"
  TMaps_MapBillboard = class(TWinRTGenericImportFS<Maps_IMapBillboardFactory, Maps_IMapBillboardStatics>)
  public
    // -> Maps_IMapBillboardStatics
    class function get_LocationProperty: IDependencyProperty; static; inline;
    class function get_NormalizedAnchorPointProperty: IDependencyProperty; static; inline;
    class function get_CollisionBehaviorDesiredProperty: IDependencyProperty; static; inline;
    class property CollisionBehaviorDesiredProperty: IDependencyProperty read get_CollisionBehaviorDesiredProperty;
    class property LocationProperty: IDependencyProperty read get_LocationProperty;
    class property NormalizedAnchorPointProperty: IDependencyProperty read get_NormalizedAnchorPointProperty;

    // -> Maps_IMapBillboardFactory
    class function CreateInstanceFromCamera(camera: Maps_IMapCamera): Maps_IMapBillboard; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapCamera
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapCamera
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapCameraFactory"
  TMaps_MapCamera = class(TWinRTGenericImportF<Maps_IMapCameraFactory>)
  public
    // -> Maps_IMapCameraFactory
    class function CreateInstanceWithLocation(location: IGeopoint): Maps_IMapCamera; static; inline;
    class function CreateInstanceWithLocationAndHeading(location: IGeopoint; headingInDegrees: Double): Maps_IMapCamera; static; inline;
    class function CreateInstanceWithLocationHeadingAndPitch(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapCamera; static; inline;
    class function CreateInstanceWithLocationHeadingPitchRollAndFieldOfView(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double; rollInDegrees: Double; fieldOfViewInDegrees: Double): Maps_IMapCamera; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs
  // Instantiable: "Maps_IMapContextRequestedEventArgs"
  TMaps_MapContextRequestedEventArgs = class(TWinRTGenericImportI<Maps_IMapContextRequestedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl2
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl3
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl4
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl5
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl6
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl7
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControl8
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlStatics"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlStatics2"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlStatics4"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlStatics5"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlStatics6"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlStatics7"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlStatics8"
  // Instantiable: "Maps_IMapControl"
  TMaps_MapControl = class(TWinRTGenericImportS7I<Maps_IMapControlStatics, Maps_IMapControlStatics2, Maps_IMapControlStatics4, Maps_IMapControlStatics5, Maps_IMapControlStatics6, Maps_IMapControlStatics7, Maps_IMapControlStatics8, Maps_IMapControl>)
  public
    // -> Maps_IMapControlStatics
    class function get_CenterProperty: IDependencyProperty; static; inline;
    class function get_ChildrenProperty: IDependencyProperty; static; inline;
    class function get_ColorSchemeProperty: IDependencyProperty; static; inline;
    class function get_DesiredPitchProperty: IDependencyProperty; static; inline;
    class function get_HeadingProperty: IDependencyProperty; static; inline;
    class function get_LandmarksVisibleProperty: IDependencyProperty; static; inline;
    class function get_LoadingStatusProperty: IDependencyProperty; static; inline;
    class function get_MapServiceTokenProperty: IDependencyProperty; static; inline;
    class function get_PedestrianFeaturesVisibleProperty: IDependencyProperty; static; inline;
    class function get_PitchProperty: IDependencyProperty; static; inline;
    class function get_StyleProperty: IDependencyProperty; static; inline;
    class function get_TrafficFlowVisibleProperty: IDependencyProperty; static; inline;
    class function get_TransformOriginProperty: IDependencyProperty; static; inline;
    class function get_WatermarkModeProperty: IDependencyProperty; static; inline;
    class function get_ZoomLevelProperty: IDependencyProperty; static; inline;
    class function get_MapElementsProperty: IDependencyProperty; static; inline;
    class function get_RoutesProperty: IDependencyProperty; static; inline;
    class function get_TileSourcesProperty: IDependencyProperty; static; inline;
    class function get_LocationProperty: IDependencyProperty; static; inline;
    class function GetLocation(element: IDependencyObject): IGeopoint; static; inline;
    class procedure SetLocation(element: IDependencyObject; value: IGeopoint); static; inline;
    class function get_NormalizedAnchorPointProperty: IDependencyProperty; static; inline;
    class function GetNormalizedAnchorPoint(element: IDependencyObject): TPointF; static; inline;
    class procedure SetNormalizedAnchorPoint(element: IDependencyObject; value: TPointF); static; inline;
    class property CenterProperty: IDependencyProperty read get_CenterProperty;
    class property ChildrenProperty: IDependencyProperty read get_ChildrenProperty;
    class property ColorSchemeProperty: IDependencyProperty read get_ColorSchemeProperty;
    class property DesiredPitchProperty: IDependencyProperty read get_DesiredPitchProperty;
    class property HeadingProperty: IDependencyProperty read get_HeadingProperty;
    class property LandmarksVisibleProperty: IDependencyProperty read get_LandmarksVisibleProperty;
    class property LoadingStatusProperty: IDependencyProperty read get_LoadingStatusProperty;
    class property LocationProperty: IDependencyProperty read get_LocationProperty;
    class property MapElementsProperty: IDependencyProperty read get_MapElementsProperty;
    class property MapServiceTokenProperty: IDependencyProperty read get_MapServiceTokenProperty;
    class property NormalizedAnchorPointProperty: IDependencyProperty read get_NormalizedAnchorPointProperty;
    class property PedestrianFeaturesVisibleProperty: IDependencyProperty read get_PedestrianFeaturesVisibleProperty;
    class property PitchProperty: IDependencyProperty read get_PitchProperty;
    class property RoutesProperty: IDependencyProperty read get_RoutesProperty;
    class property StyleProperty: IDependencyProperty read get_StyleProperty;
    class property TileSourcesProperty: IDependencyProperty read get_TileSourcesProperty;
    class property TrafficFlowVisibleProperty: IDependencyProperty read get_TrafficFlowVisibleProperty;
    class property TransformOriginProperty: IDependencyProperty read get_TransformOriginProperty;
    class property WatermarkModeProperty: IDependencyProperty read get_WatermarkModeProperty;
    class property ZoomLevelProperty: IDependencyProperty read get_ZoomLevelProperty;

    // -> Maps_IMapControlStatics2
    class function get_BusinessLandmarksVisibleProperty: IDependencyProperty; static; inline;
    class function get_TransitFeaturesVisibleProperty: IDependencyProperty; static; inline;
    class function get_PanInteractionModeProperty: IDependencyProperty; static; inline;
    class function get_RotateInteractionModeProperty: IDependencyProperty; static; inline;
    class function get_TiltInteractionModeProperty: IDependencyProperty; static; inline;
    class function get_ZoomInteractionModeProperty: IDependencyProperty; static; inline;
    class function get_Is3DSupportedProperty: IDependencyProperty; static; inline;
    class function get_IsStreetsideSupportedProperty: IDependencyProperty; static; inline;
    class function get_SceneProperty: IDependencyProperty; static; inline;
    class property BusinessLandmarksVisibleProperty: IDependencyProperty read get_BusinessLandmarksVisibleProperty;
    class property Is3DSupportedProperty: IDependencyProperty read get_Is3DSupportedProperty;
    class property IsStreetsideSupportedProperty: IDependencyProperty read get_IsStreetsideSupportedProperty;
    class property PanInteractionModeProperty: IDependencyProperty read get_PanInteractionModeProperty;
    class property RotateInteractionModeProperty: IDependencyProperty read get_RotateInteractionModeProperty;
    class property SceneProperty: IDependencyProperty read get_SceneProperty;
    class property TiltInteractionModeProperty: IDependencyProperty read get_TiltInteractionModeProperty;
    class property TransitFeaturesVisibleProperty: IDependencyProperty read get_TransitFeaturesVisibleProperty;
    class property ZoomInteractionModeProperty: IDependencyProperty read get_ZoomInteractionModeProperty;

    // -> Maps_IMapControlStatics4
    class function get_BusinessLandmarksEnabledProperty: IDependencyProperty; static; inline;
    class function get_TransitFeaturesEnabledProperty: IDependencyProperty; static; inline;
    class property BusinessLandmarksEnabledProperty: IDependencyProperty read get_BusinessLandmarksEnabledProperty;
    class property TransitFeaturesEnabledProperty: IDependencyProperty read get_TransitFeaturesEnabledProperty;

    // -> Maps_IMapControlStatics5
    class function get_MapProjectionProperty: IDependencyProperty; static; inline;
    class function get_StyleSheetProperty: IDependencyProperty; static; inline;
    class function get_ViewPaddingProperty: IDependencyProperty; static; inline;
    class property MapProjectionProperty: IDependencyProperty read get_MapProjectionProperty;
    class property StyleSheetProperty: IDependencyProperty read get_StyleSheetProperty;
    class property ViewPaddingProperty: IDependencyProperty read get_ViewPaddingProperty;

    // -> Maps_IMapControlStatics6
    class function get_LayersProperty: IDependencyProperty; static; inline;
    class property LayersProperty: IDependencyProperty read get_LayersProperty;

    // -> Maps_IMapControlStatics7
    class function get_RegionProperty: IDependencyProperty; static; inline;
    class property RegionProperty: IDependencyProperty read get_RegionProperty;

    // -> Maps_IMapControlStatics8
    class function get_CanTiltDownProperty: IDependencyProperty; static; inline;
    class function get_CanTiltUpProperty: IDependencyProperty; static; inline;
    class function get_CanZoomInProperty: IDependencyProperty; static; inline;
    class function get_CanZoomOutProperty: IDependencyProperty; static; inline;
    class property CanTiltDownProperty: IDependencyProperty read get_CanTiltDownProperty;
    class property CanTiltUpProperty: IDependencyProperty read get_CanTiltUpProperty;
    class property CanZoomInProperty: IDependencyProperty read get_CanZoomInProperty;
    class property CanZoomOutProperty: IDependencyProperty read get_CanZoomOutProperty;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs
  // Instantiable: "Maps_IMapControlBusinessLandmarkClickEventArgs"
  TMaps_MapControlBusinessLandmarkClickEventArgs = class(TWinRTGenericImportI<Maps_IMapControlBusinessLandmarkClickEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs
  // Instantiable: "Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs"
  TMaps_MapControlBusinessLandmarkPointerEnteredEventArgs = class(TWinRTGenericImportI<Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs
  // Instantiable: "Maps_IMapControlBusinessLandmarkPointerExitedEventArgs"
  TMaps_MapControlBusinessLandmarkPointerExitedEventArgs = class(TWinRTGenericImportI<Maps_IMapControlBusinessLandmarkPointerExitedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs
  // Instantiable: "Maps_IMapControlBusinessLandmarkRightTappedEventArgs"
  TMaps_MapControlBusinessLandmarkRightTappedEventArgs = class(TWinRTGenericImportI<Maps_IMapControlBusinessLandmarkRightTappedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics"
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory"
  TMaps_MapControlDataHelper = class(TWinRTGenericImportFS<Maps_IMapControlDataHelperFactory, Maps_IMapControlDataHelperStatics>)
  public
    // -> Maps_IMapControlDataHelperStatics
    class function CreateMapControl(rasterRenderMode: Boolean): Maps_IMapControl; static; inline;

    // -> Maps_IMapControlDataHelperFactory
    class function CreateInstance(map: Maps_IMapControl): Maps_IMapControlDataHelper; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs
  // Instantiable: "Maps_IMapControlTransitFeatureClickEventArgs"
  TMaps_MapControlTransitFeatureClickEventArgs = class(TWinRTGenericImportI<Maps_IMapControlTransitFeatureClickEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs
  // Instantiable: "Maps_IMapControlTransitFeaturePointerEnteredEventArgs"
  TMaps_MapControlTransitFeaturePointerEnteredEventArgs = class(TWinRTGenericImportI<Maps_IMapControlTransitFeaturePointerEnteredEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs
  // Instantiable: "Maps_IMapControlTransitFeaturePointerExitedEventArgs"
  TMaps_MapControlTransitFeaturePointerExitedEventArgs = class(TWinRTGenericImportI<Maps_IMapControlTransitFeaturePointerExitedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs
  // Instantiable: "Maps_IMapControlTransitFeatureRightTappedEventArgs"
  TMaps_MapControlTransitFeatureRightTappedEventArgs = class(TWinRTGenericImportI<Maps_IMapControlTransitFeatureRightTappedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapCustomExperience
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory"
  // Instantiable: "Maps_IMapCustomExperience"
  TMaps_MapCustomExperience = class(TWinRTGenericImportFI<Maps_IMapCustomExperienceFactory, Maps_IMapCustomExperience>)
  public
    // -> Maps_IMapCustomExperienceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapCustomExperience; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs
  // Instantiable: "Maps_IMapCustomExperienceChangedEventArgs"
  TMaps_MapCustomExperienceChangedEventArgs = class(TWinRTGenericImportI<Maps_IMapCustomExperienceChangedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapElement3D
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElement3D
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics"
  // Instantiable: "Maps_IMapElement3D"
  TMaps_MapElement3D = class(TWinRTGenericImportSI<Maps_IMapElement3DStatics, Maps_IMapElement3D>)
  public
    // -> Maps_IMapElement3DStatics
    class function get_LocationProperty: IDependencyProperty; static; inline;
    class function get_HeadingProperty: IDependencyProperty; static; inline;
    class function get_PitchProperty: IDependencyProperty; static; inline;
    class function get_RollProperty: IDependencyProperty; static; inline;
    class function get_ScaleProperty: IDependencyProperty; static; inline;
    class property HeadingProperty: IDependencyProperty read get_HeadingProperty;
    class property LocationProperty: IDependencyProperty read get_LocationProperty;
    class property PitchProperty: IDependencyProperty read get_PitchProperty;
    class property RollProperty: IDependencyProperty read get_RollProperty;
    class property ScaleProperty: IDependencyProperty read get_ScaleProperty;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs
  // Instantiable: "Maps_IMapElementClickEventArgs"
  TMaps_MapElementClickEventArgs = class(TWinRTGenericImportI<Maps_IMapElementClickEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs
  // Instantiable: "Maps_IMapElementPointerEnteredEventArgs"
  TMaps_MapElementPointerEnteredEventArgs = class(TWinRTGenericImportI<Maps_IMapElementPointerEnteredEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs
  // Instantiable: "Maps_IMapElementPointerExitedEventArgs"
  TMaps_MapElementPointerExitedEventArgs = class(TWinRTGenericImportI<Maps_IMapElementPointerExitedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapLayer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapLayer
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapLayerStatics"
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapLayerFactory"
  // Instantiable: "Maps_IMapLayer"
  TMaps_MapLayer = class(TWinRTGenericImportFSI<Maps_IMapLayerFactory, Maps_IMapLayerStatics, Maps_IMapLayer>)
  public
    // -> Maps_IMapLayerStatics
    class function get_MapTabIndexProperty: IDependencyProperty; static; inline;
    class function get_VisibleProperty: IDependencyProperty; static; inline;
    class function get_ZIndexProperty: IDependencyProperty; static; inline;
    class property MapTabIndexProperty: IDependencyProperty read get_MapTabIndexProperty;
    class property VisibleProperty: IDependencyProperty read get_VisibleProperty;
    class property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;

    // -> Maps_IMapLayerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapLayer; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapElementsLayer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementsLayer
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics"
  // Instantiable: "Maps_IMapElementsLayer"
  TMaps_MapElementsLayer = class(TWinRTGenericImportSI<Maps_IMapElementsLayerStatics, Maps_IMapElementsLayer>)
  public
    // -> Maps_IMapElementsLayerStatics
    class function get_MapElementsProperty: IDependencyProperty; static; inline;
    class property MapElementsProperty: IDependencyProperty read get_MapElementsProperty;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs
  // Instantiable: "Maps_IMapElementsLayerClickEventArgs"
  TMaps_MapElementsLayerClickEventArgs = class(TWinRTGenericImportI<Maps_IMapElementsLayerClickEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs
  // Instantiable: "Maps_IMapElementsLayerContextRequestedEventArgs"
  TMaps_MapElementsLayerContextRequestedEventArgs = class(TWinRTGenericImportI<Maps_IMapElementsLayerContextRequestedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs
  // Instantiable: "Maps_IMapElementsLayerPointerEnteredEventArgs"
  TMaps_MapElementsLayerPointerEnteredEventArgs = class(TWinRTGenericImportI<Maps_IMapElementsLayerPointerEnteredEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs
  // Instantiable: "Maps_IMapElementsLayerPointerExitedEventArgs"
  TMaps_MapElementsLayerPointerExitedEventArgs = class(TWinRTGenericImportI<Maps_IMapElementsLayerPointerExitedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapIcon
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapIcon
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapIcon2
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapIconStatics"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapIconStatics2"
  // Instantiable: "Maps_IMapIcon"
  TMaps_MapIcon = class(TWinRTGenericImportS2I<Maps_IMapIconStatics, Maps_IMapIconStatics2, Maps_IMapIcon>)
  public
    // -> Maps_IMapIconStatics
    class function get_LocationProperty: IDependencyProperty; static; inline;
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_NormalizedAnchorPointProperty: IDependencyProperty; static; inline;
    class property LocationProperty: IDependencyProperty read get_LocationProperty;
    class property NormalizedAnchorPointProperty: IDependencyProperty read get_NormalizedAnchorPointProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> Maps_IMapIconStatics2
    class function get_CollisionBehaviorDesiredProperty: IDependencyProperty; static; inline;
    class property CollisionBehaviorDesiredProperty: IDependencyProperty read get_CollisionBehaviorDesiredProperty;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapInputEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs
  // Instantiable: "Maps_IMapInputEventArgs"
  TMaps_MapInputEventArgs = class(TWinRTGenericImportI<Maps_IMapInputEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapItemsControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapItemsControl
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics"
  // Instantiable: "Maps_IMapItemsControl"
  TMaps_MapItemsControl = class(TWinRTGenericImportSI<Maps_IMapItemsControlStatics, Maps_IMapItemsControl>)
  public
    // -> Maps_IMapItemsControlStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapModel3D
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapModel3D
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics"
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory"
  // Instantiable: "Maps_IMapModel3D"
  TMaps_MapModel3D = class(TWinRTGenericImportFSI<Maps_IMapModel3DFactory, Maps_IMapModel3DStatics, Maps_IMapModel3D>)
  public
    // -> Maps_IMapModel3DStatics
    class function CreateFrom3MFAsync(source: IRandomAccessStreamReference): IAsyncOperation_1__Maps_IMapModel3D; overload; static; inline;
    class function CreateFrom3MFAsync(source: IRandomAccessStreamReference; shadingOption: Maps_MapModel3DShadingOption): IAsyncOperation_1__Maps_IMapModel3D; overload; static; inline;

    // -> Maps_IMapModel3DFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapModel3D; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapPolygon
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapPolygon
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapPolygon2
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics"
  // Instantiable: "Maps_IMapPolygon"
  TMaps_MapPolygon = class(TWinRTGenericImportSI<Maps_IMapPolygonStatics, Maps_IMapPolygon>)
  public
    // -> Maps_IMapPolygonStatics
    class function get_PathProperty: IDependencyProperty; static; inline;
    class function get_StrokeThicknessProperty: IDependencyProperty; static; inline;
    class function get_StrokeDashedProperty: IDependencyProperty; static; inline;
    class property PathProperty: IDependencyProperty read get_PathProperty;
    class property StrokeDashedProperty: IDependencyProperty read get_StrokeDashedProperty;
    class property StrokeThicknessProperty: IDependencyProperty read get_StrokeThicknessProperty;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapPolyline
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapPolyline
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics"
  // Instantiable: "Maps_IMapPolyline"
  TMaps_MapPolyline = class(TWinRTGenericImportSI<Maps_IMapPolylineStatics, Maps_IMapPolyline>)
  public
    // -> Maps_IMapPolylineStatics
    class function get_PathProperty: IDependencyProperty; static; inline;
    class function get_StrokeDashedProperty: IDependencyProperty; static; inline;
    class property PathProperty: IDependencyProperty read get_PathProperty;
    class property StrokeDashedProperty: IDependencyProperty read get_StrokeDashedProperty;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs
  // Instantiable: "Maps_IMapRightTappedEventArgs"
  TMaps_MapRightTappedEventArgs = class(TWinRTGenericImportI<Maps_IMapRightTappedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapRouteView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapRouteView
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory"
  // Instantiable: "Maps_IMapRouteView"
  TMaps_MapRouteView = class(TWinRTGenericImportFI<Maps_IMapRouteViewFactory, Maps_IMapRouteView>)
  public
    // -> Maps_IMapRouteViewFactory
    class function CreateInstanceWithMapRoute(route: Maps_IMapRoute; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapRouteView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapScene
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapScene
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapSceneStatics"
  TMaps_MapScene = class(TWinRTGenericImportS<Maps_IMapSceneStatics>)
  public
    // -> Maps_IMapSceneStatics
    class function CreateFromBoundingBox(bounds: IGeoboundingBox): Maps_IMapScene; overload; static; inline;
    class function CreateFromBoundingBox(bounds: IGeoboundingBox; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; static; inline;
    class function CreateFromCamera(camera: Maps_IMapCamera): Maps_IMapScene; static; inline;
    class function CreateFromLocation(location: IGeopoint): Maps_IMapScene; overload; static; inline;
    class function CreateFromLocation(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; static; inline;
    class function CreateFromLocationAndRadius(location: IGeopoint; radiusInMeters: Double): Maps_IMapScene; overload; static; inline;
    class function CreateFromLocationAndRadius(location: IGeopoint; radiusInMeters: Double; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; static; inline;
    class function CreateFromLocations(locations: IIterable_1__IGeopoint): Maps_IMapScene; overload; static; inline;
    class function CreateFromLocations(locations: IIterable_1__IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene; overload; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapStyleSheet
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics"
  TMaps_MapStyleSheet = class(TWinRTGenericImportS<Maps_IMapStyleSheetStatics>)
  public
    // -> Maps_IMapStyleSheetStatics
    class function Aerial: Maps_IMapStyleSheet; static; inline;
    class function AerialWithOverlay: Maps_IMapStyleSheet; static; inline;
    class function RoadLight: Maps_IMapStyleSheet; static; inline;
    class function RoadDark: Maps_IMapStyleSheet; static; inline;
    class function RoadHighContrastLight: Maps_IMapStyleSheet; static; inline;
    class function RoadHighContrastDark: Maps_IMapStyleSheet; static; inline;
    class function Combine(styleSheets: IIterable_1__Maps_IMapStyleSheet): Maps_IMapStyleSheet; static; inline;
    class function ParseFromJson(styleAsJson: HSTRING): Maps_IMapStyleSheet; static; inline;
    class function TryParseFromJson(styleAsJson: HSTRING; out styleSheet: Maps_IMapStyleSheet): Boolean; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntries
  // Explicitly imported
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics"
  TMaps_MapStyleSheetEntries = class(TWinRTGenericImportS<Maps_IMapStyleSheetEntriesStatics>)
  public
    // -> Maps_IMapStyleSheetEntriesStatics
    class function get_Area: HSTRING; static; inline;
    class function get_Airport: HSTRING; static; inline;
    class function get_Cemetery: HSTRING; static; inline;
    class function get_Continent: HSTRING; static; inline;
    class function get_Education: HSTRING; static; inline;
    class function get_IndigenousPeoplesReserve: HSTRING; static; inline;
    class function get_Island: HSTRING; static; inline;
    class function get_Medical: HSTRING; static; inline;
    class function get_Military: HSTRING; static; inline;
    class function get_Nautical: HSTRING; static; inline;
    class function get_Neighborhood: HSTRING; static; inline;
    class function get_Runway: HSTRING; static; inline;
    class function get_Sand: HSTRING; static; inline;
    class function get_ShoppingCenter: HSTRING; static; inline;
    class function get_Stadium: HSTRING; static; inline;
    class function get_Vegetation: HSTRING; static; inline;
    class function get_Forest: HSTRING; static; inline;
    class function get_GolfCourse: HSTRING; static; inline;
    class function get_Park: HSTRING; static; inline;
    class function get_PlayingField: HSTRING; static; inline;
    class function get_Reserve: HSTRING; static; inline;
    class function get_Point: HSTRING; static; inline;
    class function get_NaturalPoint: HSTRING; static; inline;
    class function get_Peak: HSTRING; static; inline;
    class function get_VolcanicPeak: HSTRING; static; inline;
    class function get_WaterPoint: HSTRING; static; inline;
    class function get_PointOfInterest: HSTRING; static; inline;
    class function get_Business: HSTRING; static; inline;
    class function get_FoodPoint: HSTRING; static; inline;
    class function get_PopulatedPlace: HSTRING; static; inline;
    class function get_Capital: HSTRING; static; inline;
    class function get_AdminDistrictCapital: HSTRING; static; inline;
    class function get_CountryRegionCapital: HSTRING; static; inline;
    class function get_RoadShield: HSTRING; static; inline;
    class function get_RoadExit: HSTRING; static; inline;
    class function get_Transit: HSTRING; static; inline;
    class function get_Political: HSTRING; static; inline;
    class function get_CountryRegion: HSTRING; static; inline;
    class function get_AdminDistrict: HSTRING; static; inline;
    class function get_District: HSTRING; static; inline;
    class function get_Structure: HSTRING; static; inline;
    class function get_Building: HSTRING; static; inline;
    class function get_EducationBuilding: HSTRING; static; inline;
    class function get_MedicalBuilding: HSTRING; static; inline;
    class function get_TransitBuilding: HSTRING; static; inline;
    class function get_Transportation: HSTRING; static; inline;
    class function get_Road: HSTRING; static; inline;
    class function get_ControlledAccessHighway: HSTRING; static; inline;
    class function get_HighSpeedRamp: HSTRING; static; inline;
    class function get_Highway: HSTRING; static; inline;
    class function get_MajorRoad: HSTRING; static; inline;
    class function get_ArterialRoad: HSTRING; static; inline;
    class function get_Street: HSTRING; static; inline;
    class function get_Ramp: HSTRING; static; inline;
    class function get_UnpavedStreet: HSTRING; static; inline;
    class function get_TollRoad: HSTRING; static; inline;
    class function get_Railway: HSTRING; static; inline;
    class function get_Trail: HSTRING; static; inline;
    class function get_WaterRoute: HSTRING; static; inline;
    class function get_Water: HSTRING; static; inline;
    class function get_River: HSTRING; static; inline;
    class function get_RouteLine: HSTRING; static; inline;
    class function get_WalkingRoute: HSTRING; static; inline;
    class function get_DrivingRoute: HSTRING; static; inline;
    class property AdminDistrict: HSTRING read get_AdminDistrict;
    class property AdminDistrictCapital: HSTRING read get_AdminDistrictCapital;
    class property Airport: HSTRING read get_Airport;
    class property Area: HSTRING read get_Area;
    class property ArterialRoad: HSTRING read get_ArterialRoad;
    class property Building: HSTRING read get_Building;
    class property Business: HSTRING read get_Business;
    class property Capital: HSTRING read get_Capital;
    class property Cemetery: HSTRING read get_Cemetery;
    class property Continent: HSTRING read get_Continent;
    class property ControlledAccessHighway: HSTRING read get_ControlledAccessHighway;
    class property CountryRegion: HSTRING read get_CountryRegion;
    class property CountryRegionCapital: HSTRING read get_CountryRegionCapital;
    class property District: HSTRING read get_District;
    class property DrivingRoute: HSTRING read get_DrivingRoute;
    class property Education: HSTRING read get_Education;
    class property EducationBuilding: HSTRING read get_EducationBuilding;
    class property FoodPoint: HSTRING read get_FoodPoint;
    class property Forest: HSTRING read get_Forest;
    class property GolfCourse: HSTRING read get_GolfCourse;
    class property HighSpeedRamp: HSTRING read get_HighSpeedRamp;
    class property Highway: HSTRING read get_Highway;
    class property IndigenousPeoplesReserve: HSTRING read get_IndigenousPeoplesReserve;
    class property Island: HSTRING read get_Island;
    class property MajorRoad: HSTRING read get_MajorRoad;
    class property Medical: HSTRING read get_Medical;
    class property MedicalBuilding: HSTRING read get_MedicalBuilding;
    class property Military: HSTRING read get_Military;
    class property NaturalPoint: HSTRING read get_NaturalPoint;
    class property Nautical: HSTRING read get_Nautical;
    class property Neighborhood: HSTRING read get_Neighborhood;
    class property Park: HSTRING read get_Park;
    class property Peak: HSTRING read get_Peak;
    class property PlayingField: HSTRING read get_PlayingField;
    class property Point: HSTRING read get_Point;
    class property PointOfInterest: HSTRING read get_PointOfInterest;
    class property Political: HSTRING read get_Political;
    class property PopulatedPlace: HSTRING read get_PopulatedPlace;
    class property Railway: HSTRING read get_Railway;
    class property Ramp: HSTRING read get_Ramp;
    class property Reserve: HSTRING read get_Reserve;
    class property River: HSTRING read get_River;
    class property Road: HSTRING read get_Road;
    class property RoadExit: HSTRING read get_RoadExit;
    class property RoadShield: HSTRING read get_RoadShield;
    class property RouteLine: HSTRING read get_RouteLine;
    class property Runway: HSTRING read get_Runway;
    class property Sand: HSTRING read get_Sand;
    class property ShoppingCenter: HSTRING read get_ShoppingCenter;
    class property Stadium: HSTRING read get_Stadium;
    class property Street: HSTRING read get_Street;
    class property Structure: HSTRING read get_Structure;
    class property TollRoad: HSTRING read get_TollRoad;
    class property Trail: HSTRING read get_Trail;
    class property Transit: HSTRING read get_Transit;
    class property TransitBuilding: HSTRING read get_TransitBuilding;
    class property Transportation: HSTRING read get_Transportation;
    class property UnpavedStreet: HSTRING read get_UnpavedStreet;
    class property Vegetation: HSTRING read get_Vegetation;
    class property VolcanicPeak: HSTRING read get_VolcanicPeak;
    class property WalkingRoute: HSTRING read get_WalkingRoute;
    class property Water: HSTRING read get_Water;
    class property WaterPoint: HSTRING read get_WaterPoint;
    class property WaterRoute: HSTRING read get_WaterRoute;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates
  // Explicitly imported
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics"
  TMaps_MapStyleSheetEntryStates = class(TWinRTGenericImportS<Maps_IMapStyleSheetEntryStatesStatics>)
  public
    // -> Maps_IMapStyleSheetEntryStatesStatics
    class function get_Disabled: HSTRING; static; inline;
    class function get_Hover: HSTRING; static; inline;
    class function get_Selected: HSTRING; static; inline;
    class property Disabled: HSTRING read get_Disabled;
    class property Hover: HSTRING read get_Hover;
    class property Selected: HSTRING read get_Selected;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2
  // Instantiable: "Maps_IMapTargetCameraChangedEventArgs"
  TMaps_MapTargetCameraChangedEventArgs = class(TWinRTGenericImportI<Maps_IMapTargetCameraChangedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest
  // Instantiable: "Maps_IMapTileBitmapRequest"
  TMaps_MapTileBitmapRequest = class(TWinRTGenericImportI<Maps_IMapTileBitmapRequest>) end;

  // Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral
  // Instantiable: "Maps_IMapTileBitmapRequestDeferral"
  TMaps_MapTileBitmapRequestDeferral = class(TWinRTGenericImportI<Maps_IMapTileBitmapRequestDeferral>) end;

  // Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2
  // Instantiable: "Maps_IMapTileBitmapRequestedEventArgs"
  TMaps_MapTileBitmapRequestedEventArgs = class(TWinRTGenericImportI<Maps_IMapTileBitmapRequestedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.MapTileSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileSource
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileSource2
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics"
  // Statics: "Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2"
  // Factory: "Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory"
  // Instantiable: "Maps_IMapTileSource"
  TMaps_MapTileSource = class(TWinRTGenericImportFS2I<Maps_IMapTileSourceFactory, Maps_IMapTileSourceStatics, Maps_IMapTileSourceStatics2, Maps_IMapTileSource>)
  public
    // -> Maps_IMapTileSourceStatics
    class function get_DataSourceProperty: IDependencyProperty; static; inline;
    class function get_LayerProperty: IDependencyProperty; static; inline;
    class function get_ZoomLevelRangeProperty: IDependencyProperty; static; inline;
    class function get_BoundsProperty: IDependencyProperty; static; inline;
    class function get_AllowOverstretchProperty: IDependencyProperty; static; inline;
    class function get_IsFadingEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsTransparencyEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsRetryEnabledProperty: IDependencyProperty; static; inline;
    class function get_ZIndexProperty: IDependencyProperty; static; inline;
    class function get_TilePixelSizeProperty: IDependencyProperty; static; inline;
    class function get_VisibleProperty: IDependencyProperty; static; inline;
    class property AllowOverstretchProperty: IDependencyProperty read get_AllowOverstretchProperty;
    class property BoundsProperty: IDependencyProperty read get_BoundsProperty;
    class property DataSourceProperty: IDependencyProperty read get_DataSourceProperty;
    class property IsFadingEnabledProperty: IDependencyProperty read get_IsFadingEnabledProperty;
    class property IsRetryEnabledProperty: IDependencyProperty read get_IsRetryEnabledProperty;
    class property IsTransparencyEnabledProperty: IDependencyProperty read get_IsTransparencyEnabledProperty;
    class property LayerProperty: IDependencyProperty read get_LayerProperty;
    class property TilePixelSizeProperty: IDependencyProperty read get_TilePixelSizeProperty;
    class property VisibleProperty: IDependencyProperty read get_VisibleProperty;
    class property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;
    class property ZoomLevelRangeProperty: IDependencyProperty read get_ZoomLevelRangeProperty;

    // -> Maps_IMapTileSourceStatics2
    class function get_AnimationStateProperty: IDependencyProperty; static; inline;
    class function get_AutoPlayProperty: IDependencyProperty; static; inline;
    class function get_FrameCountProperty: IDependencyProperty; static; inline;
    class function get_FrameDurationProperty: IDependencyProperty; static; inline;
    class property AnimationStateProperty: IDependencyProperty read get_AnimationStateProperty;
    class property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    class property FrameCountProperty: IDependencyProperty read get_FrameCountProperty;
    class property FrameDurationProperty: IDependencyProperty read get_FrameDurationProperty;

    // -> Maps_IMapTileSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; static; inline;
    class function CreateInstanceWithDataSource(dataSource: Maps_IMapTileDataSource; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; static; inline;
    class function CreateInstanceWithDataSourceAndZoomRange(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; static; inline;
    class function CreateInstanceWithDataSourceZoomRangeAndBounds(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; bounds: IGeoboundingBox; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; static; inline;
    class function CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; bounds: IGeoboundingBox; tileSizeInPixels: Integer; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.MapTileUriRequest
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest
  // Instantiable: "Maps_IMapTileUriRequest"
  TMaps_MapTileUriRequest = class(TWinRTGenericImportI<Maps_IMapTileUriRequest>) end;

  // Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral
  // Instantiable: "Maps_IMapTileUriRequestDeferral"
  TMaps_MapTileUriRequestDeferral = class(TWinRTGenericImportI<Maps_IMapTileUriRequestDeferral>) end;

  // Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs
  // Implements: Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2
  // Instantiable: "Maps_IMapTileUriRequestedEventArgs"
  TMaps_MapTileUriRequestedEventArgs = class(TWinRTGenericImportI<Maps_IMapTileUriRequestedEventArgs>) end;

  // Windows.UI.Xaml.Controls.Maps.StreetsideExperience
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IStreetsideExperience
  // Factory: "Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory"
  TMaps_StreetsideExperience = class(TWinRTGenericImportF<Maps_IStreetsideExperienceFactory>)
  public
    // -> Maps_IStreetsideExperienceFactory
    class function CreateInstanceWithPanorama(panorama: Maps_IStreetsidePanorama): Maps_IStreetsideExperience; static; inline;
    class function CreateInstanceWithPanoramaHeadingPitchAndFieldOfView(panorama: Maps_IStreetsidePanorama; headingInDegrees: Double; pitchInDegrees: Double; fieldOfViewInDegrees: Double): Maps_IStreetsideExperience; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Maps.StreetsidePanorama
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama
  // Statics: "Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics"
  TMaps_StreetsidePanorama = class(TWinRTGenericImportS<Maps_IStreetsidePanoramaStatics>)
  public
    // -> Maps_IStreetsidePanoramaStatics
    class function FindNearbyAsync(location: IGeopoint): IAsyncOperation_1__Maps_IStreetsidePanorama; overload; static; inline;
    class function FindNearbyAsync(location: IGeopoint; radiusInMeters: Double): IAsyncOperation_1__Maps_IStreetsidePanorama; overload; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MediaElement
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMediaElement
  // Implements: Windows.UI.Xaml.Controls.IMediaElement2
  // Implements: Windows.UI.Xaml.Controls.IMediaElement3
  // Statics: "Windows.UI.Xaml.Controls.IMediaElementStatics"
  // Statics: "Windows.UI.Xaml.Controls.IMediaElementStatics2"
  // Instantiable: "IMediaElement"
  TMediaElement = class(TWinRTGenericImportS2I<IMediaElementStatics, IMediaElementStatics2, IMediaElement>)
  public
    // -> IMediaElementStatics
    class function get_PosterSourceProperty: IDependencyProperty; static; inline;
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_IsMutedProperty: IDependencyProperty; static; inline;
    class function get_IsAudioOnlyProperty: IDependencyProperty; static; inline;
    class function get_AutoPlayProperty: IDependencyProperty; static; inline;
    class function get_VolumeProperty: IDependencyProperty; static; inline;
    class function get_BalanceProperty: IDependencyProperty; static; inline;
    class function get_NaturalVideoHeightProperty: IDependencyProperty; static; inline;
    class function get_NaturalVideoWidthProperty: IDependencyProperty; static; inline;
    class function get_NaturalDurationProperty: IDependencyProperty; static; inline;
    class function get_PositionProperty: IDependencyProperty; static; inline;
    class function get_DownloadProgressProperty: IDependencyProperty; static; inline;
    class function get_BufferingProgressProperty: IDependencyProperty; static; inline;
    class function get_DownloadProgressOffsetProperty: IDependencyProperty; static; inline;
    class function get_CurrentStateProperty: IDependencyProperty; static; inline;
    class function get_CanSeekProperty: IDependencyProperty; static; inline;
    class function get_CanPauseProperty: IDependencyProperty; static; inline;
    class function get_AudioStreamCountProperty: IDependencyProperty; static; inline;
    class function get_AudioStreamIndexProperty: IDependencyProperty; static; inline;
    class function get_PlaybackRateProperty: IDependencyProperty; static; inline;
    class function get_IsLoopingProperty: IDependencyProperty; static; inline;
    class function get_PlayToSourceProperty: IDependencyProperty; static; inline;
    class function get_DefaultPlaybackRateProperty: IDependencyProperty; static; inline;
    class function get_AspectRatioWidthProperty: IDependencyProperty; static; inline;
    class function get_AspectRatioHeightProperty: IDependencyProperty; static; inline;
    class function get_RealTimePlaybackProperty: IDependencyProperty; static; inline;
    class function get_AudioCategoryProperty: IDependencyProperty; static; inline;
    class function get_AudioDeviceTypeProperty: IDependencyProperty; static; inline;
    class function get_ProtectionManagerProperty: IDependencyProperty; static; inline;
    class function get_Stereo3DVideoPackingModeProperty: IDependencyProperty; static; inline;
    class function get_Stereo3DVideoRenderModeProperty: IDependencyProperty; static; inline;
    class function get_IsStereo3DVideoProperty: IDependencyProperty; static; inline;
    class function get_ActualStereo3DVideoPackingModeProperty: IDependencyProperty; static; inline;
    class property ActualStereo3DVideoPackingModeProperty: IDependencyProperty read get_ActualStereo3DVideoPackingModeProperty;
    class property AspectRatioHeightProperty: IDependencyProperty read get_AspectRatioHeightProperty;
    class property AspectRatioWidthProperty: IDependencyProperty read get_AspectRatioWidthProperty;
    class property AudioCategoryProperty: IDependencyProperty read get_AudioCategoryProperty;
    class property AudioDeviceTypeProperty: IDependencyProperty read get_AudioDeviceTypeProperty;
    class property AudioStreamCountProperty: IDependencyProperty read get_AudioStreamCountProperty;
    class property AudioStreamIndexProperty: IDependencyProperty read get_AudioStreamIndexProperty;
    class property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    class property BalanceProperty: IDependencyProperty read get_BalanceProperty;
    class property BufferingProgressProperty: IDependencyProperty read get_BufferingProgressProperty;
    class property CanPauseProperty: IDependencyProperty read get_CanPauseProperty;
    class property CanSeekProperty: IDependencyProperty read get_CanSeekProperty;
    class property CurrentStateProperty: IDependencyProperty read get_CurrentStateProperty;
    class property DefaultPlaybackRateProperty: IDependencyProperty read get_DefaultPlaybackRateProperty;
    class property DownloadProgressOffsetProperty: IDependencyProperty read get_DownloadProgressOffsetProperty;
    class property DownloadProgressProperty: IDependencyProperty read get_DownloadProgressProperty;
    class property IsAudioOnlyProperty: IDependencyProperty read get_IsAudioOnlyProperty;
    class property IsLoopingProperty: IDependencyProperty read get_IsLoopingProperty;
    class property IsMutedProperty: IDependencyProperty read get_IsMutedProperty;
    class property IsStereo3DVideoProperty: IDependencyProperty read get_IsStereo3DVideoProperty;
    class property NaturalDurationProperty: IDependencyProperty read get_NaturalDurationProperty;
    class property NaturalVideoHeightProperty: IDependencyProperty read get_NaturalVideoHeightProperty;
    class property NaturalVideoWidthProperty: IDependencyProperty read get_NaturalVideoWidthProperty;
    class property PlayToSourceProperty: IDependencyProperty read get_PlayToSourceProperty;
    class property PlaybackRateProperty: IDependencyProperty read get_PlaybackRateProperty;
    class property PositionProperty: IDependencyProperty read get_PositionProperty;
    class property PosterSourceProperty: IDependencyProperty read get_PosterSourceProperty;
    class property ProtectionManagerProperty: IDependencyProperty read get_ProtectionManagerProperty;
    class property RealTimePlaybackProperty: IDependencyProperty read get_RealTimePlaybackProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property Stereo3DVideoPackingModeProperty: IDependencyProperty read get_Stereo3DVideoPackingModeProperty;
    class property Stereo3DVideoRenderModeProperty: IDependencyProperty read get_Stereo3DVideoRenderModeProperty;
    class property VolumeProperty: IDependencyProperty read get_VolumeProperty;

    // -> IMediaElementStatics2
    class function get_AreTransportControlsEnabledProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_IsFullWindowProperty: IDependencyProperty; static; inline;
    class function get_PlayToPreferredSourceUriProperty: IDependencyProperty; static; inline;
    class property AreTransportControlsEnabledProperty: IDependencyProperty read get_AreTransportControlsEnabledProperty;
    class property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    class property PlayToPreferredSourceUriProperty: IDependencyProperty read get_PlayToPreferredSourceUriProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // Windows.UI.Xaml.Controls.MediaPlayerElement
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMediaPlayerElement
  // Statics: "Windows.UI.Xaml.Controls.IMediaPlayerElementStatics"
  // Factory: "Windows.UI.Xaml.Controls.IMediaPlayerElementFactory"
  // Instantiable: "IMediaPlayerElement"
  TMediaPlayerElement = class(TWinRTGenericImportFSI<IMediaPlayerElementFactory, IMediaPlayerElementStatics, IMediaPlayerElement>)
  public
    // -> IMediaPlayerElementStatics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_AreTransportControlsEnabledProperty: IDependencyProperty; static; inline;
    class function get_PosterSourceProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_AutoPlayProperty: IDependencyProperty; static; inline;
    class function get_IsFullWindowProperty: IDependencyProperty; static; inline;
    class function get_MediaPlayerProperty: IDependencyProperty; static; inline;
    class property AreTransportControlsEnabledProperty: IDependencyProperty read get_AreTransportControlsEnabledProperty;
    class property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    class property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    class property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    class property PosterSourceProperty: IDependencyProperty read get_PosterSourceProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;

    // -> IMediaPlayerElementFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerElement; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MediaPlayerPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMediaPlayerPresenter
  // Statics: "Windows.UI.Xaml.Controls.IMediaPlayerPresenterStatics"
  // Factory: "Windows.UI.Xaml.Controls.IMediaPlayerPresenterFactory"
  // Instantiable: "IMediaPlayerPresenter"
  TMediaPlayerPresenter = class(TWinRTGenericImportFSI<IMediaPlayerPresenterFactory, IMediaPlayerPresenterStatics, IMediaPlayerPresenter>)
  public
    // -> IMediaPlayerPresenterStatics
    class function get_MediaPlayerProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_IsFullWindowProperty: IDependencyProperty; static; inline;
    class property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    class property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;

    // -> IMediaPlayerPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MediaTransportControls
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMediaTransportControls
  // Implements: Windows.UI.Xaml.Controls.IMediaTransportControls2
  // Implements: Windows.UI.Xaml.Controls.IMediaTransportControls3
  // Implements: Windows.UI.Xaml.Controls.IMediaTransportControls4
  // Statics: "Windows.UI.Xaml.Controls.IMediaTransportControlsStatics"
  // Statics: "Windows.UI.Xaml.Controls.IMediaTransportControlsStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IMediaTransportControlsStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IMediaTransportControlsStatics4"
  // Factory: "Windows.UI.Xaml.Controls.IMediaTransportControlsFactory"
  // Instantiable: "IMediaTransportControls"
  TMediaTransportControls = class(TWinRTGenericImportFS4I<IMediaTransportControlsFactory, IMediaTransportControlsStatics, IMediaTransportControlsStatics2, IMediaTransportControlsStatics3, IMediaTransportControlsStatics4, IMediaTransportControls>)
  public
    // -> IMediaTransportControlsStatics
    class function get_IsFullWindowButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsFullWindowEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsZoomButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsZoomEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsFastForwardButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsFastForwardEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsFastRewindButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsFastRewindEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsStopButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsStopEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsVolumeButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsVolumeEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsPlaybackRateButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsPlaybackRateEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsSeekBarVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsSeekEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property IsFastForwardButtonVisibleProperty: IDependencyProperty read get_IsFastForwardButtonVisibleProperty;
    class property IsFastForwardEnabledProperty: IDependencyProperty read get_IsFastForwardEnabledProperty;
    class property IsFastRewindButtonVisibleProperty: IDependencyProperty read get_IsFastRewindButtonVisibleProperty;
    class property IsFastRewindEnabledProperty: IDependencyProperty read get_IsFastRewindEnabledProperty;
    class property IsFullWindowButtonVisibleProperty: IDependencyProperty read get_IsFullWindowButtonVisibleProperty;
    class property IsFullWindowEnabledProperty: IDependencyProperty read get_IsFullWindowEnabledProperty;
    class property IsPlaybackRateButtonVisibleProperty: IDependencyProperty read get_IsPlaybackRateButtonVisibleProperty;
    class property IsPlaybackRateEnabledProperty: IDependencyProperty read get_IsPlaybackRateEnabledProperty;
    class property IsSeekBarVisibleProperty: IDependencyProperty read get_IsSeekBarVisibleProperty;
    class property IsSeekEnabledProperty: IDependencyProperty read get_IsSeekEnabledProperty;
    class property IsStopButtonVisibleProperty: IDependencyProperty read get_IsStopButtonVisibleProperty;
    class property IsStopEnabledProperty: IDependencyProperty read get_IsStopEnabledProperty;
    class property IsVolumeButtonVisibleProperty: IDependencyProperty read get_IsVolumeButtonVisibleProperty;
    class property IsVolumeEnabledProperty: IDependencyProperty read get_IsVolumeEnabledProperty;
    class property IsZoomButtonVisibleProperty: IDependencyProperty read get_IsZoomButtonVisibleProperty;
    class property IsZoomEnabledProperty: IDependencyProperty read get_IsZoomEnabledProperty;

    // -> IMediaTransportControlsStatics2
    class function get_IsSkipForwardButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsSkipForwardEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsSkipBackwardButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsSkipBackwardEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsNextTrackButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsPreviousTrackButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_FastPlayFallbackBehaviourProperty: IDependencyProperty; static; inline;
    class property FastPlayFallbackBehaviourProperty: IDependencyProperty read get_FastPlayFallbackBehaviourProperty;
    class property IsNextTrackButtonVisibleProperty: IDependencyProperty read get_IsNextTrackButtonVisibleProperty;
    class property IsPreviousTrackButtonVisibleProperty: IDependencyProperty read get_IsPreviousTrackButtonVisibleProperty;
    class property IsSkipBackwardButtonVisibleProperty: IDependencyProperty read get_IsSkipBackwardButtonVisibleProperty;
    class property IsSkipBackwardEnabledProperty: IDependencyProperty read get_IsSkipBackwardEnabledProperty;
    class property IsSkipForwardButtonVisibleProperty: IDependencyProperty read get_IsSkipForwardButtonVisibleProperty;
    class property IsSkipForwardEnabledProperty: IDependencyProperty read get_IsSkipForwardEnabledProperty;

    // -> IMediaTransportControlsStatics3
    class function get_ShowAndHideAutomaticallyProperty: IDependencyProperty; static; inline;
    class function get_IsRepeatEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsRepeatButtonVisibleProperty: IDependencyProperty; static; inline;
    class property IsRepeatButtonVisibleProperty: IDependencyProperty read get_IsRepeatButtonVisibleProperty;
    class property IsRepeatEnabledProperty: IDependencyProperty read get_IsRepeatEnabledProperty;
    class property ShowAndHideAutomaticallyProperty: IDependencyProperty read get_ShowAndHideAutomaticallyProperty;

    // -> IMediaTransportControlsStatics4
    class function get_IsCompactOverlayButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsCompactOverlayEnabledProperty: IDependencyProperty; static; inline;
    class property IsCompactOverlayButtonVisibleProperty: IDependencyProperty read get_IsCompactOverlayButtonVisibleProperty;
    class property IsCompactOverlayEnabledProperty: IDependencyProperty read get_IsCompactOverlayEnabledProperty;

    // -> IMediaTransportControlsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaTransportControls; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MediaTransportControlsHelper
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMediaTransportControlsHelper
  // Statics: "Windows.UI.Xaml.Controls.IMediaTransportControlsHelperStatics"
  TMediaTransportControlsHelper = class(TWinRTGenericImportS<IMediaTransportControlsHelperStatics>)
  public
    // -> IMediaTransportControlsHelperStatics
    class function get_DropoutOrderProperty: IDependencyProperty; static; inline;
    class function GetDropoutOrder(element: IUIElement): IReference_1__Integer; static; inline;
    class procedure SetDropoutOrder(element: IUIElement; value: IReference_1__Integer); static; inline;
    class property DropoutOrderProperty: IDependencyProperty read get_DropoutOrderProperty;
  end;

  // Windows.UI.Xaml.Controls.MenuBar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuBar
  // Statics: "Windows.UI.Xaml.Controls.IMenuBarStatics"
  // Factory: "Windows.UI.Xaml.Controls.IMenuBarFactory"
  // Instantiable: "IMenuBar"
  TMenuBar = class(TWinRTGenericImportFSI<IMenuBarFactory, IMenuBarStatics, IMenuBar>)
  public
    // -> IMenuBarStatics
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;

    // -> IMenuBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBar; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MenuBarItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuBarItem
  // Statics: "Windows.UI.Xaml.Controls.IMenuBarItemStatics"
  // Factory: "Windows.UI.Xaml.Controls.IMenuBarItemFactory"
  // Instantiable: "IMenuBarItem"
  TMenuBarItem = class(TWinRTGenericImportFSI<IMenuBarItemFactory, IMenuBarItemStatics, IMenuBarItem>)
  public
    // -> IMenuBarItemStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> IMenuBarItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MenuFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyout
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyout2
  // Statics: "Windows.UI.Xaml.Controls.IMenuFlyoutStatics"
  // Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutFactory"
  // Instantiable: "IMenuFlyout"
  TMenuFlyout = class(TWinRTGenericImportFSI<IMenuFlyoutFactory, IMenuFlyoutStatics, IMenuFlyout>)
  public
    // -> IMenuFlyoutStatics
    class function get_MenuFlyoutPresenterStyleProperty: IDependencyProperty; static; inline;
    class property MenuFlyoutPresenterStyleProperty: IDependencyProperty read get_MenuFlyoutPresenterStyleProperty;

    // -> IMenuFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyout; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MenuBarItemFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuBarItemFlyout
  // Factory: "Windows.UI.Xaml.Controls.IMenuBarItemFlyoutFactory"
  // Instantiable: "IMenuBarItemFlyout"
  TMenuBarItemFlyout = class(TWinRTGenericImportFI<IMenuBarItemFlyoutFactory, IMenuBarItemFlyout>)
  public
    // -> IMenuBarItemFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItemFlyout; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MenuFlyoutItemBase
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutItemBase
  // Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory"
  // Instantiable: "IMenuFlyoutItemBase"
  TMenuFlyoutItemBase = class(TWinRTGenericImportFI<IMenuFlyoutItemBaseFactory, IMenuFlyoutItemBase>)
  public
    // -> IMenuFlyoutItemBaseFactory
  end;

  // Windows.UI.Xaml.Controls.MenuFlyoutItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutItem
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutItem2
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutItem3
  // Statics: "Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics"
  // Statics: "Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics3"
  // Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory"
  // Instantiable: "IMenuFlyoutItem"
  TMenuFlyoutItem = class(TWinRTGenericImportFS3I<IMenuFlyoutItemFactory, IMenuFlyoutItemStatics, IMenuFlyoutItemStatics2, IMenuFlyoutItemStatics3, IMenuFlyoutItem>)
  public
    // -> IMenuFlyoutItemStatics
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;

    // -> IMenuFlyoutItemStatics2
    class function get_IconProperty: IDependencyProperty; static; inline;
    class property IconProperty: IDependencyProperty read get_IconProperty;

    // -> IMenuFlyoutItemStatics3
    class function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; static; inline;
    class property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;

    // -> IMenuFlyoutItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MenuFlyoutPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutPresenter
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutPresenter2
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutPresenter3
  // Statics: "Windows.UI.Xaml.Controls.IMenuFlyoutPresenterStatics3"
  // Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory"
  // Instantiable: "IMenuFlyoutPresenter"
  TMenuFlyoutPresenter = class(TWinRTGenericImportFSI<IMenuFlyoutPresenterFactory, IMenuFlyoutPresenterStatics3, IMenuFlyoutPresenter>)
  public
    // -> IMenuFlyoutPresenterStatics3
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;

    // -> IMenuFlyoutPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MenuFlyoutSeparator
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutSeparator
  // Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory"
  // Instantiable: "IMenuFlyoutSeparator"
  TMenuFlyoutSeparator = class(TWinRTGenericImportFI<IMenuFlyoutSeparatorFactory, IMenuFlyoutSeparator>)
  public
    // -> IMenuFlyoutSeparatorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutSeparator; static; inline;
  end;

  // Windows.UI.Xaml.Controls.MenuFlyoutSubItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutSubItem
  // Implements: Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2
  // Statics: "Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics"
  // Statics: "Windows.UI.Xaml.Controls.IMenuFlyoutSubItemStatics2"
  // Instantiable: "IMenuFlyoutSubItem"
  TMenuFlyoutSubItem = class(TWinRTGenericImportS2I<IMenuFlyoutSubItemStatics, IMenuFlyoutSubItemStatics2, IMenuFlyoutSubItem>)
  public
    // -> IMenuFlyoutSubItemStatics
    class function get_TextProperty: IDependencyProperty; static; inline;
    class property TextProperty: IDependencyProperty read get_TextProperty;

    // -> IMenuFlyoutSubItemStatics2
    class function get_IconProperty: IDependencyProperty; static; inline;
    class property IconProperty: IDependencyProperty read get_IconProperty;
  end;

  // Windows.UI.Xaml.Controls.NavigationView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationView
  // Implements: Windows.UI.Xaml.Controls.INavigationView2
  // Implements: Windows.UI.Xaml.Controls.INavigationView3
  // Statics: "Windows.UI.Xaml.Controls.INavigationViewStatics"
  // Statics: "Windows.UI.Xaml.Controls.INavigationViewStatics2"
  // Statics: "Windows.UI.Xaml.Controls.INavigationViewStatics3"
  // Factory: "Windows.UI.Xaml.Controls.INavigationViewFactory"
  // Instantiable: "INavigationView"
  TNavigationView = class(TWinRTGenericImportFS3I<INavigationViewFactory, INavigationViewStatics, INavigationViewStatics2, INavigationViewStatics3, INavigationView>)
  public
    // -> INavigationViewStatics
    class function get_IsPaneOpenProperty: IDependencyProperty; static; inline;
    class function get_CompactModeThresholdWidthProperty: IDependencyProperty; static; inline;
    class function get_ExpandedModeThresholdWidthProperty: IDependencyProperty; static; inline;
    class function get_PaneFooterProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_IsSettingsVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsPaneToggleButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_AlwaysShowHeaderProperty: IDependencyProperty; static; inline;
    class function get_CompactPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_OpenPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_PaneToggleButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_MenuItemsProperty: IDependencyProperty; static; inline;
    class function get_MenuItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_SettingsItemProperty: IDependencyProperty; static; inline;
    class function get_AutoSuggestBoxProperty: IDependencyProperty; static; inline;
    class function get_MenuItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_MenuItemTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_MenuItemContainerStyleProperty: IDependencyProperty; static; inline;
    class function get_MenuItemContainerStyleSelectorProperty: IDependencyProperty; static; inline;
    class property AlwaysShowHeaderProperty: IDependencyProperty read get_AlwaysShowHeaderProperty;
    class property AutoSuggestBoxProperty: IDependencyProperty read get_AutoSuggestBoxProperty;
    class property CompactModeThresholdWidthProperty: IDependencyProperty read get_CompactModeThresholdWidthProperty;
    class property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property ExpandedModeThresholdWidthProperty: IDependencyProperty read get_ExpandedModeThresholdWidthProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    class property IsPaneToggleButtonVisibleProperty: IDependencyProperty read get_IsPaneToggleButtonVisibleProperty;
    class property IsSettingsVisibleProperty: IDependencyProperty read get_IsSettingsVisibleProperty;
    class property MenuItemContainerStyleProperty: IDependencyProperty read get_MenuItemContainerStyleProperty;
    class property MenuItemContainerStyleSelectorProperty: IDependencyProperty read get_MenuItemContainerStyleSelectorProperty;
    class property MenuItemTemplateProperty: IDependencyProperty read get_MenuItemTemplateProperty;
    class property MenuItemTemplateSelectorProperty: IDependencyProperty read get_MenuItemTemplateSelectorProperty;
    class property MenuItemsProperty: IDependencyProperty read get_MenuItemsProperty;
    class property MenuItemsSourceProperty: IDependencyProperty read get_MenuItemsSourceProperty;
    class property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    class property PaneFooterProperty: IDependencyProperty read get_PaneFooterProperty;
    class property PaneToggleButtonStyleProperty: IDependencyProperty read get_PaneToggleButtonStyleProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SettingsItemProperty: IDependencyProperty read get_SettingsItemProperty;

    // -> INavigationViewStatics2
    class function get_IsBackButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsBackEnabledProperty: IDependencyProperty; static; inline;
    class function get_PaneTitleProperty: IDependencyProperty; static; inline;
    class property IsBackButtonVisibleProperty: IDependencyProperty read get_IsBackButtonVisibleProperty;
    class property IsBackEnabledProperty: IDependencyProperty read get_IsBackEnabledProperty;
    class property PaneTitleProperty: IDependencyProperty read get_PaneTitleProperty;

    // -> INavigationViewStatics3
    class function get_PaneDisplayModeProperty: IDependencyProperty; static; inline;
    class function get_PaneHeaderProperty: IDependencyProperty; static; inline;
    class function get_PaneCustomContentProperty: IDependencyProperty; static; inline;
    class function get_ContentOverlayProperty: IDependencyProperty; static; inline;
    class function get_IsPaneVisibleProperty: IDependencyProperty; static; inline;
    class function get_SelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class function get_ShoulderNavigationEnabledProperty: IDependencyProperty; static; inline;
    class function get_OverflowLabelModeProperty: IDependencyProperty; static; inline;
    class property ContentOverlayProperty: IDependencyProperty read get_ContentOverlayProperty;
    class property IsPaneVisibleProperty: IDependencyProperty read get_IsPaneVisibleProperty;
    class property OverflowLabelModeProperty: IDependencyProperty read get_OverflowLabelModeProperty;
    class property PaneCustomContentProperty: IDependencyProperty read get_PaneCustomContentProperty;
    class property PaneDisplayModeProperty: IDependencyProperty read get_PaneDisplayModeProperty;
    class property PaneHeaderProperty: IDependencyProperty read get_PaneHeaderProperty;
    class property SelectionFollowsFocusProperty: IDependencyProperty read get_SelectionFollowsFocusProperty;
    class property ShoulderNavigationEnabledProperty: IDependencyProperty read get_ShoulderNavigationEnabledProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;

    // -> INavigationViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.NavigationViewItemBase
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationViewItemBase
  // Factory: "Windows.UI.Xaml.Controls.INavigationViewItemBaseFactory"
  // Instantiable: "INavigationViewItemBase"
  TNavigationViewItemBase = class(TWinRTGenericImportFI<INavigationViewItemBaseFactory, INavigationViewItemBase>)
  public
    // -> INavigationViewItemBaseFactory
  end;

  // Windows.UI.Xaml.Controls.NavigationViewItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationViewItem
  // Implements: Windows.UI.Xaml.Controls.INavigationViewItem2
  // Statics: "Windows.UI.Xaml.Controls.INavigationViewItemStatics"
  // Statics: "Windows.UI.Xaml.Controls.INavigationViewItemStatics2"
  // Factory: "Windows.UI.Xaml.Controls.INavigationViewItemFactory"
  // Instantiable: "INavigationViewItem"
  TNavigationViewItem = class(TWinRTGenericImportFS2I<INavigationViewItemFactory, INavigationViewItemStatics, INavigationViewItemStatics2, INavigationViewItem>)
  public
    // -> INavigationViewItemStatics
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_CompactPaneLengthProperty: IDependencyProperty; static; inline;
    class property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    class property IconProperty: IDependencyProperty read get_IconProperty;

    // -> INavigationViewItemStatics2
    class function get_SelectsOnInvokedProperty: IDependencyProperty; static; inline;
    class property SelectsOnInvokedProperty: IDependencyProperty read get_SelectsOnInvokedProperty;

    // -> INavigationViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.NavigationViewItemHeader
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationViewItemHeader
  // Factory: "Windows.UI.Xaml.Controls.INavigationViewItemHeaderFactory"
  // Instantiable: "INavigationViewItemHeader"
  TNavigationViewItemHeader = class(TWinRTGenericImportFI<INavigationViewItemHeaderFactory, INavigationViewItemHeader>)
  public
    // -> INavigationViewItemHeaderFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemHeader; static; inline;
  end;

  // Windows.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs
  // Implements: Windows.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2
  // Instantiable: "INavigationViewItemInvokedEventArgs"
  TNavigationViewItemInvokedEventArgs = class(TWinRTGenericImportI<INavigationViewItemInvokedEventArgs>) end;

  // Windows.UI.Xaml.Controls.NavigationViewItemSeparator
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationViewItemSeparator
  // Factory: "Windows.UI.Xaml.Controls.INavigationViewItemSeparatorFactory"
  // Instantiable: "INavigationViewItemSeparator"
  TNavigationViewItemSeparator = class(TWinRTGenericImportFI<INavigationViewItemSeparatorFactory, INavigationViewItemSeparator>)
  public
    // -> INavigationViewItemSeparatorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemSeparator; static; inline;
  end;

  // Windows.UI.Xaml.Controls.NavigationViewList
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationViewList
  // Factory: "Windows.UI.Xaml.Controls.INavigationViewListFactory"
  // Instantiable: "INavigationViewList"
  TNavigationViewList = class(TWinRTGenericImportFI<INavigationViewListFactory, INavigationViewList>)
  public
    // -> INavigationViewListFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewList; static; inline;
  end;

  // Windows.UI.Xaml.Controls.NavigationViewTemplateSettings
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.INavigationViewTemplateSettings
  // Statics: "Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics"
  // Factory: "Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory"
  // Instantiable: "INavigationViewTemplateSettings"
  TNavigationViewTemplateSettings = class(TWinRTGenericImportFSI<INavigationViewTemplateSettingsFactory, INavigationViewTemplateSettingsStatics, INavigationViewTemplateSettings>)
  public
    // -> INavigationViewTemplateSettingsStatics
    class function get_TopPaddingProperty: IDependencyProperty; static; inline;
    class function get_OverflowButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_PaneToggleButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_BackButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_TopPaneVisibilityProperty: IDependencyProperty; static; inline;
    class function get_LeftPaneVisibilityProperty: IDependencyProperty; static; inline;
    class function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class property BackButtonVisibilityProperty: IDependencyProperty read get_BackButtonVisibilityProperty;
    class property LeftPaneVisibilityProperty: IDependencyProperty read get_LeftPaneVisibilityProperty;
    class property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;
    class property PaneToggleButtonVisibilityProperty: IDependencyProperty read get_PaneToggleButtonVisibilityProperty;
    class property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
    class property TopPaddingProperty: IDependencyProperty read get_TopPaddingProperty;
    class property TopPaneVisibilityProperty: IDependencyProperty read get_TopPaneVisibilityProperty;

    // -> INavigationViewTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewTemplateSettings; static; inline;
  end;

  // Windows.UI.Xaml.Controls.UserControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IUserControl
  // Statics: "Windows.UI.Xaml.Controls.IUserControlStatics"
  // Factory: "Windows.UI.Xaml.Controls.IUserControlFactory"
  // Instantiable: "IUserControl"
  TUserControl = class(TWinRTGenericImportFSI<IUserControlFactory, IUserControlStatics, IUserControl>)
  public
    // -> IUserControlStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;

    // -> IUserControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUserControl; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Page
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPage
  // Implements: Windows.UI.Xaml.Controls.IPageOverrides
  // Statics: "Windows.UI.Xaml.Controls.IPageStatics"
  // Factory: "Windows.UI.Xaml.Controls.IPageFactory"
  // Instantiable: "IPage"
  TPage = class(TWinRTGenericImportFSI<IPageFactory, IPageStatics, IPage>)
  public
    // -> IPageStatics
    class function get_FrameProperty: IDependencyProperty; static; inline;
    class function get_TopAppBarProperty: IDependencyProperty; static; inline;
    class function get_BottomAppBarProperty: IDependencyProperty; static; inline;
    class property BottomAppBarProperty: IDependencyProperty read get_BottomAppBarProperty;
    class property FrameProperty: IDependencyProperty read get_FrameProperty;
    class property TopAppBarProperty: IDependencyProperty read get_TopAppBarProperty;

    // -> IPageFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPage; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ParallaxView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IParallaxView
  // Statics: "Windows.UI.Xaml.Controls.IParallaxViewStatics"
  // Factory: "Windows.UI.Xaml.Controls.IParallaxViewFactory"
  // Instantiable: "IParallaxView"
  TParallaxView = class(TWinRTGenericImportFSI<IParallaxViewFactory, IParallaxViewStatics, IParallaxView>)
  public
    // -> IParallaxViewStatics
    class function get_ChildProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSourceEndOffsetProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSourceOffsetKindProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSourceStartOffsetProperty: IDependencyProperty; static; inline;
    class function get_MaxHorizontalShiftRatioProperty: IDependencyProperty; static; inline;
    class function get_HorizontalShiftProperty: IDependencyProperty; static; inline;
    class function get_IsHorizontalShiftClampedProperty: IDependencyProperty; static; inline;
    class function get_IsVerticalShiftClampedProperty: IDependencyProperty; static; inline;
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_VerticalSourceEndOffsetProperty: IDependencyProperty; static; inline;
    class function get_VerticalSourceOffsetKindProperty: IDependencyProperty; static; inline;
    class function get_VerticalSourceStartOffsetProperty: IDependencyProperty; static; inline;
    class function get_MaxVerticalShiftRatioProperty: IDependencyProperty; static; inline;
    class function get_VerticalShiftProperty: IDependencyProperty; static; inline;
    class property ChildProperty: IDependencyProperty read get_ChildProperty;
    class property HorizontalShiftProperty: IDependencyProperty read get_HorizontalShiftProperty;
    class property HorizontalSourceEndOffsetProperty: IDependencyProperty read get_HorizontalSourceEndOffsetProperty;
    class property HorizontalSourceOffsetKindProperty: IDependencyProperty read get_HorizontalSourceOffsetKindProperty;
    class property HorizontalSourceStartOffsetProperty: IDependencyProperty read get_HorizontalSourceStartOffsetProperty;
    class property IsHorizontalShiftClampedProperty: IDependencyProperty read get_IsHorizontalShiftClampedProperty;
    class property IsVerticalShiftClampedProperty: IDependencyProperty read get_IsVerticalShiftClampedProperty;
    class property MaxHorizontalShiftRatioProperty: IDependencyProperty read get_MaxHorizontalShiftRatioProperty;
    class property MaxVerticalShiftRatioProperty: IDependencyProperty read get_MaxVerticalShiftRatioProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property VerticalShiftProperty: IDependencyProperty read get_VerticalShiftProperty;
    class property VerticalSourceEndOffsetProperty: IDependencyProperty read get_VerticalSourceEndOffsetProperty;
    class property VerticalSourceOffsetKindProperty: IDependencyProperty read get_VerticalSourceOffsetKindProperty;
    class property VerticalSourceStartOffsetProperty: IDependencyProperty read get_VerticalSourceStartOffsetProperty;

    // -> IParallaxViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IParallaxView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.PasswordBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPasswordBox
  // Implements: Windows.UI.Xaml.Controls.IPasswordBox2
  // Implements: Windows.UI.Xaml.Controls.IPasswordBox3
  // Implements: Windows.UI.Xaml.Controls.IPasswordBox4
  // Implements: Windows.UI.Xaml.Controls.IPasswordBox5
  // Statics: "Windows.UI.Xaml.Controls.IPasswordBoxStatics"
  // Statics: "Windows.UI.Xaml.Controls.IPasswordBoxStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IPasswordBoxStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IPasswordBoxStatics5"
  // Instantiable: "IPasswordBox"
  TPasswordBox = class(TWinRTGenericImportS4I<IPasswordBoxStatics, IPasswordBoxStatics2, IPasswordBoxStatics3, IPasswordBoxStatics5, IPasswordBox>)
  public
    // -> IPasswordBoxStatics
    class function get_PasswordProperty: IDependencyProperty; static; inline;
    class function get_PasswordCharProperty: IDependencyProperty; static; inline;
    class function get_IsPasswordRevealButtonEnabledProperty: IDependencyProperty; static; inline;
    class function get_MaxLengthProperty: IDependencyProperty; static; inline;
    class property IsPasswordRevealButtonEnabledProperty: IDependencyProperty read get_IsPasswordRevealButtonEnabledProperty;
    class property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    class property PasswordCharProperty: IDependencyProperty read get_PasswordCharProperty;
    class property PasswordProperty: IDependencyProperty read get_PasswordProperty;

    // -> IPasswordBoxStatics2
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;

    // -> IPasswordBoxStatics3
    class function get_PasswordRevealModeProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class function get_InputScopeProperty: IDependencyProperty; static; inline;
    class property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    class property PasswordRevealModeProperty: IDependencyProperty read get_PasswordRevealModeProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;

    // -> IPasswordBoxStatics5
    class function get_CanPasteClipboardContentProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // Windows.UI.Xaml.Controls.PathIcon
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPathIcon
  // Statics: "Windows.UI.Xaml.Controls.IPathIconStatics"
  // Factory: "Windows.UI.Xaml.Controls.IPathIconFactory"
  // Instantiable: "IPathIcon"
  TPathIcon = class(TWinRTGenericImportFSI<IPathIconFactory, IPathIconStatics, IPathIcon>)
  public
    // -> IPathIconStatics
    class function get_DataProperty: IDependencyProperty; static; inline;
    class property DataProperty: IDependencyProperty read get_DataProperty;

    // -> IPathIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIcon; static; inline;
  end;

  // Windows.UI.Xaml.Controls.PathIconSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPathIconSource
  // Statics: "Windows.UI.Xaml.Controls.IPathIconSourceStatics"
  // Factory: "Windows.UI.Xaml.Controls.IPathIconSourceFactory"
  // Instantiable: "IPathIconSource"
  TPathIconSource = class(TWinRTGenericImportFSI<IPathIconSourceFactory, IPathIconSourceStatics, IPathIconSource>)
  public
    // -> IPathIconSourceStatics
    class function get_DataProperty: IDependencyProperty; static; inline;
    class property DataProperty: IDependencyProperty read get_DataProperty;

    // -> IPathIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIconSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.PersonPicture
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPersonPicture
  // Statics: "Windows.UI.Xaml.Controls.IPersonPictureStatics"
  // Factory: "Windows.UI.Xaml.Controls.IPersonPictureFactory"
  // Instantiable: "IPersonPicture"
  TPersonPicture = class(TWinRTGenericImportFSI<IPersonPictureFactory, IPersonPictureStatics, IPersonPicture>)
  public
    // -> IPersonPictureStatics
    class function get_BadgeNumberProperty: IDependencyProperty; static; inline;
    class function get_BadgeGlyphProperty: IDependencyProperty; static; inline;
    class function get_BadgeImageSourceProperty: IDependencyProperty; static; inline;
    class function get_BadgeTextProperty: IDependencyProperty; static; inline;
    class function get_IsGroupProperty: IDependencyProperty; static; inline;
    class function get_ContactProperty: IDependencyProperty; static; inline;
    class function get_DisplayNameProperty: IDependencyProperty; static; inline;
    class function get_InitialsProperty: IDependencyProperty; static; inline;
    class function get_PreferSmallImageProperty: IDependencyProperty; static; inline;
    class function get_ProfilePictureProperty: IDependencyProperty; static; inline;
    class property BadgeGlyphProperty: IDependencyProperty read get_BadgeGlyphProperty;
    class property BadgeImageSourceProperty: IDependencyProperty read get_BadgeImageSourceProperty;
    class property BadgeNumberProperty: IDependencyProperty read get_BadgeNumberProperty;
    class property BadgeTextProperty: IDependencyProperty read get_BadgeTextProperty;
    class property ContactProperty: IDependencyProperty read get_ContactProperty;
    class property DisplayNameProperty: IDependencyProperty read get_DisplayNameProperty;
    class property InitialsProperty: IDependencyProperty read get_InitialsProperty;
    class property IsGroupProperty: IDependencyProperty read get_IsGroupProperty;
    class property PreferSmallImageProperty: IDependencyProperty read get_PreferSmallImageProperty;
    class property ProfilePictureProperty: IDependencyProperty read get_ProfilePictureProperty;

    // -> IPersonPictureFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPersonPicture; static; inline;
  end;

  // Windows.UI.Xaml.Controls.PickerConfirmedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPickerConfirmedEventArgs
  // Instantiable: "IPickerConfirmedEventArgs"
  TPickerConfirmedEventArgs = class(TWinRTGenericImportI<IPickerConfirmedEventArgs>) end;

  // Windows.UI.Xaml.Controls.PickerFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPickerFlyout
  // Statics: "Windows.UI.Xaml.Controls.IPickerFlyoutStatics"
  // Instantiable: "IPickerFlyout"
  TPickerFlyout = class(TWinRTGenericImportSI<IPickerFlyoutStatics, IPickerFlyout>)
  public
    // -> IPickerFlyoutStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_ConfirmationButtonsVisibleProperty: IDependencyProperty; static; inline;
    class property ConfirmationButtonsVisibleProperty: IDependencyProperty read get_ConfirmationButtonsVisibleProperty;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
  end;

  // Windows.UI.Xaml.Controls.Pivot
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPivot
  // Implements: Windows.UI.Xaml.Controls.IPivot2
  // Implements: Windows.UI.Xaml.Controls.IPivot3
  // Statics: "Windows.UI.Xaml.Controls.IPivotStatics"
  // Statics: "Windows.UI.Xaml.Controls.IPivotStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IPivotStatics3"
  // Factory: "Windows.UI.Xaml.Controls.IPivotFactory"
  // Instantiable: "IPivot"
  TPivot = class(TWinRTGenericImportFS3I<IPivotFactory, IPivotStatics, IPivotStatics2, IPivotStatics3, IPivot>)
  public
    // -> IPivotStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_TitleTemplateProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_IsLockedProperty: IDependencyProperty; static; inline;
    class function get_SlideInAnimationGroupProperty: IDependencyProperty; static; inline;
    class function GetSlideInAnimationGroup(element: IFrameworkElement): PivotSlideInAnimationGroup; static; inline;
    class procedure SetSlideInAnimationGroup(element: IFrameworkElement; value: PivotSlideInAnimationGroup); static; inline;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsLockedProperty: IDependencyProperty read get_IsLockedProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SlideInAnimationGroupProperty: IDependencyProperty read get_SlideInAnimationGroupProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;
    class property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;

    // -> IPivotStatics2
    class function get_LeftHeaderProperty: IDependencyProperty; static; inline;
    class function get_LeftHeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_RightHeaderProperty: IDependencyProperty; static; inline;
    class function get_RightHeaderTemplateProperty: IDependencyProperty; static; inline;
    class property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    class property LeftHeaderTemplateProperty: IDependencyProperty read get_LeftHeaderTemplateProperty;
    class property RightHeaderProperty: IDependencyProperty read get_RightHeaderProperty;
    class property RightHeaderTemplateProperty: IDependencyProperty read get_RightHeaderTemplateProperty;

    // -> IPivotStatics3
    class function get_HeaderFocusVisualPlacementProperty: IDependencyProperty; static; inline;
    class function get_IsHeaderItemsCarouselEnabledProperty: IDependencyProperty; static; inline;
    class property HeaderFocusVisualPlacementProperty: IDependencyProperty read get_HeaderFocusVisualPlacementProperty;
    class property IsHeaderItemsCarouselEnabledProperty: IDependencyProperty read get_IsHeaderItemsCarouselEnabledProperty;

    // -> IPivotFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivot; static; inline;
  end;

  // Windows.UI.Xaml.Controls.PivotItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPivotItem
  // Statics: "Windows.UI.Xaml.Controls.IPivotItemStatics"
  // Factory: "Windows.UI.Xaml.Controls.IPivotItemFactory"
  // Instantiable: "IPivotItem"
  TPivotItem = class(TWinRTGenericImportFSI<IPivotItemFactory, IPivotItemStatics, IPivotItem>)
  public
    // -> IPivotItemStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;

    // -> IPivotItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivotItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.PivotItemEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IPivotItemEventArgs
  // Instantiable: "IPivotItemEventArgs"
  TPivotItemEventArgs = class(TWinRTGenericImportI<IPivotItemEventArgs>) end;

  // Windows.UI.Xaml.Controls.Primitives.CalendarPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ICalendarPanel
  // Instantiable: "Primitives_ICalendarPanel"
  TPrimitives_CalendarPanel = class(TWinRTGenericImportI<Primitives_ICalendarPanel>) end;

  // Windows.UI.Xaml.Controls.VirtualizingPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IVirtualizingPanel
  // Implements: Windows.UI.Xaml.Controls.IVirtualizingPanelProtected
  // Implements: Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides
  // Factory: "Windows.UI.Xaml.Controls.IVirtualizingPanelFactory"
  // Instantiable: "IVirtualizingPanel"
  TVirtualizingPanel = class(TWinRTGenericImportFI<IVirtualizingPanelFactory, IVirtualizingPanel>)
  public
    // -> IVirtualizingPanelFactory
  end;

  // Windows.UI.Xaml.Controls.Primitives.CarouselPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ICarouselPanel
  // Implements: Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Factory: "Windows.UI.Xaml.Controls.Primitives.ICarouselPanelFactory"
  // Instantiable: "Primitives_ICarouselPanel"
  TPrimitives_CarouselPanel = class(TWinRTGenericImportFI<Primitives_ICarouselPanelFactory, Primitives_ICarouselPanel>)
  public
    // -> Primitives_ICarouselPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICarouselPanel; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.RangeBase
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IRangeBase
  // Implements: Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IRangeBaseStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IRangeBaseFactory"
  // Instantiable: "Primitives_IRangeBase"
  TPrimitives_RangeBase = class(TWinRTGenericImportFSI<Primitives_IRangeBaseFactory, Primitives_IRangeBaseStatics, Primitives_IRangeBase>)
  public
    // -> Primitives_IRangeBaseStatics
    class function get_MinimumProperty: IDependencyProperty; static; inline;
    class function get_MaximumProperty: IDependencyProperty; static; inline;
    class function get_SmallChangeProperty: IDependencyProperty; static; inline;
    class function get_LargeChangeProperty: IDependencyProperty; static; inline;
    class function get_ValueProperty: IDependencyProperty; static; inline;
    class property LargeChangeProperty: IDependencyProperty read get_LargeChangeProperty;
    class property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    class property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    class property SmallChangeProperty: IDependencyProperty read get_SmallChangeProperty;
    class property ValueProperty: IDependencyProperty read get_ValueProperty;

    // -> Primitives_IRangeBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IRangeBase; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Slider
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISlider
  // Implements: Windows.UI.Xaml.Controls.ISlider2
  // Statics: "Windows.UI.Xaml.Controls.ISliderStatics"
  // Statics: "Windows.UI.Xaml.Controls.ISliderStatics2"
  // Factory: "Windows.UI.Xaml.Controls.ISliderFactory"
  // Instantiable: "ISlider"
  TSlider = class(TWinRTGenericImportFS2I<ISliderFactory, ISliderStatics, ISliderStatics2, ISlider>)
  public
    // -> ISliderStatics
    class function get_IntermediateValueProperty: IDependencyProperty; static; inline;
    class function get_StepFrequencyProperty: IDependencyProperty; static; inline;
    class function get_SnapsToProperty: IDependencyProperty; static; inline;
    class function get_TickFrequencyProperty: IDependencyProperty; static; inline;
    class function get_TickPlacementProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_IsDirectionReversedProperty: IDependencyProperty; static; inline;
    class function get_IsThumbToolTipEnabledProperty: IDependencyProperty; static; inline;
    class function get_ThumbToolTipValueConverterProperty: IDependencyProperty; static; inline;
    class property IntermediateValueProperty: IDependencyProperty read get_IntermediateValueProperty;
    class property IsDirectionReversedProperty: IDependencyProperty read get_IsDirectionReversedProperty;
    class property IsThumbToolTipEnabledProperty: IDependencyProperty read get_IsThumbToolTipEnabledProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property SnapsToProperty: IDependencyProperty read get_SnapsToProperty;
    class property StepFrequencyProperty: IDependencyProperty read get_StepFrequencyProperty;
    class property ThumbToolTipValueConverterProperty: IDependencyProperty read get_ThumbToolTipValueConverterProperty;
    class property TickFrequencyProperty: IDependencyProperty read get_TickFrequencyProperty;
    class property TickPlacementProperty: IDependencyProperty read get_TickPlacementProperty;

    // -> ISliderStatics2
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;

    // -> ISliderFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISlider; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ColorPickerSlider
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IColorPickerSlider
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory"
  // Instantiable: "Primitives_IColorPickerSlider"
  TPrimitives_ColorPickerSlider = class(TWinRTGenericImportFSI<Primitives_IColorPickerSliderFactory, Primitives_IColorPickerSliderStatics, Primitives_IColorPickerSlider>)
  public
    // -> Primitives_IColorPickerSliderStatics
    class function get_ColorChannelProperty: IDependencyProperty; static; inline;
    class property ColorChannelProperty: IDependencyProperty read get_ColorChannelProperty;

    // -> Primitives_IColorPickerSliderFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorPickerSlider; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ColorSpectrum
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IColorSpectrum
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IColorSpectrumStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IColorSpectrumFactory"
  // Instantiable: "Primitives_IColorSpectrum"
  TPrimitives_ColorSpectrum = class(TWinRTGenericImportFSI<Primitives_IColorSpectrumFactory, Primitives_IColorSpectrumStatics, Primitives_IColorSpectrum>)
  public
    // -> Primitives_IColorSpectrumStatics
    class function get_ColorProperty: IDependencyProperty; static; inline;
    class function get_HsvColorProperty: IDependencyProperty; static; inline;
    class function get_MinHueProperty: IDependencyProperty; static; inline;
    class function get_MaxHueProperty: IDependencyProperty; static; inline;
    class function get_MinSaturationProperty: IDependencyProperty; static; inline;
    class function get_MaxSaturationProperty: IDependencyProperty; static; inline;
    class function get_MinValueProperty: IDependencyProperty; static; inline;
    class function get_MaxValueProperty: IDependencyProperty; static; inline;
    class function get_ShapeProperty: IDependencyProperty; static; inline;
    class function get_ComponentsProperty: IDependencyProperty; static; inline;
    class property ColorProperty: IDependencyProperty read get_ColorProperty;
    class property ComponentsProperty: IDependencyProperty read get_ComponentsProperty;
    class property HsvColorProperty: IDependencyProperty read get_HsvColorProperty;
    class property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    class property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    class property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    class property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    class property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    class property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    class property ShapeProperty: IDependencyProperty read get_ShapeProperty;

    // -> Primitives_IColorSpectrumFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorSpectrum; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar
  // Factory: "Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory"
  // Instantiable: "Primitives_ICommandBarFlyoutCommandBar"
  TPrimitives_CommandBarFlyoutCommandBar = class(TWinRTGenericImportFI<Primitives_ICommandBarFlyoutCommandBarFactory, Primitives_ICommandBarFlyoutCommandBar>)
  public
    // -> Primitives_ICommandBarFlyoutCommandBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICommandBarFlyoutCommandBar; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IDragCompletedEventArgs
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory"
  // Instantiable: "Primitives_IDragCompletedEventArgs"
  TPrimitives_DragCompletedEventArgs = class(TWinRTGenericImportFI<Primitives_IDragCompletedEventArgsFactory, Primitives_IDragCompletedEventArgs>)
  public
    // -> Primitives_IDragCompletedEventArgsFactory
    class function CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange: Double; verticalChange: Double; canceled: Boolean; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragCompletedEventArgs; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.DragDeltaEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IDragDeltaEventArgs
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory"
  // Instantiable: "Primitives_IDragDeltaEventArgs"
  TPrimitives_DragDeltaEventArgs = class(TWinRTGenericImportFI<Primitives_IDragDeltaEventArgsFactory, Primitives_IDragDeltaEventArgs>)
  public
    // -> Primitives_IDragDeltaEventArgsFactory
    class function CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange: Double; verticalChange: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragDeltaEventArgs; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.DragStartedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IDragStartedEventArgs
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory"
  // Instantiable: "Primitives_IDragStartedEventArgs"
  TPrimitives_DragStartedEventArgs = class(TWinRTGenericImportFI<Primitives_IDragStartedEventArgsFactory, Primitives_IDragStartedEventArgs>)
  public
    // -> Primitives_IDragStartedEventArgsFactory
    class function CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset: Double; verticalOffset: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragStartedEventArgs; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.FlyoutShowOptions
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptions
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory"
  // Instantiable: "Primitives_IFlyoutShowOptions"
  TPrimitives_FlyoutShowOptions = class(TWinRTGenericImportFI<Primitives_IFlyoutShowOptionsFactory, Primitives_IFlyoutShowOptions>)
  public
    // -> Primitives_IFlyoutShowOptionsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutShowOptions; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.GeneratorPositionHelper
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelper
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelperStatics"
  TPrimitives_GeneratorPositionHelper = class(TWinRTGenericImportS<Primitives_IGeneratorPositionHelperStatics>)
  public
    // -> Primitives_IGeneratorPositionHelperStatics
    class function FromIndexAndOffset(index: Integer; offset: Integer): Primitives_GeneratorPosition; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenter
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenterStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory"
  // Instantiable: "Primitives_IGridViewItemPresenter"
  TPrimitives_GridViewItemPresenter = class(TWinRTGenericImportFSI<Primitives_IGridViewItemPresenterFactory, Primitives_IGridViewItemPresenterStatics, Primitives_IGridViewItemPresenter>)
  public
    // -> Primitives_IGridViewItemPresenterStatics
    class function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; static; inline;
    class function get_CheckHintBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckSelectingBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBrushProperty: IDependencyProperty; static; inline;
    class function get_DragBackgroundProperty: IDependencyProperty; static; inline;
    class function get_DragForegroundProperty: IDependencyProperty; static; inline;
    class function get_FocusBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_DisabledOpacityProperty: IDependencyProperty; static; inline;
    class function get_DragOpacityProperty: IDependencyProperty; static; inline;
    class function get_ReorderHintOffsetProperty: IDependencyProperty; static; inline;
    class function get_GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_GridViewItemPresenterPaddingProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundMarginProperty: IDependencyProperty; static; inline;
    class function get_ContentMarginProperty: IDependencyProperty; static; inline;
    class property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    class property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    class property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    class property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    class property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    class property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    class property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    class property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    class property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    class property GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterHorizontalContentAlignmentProperty;
    class property GridViewItemPresenterPaddingProperty: IDependencyProperty read get_GridViewItemPresenterPaddingProperty;
    class property GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterVerticalContentAlignmentProperty;
    class property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    class property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    class property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    class property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    class property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    class property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    class property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    class property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    class property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    class property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;

    // -> Primitives_IGridViewItemPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IGridViewItemPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverter
  // Implements: Windows.UI.Xaml.Data.IValueConverter
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverterStatics"
  // Instantiable: "Primitives_IJumpListItemBackgroundConverter"
  TPrimitives_JumpListItemBackgroundConverter = class(TWinRTGenericImportSI<Primitives_IJumpListItemBackgroundConverterStatics, Primitives_IJumpListItemBackgroundConverter>)
  public
    // -> Primitives_IJumpListItemBackgroundConverterStatics
    class function get_EnabledProperty: IDependencyProperty; static; inline;
    class function get_DisabledProperty: IDependencyProperty; static; inline;
    class property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    class property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverter
  // Implements: Windows.UI.Xaml.Data.IValueConverter
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverterStatics"
  // Instantiable: "Primitives_IJumpListItemForegroundConverter"
  TPrimitives_JumpListItemForegroundConverter = class(TWinRTGenericImportSI<Primitives_IJumpListItemForegroundConverterStatics, Primitives_IJumpListItemForegroundConverter>)
  public
    // -> Primitives_IJumpListItemForegroundConverterStatics
    class function get_EnabledProperty: IDependencyProperty; static; inline;
    class function get_DisabledProperty: IDependencyProperty; static; inline;
    class property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    class property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.LayoutInformation
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ILayoutInformation
  // Statics: "Windows.UI.Xaml.Controls.Primitives.ILayoutInformationStatics"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.ILayoutInformationStatics2"
  TPrimitives_LayoutInformation = class(TWinRTGenericImportS2<Primitives_ILayoutInformationStatics, Primitives_ILayoutInformationStatics2>)
  public
    // -> Primitives_ILayoutInformationStatics
    class function GetLayoutExceptionElement(dispatcher: IInspectable): IUIElement; static; inline;
    class function GetLayoutSlot(element: IFrameworkElement): TRectF; static; inline;

    // -> Primitives_ILayoutInformationStatics2
    class function GetAvailableSize(element: IUIElement): TSizeF; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter
  // Implements: Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter2
  // Implements: Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter3
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics2"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics3"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory"
  // Instantiable: "Primitives_IListViewItemPresenter"
  TPrimitives_ListViewItemPresenter = class(TWinRTGenericImportFS3I<Primitives_IListViewItemPresenterFactory, Primitives_IListViewItemPresenterStatics, Primitives_IListViewItemPresenterStatics2, Primitives_IListViewItemPresenterStatics3, Primitives_IListViewItemPresenter>)
  public
    // -> Primitives_IListViewItemPresenterStatics
    class function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; static; inline;
    class function get_CheckHintBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckSelectingBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBrushProperty: IDependencyProperty; static; inline;
    class function get_DragBackgroundProperty: IDependencyProperty; static; inline;
    class function get_DragForegroundProperty: IDependencyProperty; static; inline;
    class function get_FocusBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_DisabledOpacityProperty: IDependencyProperty; static; inline;
    class function get_DragOpacityProperty: IDependencyProperty; static; inline;
    class function get_ReorderHintOffsetProperty: IDependencyProperty; static; inline;
    class function get_ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_ListViewItemPresenterPaddingProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundMarginProperty: IDependencyProperty; static; inline;
    class function get_ContentMarginProperty: IDependencyProperty; static; inline;
    class property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    class property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    class property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    class property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    class property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    class property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    class property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    class property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    class property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    class property ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterHorizontalContentAlignmentProperty;
    class property ListViewItemPresenterPaddingProperty: IDependencyProperty read get_ListViewItemPresenterPaddingProperty;
    class property ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterVerticalContentAlignmentProperty;
    class property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    class property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    class property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    class property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    class property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    class property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    class property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    class property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    class property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    class property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;

    // -> Primitives_IListViewItemPresenterStatics2
    class function get_SelectedPressedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PressedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxBrushProperty: IDependencyProperty; static; inline;
    class function get_FocusSecondaryBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckModeProperty: IDependencyProperty; static; inline;
    class function get_PointerOverForegroundProperty: IDependencyProperty; static; inline;
    class property CheckBoxBrushProperty: IDependencyProperty read get_CheckBoxBrushProperty;
    class property CheckModeProperty: IDependencyProperty read get_CheckModeProperty;
    class property FocusSecondaryBorderBrushProperty: IDependencyProperty read get_FocusSecondaryBorderBrushProperty;
    class property PointerOverForegroundProperty: IDependencyProperty read get_PointerOverForegroundProperty;
    class property PressedBackgroundProperty: IDependencyProperty read get_PressedBackgroundProperty;
    class property SelectedPressedBackgroundProperty: IDependencyProperty read get_SelectedPressedBackgroundProperty;

    // -> Primitives_IListViewItemPresenterStatics3
    class function get_RevealBackgroundProperty: IDependencyProperty; static; inline;
    class function get_RevealBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_RevealBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_RevealBackgroundShowsAboveContentProperty: IDependencyProperty; static; inline;
    class property RevealBackgroundProperty: IDependencyProperty read get_RevealBackgroundProperty;
    class property RevealBackgroundShowsAboveContentProperty: IDependencyProperty read get_RevealBackgroundShowsAboveContentProperty;
    class property RevealBorderBrushProperty: IDependencyProperty read get_RevealBorderBrushProperty;
    class property RevealBorderThicknessProperty: IDependencyProperty read get_RevealBorderThicknessProperty;

    // -> Primitives_IListViewItemPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IListViewItemPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.LoopingSelector
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ILoopingSelector
  // Statics: "Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorStatics"
  TPrimitives_LoopingSelector = class(TWinRTGenericImportS<Primitives_ILoopingSelectorStatics>)
  public
    // -> Primitives_ILoopingSelectorStatics
    class function get_ShouldLoopProperty: IDependencyProperty; static; inline;
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property ShouldLoopProperty: IDependencyProperty read get_ShouldLoopProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter
  // Statics: "Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics"
  // Factory: "Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory"
  // Instantiable: "Primitives_INavigationViewItemPresenter"
  TPrimitives_NavigationViewItemPresenter = class(TWinRTGenericImportFSI<Primitives_INavigationViewItemPresenterFactory, Primitives_INavigationViewItemPresenterStatics, Primitives_INavigationViewItemPresenter>)
  public
    // -> Primitives_INavigationViewItemPresenterStatics
    class function get_IconProperty: IDependencyProperty; static; inline;
    class property IconProperty: IDependencyProperty read get_IconProperty;

    // -> Primitives_INavigationViewItemPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenter; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanel
  // Implements: Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Implements: Windows.UI.Xaml.Controls.IInsertionPanel
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory"
  // Instantiable: "Primitives_IOrientedVirtualizingPanel"
  TPrimitives_OrientedVirtualizingPanel = class(TWinRTGenericImportFI<Primitives_IOrientedVirtualizingPanelFactory, Primitives_IOrientedVirtualizingPanel>)
  public
    // -> Primitives_IOrientedVirtualizingPanelFactory
  end;

  // Windows.UI.Xaml.Controls.Primitives.PivotHeaderItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPivotHeaderItem
  // Factory: "Windows.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory"
  // Instantiable: "Primitives_IPivotHeaderItem"
  TPrimitives_PivotHeaderItem = class(TWinRTGenericImportFI<Primitives_IPivotHeaderItemFactory, Primitives_IPivotHeaderItem>)
  public
    // -> Primitives_IPivotHeaderItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPivotHeaderItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.Primitives.PivotHeaderPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPivotHeaderPanel
  // Instantiable: "Primitives_IPivotHeaderPanel"
  TPrimitives_PivotHeaderPanel = class(TWinRTGenericImportI<Primitives_IPivotHeaderPanel>) end;

  // Windows.UI.Xaml.Controls.Primitives.PivotPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPivotPanel
  // Implements: Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Instantiable: "Primitives_IPivotPanel"
  TPrimitives_PivotPanel = class(TWinRTGenericImportI<Primitives_IPivotPanel>) end;

  // Windows.UI.Xaml.Controls.Primitives.Popup
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPopup
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPopup2
  // Implements: Windows.UI.Xaml.Controls.Primitives.IPopup3
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IPopupStatics"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IPopupStatics2"
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IPopupStatics3"
  // Instantiable: "Primitives_IPopup"
  TPrimitives_Popup = class(TWinRTGenericImportS3I<Primitives_IPopupStatics, Primitives_IPopupStatics2, Primitives_IPopupStatics3, Primitives_IPopup>)
  public
    // -> Primitives_IPopupStatics
    class function get_ChildProperty: IDependencyProperty; static; inline;
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_HorizontalOffsetProperty: IDependencyProperty; static; inline;
    class function get_VerticalOffsetProperty: IDependencyProperty; static; inline;
    class function get_ChildTransitionsProperty: IDependencyProperty; static; inline;
    class function get_IsLightDismissEnabledProperty: IDependencyProperty; static; inline;
    class property ChildProperty: IDependencyProperty read get_ChildProperty;
    class property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    class property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    class property IsLightDismissEnabledProperty: IDependencyProperty read get_IsLightDismissEnabledProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;

    // -> Primitives_IPopupStatics2
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> Primitives_IPopupStatics3
    class function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; static; inline;
    class property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.RepeatButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IRepeatButton
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IRepeatButtonStatics"
  // Instantiable: "Primitives_IRepeatButton"
  TPrimitives_RepeatButton = class(TWinRTGenericImportSI<Primitives_IRepeatButtonStatics, Primitives_IRepeatButton>)
  public
    // -> Primitives_IRepeatButtonStatics
    class function get_DelayProperty: IDependencyProperty; static; inline;
    class function get_IntervalProperty: IDependencyProperty; static; inline;
    class property DelayProperty: IDependencyProperty read get_DelayProperty;
    class property IntervalProperty: IDependencyProperty read get_IntervalProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ScrollBar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IScrollBar
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IScrollBarStatics"
  // Instantiable: "Primitives_IScrollBar"
  TPrimitives_ScrollBar = class(TWinRTGenericImportSI<Primitives_IScrollBarStatics, Primitives_IScrollBar>)
  public
    // -> Primitives_IScrollBarStatics
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_ViewportSizeProperty: IDependencyProperty; static; inline;
    class function get_IndicatorModeProperty: IDependencyProperty; static; inline;
    class property IndicatorModeProperty: IDependencyProperty read get_IndicatorModeProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property ViewportSizeProperty: IDependencyProperty read get_ViewportSizeProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.ScrollEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IScrollEventArgs
  // Instantiable: "Primitives_IScrollEventArgs"
  TPrimitives_ScrollEventArgs = class(TWinRTGenericImportI<Primitives_IScrollEventArgs>) end;

  // Windows.UI.Xaml.Controls.Primitives.Thumb
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.IThumb
  // Statics: "Windows.UI.Xaml.Controls.Primitives.IThumbStatics"
  // Instantiable: "Primitives_IThumb"
  TPrimitives_Thumb = class(TWinRTGenericImportSI<Primitives_IThumbStatics, Primitives_IThumb>)
  public
    // -> Primitives_IThumbStatics
    class function get_IsDraggingProperty: IDependencyProperty; static; inline;
    class property IsDraggingProperty: IDependencyProperty read get_IsDraggingProperty;
  end;

  // Windows.UI.Xaml.Controls.Primitives.TickBar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.Primitives.ITickBar
  // Statics: "Windows.UI.Xaml.Controls.Primitives.ITickBarStatics"
  // Instantiable: "Primitives_ITickBar"
  TPrimitives_TickBar = class(TWinRTGenericImportSI<Primitives_ITickBarStatics, Primitives_ITickBar>)
  public
    // -> Primitives_ITickBarStatics
    class function get_FillProperty: IDependencyProperty; static; inline;
    class property FillProperty: IDependencyProperty read get_FillProperty;
  end;

  // Windows.UI.Xaml.Controls.ProgressBar
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IProgressBar
  // Statics: "Windows.UI.Xaml.Controls.IProgressBarStatics"
  // Factory: "Windows.UI.Xaml.Controls.IProgressBarFactory"
  // Instantiable: "IProgressBar"
  TProgressBar = class(TWinRTGenericImportFSI<IProgressBarFactory, IProgressBarStatics, IProgressBar>)
  public
    // -> IProgressBarStatics
    class function get_IsIndeterminateProperty: IDependencyProperty; static; inline;
    class function get_ShowErrorProperty: IDependencyProperty; static; inline;
    class function get_ShowPausedProperty: IDependencyProperty; static; inline;
    class property IsIndeterminateProperty: IDependencyProperty read get_IsIndeterminateProperty;
    class property ShowErrorProperty: IDependencyProperty read get_ShowErrorProperty;
    class property ShowPausedProperty: IDependencyProperty read get_ShowPausedProperty;

    // -> IProgressBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressBar; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ProgressRing
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IProgressRing
  // Statics: "Windows.UI.Xaml.Controls.IProgressRingStatics"
  // Instantiable: "IProgressRing"
  TProgressRing = class(TWinRTGenericImportSI<IProgressRingStatics, IProgressRing>)
  public
    // -> IProgressRingStatics
    class function get_IsActiveProperty: IDependencyProperty; static; inline;
    class property IsActiveProperty: IDependencyProperty read get_IsActiveProperty;
  end;

  // Windows.UI.Xaml.Controls.RatingControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRatingControl
  // Statics: "Windows.UI.Xaml.Controls.IRatingControlStatics"
  // Factory: "Windows.UI.Xaml.Controls.IRatingControlFactory"
  // Instantiable: "IRatingControl"
  TRatingControl = class(TWinRTGenericImportFSI<IRatingControlFactory, IRatingControlStatics, IRatingControl>)
  public
    // -> IRatingControlStatics
    class function get_CaptionProperty: IDependencyProperty; static; inline;
    class function get_InitialSetValueProperty: IDependencyProperty; static; inline;
    class function get_IsClearEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsReadOnlyProperty: IDependencyProperty; static; inline;
    class function get_MaxRatingProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderValueProperty: IDependencyProperty; static; inline;
    class function get_ItemInfoProperty: IDependencyProperty; static; inline;
    class function get_ValueProperty: IDependencyProperty; static; inline;
    class property CaptionProperty: IDependencyProperty read get_CaptionProperty;
    class property InitialSetValueProperty: IDependencyProperty read get_InitialSetValueProperty;
    class property IsClearEnabledProperty: IDependencyProperty read get_IsClearEnabledProperty;
    class property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    class property ItemInfoProperty: IDependencyProperty read get_ItemInfoProperty;
    class property MaxRatingProperty: IDependencyProperty read get_MaxRatingProperty;
    class property PlaceholderValueProperty: IDependencyProperty read get_PlaceholderValueProperty;
    class property ValueProperty: IDependencyProperty read get_ValueProperty;

    // -> IRatingControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingControl; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RatingItemInfo
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRatingItemInfo
  // Factory: "Windows.UI.Xaml.Controls.IRatingItemInfoFactory"
  // Instantiable: "IRatingItemInfo"
  TRatingItemInfo = class(TWinRTGenericImportFI<IRatingItemInfoFactory, IRatingItemInfo>)
  public
    // -> IRatingItemInfoFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemInfo; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RatingItemFontInfo
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRatingItemFontInfo
  // Statics: "Windows.UI.Xaml.Controls.IRatingItemFontInfoStatics"
  // Factory: "Windows.UI.Xaml.Controls.IRatingItemFontInfoFactory"
  // Instantiable: "IRatingItemFontInfo"
  TRatingItemFontInfo = class(TWinRTGenericImportFSI<IRatingItemFontInfoFactory, IRatingItemFontInfoStatics, IRatingItemFontInfo>)
  public
    // -> IRatingItemFontInfoStatics
    class function get_DisabledGlyphProperty: IDependencyProperty; static; inline;
    class function get_GlyphProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderGlyphProperty: IDependencyProperty; static; inline;
    class function get_PointerOverGlyphProperty: IDependencyProperty; static; inline;
    class function get_PointerOverPlaceholderGlyphProperty: IDependencyProperty; static; inline;
    class function get_UnsetGlyphProperty: IDependencyProperty; static; inline;
    class property DisabledGlyphProperty: IDependencyProperty read get_DisabledGlyphProperty;
    class property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    class property PlaceholderGlyphProperty: IDependencyProperty read get_PlaceholderGlyphProperty;
    class property PointerOverGlyphProperty: IDependencyProperty read get_PointerOverGlyphProperty;
    class property PointerOverPlaceholderGlyphProperty: IDependencyProperty read get_PointerOverPlaceholderGlyphProperty;
    class property UnsetGlyphProperty: IDependencyProperty read get_UnsetGlyphProperty;

    // -> IRatingItemFontInfoFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemFontInfo; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RatingItemImageInfo
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRatingItemImageInfo
  // Statics: "Windows.UI.Xaml.Controls.IRatingItemImageInfoStatics"
  // Factory: "Windows.UI.Xaml.Controls.IRatingItemImageInfoFactory"
  // Instantiable: "IRatingItemImageInfo"
  TRatingItemImageInfo = class(TWinRTGenericImportFSI<IRatingItemImageInfoFactory, IRatingItemImageInfoStatics, IRatingItemImageInfo>)
  public
    // -> IRatingItemImageInfoStatics
    class function get_DisabledImageProperty: IDependencyProperty; static; inline;
    class function get_ImageProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderImageProperty: IDependencyProperty; static; inline;
    class function get_PointerOverImageProperty: IDependencyProperty; static; inline;
    class function get_PointerOverPlaceholderImageProperty: IDependencyProperty; static; inline;
    class function get_UnsetImageProperty: IDependencyProperty; static; inline;
    class property DisabledImageProperty: IDependencyProperty read get_DisabledImageProperty;
    class property ImageProperty: IDependencyProperty read get_ImageProperty;
    class property PlaceholderImageProperty: IDependencyProperty read get_PlaceholderImageProperty;
    class property PointerOverImageProperty: IDependencyProperty read get_PointerOverImageProperty;
    class property PointerOverPlaceholderImageProperty: IDependencyProperty read get_PointerOverPlaceholderImageProperty;
    class property UnsetImageProperty: IDependencyProperty read get_UnsetImageProperty;

    // -> IRatingItemImageInfoFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemImageInfo; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RefreshContainer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRefreshContainer
  // Statics: "Windows.UI.Xaml.Controls.IRefreshContainerStatics"
  // Factory: "Windows.UI.Xaml.Controls.IRefreshContainerFactory"
  // Instantiable: "IRefreshContainer"
  TRefreshContainer = class(TWinRTGenericImportFSI<IRefreshContainerFactory, IRefreshContainerStatics, IRefreshContainer>)
  public
    // -> IRefreshContainerStatics
    class function get_VisualizerProperty: IDependencyProperty; static; inline;
    class function get_PullDirectionProperty: IDependencyProperty; static; inline;
    class property PullDirectionProperty: IDependencyProperty read get_PullDirectionProperty;
    class property VisualizerProperty: IDependencyProperty read get_VisualizerProperty;

    // -> IRefreshContainerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshContainer; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RefreshVisualizer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRefreshVisualizer
  // Statics: "Windows.UI.Xaml.Controls.IRefreshVisualizerStatics"
  // Factory: "Windows.UI.Xaml.Controls.IRefreshVisualizerFactory"
  // Instantiable: "IRefreshVisualizer"
  TRefreshVisualizer = class(TWinRTGenericImportFSI<IRefreshVisualizerFactory, IRefreshVisualizerStatics, IRefreshVisualizer>)
  public
    // -> IRefreshVisualizerStatics
    class function get_InfoProviderProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_StateProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property InfoProviderProperty: IDependencyProperty read get_InfoProviderProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property StateProperty: IDependencyProperty read get_StateProperty;

    // -> IRefreshVisualizerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshVisualizer; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RelativePanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRelativePanel
  // Implements: Windows.UI.Xaml.Controls.IRelativePanel2
  // Statics: "Windows.UI.Xaml.Controls.IRelativePanelStatics"
  // Statics: "Windows.UI.Xaml.Controls.IRelativePanelStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IRelativePanelFactory"
  // Instantiable: "IRelativePanel"
  TRelativePanel = class(TWinRTGenericImportFS2I<IRelativePanelFactory, IRelativePanelStatics, IRelativePanelStatics2, IRelativePanel>)
  public
    // -> IRelativePanelStatics
    class function get_LeftOfProperty: IDependencyProperty; static; inline;
    class function GetLeftOf(element: IUIElement): IInspectable; static; inline;
    class procedure SetLeftOf(element: IUIElement; value: IInspectable); static; inline;
    class function get_AboveProperty: IDependencyProperty; static; inline;
    class function GetAbove(element: IUIElement): IInspectable; static; inline;
    class procedure SetAbove(element: IUIElement; value: IInspectable); static; inline;
    class function get_RightOfProperty: IDependencyProperty; static; inline;
    class function GetRightOf(element: IUIElement): IInspectable; static; inline;
    class procedure SetRightOf(element: IUIElement; value: IInspectable); static; inline;
    class function get_BelowProperty: IDependencyProperty; static; inline;
    class function GetBelow(element: IUIElement): IInspectable; static; inline;
    class procedure SetBelow(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignHorizontalCenterWithProperty: IDependencyProperty; static; inline;
    class function GetAlignHorizontalCenterWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignHorizontalCenterWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignVerticalCenterWithProperty: IDependencyProperty; static; inline;
    class function GetAlignVerticalCenterWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignVerticalCenterWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignLeftWithProperty: IDependencyProperty; static; inline;
    class function GetAlignLeftWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignLeftWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignTopWithProperty: IDependencyProperty; static; inline;
    class function GetAlignTopWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignTopWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignRightWithProperty: IDependencyProperty; static; inline;
    class function GetAlignRightWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignRightWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignBottomWithProperty: IDependencyProperty; static; inline;
    class function GetAlignBottomWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignBottomWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignLeftWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignLeftWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignLeftWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignTopWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignTopWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignTopWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignRightWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignRightWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignRightWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignBottomWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignBottomWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignBottomWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignHorizontalCenterWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignHorizontalCenterWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignHorizontalCenterWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignVerticalCenterWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignVerticalCenterWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignVerticalCenterWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class property AboveProperty: IDependencyProperty read get_AboveProperty;
    class property AlignBottomWithPanelProperty: IDependencyProperty read get_AlignBottomWithPanelProperty;
    class property AlignBottomWithProperty: IDependencyProperty read get_AlignBottomWithProperty;
    class property AlignHorizontalCenterWithPanelProperty: IDependencyProperty read get_AlignHorizontalCenterWithPanelProperty;
    class property AlignHorizontalCenterWithProperty: IDependencyProperty read get_AlignHorizontalCenterWithProperty;
    class property AlignLeftWithPanelProperty: IDependencyProperty read get_AlignLeftWithPanelProperty;
    class property AlignLeftWithProperty: IDependencyProperty read get_AlignLeftWithProperty;
    class property AlignRightWithPanelProperty: IDependencyProperty read get_AlignRightWithPanelProperty;
    class property AlignRightWithProperty: IDependencyProperty read get_AlignRightWithProperty;
    class property AlignTopWithPanelProperty: IDependencyProperty read get_AlignTopWithPanelProperty;
    class property AlignTopWithProperty: IDependencyProperty read get_AlignTopWithProperty;
    class property AlignVerticalCenterWithPanelProperty: IDependencyProperty read get_AlignVerticalCenterWithPanelProperty;
    class property AlignVerticalCenterWithProperty: IDependencyProperty read get_AlignVerticalCenterWithProperty;
    class property BelowProperty: IDependencyProperty read get_BelowProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property LeftOfProperty: IDependencyProperty read get_LeftOfProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property RightOfProperty: IDependencyProperty read get_RightOfProperty;

    // -> IRelativePanelStatics2
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;

    // -> IRelativePanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRelativePanel; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RichEditBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox2
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox3
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox4
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox5
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox6
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox7
  // Implements: Windows.UI.Xaml.Controls.IRichEditBox8
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics"
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics5"
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics6"
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics7"
  // Statics: "Windows.UI.Xaml.Controls.IRichEditBoxStatics8"
  // Factory: "Windows.UI.Xaml.Controls.IRichEditBoxFactory"
  // Instantiable: "IRichEditBox"
  TRichEditBox = class(TWinRTGenericImportFS8I<IRichEditBoxFactory, IRichEditBoxStatics, IRichEditBoxStatics2, IRichEditBoxStatics3, IRichEditBoxStatics4, IRichEditBoxStatics5, IRichEditBoxStatics6, IRichEditBoxStatics7, IRichEditBoxStatics8, IRichEditBox>)
  public
    // -> IRichEditBoxStatics
    class function get_IsReadOnlyProperty: IDependencyProperty; static; inline;
    class function get_AcceptsReturnProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_IsSpellCheckEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsTextPredictionEnabledProperty: IDependencyProperty; static; inline;
    class function get_InputScopeProperty: IDependencyProperty; static; inline;
    class property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    class property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    class property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    class property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    class property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;

    // -> IRichEditBoxStatics2
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;

    // -> IRichEditBoxStatics3
    class function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;

    // -> IRichEditBoxStatics4
    class function get_ClipboardCopyFormatProperty: IDependencyProperty; static; inline;
    class property ClipboardCopyFormatProperty: IDependencyProperty read get_ClipboardCopyFormatProperty;

    // -> IRichEditBoxStatics5
    class function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; static; inline;
    class function get_MaxLengthProperty: IDependencyProperty; static; inline;
    class property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    class property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;

    // -> IRichEditBoxStatics6
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_CharacterCasingProperty: IDependencyProperty; static; inline;
    class function get_DisabledFormattingAcceleratorsProperty: IDependencyProperty; static; inline;
    class property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    class property DisabledFormattingAcceleratorsProperty: IDependencyProperty read get_DisabledFormattingAcceleratorsProperty;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;

    // -> IRichEditBoxStatics7
    class function get_ContentLinkForegroundColorProperty: IDependencyProperty; static; inline;
    class function get_ContentLinkBackgroundColorProperty: IDependencyProperty; static; inline;
    class function get_ContentLinkProvidersProperty: IDependencyProperty; static; inline;
    class function get_HandwritingViewProperty: IDependencyProperty; static; inline;
    class function get_IsHandwritingViewEnabledProperty: IDependencyProperty; static; inline;
    class property ContentLinkBackgroundColorProperty: IDependencyProperty read get_ContentLinkBackgroundColorProperty;
    class property ContentLinkForegroundColorProperty: IDependencyProperty read get_ContentLinkForegroundColorProperty;
    class property ContentLinkProvidersProperty: IDependencyProperty read get_ContentLinkProvidersProperty;
    class property HandwritingViewProperty: IDependencyProperty read get_HandwritingViewProperty;
    class property IsHandwritingViewEnabledProperty: IDependencyProperty read get_IsHandwritingViewEnabledProperty;

    // -> IRichEditBoxStatics8
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_ProofingMenuFlyoutProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;

    // -> IRichEditBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRichEditBox; static; inline;
  end;

  // Windows.UI.Xaml.Controls.RichTextBlock
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlock
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlock2
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlock3
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlock4
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlock5
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlock6
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockStatics"
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockStatics5"
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockStatics6"
  // Instantiable: "IRichTextBlock"
  TRichTextBlock = class(TWinRTGenericImportS6I<IRichTextBlockStatics, IRichTextBlockStatics2, IRichTextBlockStatics3, IRichTextBlockStatics4, IRichTextBlockStatics5, IRichTextBlockStatics6, IRichTextBlock>)
  public
    // -> IRichTextBlockStatics
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_TextTrimmingProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_LineHeightProperty: IDependencyProperty; static; inline;
    class function get_LineStackingStrategyProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_OverflowContentTargetProperty: IDependencyProperty; static; inline;
    class function get_IsTextSelectionEnabledProperty: IDependencyProperty; static; inline;
    class function get_HasOverflowContentProperty: IDependencyProperty; static; inline;
    class function get_SelectedTextProperty: IDependencyProperty; static; inline;
    class function get_TextIndentProperty: IDependencyProperty; static; inline;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    class property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    class property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    class property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    class property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextIndentProperty: IDependencyProperty read get_TextIndentProperty;
    class property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;

    // -> IRichTextBlockStatics2
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class function get_TextLineBoundsProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_OpticalMarginAlignmentProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    class property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;

    // -> IRichTextBlockStatics3
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;

    // -> IRichTextBlockStatics4
    class function get_TextDecorationsProperty: IDependencyProperty; static; inline;
    class property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;

    // -> IRichTextBlockStatics5
    class function get_IsTextTrimmedProperty: IDependencyProperty; static; inline;
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    class property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;

    // -> IRichTextBlockStatics6
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // Windows.UI.Xaml.Controls.RichTextBlockOverflow
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlockOverflow
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlockOverflow2
  // Implements: Windows.UI.Xaml.Controls.IRichTextBlockOverflow3
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics"
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics3"
  // Instantiable: "IRichTextBlockOverflow"
  TRichTextBlockOverflow = class(TWinRTGenericImportS3I<IRichTextBlockOverflowStatics, IRichTextBlockOverflowStatics2, IRichTextBlockOverflowStatics3, IRichTextBlockOverflow>)
  public
    // -> IRichTextBlockOverflowStatics
    class function get_OverflowContentTargetProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_HasOverflowContentProperty: IDependencyProperty; static; inline;
    class property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    class property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;

    // -> IRichTextBlockOverflowStatics2
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;

    // -> IRichTextBlockOverflowStatics3
    class function get_IsTextTrimmedProperty: IDependencyProperty; static; inline;
    class property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
  end;

  // Windows.UI.Xaml.Controls.RowDefinition
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IRowDefinition
  // Statics: "Windows.UI.Xaml.Controls.IRowDefinitionStatics"
  // Instantiable: "IRowDefinition"
  TRowDefinition = class(TWinRTGenericImportSI<IRowDefinitionStatics, IRowDefinition>)
  public
    // -> IRowDefinitionStatics
    class function get_HeightProperty: IDependencyProperty; static; inline;
    class function get_MaxHeightProperty: IDependencyProperty; static; inline;
    class function get_MinHeightProperty: IDependencyProperty; static; inline;
    class property HeightProperty: IDependencyProperty read get_HeightProperty;
    class property MaxHeightProperty: IDependencyProperty read get_MaxHeightProperty;
    class property MinHeightProperty: IDependencyProperty read get_MinHeightProperty;
  end;

  // Windows.UI.Xaml.Controls.ScrollContentPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IScrollContentPresenter
  // Implements: Windows.UI.Xaml.Controls.IScrollContentPresenter2
  // Statics: "Windows.UI.Xaml.Controls.IScrollContentPresenterStatics2"
  // Instantiable: "IScrollContentPresenter"
  TScrollContentPresenter = class(TWinRTGenericImportSI<IScrollContentPresenterStatics2, IScrollContentPresenter>)
  public
    // -> IScrollContentPresenterStatics2
    class function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; static; inline;
    class function get_SizesContentToTemplatedParentProperty: IDependencyProperty; static; inline;
    class property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    class property SizesContentToTemplatedParentProperty: IDependencyProperty read get_SizesContentToTemplatedParentProperty;
  end;

  // Windows.UI.Xaml.Controls.ScrollViewer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IScrollViewer
  // Implements: Windows.UI.Xaml.Controls.IScrollViewer2
  // Implements: Windows.UI.Xaml.Controls.IScrollViewer3
  // Implements: Windows.UI.Xaml.Controls.IScrollViewer4
  // Implements: Windows.UI.Xaml.Controls.IScrollAnchorProvider
  // Statics: "Windows.UI.Xaml.Controls.IScrollViewerStatics"
  // Statics: "Windows.UI.Xaml.Controls.IScrollViewerStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IScrollViewerStatics4"
  // Instantiable: "IScrollViewer"
  TScrollViewer = class(TWinRTGenericImportS3I<IScrollViewerStatics, IScrollViewerStatics2, IScrollViewerStatics4, IScrollViewer>)
  public
    // -> IScrollViewerStatics
    class function get_HorizontalSnapPointsAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalSnapPointsAlignmentProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSnapPointsTypeProperty: IDependencyProperty; static; inline;
    class function get_VerticalSnapPointsTypeProperty: IDependencyProperty; static; inline;
    class function get_ZoomSnapPointsTypeProperty: IDependencyProperty; static; inline;
    class function get_HorizontalOffsetProperty: IDependencyProperty; static; inline;
    class function get_ViewportWidthProperty: IDependencyProperty; static; inline;
    class function get_ScrollableWidthProperty: IDependencyProperty; static; inline;
    class function get_ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function get_ExtentWidthProperty: IDependencyProperty; static; inline;
    class function get_VerticalOffsetProperty: IDependencyProperty; static; inline;
    class function get_ViewportHeightProperty: IDependencyProperty; static; inline;
    class function get_ScrollableHeightProperty: IDependencyProperty; static; inline;
    class function get_ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function get_ExtentHeightProperty: IDependencyProperty; static; inline;
    class function get_MinZoomFactorProperty: IDependencyProperty; static; inline;
    class function get_MaxZoomFactorProperty: IDependencyProperty; static; inline;
    class function get_ZoomFactorProperty: IDependencyProperty; static; inline;
    class function get_ZoomSnapPointsProperty: IDependencyProperty; static; inline;
    class function get_HorizontalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function GetHorizontalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; static; inline;
    class procedure SetHorizontalScrollBarVisibility(element: IDependencyObject; horizontalScrollBarVisibility: ScrollBarVisibility); static; inline;
    class function get_VerticalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function GetVerticalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; static; inline;
    class procedure SetVerticalScrollBarVisibility(element: IDependencyObject; verticalScrollBarVisibility: ScrollBarVisibility); static; inline;
    class function get_IsHorizontalRailEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsHorizontalRailEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsHorizontalRailEnabled(element: IDependencyObject; isHorizontalRailEnabled: Boolean); static; inline;
    class function get_IsVerticalRailEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsVerticalRailEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsVerticalRailEnabled(element: IDependencyObject; isVerticalRailEnabled: Boolean); static; inline;
    class function get_IsHorizontalScrollChainingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsHorizontalScrollChainingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsHorizontalScrollChainingEnabled(element: IDependencyObject; isHorizontalScrollChainingEnabled: Boolean); static; inline;
    class function get_IsVerticalScrollChainingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsVerticalScrollChainingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsVerticalScrollChainingEnabled(element: IDependencyObject; isVerticalScrollChainingEnabled: Boolean); static; inline;
    class function get_IsZoomChainingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsZoomChainingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsZoomChainingEnabled(element: IDependencyObject; isZoomChainingEnabled: Boolean); static; inline;
    class function get_IsScrollInertiaEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsScrollInertiaEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsScrollInertiaEnabled(element: IDependencyObject; isScrollInertiaEnabled: Boolean); static; inline;
    class function get_IsZoomInertiaEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsZoomInertiaEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsZoomInertiaEnabled(element: IDependencyObject; isZoomInertiaEnabled: Boolean); static; inline;
    class function get_HorizontalScrollModeProperty: IDependencyProperty; static; inline;
    class function GetHorizontalScrollMode(element: IDependencyObject): ScrollMode; static; inline;
    class procedure SetHorizontalScrollMode(element: IDependencyObject; horizontalScrollMode: ScrollMode); static; inline;
    class function get_VerticalScrollModeProperty: IDependencyProperty; static; inline;
    class function GetVerticalScrollMode(element: IDependencyObject): ScrollMode; static; inline;
    class procedure SetVerticalScrollMode(element: IDependencyObject; verticalScrollMode: ScrollMode); static; inline;
    class function get_ZoomModeProperty: IDependencyProperty; static; inline;
    class function GetZoomMode(element: IDependencyObject): ZoomMode; static; inline;
    class procedure SetZoomMode(element: IDependencyObject; zoomMode: ZoomMode); static; inline;
    class function get_IsDeferredScrollingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsDeferredScrollingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsDeferredScrollingEnabled(element: IDependencyObject; isDeferredScrollingEnabled: Boolean); static; inline;
    class function get_BringIntoViewOnFocusChangeProperty: IDependencyProperty; static; inline;
    class function GetBringIntoViewOnFocusChange(element: IDependencyObject): Boolean; static; inline;
    class procedure SetBringIntoViewOnFocusChange(element: IDependencyObject; bringIntoViewOnFocusChange: Boolean); static; inline;
    class property BringIntoViewOnFocusChangeProperty: IDependencyProperty read get_BringIntoViewOnFocusChangeProperty;
    class property ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedHorizontalScrollBarVisibilityProperty;
    class property ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedVerticalScrollBarVisibilityProperty;
    class property ExtentHeightProperty: IDependencyProperty read get_ExtentHeightProperty;
    class property ExtentWidthProperty: IDependencyProperty read get_ExtentWidthProperty;
    class property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    class property HorizontalScrollBarVisibilityProperty: IDependencyProperty read get_HorizontalScrollBarVisibilityProperty;
    class property HorizontalScrollModeProperty: IDependencyProperty read get_HorizontalScrollModeProperty;
    class property HorizontalSnapPointsAlignmentProperty: IDependencyProperty read get_HorizontalSnapPointsAlignmentProperty;
    class property HorizontalSnapPointsTypeProperty: IDependencyProperty read get_HorizontalSnapPointsTypeProperty;
    class property IsDeferredScrollingEnabledProperty: IDependencyProperty read get_IsDeferredScrollingEnabledProperty;
    class property IsHorizontalRailEnabledProperty: IDependencyProperty read get_IsHorizontalRailEnabledProperty;
    class property IsHorizontalScrollChainingEnabledProperty: IDependencyProperty read get_IsHorizontalScrollChainingEnabledProperty;
    class property IsScrollInertiaEnabledProperty: IDependencyProperty read get_IsScrollInertiaEnabledProperty;
    class property IsVerticalRailEnabledProperty: IDependencyProperty read get_IsVerticalRailEnabledProperty;
    class property IsVerticalScrollChainingEnabledProperty: IDependencyProperty read get_IsVerticalScrollChainingEnabledProperty;
    class property IsZoomChainingEnabledProperty: IDependencyProperty read get_IsZoomChainingEnabledProperty;
    class property IsZoomInertiaEnabledProperty: IDependencyProperty read get_IsZoomInertiaEnabledProperty;
    class property MaxZoomFactorProperty: IDependencyProperty read get_MaxZoomFactorProperty;
    class property MinZoomFactorProperty: IDependencyProperty read get_MinZoomFactorProperty;
    class property ScrollableHeightProperty: IDependencyProperty read get_ScrollableHeightProperty;
    class property ScrollableWidthProperty: IDependencyProperty read get_ScrollableWidthProperty;
    class property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
    class property VerticalScrollBarVisibilityProperty: IDependencyProperty read get_VerticalScrollBarVisibilityProperty;
    class property VerticalScrollModeProperty: IDependencyProperty read get_VerticalScrollModeProperty;
    class property VerticalSnapPointsAlignmentProperty: IDependencyProperty read get_VerticalSnapPointsAlignmentProperty;
    class property VerticalSnapPointsTypeProperty: IDependencyProperty read get_VerticalSnapPointsTypeProperty;
    class property ViewportHeightProperty: IDependencyProperty read get_ViewportHeightProperty;
    class property ViewportWidthProperty: IDependencyProperty read get_ViewportWidthProperty;
    class property ZoomFactorProperty: IDependencyProperty read get_ZoomFactorProperty;
    class property ZoomModeProperty: IDependencyProperty read get_ZoomModeProperty;
    class property ZoomSnapPointsProperty: IDependencyProperty read get_ZoomSnapPointsProperty;
    class property ZoomSnapPointsTypeProperty: IDependencyProperty read get_ZoomSnapPointsTypeProperty;

    // -> IScrollViewerStatics2
    class function get_TopLeftHeaderProperty: IDependencyProperty; static; inline;
    class function get_LeftHeaderProperty: IDependencyProperty; static; inline;
    class function get_TopHeaderProperty: IDependencyProperty; static; inline;
    class property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    class property TopHeaderProperty: IDependencyProperty read get_TopHeaderProperty;
    class property TopLeftHeaderProperty: IDependencyProperty read get_TopLeftHeaderProperty;

    // -> IScrollViewerStatics4
    class function get_ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty; static; inline;
    class function get_HorizontalAnchorRatioProperty: IDependencyProperty; static; inline;
    class function get_VerticalAnchorRatioProperty: IDependencyProperty; static; inline;
    class function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; static; inline;
    class function GetCanContentRenderOutsideBounds(element: IDependencyObject): Boolean; static; inline;
    class procedure SetCanContentRenderOutsideBounds(element: IDependencyObject; canContentRenderOutsideBounds: Boolean); static; inline;
    class property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    class property HorizontalAnchorRatioProperty: IDependencyProperty read get_HorizontalAnchorRatioProperty;
    class property ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty read get_ReduceViewportForCoreInputViewOcclusionsProperty;
    class property VerticalAnchorRatioProperty: IDependencyProperty read get_VerticalAnchorRatioProperty;
  end;

  // Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs
  // Instantiable: "IScrollViewerViewChangedEventArgs"
  TScrollViewerViewChangedEventArgs = class(TWinRTGenericImportI<IScrollViewerViewChangedEventArgs>) end;

  // Windows.UI.Xaml.Controls.SearchBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISearchBox
  // Statics: "Windows.UI.Xaml.Controls.ISearchBoxStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISearchBoxFactory"
  // Instantiable: "ISearchBox"
  TSearchBox = class(TWinRTGenericImportFSI<ISearchBoxFactory, ISearchBoxStatics, ISearchBox>)
  public
    // -> ISearchBoxStatics
    class function get_SearchHistoryEnabledProperty: IDependencyProperty; static; inline;
    class function get_SearchHistoryContextProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_QueryTextProperty: IDependencyProperty; static; inline;
    class function get_FocusOnKeyboardInputProperty: IDependencyProperty; static; inline;
    class function get_ChooseSuggestionOnEnterProperty: IDependencyProperty; static; inline;
    class property ChooseSuggestionOnEnterProperty: IDependencyProperty read get_ChooseSuggestionOnEnterProperty;
    class property FocusOnKeyboardInputProperty: IDependencyProperty read get_FocusOnKeyboardInputProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property QueryTextProperty: IDependencyProperty read get_QueryTextProperty;
    class property SearchHistoryContextProperty: IDependencyProperty read get_SearchHistoryContextProperty;
    class property SearchHistoryEnabledProperty: IDependencyProperty read get_SearchHistoryEnabledProperty;

    // -> ISearchBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISearchBox; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISearchBoxResultSuggestionChosenEventArgs
  // Instantiable: "ISearchBoxResultSuggestionChosenEventArgs"
  TSearchBoxResultSuggestionChosenEventArgs = class(TWinRTGenericImportI<ISearchBoxResultSuggestionChosenEventArgs>) end;

  // Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgs
  // Factory: "Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory"
  // Instantiable: "ISectionsInViewChangedEventArgs"
  TSectionsInViewChangedEventArgs = class(TWinRTGenericImportFI<ISectionsInViewChangedEventArgsFactory, ISectionsInViewChangedEventArgs>)
  public
    // -> ISectionsInViewChangedEventArgsFactory
  end;

  // Windows.UI.Xaml.Controls.SelectionChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISelectionChangedEventArgs
  // Factory: "Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory"
  // Instantiable: "ISelectionChangedEventArgs"
  TSelectionChangedEventArgs = class(TWinRTGenericImportFI<ISelectionChangedEventArgsFactory, ISelectionChangedEventArgs>)
  public
    // -> ISelectionChangedEventArgsFactory
    class function CreateInstanceWithRemovedItemsAndAddedItems(removedItems: IVector_1__IInspectable; addedItems: IVector_1__IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): ISelectionChangedEventArgs; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SemanticZoom
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISemanticZoom
  // Statics: "Windows.UI.Xaml.Controls.ISemanticZoomStatics"
  // Instantiable: "ISemanticZoom"
  TSemanticZoom = class(TWinRTGenericImportSI<ISemanticZoomStatics, ISemanticZoom>)
  public
    // -> ISemanticZoomStatics
    class function get_ZoomedInViewProperty: IDependencyProperty; static; inline;
    class function get_ZoomedOutViewProperty: IDependencyProperty; static; inline;
    class function get_IsZoomedInViewActiveProperty: IDependencyProperty; static; inline;
    class function get_CanChangeViewsProperty: IDependencyProperty; static; inline;
    class function get_IsZoomOutButtonEnabledProperty: IDependencyProperty; static; inline;
    class property CanChangeViewsProperty: IDependencyProperty read get_CanChangeViewsProperty;
    class property IsZoomOutButtonEnabledProperty: IDependencyProperty read get_IsZoomOutButtonEnabledProperty;
    class property IsZoomedInViewActiveProperty: IDependencyProperty read get_IsZoomedInViewActiveProperty;
    class property ZoomedInViewProperty: IDependencyProperty read get_ZoomedInViewProperty;
    class property ZoomedOutViewProperty: IDependencyProperty read get_ZoomedOutViewProperty;
  end;

  // Windows.UI.Xaml.Controls.SemanticZoomLocation
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISemanticZoomLocation
  // Instantiable: "ISemanticZoomLocation"
  TSemanticZoomLocation = class(TWinRTGenericImportI<ISemanticZoomLocation>) end;

  // Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs
  // Instantiable: "ISemanticZoomViewChangedEventArgs"
  TSemanticZoomViewChangedEventArgs = class(TWinRTGenericImportI<ISemanticZoomViewChangedEventArgs>) end;

  // Windows.UI.Xaml.Controls.SettingsFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISettingsFlyout
  // Statics: "Windows.UI.Xaml.Controls.ISettingsFlyoutStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISettingsFlyoutFactory"
  // Instantiable: "ISettingsFlyout"
  TSettingsFlyout = class(TWinRTGenericImportFSI<ISettingsFlyoutFactory, ISettingsFlyoutStatics, ISettingsFlyout>)
  public
    // -> ISettingsFlyoutStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_HeaderBackgroundProperty: IDependencyProperty; static; inline;
    class function get_HeaderForegroundProperty: IDependencyProperty; static; inline;
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class property HeaderBackgroundProperty: IDependencyProperty read get_HeaderBackgroundProperty;
    class property HeaderForegroundProperty: IDependencyProperty read get_HeaderForegroundProperty;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> ISettingsFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISettingsFlyout; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SplitButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISplitButton
  // Statics: "Windows.UI.Xaml.Controls.ISplitButtonStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISplitButtonFactory"
  // Instantiable: "ISplitButton"
  TSplitButton = class(TWinRTGenericImportFSI<ISplitButtonFactory, ISplitButtonStatics, ISplitButton>)
  public
    // -> ISplitButtonStatics
    class function get_FlyoutProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;

    // -> ISplitButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SplitButtonAutomationPeer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISplitButtonAutomationPeer
  // Implements: Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
  // Implements: Windows.UI.Xaml.Automation.Provider.IInvokeProvider
  // Factory: "Windows.UI.Xaml.Controls.ISplitButtonAutomationPeerFactory"
  // Instantiable: "ISplitButtonAutomationPeer"
  TSplitButtonAutomationPeer = class(TWinRTGenericImportFI<ISplitButtonAutomationPeerFactory, ISplitButtonAutomationPeer>)
  public
    // -> ISplitButtonAutomationPeerFactory
    class function CreateInstance(owner: ISplitButton; baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButtonAutomationPeer; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SplitView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISplitView
  // Implements: Windows.UI.Xaml.Controls.ISplitView2
  // Implements: Windows.UI.Xaml.Controls.ISplitView3
  // Statics: "Windows.UI.Xaml.Controls.ISplitViewStatics"
  // Statics: "Windows.UI.Xaml.Controls.ISplitViewStatics2"
  // Factory: "Windows.UI.Xaml.Controls.ISplitViewFactory"
  // Instantiable: "ISplitView"
  TSplitView = class(TWinRTGenericImportFS2I<ISplitViewFactory, ISplitViewStatics, ISplitViewStatics2, ISplitView>)
  public
    // -> ISplitViewStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_PaneProperty: IDependencyProperty; static; inline;
    class function get_IsPaneOpenProperty: IDependencyProperty; static; inline;
    class function get_OpenPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_CompactPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_PanePlacementProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class function get_PaneBackgroundProperty: IDependencyProperty; static; inline;
    class property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    class property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    class property PaneBackgroundProperty: IDependencyProperty read get_PaneBackgroundProperty;
    class property PanePlacementProperty: IDependencyProperty read get_PanePlacementProperty;
    class property PaneProperty: IDependencyProperty read get_PaneProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;

    // -> ISplitViewStatics2
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> ISplitViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.StackPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IStackPanel
  // Implements: Windows.UI.Xaml.Controls.IStackPanel2
  // Implements: Windows.UI.Xaml.Controls.IStackPanel4
  // Implements: Windows.UI.Xaml.Controls.IStackPanel5
  // Implements: Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Implements: Windows.UI.Xaml.Controls.IInsertionPanel
  // Statics: "Windows.UI.Xaml.Controls.IStackPanelStatics"
  // Statics: "Windows.UI.Xaml.Controls.IStackPanelStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IStackPanelStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IStackPanelStatics5"
  // Factory: "Windows.UI.Xaml.Controls.IStackPanelFactory"
  // Instantiable: "IStackPanel"
  TStackPanel = class(TWinRTGenericImportFS4I<IStackPanelFactory, IStackPanelStatics, IStackPanelStatics2, IStackPanelStatics4, IStackPanelStatics5, IStackPanel>)
  public
    // -> IStackPanelStatics
    class function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;

    // -> IStackPanelStatics2
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;

    // -> IStackPanelStatics4
    class function get_SpacingProperty: IDependencyProperty; static; inline;
    class property SpacingProperty: IDependencyProperty read get_SpacingProperty;

    // -> IStackPanelStatics5
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;

    // -> IStackPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackPanel; static; inline;
  end;

  // Windows.UI.Xaml.Controls.StyleSelector
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IStyleSelector
  // Implements: Windows.UI.Xaml.Controls.IStyleSelectorOverrides
  // Factory: "Windows.UI.Xaml.Controls.IStyleSelectorFactory"
  // Instantiable: "IStyleSelector"
  TStyleSelector = class(TWinRTGenericImportFI<IStyleSelectorFactory, IStyleSelector>)
  public
    // -> IStyleSelectorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStyleSelector; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SwapChainBackgroundPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel
  // Implements: Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2
  // Factory: "Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory"
  // Instantiable: "ISwapChainBackgroundPanel"
  TSwapChainBackgroundPanel = class(TWinRTGenericImportFI<ISwapChainBackgroundPanelFactory, ISwapChainBackgroundPanel>)
  public
    // -> ISwapChainBackgroundPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainBackgroundPanel; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SwapChainPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISwapChainPanel
  // Statics: "Windows.UI.Xaml.Controls.ISwapChainPanelStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISwapChainPanelFactory"
  // Instantiable: "ISwapChainPanel"
  TSwapChainPanel = class(TWinRTGenericImportFSI<ISwapChainPanelFactory, ISwapChainPanelStatics, ISwapChainPanel>)
  public
    // -> ISwapChainPanelStatics
    class function get_CompositionScaleXProperty: IDependencyProperty; static; inline;
    class function get_CompositionScaleYProperty: IDependencyProperty; static; inline;
    class property CompositionScaleXProperty: IDependencyProperty read get_CompositionScaleXProperty;
    class property CompositionScaleYProperty: IDependencyProperty read get_CompositionScaleYProperty;

    // -> ISwapChainPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainPanel; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SwipeControl
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISwipeControl
  // Statics: "Windows.UI.Xaml.Controls.ISwipeControlStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISwipeControlFactory"
  // Instantiable: "ISwipeControl"
  TSwipeControl = class(TWinRTGenericImportFSI<ISwipeControlFactory, ISwipeControlStatics, ISwipeControl>)
  public
    // -> ISwipeControlStatics
    class function get_LeftItemsProperty: IDependencyProperty; static; inline;
    class function get_RightItemsProperty: IDependencyProperty; static; inline;
    class function get_TopItemsProperty: IDependencyProperty; static; inline;
    class function get_BottomItemsProperty: IDependencyProperty; static; inline;
    class property BottomItemsProperty: IDependencyProperty read get_BottomItemsProperty;
    class property LeftItemsProperty: IDependencyProperty read get_LeftItemsProperty;
    class property RightItemsProperty: IDependencyProperty read get_RightItemsProperty;
    class property TopItemsProperty: IDependencyProperty read get_TopItemsProperty;

    // -> ISwipeControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeControl; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SwipeItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISwipeItem
  // Statics: "Windows.UI.Xaml.Controls.ISwipeItemStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISwipeItemFactory"
  // Instantiable: "ISwipeItem"
  TSwipeItem = class(TWinRTGenericImportFSI<ISwipeItemFactory, ISwipeItemStatics, ISwipeItem>)
  public
    // -> ISwipeItemStatics
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class function get_BehaviorOnInvokedProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BehaviorOnInvokedProperty: IDependencyProperty read get_BehaviorOnInvokedProperty;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;

    // -> ISwipeItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SwipeItems
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISwipeItems
  // Implements: Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ISwipeItem>
  // Implements: Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ISwipeItem>
  // Statics: "Windows.UI.Xaml.Controls.ISwipeItemsStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISwipeItemsFactory"
  // Instantiable: "ISwipeItems"
  TSwipeItems = class(TWinRTGenericImportFSI<ISwipeItemsFactory, ISwipeItemsStatics, ISwipeItems>)
  public
    // -> ISwipeItemsStatics
    class function get_ModeProperty: IDependencyProperty; static; inline;
    class property ModeProperty: IDependencyProperty read get_ModeProperty;

    // -> ISwipeItemsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItems; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SymbolIcon
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISymbolIcon
  // Statics: "Windows.UI.Xaml.Controls.ISymbolIconStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISymbolIconFactory"
  // Instantiable: "ISymbolIcon"
  TSymbolIcon = class(TWinRTGenericImportFSI<ISymbolIconFactory, ISymbolIconStatics, ISymbolIcon>)
  public
    // -> ISymbolIconStatics
    class function get_SymbolProperty: IDependencyProperty; static; inline;
    class property SymbolProperty: IDependencyProperty read get_SymbolProperty;

    // -> ISymbolIconFactory
    class function CreateInstanceWithSymbol(symbol: Symbol): ISymbolIcon; static; inline;
  end;

  // Windows.UI.Xaml.Controls.SymbolIconSource
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ISymbolIconSource
  // Statics: "Windows.UI.Xaml.Controls.ISymbolIconSourceStatics"
  // Factory: "Windows.UI.Xaml.Controls.ISymbolIconSourceFactory"
  // Instantiable: "ISymbolIconSource"
  TSymbolIconSource = class(TWinRTGenericImportFSI<ISymbolIconSourceFactory, ISymbolIconSourceStatics, ISymbolIconSource>)
  public
    // -> ISymbolIconSourceStatics
    class function get_SymbolProperty: IDependencyProperty; static; inline;
    class property SymbolProperty: IDependencyProperty read get_SymbolProperty;

    // -> ISymbolIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISymbolIconSource; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TextBlock
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITextBlock
  // Implements: Windows.UI.Xaml.Controls.ITextBlock2
  // Implements: Windows.UI.Xaml.Controls.ITextBlock3
  // Implements: Windows.UI.Xaml.Controls.ITextBlock4
  // Implements: Windows.UI.Xaml.Controls.ITextBlock5
  // Implements: Windows.UI.Xaml.Controls.ITextBlock6
  // Implements: Windows.UI.Xaml.Controls.ITextBlock7
  // Statics: "Windows.UI.Xaml.Controls.ITextBlockStatics"
  // Statics: "Windows.UI.Xaml.Controls.ITextBlockStatics2"
  // Statics: "Windows.UI.Xaml.Controls.ITextBlockStatics3"
  // Statics: "Windows.UI.Xaml.Controls.ITextBlockStatics5"
  // Statics: "Windows.UI.Xaml.Controls.ITextBlockStatics6"
  // Statics: "Windows.UI.Xaml.Controls.ITextBlockStatics7"
  // Instantiable: "ITextBlock"
  TTextBlock = class(TWinRTGenericImportS6I<ITextBlockStatics, ITextBlockStatics2, ITextBlockStatics3, ITextBlockStatics5, ITextBlockStatics6, ITextBlockStatics7, ITextBlock>)
  public
    // -> ITextBlockStatics
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_TextTrimmingProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_LineHeightProperty: IDependencyProperty; static; inline;
    class function get_LineStackingStrategyProperty: IDependencyProperty; static; inline;
    class function get_IsTextSelectionEnabledProperty: IDependencyProperty; static; inline;
    class function get_SelectedTextProperty: IDependencyProperty; static; inline;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    class property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    class property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
    class property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;

    // -> ITextBlockStatics2
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class function get_TextLineBoundsProperty: IDependencyProperty; static; inline;
    class function get_OpticalMarginAlignmentProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    class property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;

    // -> ITextBlockStatics3
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;

    // -> ITextBlockStatics5
    class function get_TextDecorationsProperty: IDependencyProperty; static; inline;
    class property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;

    // -> ITextBlockStatics6
    class function get_IsTextTrimmedProperty: IDependencyProperty; static; inline;
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    class property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;

    // -> ITextBlockStatics7
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
  end;

  // Windows.UI.Xaml.Controls.TextBox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITextBox
  // Implements: Windows.UI.Xaml.Controls.ITextBox2
  // Implements: Windows.UI.Xaml.Controls.ITextBox3
  // Implements: Windows.UI.Xaml.Controls.ITextBox4
  // Implements: Windows.UI.Xaml.Controls.ITextBox5
  // Implements: Windows.UI.Xaml.Controls.ITextBox6
  // Implements: Windows.UI.Xaml.Controls.ITextBox7
  // Implements: Windows.UI.Xaml.Controls.ITextBox8
  // Statics: "Windows.UI.Xaml.Controls.ITextBoxStatics"
  // Statics: "Windows.UI.Xaml.Controls.ITextBoxStatics2"
  // Statics: "Windows.UI.Xaml.Controls.ITextBoxStatics3"
  // Statics: "Windows.UI.Xaml.Controls.ITextBoxStatics5"
  // Statics: "Windows.UI.Xaml.Controls.ITextBoxStatics6"
  // Statics: "Windows.UI.Xaml.Controls.ITextBoxStatics7"
  // Statics: "Windows.UI.Xaml.Controls.ITextBoxStatics8"
  // Factory: "Windows.UI.Xaml.Controls.ITextBoxFactory"
  // Instantiable: "ITextBox"
  TTextBox = class(TWinRTGenericImportFS7I<ITextBoxFactory, ITextBoxStatics, ITextBoxStatics2, ITextBoxStatics3, ITextBoxStatics5, ITextBoxStatics6, ITextBoxStatics7, ITextBoxStatics8, ITextBox>)
  public
    // -> ITextBoxStatics
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_MaxLengthProperty: IDependencyProperty; static; inline;
    class function get_IsReadOnlyProperty: IDependencyProperty; static; inline;
    class function get_AcceptsReturnProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_IsSpellCheckEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsTextPredictionEnabledProperty: IDependencyProperty; static; inline;
    class function get_InputScopeProperty: IDependencyProperty; static; inline;
    class property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    class property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    class property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    class property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    class property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    class property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;

    // -> ITextBoxStatics2
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;

    // -> ITextBoxStatics3
    class function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;

    // -> ITextBoxStatics5
    class function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; static; inline;
    class property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;

    // -> ITextBoxStatics6
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_CharacterCasingProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderForegroundProperty: IDependencyProperty; static; inline;
    class property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    class property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;

    // -> ITextBoxStatics7
    class function get_HandwritingViewProperty: IDependencyProperty; static; inline;
    class function get_IsHandwritingViewEnabledProperty: IDependencyProperty; static; inline;
    class property HandwritingViewProperty: IDependencyProperty read get_HandwritingViewProperty;
    class property IsHandwritingViewEnabledProperty: IDependencyProperty read get_IsHandwritingViewEnabledProperty;

    // -> ITextBoxStatics8
    class function get_CanPasteClipboardContentProperty: IDependencyProperty; static; inline;
    class function get_CanUndoProperty: IDependencyProperty; static; inline;
    class function get_CanRedoProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_ProofingMenuFlyoutProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    class property CanRedoProperty: IDependencyProperty read get_CanRedoProperty;
    class property CanUndoProperty: IDependencyProperty read get_CanUndoProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;

    // -> ITextBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextBox; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TextCommandBarFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITextCommandBarFlyout
  // Factory: "Windows.UI.Xaml.Controls.ITextCommandBarFlyoutFactory"
  // Instantiable: "ITextCommandBarFlyout"
  TTextCommandBarFlyout = class(TWinRTGenericImportFI<ITextCommandBarFlyoutFactory, ITextCommandBarFlyout>)
  public
    // -> ITextCommandBarFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextCommandBarFlyout; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TimePickedEventArgs
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITimePickedEventArgs
  // Instantiable: "ITimePickedEventArgs"
  TTimePickedEventArgs = class(TWinRTGenericImportI<ITimePickedEventArgs>) end;

  // Windows.UI.Xaml.Controls.TimePicker
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITimePicker
  // Implements: Windows.UI.Xaml.Controls.ITimePicker2
  // Implements: Windows.UI.Xaml.Controls.ITimePicker3
  // Statics: "Windows.UI.Xaml.Controls.ITimePickerStatics"
  // Statics: "Windows.UI.Xaml.Controls.ITimePickerStatics2"
  // Statics: "Windows.UI.Xaml.Controls.ITimePickerStatics3"
  // Factory: "Windows.UI.Xaml.Controls.ITimePickerFactory"
  // Instantiable: "ITimePicker"
  TTimePicker = class(TWinRTGenericImportFS3I<ITimePickerFactory, ITimePickerStatics, ITimePickerStatics2, ITimePickerStatics3, ITimePicker>)
  public
    // -> ITimePickerStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_ClockIdentifierProperty: IDependencyProperty; static; inline;
    class function get_MinuteIncrementProperty: IDependencyProperty; static; inline;
    class function get_TimeProperty: IDependencyProperty; static; inline;
    class property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    class property TimeProperty: IDependencyProperty read get_TimeProperty;

    // -> ITimePickerStatics2
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> ITimePickerStatics3
    class function get_SelectedTimeProperty: IDependencyProperty; static; inline;
    class property SelectedTimeProperty: IDependencyProperty read get_SelectedTimeProperty;

    // -> ITimePickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITimePicker; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TimePickerFlyout
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITimePickerFlyout
  // Statics: "Windows.UI.Xaml.Controls.ITimePickerFlyoutStatics"
  // Instantiable: "ITimePickerFlyout"
  TTimePickerFlyout = class(TWinRTGenericImportSI<ITimePickerFlyoutStatics, ITimePickerFlyout>)
  public
    // -> ITimePickerFlyoutStatics
    class function get_ClockIdentifierProperty: IDependencyProperty; static; inline;
    class function get_TimeProperty: IDependencyProperty; static; inline;
    class function get_MinuteIncrementProperty: IDependencyProperty; static; inline;
    class property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    class property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    class property TimeProperty: IDependencyProperty read get_TimeProperty;
  end;

  // Windows.UI.Xaml.Controls.TimePickerFlyoutPresenter
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter
  // Implements: Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenter2
  // Statics: "Windows.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics2"
  TTimePickerFlyoutPresenter = class(TWinRTGenericImportS<ITimePickerFlyoutPresenterStatics2>)
  public
    // -> ITimePickerFlyoutPresenterStatics2
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem
  // Statics: "Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics"
  // Factory: "Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory"
  // Instantiable: "IToggleMenuFlyoutItem"
  TToggleMenuFlyoutItem = class(TWinRTGenericImportFSI<IToggleMenuFlyoutItemFactory, IToggleMenuFlyoutItemStatics, IToggleMenuFlyoutItem>)
  public
    // -> IToggleMenuFlyoutItemStatics
    class function get_IsCheckedProperty: IDependencyProperty; static; inline;
    class property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;

    // -> IToggleMenuFlyoutItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleMenuFlyoutItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ToggleSplitButton
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IToggleSplitButton
  // Factory: "Windows.UI.Xaml.Controls.IToggleSplitButtonFactory"
  // Instantiable: "IToggleSplitButton"
  TToggleSplitButton = class(TWinRTGenericImportFI<IToggleSplitButtonFactory, IToggleSplitButton>)
  public
    // -> IToggleSplitButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButton; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeer
  // Implements: Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
  // Implements: Windows.UI.Xaml.Automation.Provider.IToggleProvider
  // Factory: "Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory"
  // Instantiable: "IToggleSplitButtonAutomationPeer"
  TToggleSplitButtonAutomationPeer = class(TWinRTGenericImportFI<IToggleSplitButtonAutomationPeerFactory, IToggleSplitButtonAutomationPeer>)
  public
    // -> IToggleSplitButtonAutomationPeerFactory
    class function CreateInstance(owner: IToggleSplitButton; baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButtonAutomationPeer; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ToggleSwitch
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IToggleSwitch
  // Implements: Windows.UI.Xaml.Controls.IToggleSwitchOverrides
  // Statics: "Windows.UI.Xaml.Controls.IToggleSwitchStatics"
  // Instantiable: "IToggleSwitch"
  TToggleSwitch = class(TWinRTGenericImportSI<IToggleSwitchStatics, IToggleSwitch>)
  public
    // -> IToggleSwitchStatics
    class function get_IsOnProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_OnContentProperty: IDependencyProperty; static; inline;
    class function get_OnContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_OffContentProperty: IDependencyProperty; static; inline;
    class function get_OffContentTemplateProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsOnProperty: IDependencyProperty read get_IsOnProperty;
    class property OffContentProperty: IDependencyProperty read get_OffContentProperty;
    class property OffContentTemplateProperty: IDependencyProperty read get_OffContentTemplateProperty;
    class property OnContentProperty: IDependencyProperty read get_OnContentProperty;
    class property OnContentTemplateProperty: IDependencyProperty read get_OnContentTemplateProperty;
  end;

  // Windows.UI.Xaml.Controls.ToolTip
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IToolTip
  // Implements: Windows.UI.Xaml.Controls.IToolTip2
  // Statics: "Windows.UI.Xaml.Controls.IToolTipStatics"
  // Statics: "Windows.UI.Xaml.Controls.IToolTipStatics2"
  // Factory: "Windows.UI.Xaml.Controls.IToolTipFactory"
  // Instantiable: "IToolTip"
  TToolTip = class(TWinRTGenericImportFS2I<IToolTipFactory, IToolTipStatics, IToolTipStatics2, IToolTip>)
  public
    // -> IToolTipStatics
    class function get_HorizontalOffsetProperty: IDependencyProperty; static; inline;
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_PlacementProperty: IDependencyProperty; static; inline;
    class function get_PlacementTargetProperty: IDependencyProperty; static; inline;
    class function get_VerticalOffsetProperty: IDependencyProperty; static; inline;
    class property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    class property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    class property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;

    // -> IToolTipStatics2
    class function get_PlacementRectProperty: IDependencyProperty; static; inline;
    class property PlacementRectProperty: IDependencyProperty read get_PlacementRectProperty;

    // -> IToolTipFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToolTip; static; inline;
  end;

  // Windows.UI.Xaml.Controls.ToolTipService
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IToolTipService
  // Statics: "Windows.UI.Xaml.Controls.IToolTipServiceStatics"
  TToolTipService = class(TWinRTGenericImportS<IToolTipServiceStatics>)
  public
    // -> IToolTipServiceStatics
    class function get_PlacementProperty: IDependencyProperty; static; inline;
    class function GetPlacement(element: IDependencyObject): Primitives_PlacementMode; static; inline;
    class procedure SetPlacement(element: IDependencyObject; value: Primitives_PlacementMode); static; inline;
    class function get_PlacementTargetProperty: IDependencyProperty; static; inline;
    class function GetPlacementTarget(element: IDependencyObject): IUIElement; static; inline;
    class procedure SetPlacementTarget(element: IDependencyObject; value: IUIElement); static; inline;
    class function get_ToolTipProperty: IDependencyProperty; static; inline;
    class function GetToolTip(element: IDependencyObject): IInspectable; static; inline;
    class procedure SetToolTip(element: IDependencyObject; value: IInspectable); static; inline;
    class property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    class property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    class property ToolTipProperty: IDependencyProperty read get_ToolTipProperty;
  end;

  // Windows.UI.Xaml.Controls.TreeView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITreeView
  // Implements: Windows.UI.Xaml.Controls.ITreeView2
  // Statics: "Windows.UI.Xaml.Controls.ITreeViewStatics"
  // Statics: "Windows.UI.Xaml.Controls.ITreeViewStatics2"
  // Factory: "Windows.UI.Xaml.Controls.ITreeViewFactory"
  // Instantiable: "ITreeView"
  TTreeView = class(TWinRTGenericImportFS2I<ITreeViewFactory, ITreeViewStatics, ITreeViewStatics2, ITreeView>)
  public
    // -> ITreeViewStatics
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;

    // -> ITreeViewStatics2
    class function get_CanDragItemsProperty: IDependencyProperty; static; inline;
    class function get_CanReorderItemsProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerTransitionsProperty: IDependencyProperty; static; inline;
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    class property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    class property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    class property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    class property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;

    // -> ITreeViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TreeViewItem
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITreeViewItem
  // Implements: Windows.UI.Xaml.Controls.ITreeViewItem2
  // Statics: "Windows.UI.Xaml.Controls.ITreeViewItemStatics"
  // Statics: "Windows.UI.Xaml.Controls.ITreeViewItemStatics2"
  // Factory: "Windows.UI.Xaml.Controls.ITreeViewItemFactory"
  // Instantiable: "ITreeViewItem"
  TTreeViewItem = class(TWinRTGenericImportFS2I<ITreeViewItemFactory, ITreeViewItemStatics, ITreeViewItemStatics2, ITreeViewItem>)
  public
    // -> ITreeViewItemStatics
    class function get_GlyphOpacityProperty: IDependencyProperty; static; inline;
    class function get_GlyphBrushProperty: IDependencyProperty; static; inline;
    class function get_ExpandedGlyphProperty: IDependencyProperty; static; inline;
    class function get_CollapsedGlyphProperty: IDependencyProperty; static; inline;
    class function get_GlyphSizeProperty: IDependencyProperty; static; inline;
    class function get_IsExpandedProperty: IDependencyProperty; static; inline;
    class function get_TreeViewItemTemplateSettingsProperty: IDependencyProperty; static; inline;
    class property CollapsedGlyphProperty: IDependencyProperty read get_CollapsedGlyphProperty;
    class property ExpandedGlyphProperty: IDependencyProperty read get_ExpandedGlyphProperty;
    class property GlyphBrushProperty: IDependencyProperty read get_GlyphBrushProperty;
    class property GlyphOpacityProperty: IDependencyProperty read get_GlyphOpacityProperty;
    class property GlyphSizeProperty: IDependencyProperty read get_GlyphSizeProperty;
    class property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
    class property TreeViewItemTemplateSettingsProperty: IDependencyProperty read get_TreeViewItemTemplateSettingsProperty;

    // -> ITreeViewItemStatics2
    class function get_HasUnrealizedChildrenProperty: IDependencyProperty; static; inline;
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class property HasUnrealizedChildrenProperty: IDependencyProperty read get_HasUnrealizedChildrenProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;

    // -> ITreeViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItem; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettings
  // Statics: "Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics"
  // Factory: "Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory"
  // Instantiable: "ITreeViewItemTemplateSettings"
  TTreeViewItemTemplateSettings = class(TWinRTGenericImportFSI<ITreeViewItemTemplateSettingsFactory, ITreeViewItemTemplateSettingsStatics, ITreeViewItemTemplateSettings>)
  public
    // -> ITreeViewItemTemplateSettingsStatics
    class function get_ExpandedGlyphVisibilityProperty: IDependencyProperty; static; inline;
    class function get_CollapsedGlyphVisibilityProperty: IDependencyProperty; static; inline;
    class function get_IndentationProperty: IDependencyProperty; static; inline;
    class function get_DragItemsCountProperty: IDependencyProperty; static; inline;
    class property CollapsedGlyphVisibilityProperty: IDependencyProperty read get_CollapsedGlyphVisibilityProperty;
    class property DragItemsCountProperty: IDependencyProperty read get_DragItemsCountProperty;
    class property ExpandedGlyphVisibilityProperty: IDependencyProperty read get_ExpandedGlyphVisibilityProperty;
    class property IndentationProperty: IDependencyProperty read get_IndentationProperty;

    // -> ITreeViewItemTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItemTemplateSettings; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TreeViewList
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITreeViewList
  // Factory: "Windows.UI.Xaml.Controls.ITreeViewListFactory"
  // Instantiable: "ITreeViewList"
  TTreeViewList = class(TWinRTGenericImportFI<ITreeViewListFactory, ITreeViewList>)
  public
    // -> ITreeViewListFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewList; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TreeViewNode
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITreeViewNode
  // Statics: "Windows.UI.Xaml.Controls.ITreeViewNodeStatics"
  // Factory: "Windows.UI.Xaml.Controls.ITreeViewNodeFactory"
  // Instantiable: "ITreeViewNode"
  TTreeViewNode = class(TWinRTGenericImportFSI<ITreeViewNodeFactory, ITreeViewNodeStatics, ITreeViewNode>)
  public
    // -> ITreeViewNodeStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_DepthProperty: IDependencyProperty; static; inline;
    class function get_IsExpandedProperty: IDependencyProperty; static; inline;
    class function get_HasChildrenProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property DepthProperty: IDependencyProperty read get_DepthProperty;
    class property HasChildrenProperty: IDependencyProperty read get_HasChildrenProperty;
    class property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;

    // -> ITreeViewNodeFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewNode; static; inline;
  end;

  // Windows.UI.Xaml.Controls.TwoPaneView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.ITwoPaneView
  // Statics: "Windows.UI.Xaml.Controls.ITwoPaneViewStatics"
  // Factory: "Windows.UI.Xaml.Controls.ITwoPaneViewFactory"
  // Instantiable: "ITwoPaneView"
  TTwoPaneView = class(TWinRTGenericImportFSI<ITwoPaneViewFactory, ITwoPaneViewStatics, ITwoPaneView>)
  public
    // -> ITwoPaneViewStatics
    class function get_Pane1Property: IDependencyProperty; static; inline;
    class function get_Pane2Property: IDependencyProperty; static; inline;
    class function get_Pane1LengthProperty: IDependencyProperty; static; inline;
    class function get_Pane2LengthProperty: IDependencyProperty; static; inline;
    class function get_PanePriorityProperty: IDependencyProperty; static; inline;
    class function get_ModeProperty: IDependencyProperty; static; inline;
    class function get_WideModeConfigurationProperty: IDependencyProperty; static; inline;
    class function get_TallModeConfigurationProperty: IDependencyProperty; static; inline;
    class function get_MinWideModeWidthProperty: IDependencyProperty; static; inline;
    class function get_MinTallModeHeightProperty: IDependencyProperty; static; inline;
    class property MinTallModeHeightProperty: IDependencyProperty read get_MinTallModeHeightProperty;
    class property MinWideModeWidthProperty: IDependencyProperty read get_MinWideModeWidthProperty;
    class property ModeProperty: IDependencyProperty read get_ModeProperty;
    class property Pane1LengthProperty: IDependencyProperty read get_Pane1LengthProperty;
    class property Pane1Property: IDependencyProperty read get_Pane1Property;
    class property Pane2LengthProperty: IDependencyProperty read get_Pane2LengthProperty;
    class property Pane2Property: IDependencyProperty read get_Pane2Property;
    class property PanePriorityProperty: IDependencyProperty read get_PanePriorityProperty;
    class property TallModeConfigurationProperty: IDependencyProperty read get_TallModeConfigurationProperty;
    class property WideModeConfigurationProperty: IDependencyProperty read get_WideModeConfigurationProperty;

    // -> ITwoPaneViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITwoPaneView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.VariableSizedWrapGrid
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IVariableSizedWrapGrid
  // Statics: "Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics"
  // Instantiable: "IVariableSizedWrapGrid"
  TVariableSizedWrapGrid = class(TWinRTGenericImportSI<IVariableSizedWrapGridStatics, IVariableSizedWrapGrid>)
  public
    // -> IVariableSizedWrapGridStatics
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_MaximumRowsOrColumnsProperty: IDependencyProperty; static; inline;
    class function get_RowSpanProperty: IDependencyProperty; static; inline;
    class function GetRowSpan(element: IUIElement): Integer; static; inline;
    class procedure SetRowSpan(element: IUIElement; value: Integer); static; inline;
    class function get_ColumnSpanProperty: IDependencyProperty; static; inline;
    class function GetColumnSpan(element: IUIElement): Integer; static; inline;
    class procedure SetColumnSpan(element: IUIElement; value: Integer); static; inline;
    class property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    class property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;
    class property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

  // Windows.UI.Xaml.Controls.Viewbox
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IViewbox
  // Statics: "Windows.UI.Xaml.Controls.IViewboxStatics"
  // Instantiable: "IViewbox"
  TViewbox = class(TWinRTGenericImportSI<IViewboxStatics, IViewbox>)
  public
    // -> IViewboxStatics
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_StretchDirectionProperty: IDependencyProperty; static; inline;
    class property StretchDirectionProperty: IDependencyProperty read get_StretchDirectionProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // Windows.UI.Xaml.Controls.VirtualizingStackPanel
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IVirtualizingStackPanel
  // Implements: Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides
  // Statics: "Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics"
  // Instantiable: "IVirtualizingStackPanel"
  TVirtualizingStackPanel = class(TWinRTGenericImportSI<IVirtualizingStackPanelStatics, IVirtualizingStackPanel>)
  public
    // -> IVirtualizingStackPanelStatics
    class function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_VirtualizationModeProperty: IDependencyProperty; static; inline;
    class function GetVirtualizationMode(element: IDependencyObject): VirtualizationMode; static; inline;
    class procedure SetVirtualizationMode(element: IDependencyObject; value: VirtualizationMode); static; inline;
    class function get_IsVirtualizingProperty: IDependencyProperty; static; inline;
    class function GetIsVirtualizing(o: IDependencyObject): Boolean; static; inline;
    class property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    class property IsVirtualizingProperty: IDependencyProperty read get_IsVirtualizingProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property VirtualizationModeProperty: IDependencyProperty read get_VirtualizationModeProperty;
  end;

  // Windows.UI.Xaml.Controls.WebView
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IWebView
  // Implements: Windows.UI.Xaml.Controls.IWebView2
  // Implements: Windows.UI.Xaml.Controls.IWebView3
  // Implements: Windows.UI.Xaml.Controls.IWebView4
  // Implements: Windows.UI.Xaml.Controls.IWebView5
  // Implements: Windows.UI.Xaml.Controls.IWebView6
  // Implements: Windows.UI.Xaml.Controls.IWebView7
  // Statics: "Windows.UI.Xaml.Controls.IWebViewStatics"
  // Statics: "Windows.UI.Xaml.Controls.IWebViewStatics2"
  // Statics: "Windows.UI.Xaml.Controls.IWebViewStatics3"
  // Statics: "Windows.UI.Xaml.Controls.IWebViewStatics4"
  // Statics: "Windows.UI.Xaml.Controls.IWebViewStatics5"
  // Factory: "Windows.UI.Xaml.Controls.IWebViewFactory4"
  // Instantiable: "IWebView"
  TWebView = class(TWinRTGenericImportFS5I<IWebViewFactory4, IWebViewStatics, IWebViewStatics2, IWebViewStatics3, IWebViewStatics4, IWebViewStatics5, IWebView>)
  public
    // -> IWebViewStatics
    class function get_AnyScriptNotifyUri: IVector_1__IUriRuntimeClass; static; inline;
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_AllowedScriptNotifyUrisProperty: IDependencyProperty; static; inline;
    class function get_DataTransferPackageProperty: IDependencyProperty; static; inline;
    class property AllowedScriptNotifyUrisProperty: IDependencyProperty read get_AllowedScriptNotifyUrisProperty;
    class property AnyScriptNotifyUri: IVector_1__IUriRuntimeClass read get_AnyScriptNotifyUri;
    class property DataTransferPackageProperty: IDependencyProperty read get_DataTransferPackageProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;

    // -> IWebViewStatics2
    class function get_CanGoBackProperty: IDependencyProperty; static; inline;
    class function get_CanGoForwardProperty: IDependencyProperty; static; inline;
    class function get_DocumentTitleProperty: IDependencyProperty; static; inline;
    class function get_DefaultBackgroundColorProperty: IDependencyProperty; static; inline;
    class property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    class property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    class property DefaultBackgroundColorProperty: IDependencyProperty read get_DefaultBackgroundColorProperty;
    class property DocumentTitleProperty: IDependencyProperty read get_DocumentTitleProperty;

    // -> IWebViewStatics3
    class function get_ContainsFullScreenElementProperty: IDependencyProperty; static; inline;
    class property ContainsFullScreenElementProperty: IDependencyProperty read get_ContainsFullScreenElementProperty;

    // -> IWebViewStatics4
    class function get_DefaultExecutionMode: WebViewExecutionMode; static; inline;
    class function ClearTemporaryWebDataAsync: IAsyncAction; static; inline;
    class property DefaultExecutionMode: WebViewExecutionMode read get_DefaultExecutionMode;

    // -> IWebViewStatics5
    class function get_XYFocusLeftProperty: IDependencyProperty; static; inline;
    class function get_XYFocusRightProperty: IDependencyProperty; static; inline;
    class function get_XYFocusUpProperty: IDependencyProperty; static; inline;
    class function get_XYFocusDownProperty: IDependencyProperty; static; inline;
    class property XYFocusDownProperty: IDependencyProperty read get_XYFocusDownProperty;
    class property XYFocusLeftProperty: IDependencyProperty read get_XYFocusLeftProperty;
    class property XYFocusRightProperty: IDependencyProperty read get_XYFocusRightProperty;
    class property XYFocusUpProperty: IDependencyProperty read get_XYFocusUpProperty;

    // -> IWebViewFactory4
    class function CreateInstanceWithExecutionMode(executionMode: WebViewExecutionMode): IWebView; static; inline;
  end;

  // Windows.UI.Xaml.Controls.WebViewBrush
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IWebViewBrush
  // Statics: "Windows.UI.Xaml.Controls.IWebViewBrushStatics"
  // Instantiable: "IWebViewBrush"
  TWebViewBrush = class(TWinRTGenericImportSI<IWebViewBrushStatics, IWebViewBrush>)
  public
    // -> IWebViewBrushStatics
    class function get_SourceNameProperty: IDependencyProperty; static; inline;
    class property SourceNameProperty: IDependencyProperty read get_SourceNameProperty;
  end;

  // Windows.UI.Xaml.Controls.WrapGrid
  // Explicitly imported
  // Implements: Windows.UI.Xaml.Controls.IWrapGrid
  // Statics: "Windows.UI.Xaml.Controls.IWrapGridStatics"
  // Instantiable: "IWrapGrid"
  TWrapGrid = class(TWinRTGenericImportSI<IWrapGridStatics, IWrapGrid>)
  public
    // -> IWrapGridStatics
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_MaximumRowsOrColumnsProperty: IDependencyProperty; static; inline;
    class property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

implementation

{ TControl }

class function TControl.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TControl.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TControl.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TControl.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TControl.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TControl.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TControl.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TControl.get_IsTabStopProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTabStopProperty;
end;

class function TControl.get_IsEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsEnabledProperty;
end;

class function TControl.get_TabIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_TabIndexProperty;
end;

class function TControl.get_TabNavigationProperty: IDependencyProperty;
begin
  Result := Statics.get_TabNavigationProperty;
end;

class function TControl.get_TemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateProperty;
end;

class function TControl.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TControl.get_HorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalContentAlignmentProperty;
end;

class function TControl.get_VerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalContentAlignmentProperty;
end;

class function TControl.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TControl.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TControl.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TControl.get_DefaultStyleKeyProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultStyleKeyProperty;
end;

class function TControl.get_FocusStateProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusStateProperty;
end;


class function TControl.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsTextScaleFactorEnabledProperty;
end;


class function TControl.get_UseSystemFocusVisualsProperty: IDependencyProperty;
begin
  Result := Statics3.get_UseSystemFocusVisualsProperty;
end;

class function TControl.get_IsTemplateFocusTargetProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsTemplateFocusTargetProperty;
end;

class function TControl.GetIsTemplateFocusTarget(element: IFrameworkElement): Boolean;
begin
  Result := Statics3.GetIsTemplateFocusTarget(element);
end;

class procedure TControl.SetIsTemplateFocusTarget(element: IFrameworkElement; value: Boolean);
begin
  Statics3.SetIsTemplateFocusTarget(element, value);
end;


class function TControl.get_IsFocusEngagementEnabledProperty: IDependencyProperty;
begin
  Result := Statics4.get_IsFocusEngagementEnabledProperty;
end;

class function TControl.get_IsFocusEngagedProperty: IDependencyProperty;
begin
  Result := Statics4.get_IsFocusEngagedProperty;
end;

class function TControl.get_RequiresPointerProperty: IDependencyProperty;
begin
  Result := Statics4.get_RequiresPointerProperty;
end;

class function TControl.get_XYFocusLeftProperty: IDependencyProperty;
begin
  Result := Statics4.get_XYFocusLeftProperty;
end;

class function TControl.get_XYFocusRightProperty: IDependencyProperty;
begin
  Result := Statics4.get_XYFocusRightProperty;
end;

class function TControl.get_XYFocusUpProperty: IDependencyProperty;
begin
  Result := Statics4.get_XYFocusUpProperty;
end;

class function TControl.get_XYFocusDownProperty: IDependencyProperty;
begin
  Result := Statics4.get_XYFocusDownProperty;
end;

class function TControl.get_ElementSoundModeProperty: IDependencyProperty;
begin
  Result := Statics4.get_ElementSoundModeProperty;
end;


class function TControl.get_DefaultStyleResourceUriProperty: IDependencyProperty;
begin
  Result := Statics5.get_DefaultStyleResourceUriProperty;
end;

class function TControl.get_IsTemplateKeyTipTargetProperty: IDependencyProperty;
begin
  Result := Statics5.get_IsTemplateKeyTipTargetProperty;
end;

class function TControl.GetIsTemplateKeyTipTarget(element: IDependencyObject): Boolean;
begin
  Result := Statics5.GetIsTemplateKeyTipTarget(element);
end;

class procedure TControl.SetIsTemplateKeyTipTarget(element: IDependencyObject; value: Boolean);
begin
  Statics5.SetIsTemplateKeyTipTarget(element, value);
end;


class function TControl.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics6.get_BackgroundSizingProperty;
end;

class function TControl.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics6.get_CornerRadiusProperty;
end;

// Factories for : "Control"
// Factory: "Windows.UI.Xaml.Controls.IControlFactory"
// -> IControlFactory

class function TControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TContentControl }

class function TContentControl.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TContentControl.get_ContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateProperty;
end;

class function TContentControl.get_ContentTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateSelectorProperty;
end;

class function TContentControl.get_ContentTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTransitionsProperty;
end;

// Factories for : "ContentControl"
// Factory: "Windows.UI.Xaml.Controls.IContentControlFactory"
// -> IContentControlFactory

class function TContentControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBar }

class function TAppBar.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TAppBar.get_IsStickyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsStickyProperty;
end;


class function TAppBar.get_ClosedDisplayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_ClosedDisplayModeProperty;
end;


class function TAppBar.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics3.get_LightDismissOverlayModeProperty;
end;

// Factories for : "AppBar"
// Factory: "Windows.UI.Xaml.Controls.IAppBarFactory"
// -> IAppBarFactory

class function TAppBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ButtonBase }

class function TPrimitives_ButtonBase.get_ClickModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ClickModeProperty;
end;

class function TPrimitives_ButtonBase.get_IsPointerOverProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPointerOverProperty;
end;

class function TPrimitives_ButtonBase.get_IsPressedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPressedProperty;
end;

class function TPrimitives_ButtonBase.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TPrimitives_ButtonBase.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;

// Factories for : "Primitives_ButtonBase"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IButtonBaseFactory"
// -> Primitives_IButtonBaseFactory

class function TPrimitives_ButtonBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IButtonBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TButton }

class function TButton.get_FlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_FlyoutProperty;
end;

// Factories for : "Button"
// Factory: "Windows.UI.Xaml.Controls.IButtonFactory"
// -> IButtonFactory

class function TButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarButton }

class function TAppBarButton.get_LabelProperty: IDependencyProperty;
begin
  Result := Statics.get_LabelProperty;
end;

class function TAppBarButton.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TAppBarButton.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;


class function TAppBarButton.get_LabelPositionProperty: IDependencyProperty;
begin
  Result := Statics2.get_LabelPositionProperty;
end;

class function TAppBarButton.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsInOverflowProperty;
end;

class function TAppBarButton.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics2.get_DynamicOverflowOrderProperty;
end;


class function TAppBarButton.get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty;
begin
  Result := Statics3.get_KeyboardAcceleratorTextOverrideProperty;
end;

// Factories for : "AppBarButton"
// Factory: "Windows.UI.Xaml.Controls.IAppBarButtonFactory"
// -> IAppBarButtonFactory

class function TAppBarButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarElementContainer }

class function TAppBarElementContainer.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;

class function TAppBarElementContainer.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsInOverflowProperty;
end;

class function TAppBarElementContainer.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_DynamicOverflowOrderProperty;
end;

// Factories for : "AppBarElementContainer"
// Factory: "Windows.UI.Xaml.Controls.IAppBarElementContainerFactory"
// -> IAppBarElementContainerFactory

class function TAppBarElementContainer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarElementContainer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarSeparator }

class function TAppBarSeparator.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;


class function TAppBarSeparator.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsInOverflowProperty;
end;

class function TAppBarSeparator.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics2.get_DynamicOverflowOrderProperty;
end;

// Factories for : "AppBarSeparator"
// Factory: "Windows.UI.Xaml.Controls.IAppBarSeparatorFactory"
// -> IAppBarSeparatorFactory

class function TAppBarSeparator.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarSeparator;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ToggleButton }

class function TPrimitives_ToggleButton.get_IsCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCheckedProperty;
end;

class function TPrimitives_ToggleButton.get_IsThreeStateProperty: IDependencyProperty;
begin
  Result := Statics.get_IsThreeStateProperty;
end;

// Factories for : "Primitives_ToggleButton"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory"
// -> Primitives_IToggleButtonFactory

class function TPrimitives_ToggleButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IToggleButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarToggleButton }

class function TAppBarToggleButton.get_LabelProperty: IDependencyProperty;
begin
  Result := Statics.get_LabelProperty;
end;

class function TAppBarToggleButton.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TAppBarToggleButton.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;


class function TAppBarToggleButton.get_LabelPositionProperty: IDependencyProperty;
begin
  Result := Statics2.get_LabelPositionProperty;
end;

class function TAppBarToggleButton.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsInOverflowProperty;
end;

class function TAppBarToggleButton.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics2.get_DynamicOverflowOrderProperty;
end;


class function TAppBarToggleButton.get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty;
begin
  Result := Statics3.get_KeyboardAcceleratorTextOverrideProperty;
end;

// Factories for : "AppBarToggleButton"
// Factory: "Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory"
// -> IAppBarToggleButtonFactory

class function TAppBarToggleButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarToggleButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TItemsControl }

class function TItemsControl.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TItemsControl.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;

class function TItemsControl.get_ItemTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateSelectorProperty;
end;

class function TItemsControl.get_ItemsPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsPanelProperty;
end;

class function TItemsControl.get_DisplayMemberPathProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayMemberPathProperty;
end;

class function TItemsControl.get_ItemContainerStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemContainerStyleProperty;
end;

class function TItemsControl.get_ItemContainerStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemContainerStyleSelectorProperty;
end;

class function TItemsControl.get_ItemContainerTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemContainerTransitionsProperty;
end;

class function TItemsControl.get_GroupStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupStyleSelectorProperty;
end;

class function TItemsControl.get_IsGroupingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupingProperty;
end;

class function TItemsControl.GetItemsOwner(element: IDependencyObject): IItemsControl;
begin
  Result := Statics.GetItemsOwner(element);
end;

class function TItemsControl.ItemsControlFromItemContainer(container: IDependencyObject): IItemsControl;
begin
  Result := Statics.ItemsControlFromItemContainer(container);
end;

// Factories for : "ItemsControl"
// Factory: "Windows.UI.Xaml.Controls.IItemsControlFactory"
// -> IItemsControlFactory

class function TItemsControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAutoSuggestBox }

class function TAutoSuggestBox.get_MaxSuggestionListHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxSuggestionListHeightProperty;
end;

class function TAutoSuggestBox.get_IsSuggestionListOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSuggestionListOpenProperty;
end;

class function TAutoSuggestBox.get_TextMemberPathProperty: IDependencyProperty;
begin
  Result := Statics.get_TextMemberPathProperty;
end;

class function TAutoSuggestBox.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TAutoSuggestBox.get_UpdateTextOnSelectProperty: IDependencyProperty;
begin
  Result := Statics.get_UpdateTextOnSelectProperty;
end;

class function TAutoSuggestBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TAutoSuggestBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TAutoSuggestBox.get_AutoMaximizeSuggestionAreaProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoMaximizeSuggestionAreaProperty;
end;

class function TAutoSuggestBox.get_TextBoxStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_TextBoxStyleProperty;
end;


class function TAutoSuggestBox.get_QueryIconProperty: IDependencyProperty;
begin
  Result := Statics2.get_QueryIconProperty;
end;


class function TAutoSuggestBox.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics3.get_LightDismissOverlayModeProperty;
end;


class function TAutoSuggestBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics4.get_DescriptionProperty;
end;


{ TAutoSuggestBoxQuerySubmittedEventArgs }

{ TAutoSuggestBoxSuggestionChosenEventArgs }

{ TAutoSuggestBoxTextChangedEventArgs }

class function TAutoSuggestBoxTextChangedEventArgs.get_ReasonProperty: IDependencyProperty;
begin
  Result := Statics.get_ReasonProperty;
end;


{ TBackClickEventArgs }

{ TIconElement }

class function TIconElement.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

// Factories for : "IconElement"
// Factory: "Windows.UI.Xaml.Controls.IIconElementFactory"
// -> IIconElementFactory


{ TBitmapIcon }

class function TBitmapIcon.get_UriSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_UriSourceProperty;
end;


class function TBitmapIcon.get_ShowAsMonochromeProperty: IDependencyProperty;
begin
  Result := Statics2.get_ShowAsMonochromeProperty;
end;

// Factories for : "BitmapIcon"
// Factory: "Windows.UI.Xaml.Controls.IBitmapIconFactory"
// -> IBitmapIconFactory

class function TBitmapIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TIconSource }

class function TIconSource.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

// Factories for : "IconSource"
// Factory: "Windows.UI.Xaml.Controls.IIconSourceFactory"
// -> IIconSourceFactory


{ TBitmapIconSource }

class function TBitmapIconSource.get_UriSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_UriSourceProperty;
end;

class function TBitmapIconSource.get_ShowAsMonochromeProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowAsMonochromeProperty;
end;

// Factories for : "BitmapIconSource"
// Factory: "Windows.UI.Xaml.Controls.IBitmapIconSourceFactory"
// -> IBitmapIconSourceFactory

class function TBitmapIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TBorder }

class function TBorder.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TBorder.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TBorder.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TBorder.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TBorder.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TBorder.get_ChildTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildTransitionsProperty;
end;


class function TBorder.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics2.get_BackgroundSizingProperty;
end;


{ TCalendarDatePicker }

class function TCalendarDatePicker.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

class function TCalendarDatePicker.get_IsCalendarOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCalendarOpenProperty;
end;

class function TCalendarDatePicker.get_DateFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DateFormatProperty;
end;

class function TCalendarDatePicker.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TCalendarDatePicker.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TCalendarDatePicker.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TCalendarDatePicker.get_CalendarViewStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarViewStyleProperty;
end;

class function TCalendarDatePicker.get_MinDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MinDateProperty;
end;

class function TCalendarDatePicker.get_MaxDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxDateProperty;
end;

class function TCalendarDatePicker.get_IsTodayHighlightedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTodayHighlightedProperty;
end;

class function TCalendarDatePicker.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TCalendarDatePicker.get_FirstDayOfWeekProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstDayOfWeekProperty;
end;

class function TCalendarDatePicker.get_DayOfWeekFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DayOfWeekFormatProperty;
end;

class function TCalendarDatePicker.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TCalendarDatePicker.get_IsOutOfScopeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOutOfScopeEnabledProperty;
end;

class function TCalendarDatePicker.get_IsGroupLabelVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupLabelVisibleProperty;
end;


class function TCalendarDatePicker.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_LightDismissOverlayModeProperty;
end;


class function TCalendarDatePicker.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics3.get_DescriptionProperty;
end;

// Factories for : "CalendarDatePicker"
// Factory: "Windows.UI.Xaml.Controls.ICalendarDatePickerFactory"
// -> ICalendarDatePickerFactory

class function TCalendarDatePicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarDatePicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCalendarView }

class function TCalendarView.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TCalendarView.get_DayOfWeekFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DayOfWeekFormatProperty;
end;

class function TCalendarView.get_IsGroupLabelVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupLabelVisibleProperty;
end;

class function TCalendarView.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TCalendarView.get_FirstDayOfWeekProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstDayOfWeekProperty;
end;

class function TCalendarView.get_IsOutOfScopeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOutOfScopeEnabledProperty;
end;

class function TCalendarView.get_IsTodayHighlightedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTodayHighlightedProperty;
end;

class function TCalendarView.get_MaxDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxDateProperty;
end;

class function TCalendarView.get_MinDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MinDateProperty;
end;

class function TCalendarView.get_NumberOfWeeksInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_NumberOfWeeksInViewProperty;
end;

class function TCalendarView.get_SelectedDatesProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedDatesProperty;
end;

class function TCalendarView.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;

class function TCalendarView.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;

class function TCalendarView.get_FocusBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusBorderBrushProperty;
end;

class function TCalendarView.get_SelectedHoverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedHoverBorderBrushProperty;
end;

class function TCalendarView.get_SelectedPressedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPressedBorderBrushProperty;
end;

class function TCalendarView.get_SelectedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBorderBrushProperty;
end;

class function TCalendarView.get_HoverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_HoverBorderBrushProperty;
end;

class function TCalendarView.get_PressedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_PressedBorderBrushProperty;
end;

class function TCalendarView.get_CalendarItemBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemBorderBrushProperty;
end;

class function TCalendarView.get_OutOfScopeBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_OutOfScopeBackgroundProperty;
end;

class function TCalendarView.get_CalendarItemBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemBackgroundProperty;
end;

class function TCalendarView.get_PressedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PressedForegroundProperty;
end;

class function TCalendarView.get_TodayForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayForegroundProperty;
end;

class function TCalendarView.get_BlackoutForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BlackoutForegroundProperty;
end;

class function TCalendarView.get_SelectedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedForegroundProperty;
end;

class function TCalendarView.get_OutOfScopeForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_OutOfScopeForegroundProperty;
end;

class function TCalendarView.get_CalendarItemForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemForegroundProperty;
end;

class function TCalendarView.get_DayItemFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontFamilyProperty;
end;

class function TCalendarView.get_DayItemFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontSizeProperty;
end;

class function TCalendarView.get_DayItemFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontStyleProperty;
end;

class function TCalendarView.get_DayItemFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontWeightProperty;
end;

class function TCalendarView.get_TodayFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayFontWeightProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontFamilyProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontSizeProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontStyleProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontWeightProperty;
end;

class function TCalendarView.get_MonthYearItemFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontFamilyProperty;
end;

class function TCalendarView.get_MonthYearItemFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontSizeProperty;
end;

class function TCalendarView.get_MonthYearItemFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontStyleProperty;
end;

class function TCalendarView.get_MonthYearItemFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontWeightProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontFamilyProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontSizeProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontStyleProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontWeightProperty;
end;

class function TCalendarView.get_HorizontalDayItemAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalDayItemAlignmentProperty;
end;

class function TCalendarView.get_VerticalDayItemAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalDayItemAlignmentProperty;
end;

class function TCalendarView.get_HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalFirstOfMonthLabelAlignmentProperty;
end;

class function TCalendarView.get_VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalFirstOfMonthLabelAlignmentProperty;
end;

class function TCalendarView.get_CalendarItemBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemBorderThicknessProperty;
end;

class function TCalendarView.get_CalendarViewDayItemStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarViewDayItemStyleProperty;
end;

// Factories for : "CalendarView"
// Factory: "Windows.UI.Xaml.Controls.ICalendarViewFactory"
// -> ICalendarViewFactory

class function TCalendarView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCalendarViewDayItem }

class function TCalendarViewDayItem.get_IsBlackoutProperty: IDependencyProperty;
begin
  Result := Statics.get_IsBlackoutProperty;
end;

class function TCalendarViewDayItem.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

// Factories for : "CalendarViewDayItem"
// Factory: "Windows.UI.Xaml.Controls.ICalendarViewDayItemFactory"
// -> ICalendarViewDayItemFactory

class function TCalendarViewDayItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarViewDayItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPanel }

class function TPanel.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TPanel.get_IsItemsHostProperty: IDependencyProperty;
begin
  Result := Statics.get_IsItemsHostProperty;
end;

class function TPanel.get_ChildrenTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildrenTransitionsProperty;
end;

// Factories for : "Panel"
// Factory: "Windows.UI.Xaml.Controls.IPanelFactory"
// -> IPanelFactory

class function TPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCanvas }

class function TCanvas.get_LeftProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftProperty;
end;

class function TCanvas.GetLeft(element: IUIElement): Double;
begin
  Result := Statics.GetLeft(element);
end;

class procedure TCanvas.SetLeft(element: IUIElement; length: Double);
begin
  Statics.SetLeft(element, length);
end;

class function TCanvas.get_TopProperty: IDependencyProperty;
begin
  Result := Statics.get_TopProperty;
end;

class function TCanvas.GetTop(element: IUIElement): Double;
begin
  Result := Statics.GetTop(element);
end;

class procedure TCanvas.SetTop(element: IUIElement; length: Double);
begin
  Statics.SetTop(element, length);
end;

class function TCanvas.get_ZIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_ZIndexProperty;
end;

class function TCanvas.GetZIndex(element: IUIElement): Integer;
begin
  Result := Statics.GetZIndex(element);
end;

class procedure TCanvas.SetZIndex(element: IUIElement; value: Integer);
begin
  Statics.SetZIndex(element, value);
end;

// Factories for : "Canvas"
// Factory: "Windows.UI.Xaml.Controls.ICanvasFactory"
// -> ICanvasFactory

class function TCanvas.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICanvas;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCaptureElement }

class function TCaptureElement.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TCaptureElement.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;


{ TCheckBox }
// Factories for : "CheckBox"
// Factory: "Windows.UI.Xaml.Controls.ICheckBoxFactory"
// -> ICheckBoxFactory

class function TCheckBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICheckBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TChoosingGroupHeaderContainerEventArgs }

{ TChoosingItemContainerEventArgs }

{ TColorPicker }

class function TColorPicker.get_ColorProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorProperty;
end;

class function TColorPicker.get_PreviousColorProperty: IDependencyProperty;
begin
  Result := Statics.get_PreviousColorProperty;
end;

class function TColorPicker.get_IsAlphaEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAlphaEnabledProperty;
end;

class function TColorPicker.get_IsColorSpectrumVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorSpectrumVisibleProperty;
end;

class function TColorPicker.get_IsColorPreviewVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorPreviewVisibleProperty;
end;

class function TColorPicker.get_IsColorSliderVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorSliderVisibleProperty;
end;

class function TColorPicker.get_IsAlphaSliderVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAlphaSliderVisibleProperty;
end;

class function TColorPicker.get_IsMoreButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsMoreButtonVisibleProperty;
end;

class function TColorPicker.get_IsColorChannelTextInputVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorChannelTextInputVisibleProperty;
end;

class function TColorPicker.get_IsAlphaTextInputVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAlphaTextInputVisibleProperty;
end;

class function TColorPicker.get_IsHexInputVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHexInputVisibleProperty;
end;

class function TColorPicker.get_MinHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinHueProperty;
end;

class function TColorPicker.get_MaxHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHueProperty;
end;

class function TColorPicker.get_MinSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MinSaturationProperty;
end;

class function TColorPicker.get_MaxSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxSaturationProperty;
end;

class function TColorPicker.get_MinValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinValueProperty;
end;

class function TColorPicker.get_MaxValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxValueProperty;
end;

class function TColorPicker.get_ColorSpectrumShapeProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorSpectrumShapeProperty;
end;

class function TColorPicker.get_ColorSpectrumComponentsProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorSpectrumComponentsProperty;
end;

// Factories for : "ColorPicker"
// Factory: "Windows.UI.Xaml.Controls.IColorPickerFactory"
// -> IColorPickerFactory

class function TColorPicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IColorPicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TColumnDefinition }

class function TColumnDefinition.get_WidthProperty: IDependencyProperty;
begin
  Result := Statics.get_WidthProperty;
end;

class function TColumnDefinition.get_MaxWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxWidthProperty;
end;

class function TColumnDefinition.get_MinWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MinWidthProperty;
end;


{ TPrimitives_Selector }

class function TPrimitives_Selector.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TPrimitives_Selector.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TPrimitives_Selector.get_SelectedValueProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValueProperty;
end;

class function TPrimitives_Selector.get_SelectedValuePathProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValuePathProperty;
end;

class function TPrimitives_Selector.get_IsSynchronizedWithCurrentItemProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSynchronizedWithCurrentItemProperty;
end;

class function TPrimitives_Selector.GetIsSelectionActive(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsSelectionActive(element);
end;

// Factories for : "Primitives_Selector"
// Factory: "Windows.UI.Xaml.Controls.Primitives.ISelectorFactory"
// -> Primitives_ISelectorFactory


{ TComboBox }

class function TComboBox.get_IsDropDownOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDropDownOpenProperty;
end;

class function TComboBox.get_MaxDropDownHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxDropDownHeightProperty;
end;


class function TComboBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderProperty;
end;

class function TComboBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderTemplateProperty;
end;

class function TComboBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics2.get_PlaceholderTextProperty;
end;


class function TComboBox.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics3.get_LightDismissOverlayModeProperty;
end;

class function TComboBox.get_IsTextSearchEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsTextSearchEnabledProperty;
end;


class function TComboBox.get_SelectionChangedTriggerProperty: IDependencyProperty;
begin
  Result := Statics4.get_SelectionChangedTriggerProperty;
end;


class function TComboBox.get_PlaceholderForegroundProperty: IDependencyProperty;
begin
  Result := Statics5.get_PlaceholderForegroundProperty;
end;


class function TComboBox.get_IsEditableProperty: IDependencyProperty;
begin
  Result := Statics6.get_IsEditableProperty;
end;

class function TComboBox.get_TextProperty: IDependencyProperty;
begin
  Result := Statics6.get_TextProperty;
end;

class function TComboBox.get_TextBoxStyleProperty: IDependencyProperty;
begin
  Result := Statics6.get_TextBoxStyleProperty;
end;

class function TComboBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics6.get_DescriptionProperty;
end;

// Factories for : "ComboBox"
// Factory: "Windows.UI.Xaml.Controls.IComboBoxFactory"
// -> IComboBoxFactory

class function TComboBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_SelectorItem }

class function TPrimitives_SelectorItem.get_IsSelectedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSelectedProperty;
end;

// Factories for : "Primitives_SelectorItem"
// Factory: "Windows.UI.Xaml.Controls.Primitives.ISelectorItemFactory"
// -> Primitives_ISelectorItemFactory

class function TPrimitives_SelectorItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ISelectorItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TComboBoxItem }
// Factories for : "ComboBoxItem"
// Factory: "Windows.UI.Xaml.Controls.IComboBoxItemFactory"
// -> IComboBoxItemFactory

class function TComboBoxItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBoxItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCommandBar }

class function TCommandBar.get_PrimaryCommandsProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryCommandsProperty;
end;

class function TCommandBar.get_SecondaryCommandsProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryCommandsProperty;
end;


class function TCommandBar.get_CommandBarOverflowPresenterStyleProperty: IDependencyProperty;
begin
  Result := Statics2.get_CommandBarOverflowPresenterStyleProperty;
end;


class function TCommandBar.get_DefaultLabelPositionProperty: IDependencyProperty;
begin
  Result := Statics3.get_DefaultLabelPositionProperty;
end;

class function TCommandBar.get_OverflowButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics3.get_OverflowButtonVisibilityProperty;
end;

class function TCommandBar.get_IsDynamicOverflowEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsDynamicOverflowEnabledProperty;
end;

// Factories for : "CommandBar"
// Factory: "Windows.UI.Xaml.Controls.ICommandBarFactory"
// -> ICommandBarFactory

class function TCommandBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_FlyoutBase }

class function TPrimitives_FlyoutBase.get_PlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementProperty;
end;

class function TPrimitives_FlyoutBase.get_AttachedFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_AttachedFlyoutProperty;
end;

class function TPrimitives_FlyoutBase.GetAttachedFlyout(element: IFrameworkElement): Primitives_IFlyoutBase;
begin
  Result := Statics.GetAttachedFlyout(element);
end;

class procedure TPrimitives_FlyoutBase.SetAttachedFlyout(element: IFrameworkElement; value: Primitives_IFlyoutBase);
begin
  Statics.SetAttachedFlyout(element, value);
end;

class procedure TPrimitives_FlyoutBase.ShowAttachedFlyout(flyoutOwner: IFrameworkElement);
begin
  Statics.ShowAttachedFlyout(flyoutOwner);
end;


class function TPrimitives_FlyoutBase.get_AllowFocusOnInteractionProperty: IDependencyProperty;
begin
  Result := Statics2.get_AllowFocusOnInteractionProperty;
end;

class function TPrimitives_FlyoutBase.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_LightDismissOverlayModeProperty;
end;

class function TPrimitives_FlyoutBase.get_AllowFocusWhenDisabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_AllowFocusWhenDisabledProperty;
end;

class function TPrimitives_FlyoutBase.get_ElementSoundModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_ElementSoundModeProperty;
end;


class function TPrimitives_FlyoutBase.get_OverlayInputPassThroughElementProperty: IDependencyProperty;
begin
  Result := Statics3.get_OverlayInputPassThroughElementProperty;
end;


class function TPrimitives_FlyoutBase.get_TargetProperty: IDependencyProperty;
begin
  Result := Statics4.get_TargetProperty;
end;

class function TPrimitives_FlyoutBase.get_ShowModeProperty: IDependencyProperty;
begin
  Result := Statics4.get_ShowModeProperty;
end;

class function TPrimitives_FlyoutBase.get_InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty;
begin
  Result := Statics4.get_InputDevicePrefersPrimaryCommandsProperty;
end;

class function TPrimitives_FlyoutBase.get_AreOpenCloseAnimationsEnabledProperty: IDependencyProperty;
begin
  Result := Statics4.get_AreOpenCloseAnimationsEnabledProperty;
end;

class function TPrimitives_FlyoutBase.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics4.get_IsOpenProperty;
end;


class function TPrimitives_FlyoutBase.get_ShouldConstrainToRootBoundsProperty: IDependencyProperty;
begin
  Result := Statics5.get_ShouldConstrainToRootBoundsProperty;
end;

// Factories for : "Primitives_FlyoutBase"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory"
// -> Primitives_IFlyoutBaseFactory

class function TPrimitives_FlyoutBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCommandBarFlyout }
// Factories for : "CommandBarFlyout"
// Factory: "Windows.UI.Xaml.Controls.ICommandBarFlyoutFactory"
// -> ICommandBarFlyoutFactory

class function TCommandBarFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCommandBarOverflowPresenter }
// Factories for : "CommandBarOverflowPresenter"
// Factory: "Windows.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory"
// -> ICommandBarOverflowPresenterFactory

class function TCommandBarOverflowPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarOverflowPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TContainerContentChangingEventArgs }

{ TContentDialog }

class function TContentDialog.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TContentDialog.get_TitleTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleTemplateProperty;
end;

class function TContentDialog.get_FullSizeDesiredProperty: IDependencyProperty;
begin
  Result := Statics.get_FullSizeDesiredProperty;
end;

class function TContentDialog.get_PrimaryButtonTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryButtonTextProperty;
end;

class function TContentDialog.get_SecondaryButtonTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryButtonTextProperty;
end;

class function TContentDialog.get_PrimaryButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryButtonCommandProperty;
end;

class function TContentDialog.get_SecondaryButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryButtonCommandProperty;
end;

class function TContentDialog.get_PrimaryButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryButtonCommandParameterProperty;
end;

class function TContentDialog.get_SecondaryButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryButtonCommandParameterProperty;
end;

class function TContentDialog.get_IsPrimaryButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPrimaryButtonEnabledProperty;
end;

class function TContentDialog.get_IsSecondaryButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSecondaryButtonEnabledProperty;
end;


class function TContentDialog.get_CloseButtonTextProperty: IDependencyProperty;
begin
  Result := Statics2.get_CloseButtonTextProperty;
end;

class function TContentDialog.get_CloseButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics2.get_CloseButtonCommandProperty;
end;

class function TContentDialog.get_CloseButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics2.get_CloseButtonCommandParameterProperty;
end;

class function TContentDialog.get_PrimaryButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics2.get_PrimaryButtonStyleProperty;
end;

class function TContentDialog.get_SecondaryButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics2.get_SecondaryButtonStyleProperty;
end;

class function TContentDialog.get_CloseButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics2.get_CloseButtonStyleProperty;
end;

class function TContentDialog.get_DefaultButtonProperty: IDependencyProperty;
begin
  Result := Statics2.get_DefaultButtonProperty;
end;

// Factories for : "ContentDialog"
// Factory: "Windows.UI.Xaml.Controls.IContentDialogFactory"
// -> IContentDialogFactory

class function TContentDialog.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentDialog;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TContentPresenter }

class function TContentPresenter.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TContentPresenter.get_ContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateProperty;
end;

class function TContentPresenter.get_ContentTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateSelectorProperty;
end;

class function TContentPresenter.get_ContentTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTransitionsProperty;
end;

class function TContentPresenter.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TContentPresenter.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TContentPresenter.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TContentPresenter.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TContentPresenter.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TContentPresenter.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TContentPresenter.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;


class function TContentPresenter.get_OpticalMarginAlignmentProperty: IDependencyProperty;
begin
  Result := Statics2.get_OpticalMarginAlignmentProperty;
end;

class function TContentPresenter.get_TextLineBoundsProperty: IDependencyProperty;
begin
  Result := Statics2.get_TextLineBoundsProperty;
end;


class function TContentPresenter.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsTextScaleFactorEnabledProperty;
end;


class function TContentPresenter.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics4.get_TextWrappingProperty;
end;

class function TContentPresenter.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics4.get_MaxLinesProperty;
end;

class function TContentPresenter.get_LineStackingStrategyProperty: IDependencyProperty;
begin
  Result := Statics4.get_LineStackingStrategyProperty;
end;

class function TContentPresenter.get_LineHeightProperty: IDependencyProperty;
begin
  Result := Statics4.get_LineHeightProperty;
end;

class function TContentPresenter.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics4.get_BorderBrushProperty;
end;

class function TContentPresenter.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics4.get_BorderThicknessProperty;
end;

class function TContentPresenter.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics4.get_CornerRadiusProperty;
end;

class function TContentPresenter.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics4.get_PaddingProperty;
end;

class function TContentPresenter.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics4.get_BackgroundProperty;
end;

class function TContentPresenter.get_HorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics4.get_HorizontalContentAlignmentProperty;
end;

class function TContentPresenter.get_VerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics4.get_VerticalContentAlignmentProperty;
end;


class function TContentPresenter.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics5.get_BackgroundSizingProperty;
end;

// Factories for : "ContentPresenter"
// Factory: "Windows.UI.Xaml.Controls.IContentPresenterFactory"
// -> IContentPresenterFactory

class function TContentPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TControlTemplate }

{ TDataTemplateSelector }
// Factories for : "DataTemplateSelector"
// Factory: "Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory"
// -> IDataTemplateSelectorFactory

class function TDataTemplateSelector.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDataTemplateSelector;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TDatePickedEventArgs }

{ TDatePicker }

class function TDatePicker.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TDatePicker.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TDatePicker.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TDatePicker.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

class function TDatePicker.get_DayVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_DayVisibleProperty;
end;

class function TDatePicker.get_MonthVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthVisibleProperty;
end;

class function TDatePicker.get_YearVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_YearVisibleProperty;
end;

class function TDatePicker.get_DayFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DayFormatProperty;
end;

class function TDatePicker.get_MonthFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthFormatProperty;
end;

class function TDatePicker.get_YearFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_YearFormatProperty;
end;

class function TDatePicker.get_MinYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MinYearProperty;
end;

class function TDatePicker.get_MaxYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxYearProperty;
end;

class function TDatePicker.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;


class function TDatePicker.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_LightDismissOverlayModeProperty;
end;


class function TDatePicker.get_SelectedDateProperty: IDependencyProperty;
begin
  Result := Statics3.get_SelectedDateProperty;
end;

// Factories for : "DatePicker"
// Factory: "Windows.UI.Xaml.Controls.IDatePickerFactory"
// -> IDatePickerFactory

class function TDatePicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDatePicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_PickerFlyoutBase }

class function TPrimitives_PickerFlyoutBase.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TPrimitives_PickerFlyoutBase.GetTitle(element: IDependencyObject): HSTRING;
begin
  Result := Statics.GetTitle(element);
end;

class procedure TPrimitives_PickerFlyoutBase.SetTitle(element: IDependencyObject; value: HSTRING);
begin
  Statics.SetTitle(element, value);
end;

// Factories for : "Primitives_PickerFlyoutBase"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory"
// -> Primitives_IPickerFlyoutBaseFactory

class function TPrimitives_PickerFlyoutBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPickerFlyoutBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TDatePickerFlyout }

class function TDatePickerFlyout.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TDatePickerFlyout.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

class function TDatePickerFlyout.get_DayVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_DayVisibleProperty;
end;

class function TDatePickerFlyout.get_MonthVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthVisibleProperty;
end;

class function TDatePickerFlyout.get_YearVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_YearVisibleProperty;
end;

class function TDatePickerFlyout.get_MinYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MinYearProperty;
end;

class function TDatePickerFlyout.get_MaxYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxYearProperty;
end;


class function TDatePickerFlyout.get_DayFormatProperty: IDependencyProperty;
begin
  Result := Statics2.get_DayFormatProperty;
end;

class function TDatePickerFlyout.get_MonthFormatProperty: IDependencyProperty;
begin
  Result := Statics2.get_MonthFormatProperty;
end;

class function TDatePickerFlyout.get_YearFormatProperty: IDependencyProperty;
begin
  Result := Statics2.get_YearFormatProperty;
end;


{ TDatePickerFlyoutItem }

class function TDatePickerFlyoutItem.get_PrimaryTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryTextProperty;
end;

class function TDatePickerFlyoutItem.get_SecondaryTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryTextProperty;
end;


{ TDatePickerFlyoutPresenter }

class function TDatePickerFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;


{ TDragItemsStartingEventArgs }

{ TDropDownButton }
// Factories for : "DropDownButton"
// Factory: "Windows.UI.Xaml.Controls.IDropDownButtonFactory"
// -> IDropDownButtonFactory

class function TDropDownButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TDropDownButtonAutomationPeer }
// Factories for : "DropDownButtonAutomationPeer"
// Factory: "Windows.UI.Xaml.Controls.IDropDownButtonAutomationPeerFactory"
// -> IDropDownButtonAutomationPeerFactory

class function TDropDownButtonAutomationPeer.CreateInstance(owner: IDropDownButton; baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButtonAutomationPeer;
begin
  Result := Factory.CreateInstance(owner, baseInterface, innerInterface);
end;


{ TDynamicOverflowItemsChangingEventArgs }

{ TFlipView }

class function TFlipView.get_UseTouchAnimationsForAllNavigationProperty: IDependencyProperty;
begin
  Result := Statics.get_UseTouchAnimationsForAllNavigationProperty;
end;

// Factories for : "FlipView"
// Factory: "Windows.UI.Xaml.Controls.IFlipViewFactory"
// -> IFlipViewFactory

class function TFlipView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFlipViewItem }
// Factories for : "FlipViewItem"
// Factory: "Windows.UI.Xaml.Controls.IFlipViewItemFactory"
// -> IFlipViewItemFactory

class function TFlipViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFlyout }

class function TFlyout.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TFlyout.get_FlyoutPresenterStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FlyoutPresenterStyleProperty;
end;

// Factories for : "Flyout"
// Factory: "Windows.UI.Xaml.Controls.IFlyoutFactory"
// -> IFlyoutFactory

class function TFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFlyoutPresenter }

class function TFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;

// Factories for : "FlyoutPresenter"
// Factory: "Windows.UI.Xaml.Controls.IFlyoutPresenterFactory"
// -> IFlyoutPresenterFactory

class function TFlyoutPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyoutPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFontIcon }

class function TFontIcon.get_GlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphProperty;
end;

class function TFontIcon.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TFontIcon.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TFontIcon.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TFontIcon.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;


class function TFontIcon.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsTextScaleFactorEnabledProperty;
end;


class function TFontIcon.get_MirroredWhenRightToLeftProperty: IDependencyProperty;
begin
  Result := Statics3.get_MirroredWhenRightToLeftProperty;
end;

// Factories for : "FontIcon"
// Factory: "Windows.UI.Xaml.Controls.IFontIconFactory"
// -> IFontIconFactory

class function TFontIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFontIconSource }

class function TFontIconSource.get_GlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphProperty;
end;

class function TFontIconSource.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TFontIconSource.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TFontIconSource.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TFontIconSource.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TFontIconSource.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextScaleFactorEnabledProperty;
end;

class function TFontIconSource.get_MirroredWhenRightToLeftProperty: IDependencyProperty;
begin
  Result := Statics.get_MirroredWhenRightToLeftProperty;
end;

// Factories for : "FontIconSource"
// Factory: "Windows.UI.Xaml.Controls.IFontIconSourceFactory"
// -> IFontIconSourceFactory

class function TFontIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFrame }

class function TFrame.get_CacheSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_CacheSizeProperty;
end;

class function TFrame.get_CanGoBackProperty: IDependencyProperty;
begin
  Result := Statics.get_CanGoBackProperty;
end;

class function TFrame.get_CanGoForwardProperty: IDependencyProperty;
begin
  Result := Statics.get_CanGoForwardProperty;
end;

class function TFrame.get_CurrentSourcePageTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_CurrentSourcePageTypeProperty;
end;

class function TFrame.get_SourcePageTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_SourcePageTypeProperty;
end;

class function TFrame.get_BackStackDepthProperty: IDependencyProperty;
begin
  Result := Statics.get_BackStackDepthProperty;
end;


class function TFrame.get_BackStackProperty: IDependencyProperty;
begin
  Result := Statics2.get_BackStackProperty;
end;

class function TFrame.get_ForwardStackProperty: IDependencyProperty;
begin
  Result := Statics2.get_ForwardStackProperty;
end;


class function TFrame.get_IsNavigationStackEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsNavigationStackEnabledProperty;
end;

// Factories for : "Frame"
// Factory: "Windows.UI.Xaml.Controls.IFrameFactory"
// -> IFrameFactory

class function TFrame.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFrame;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGrid }

class function TGrid.get_RowProperty: IDependencyProperty;
begin
  Result := Statics.get_RowProperty;
end;

class function TGrid.GetRow(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetRow(element);
end;

class procedure TGrid.SetRow(element: IFrameworkElement; value: Integer);
begin
  Statics.SetRow(element, value);
end;

class function TGrid.get_ColumnProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnProperty;
end;

class function TGrid.GetColumn(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetColumn(element);
end;

class procedure TGrid.SetColumn(element: IFrameworkElement; value: Integer);
begin
  Statics.SetColumn(element, value);
end;

class function TGrid.get_RowSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_RowSpanProperty;
end;

class function TGrid.GetRowSpan(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetRowSpan(element);
end;

class procedure TGrid.SetRowSpan(element: IFrameworkElement; value: Integer);
begin
  Statics.SetRowSpan(element, value);
end;

class function TGrid.get_ColumnSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnSpanProperty;
end;

class function TGrid.GetColumnSpan(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetColumnSpan(element);
end;

class procedure TGrid.SetColumnSpan(element: IFrameworkElement; value: Integer);
begin
  Statics.SetColumnSpan(element, value);
end;


class function TGrid.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics2.get_BorderBrushProperty;
end;

class function TGrid.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics2.get_BorderThicknessProperty;
end;

class function TGrid.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics2.get_CornerRadiusProperty;
end;

class function TGrid.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics2.get_PaddingProperty;
end;


class function TGrid.get_RowSpacingProperty: IDependencyProperty;
begin
  Result := Statics3.get_RowSpacingProperty;
end;

class function TGrid.get_ColumnSpacingProperty: IDependencyProperty;
begin
  Result := Statics3.get_ColumnSpacingProperty;
end;


class function TGrid.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics4.get_BackgroundSizingProperty;
end;

// Factories for : "Grid"
// Factory: "Windows.UI.Xaml.Controls.IGridFactory"
// -> IGridFactory

class function TGrid.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGrid;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewBase }

class function TListViewBase.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;

class function TListViewBase.get_IsSwipeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSwipeEnabledProperty;
end;

class function TListViewBase.get_CanDragItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanDragItemsProperty;
end;

class function TListViewBase.get_CanReorderItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanReorderItemsProperty;
end;

class function TListViewBase.get_IsItemClickEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsItemClickEnabledProperty;
end;

class function TListViewBase.get_DataFetchSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_DataFetchSizeProperty;
end;

class function TListViewBase.get_IncrementalLoadingThresholdProperty: IDependencyProperty;
begin
  Result := Statics.get_IncrementalLoadingThresholdProperty;
end;

class function TListViewBase.get_IncrementalLoadingTriggerProperty: IDependencyProperty;
begin
  Result := Statics.get_IncrementalLoadingTriggerProperty;
end;

class function TListViewBase.get_SemanticZoomOwnerProperty: IDependencyProperty;
begin
  Result := Statics.get_SemanticZoomOwnerProperty;
end;

class function TListViewBase.get_IsActiveViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsActiveViewProperty;
end;

class function TListViewBase.get_IsZoomedInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomedInViewProperty;
end;

class function TListViewBase.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TListViewBase.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TListViewBase.get_HeaderTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTransitionsProperty;
end;


class function TListViewBase.get_ShowsScrollingPlaceholdersProperty: IDependencyProperty;
begin
  Result := Statics2.get_ShowsScrollingPlaceholdersProperty;
end;

class function TListViewBase.get_FooterProperty: IDependencyProperty;
begin
  Result := Statics2.get_FooterProperty;
end;

class function TListViewBase.get_FooterTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_FooterTemplateProperty;
end;

class function TListViewBase.get_FooterTransitionsProperty: IDependencyProperty;
begin
  Result := Statics2.get_FooterTransitionsProperty;
end;


class function TListViewBase.get_ReorderModeProperty: IDependencyProperty;
begin
  Result := Statics3.get_ReorderModeProperty;
end;


class function TListViewBase.get_IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty;
begin
  Result := Statics4.get_IsMultiSelectCheckBoxEnabledProperty;
end;


class function TListViewBase.get_SingleSelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics5.get_SingleSelectionFollowsFocusProperty;
end;

// Factories for : "ListViewBase"
// Factory: "Windows.UI.Xaml.Controls.IListViewBaseFactory"
// -> IListViewBaseFactory

class function TListViewBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGridView }
// Factories for : "GridView"
// Factory: "Windows.UI.Xaml.Controls.IGridViewFactory"
// -> IGridViewFactory

class function TGridView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewBaseHeaderItem }
// Factories for : "ListViewBaseHeaderItem"
// Factory: "Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory"
// -> IListViewBaseHeaderItemFactory


{ TGridViewHeaderItem }
// Factories for : "GridViewHeaderItem"
// Factory: "Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory"
// -> IGridViewHeaderItemFactory

class function TGridViewHeaderItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewHeaderItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGridViewItem }
// Factories for : "GridViewItem"
// Factory: "Windows.UI.Xaml.Controls.IGridViewItemFactory"
// -> IGridViewItemFactory

class function TGridViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGroupItem }
// Factories for : "GroupItem"
// Factory: "Windows.UI.Xaml.Controls.IGroupItemFactory"
// -> IGroupItemFactory

class function TGroupItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGroupStyle }
// Factories for : "GroupStyle"
// Factory: "Windows.UI.Xaml.Controls.IGroupStyleFactory"
// -> IGroupStyleFactory

class function TGroupStyle.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyle;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGroupStyleSelector }
// Factories for : "GroupStyleSelector"
// Factory: "Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory"
// -> IGroupStyleSelectorFactory

class function TGroupStyleSelector.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyleSelector;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ THandwritingView }

class function THandwritingView.get_PlacementTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementTargetProperty;
end;

class function THandwritingView.get_PlacementAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementAlignmentProperty;
end;

class function THandwritingView.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function THandwritingView.get_AreCandidatesEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_AreCandidatesEnabledProperty;
end;

// Factories for : "HandwritingView"
// Factory: "Windows.UI.Xaml.Controls.IHandwritingViewFactory"
// -> IHandwritingViewFactory

class function THandwritingView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHandwritingView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ THub }

class function THub.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function THub.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function THub.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function THub.get_DefaultSectionIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultSectionIndexProperty;
end;

class function THub.get_SemanticZoomOwnerProperty: IDependencyProperty;
begin
  Result := Statics.get_SemanticZoomOwnerProperty;
end;

class function THub.get_IsActiveViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsActiveViewProperty;
end;

class function THub.get_IsZoomedInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomedInViewProperty;
end;

// Factories for : "Hub"
// Factory: "Windows.UI.Xaml.Controls.IHubFactory"
// -> IHubFactory

class function THub.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHub;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ THubSection }

class function THubSection.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function THubSection.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function THubSection.get_ContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateProperty;
end;

class function THubSection.get_IsHeaderInteractiveProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHeaderInteractiveProperty;
end;

// Factories for : "HubSection"
// Factory: "Windows.UI.Xaml.Controls.IHubSectionFactory"
// -> IHubSectionFactory

class function THubSection.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHubSection;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ THubSectionHeaderClickEventArgs }

{ THyperlinkButton }

class function THyperlinkButton.get_NavigateUriProperty: IDependencyProperty;
begin
  Result := Statics.get_NavigateUriProperty;
end;

// Factories for : "HyperlinkButton"
// Factory: "Windows.UI.Xaml.Controls.IHyperlinkButtonFactory"
// -> IHyperlinkButtonFactory

class function THyperlinkButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHyperlinkButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TIconSourceElement }

class function TIconSourceElement.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

// Factories for : "IconSourceElement"
// Factory: "Windows.UI.Xaml.Controls.IIconSourceElementFactory"
// -> IIconSourceElementFactory

class function TIconSourceElement.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IIconSourceElement;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TImage }

class function TImage.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TImage.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TImage.get_NineGridProperty: IDependencyProperty;
begin
  Result := Statics.get_NineGridProperty;
end;

class function TImage.get_PlayToSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_PlayToSourceProperty;
end;


{ TInkCanvas }
// Factories for : "InkCanvas"
// Factory: "Windows.UI.Xaml.Controls.IInkCanvasFactory"
// -> IInkCanvasFactory

class function TInkCanvas.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkCanvas;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbar }

class function TInkToolbar.get_InitialControlsProperty: IDependencyProperty;
begin
  Result := Statics.get_InitialControlsProperty;
end;

class function TInkToolbar.get_ChildrenProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildrenProperty;
end;

class function TInkToolbar.get_ActiveToolProperty: IDependencyProperty;
begin
  Result := Statics.get_ActiveToolProperty;
end;

class function TInkToolbar.get_InkDrawingAttributesProperty: IDependencyProperty;
begin
  Result := Statics.get_InkDrawingAttributesProperty;
end;

class function TInkToolbar.get_IsRulerButtonCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsRulerButtonCheckedProperty;
end;

class function TInkToolbar.get_TargetInkCanvasProperty: IDependencyProperty;
begin
  Result := Statics.get_TargetInkCanvasProperty;
end;


class function TInkToolbar.get_IsStencilButtonCheckedProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsStencilButtonCheckedProperty;
end;

class function TInkToolbar.get_ButtonFlyoutPlacementProperty: IDependencyProperty;
begin
  Result := Statics2.get_ButtonFlyoutPlacementProperty;
end;

class function TInkToolbar.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics2.get_OrientationProperty;
end;


class function TInkToolbar.get_TargetInkPresenterProperty: IDependencyProperty;
begin
  Result := Statics3.get_TargetInkPresenterProperty;
end;

// Factories for : "InkToolbar"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarFactory"
// -> IInkToolbarFactory

class function TInkToolbar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRadioButton }

class function TRadioButton.get_GroupNameProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupNameProperty;
end;

// Factories for : "RadioButton"
// Factory: "Windows.UI.Xaml.Controls.IRadioButtonFactory"
// -> IRadioButtonFactory

class function TRadioButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarToolButton }

class function TInkToolbarToolButton.get_IsExtensionGlyphShownProperty: IDependencyProperty;
begin
  Result := Statics.get_IsExtensionGlyphShownProperty;
end;

// Factories for : "InkToolbarToolButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarToolButtonFactory"
// -> IInkToolbarToolButtonFactory


{ TInkToolbarPenButton }

class function TInkToolbarPenButton.get_PaletteProperty: IDependencyProperty;
begin
  Result := Statics.get_PaletteProperty;
end;

class function TInkToolbarPenButton.get_MinStrokeWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MinStrokeWidthProperty;
end;

class function TInkToolbarPenButton.get_MaxStrokeWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxStrokeWidthProperty;
end;

class function TInkToolbarPenButton.get_SelectedBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBrushProperty;
end;

class function TInkToolbarPenButton.get_SelectedBrushIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBrushIndexProperty;
end;

class function TInkToolbarPenButton.get_SelectedStrokeWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedStrokeWidthProperty;
end;

// Factories for : "InkToolbarPenButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarPenButtonFactory"
// -> IInkToolbarPenButtonFactory


{ TInkToolbarBallpointPenButton }
// Factories for : "InkToolbarBallpointPenButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarBallpointPenButtonFactory"
// -> IInkToolbarBallpointPenButtonFactory

class function TInkToolbarBallpointPenButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarBallpointPenButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarCustomPen }
// Factories for : "InkToolbarCustomPen"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomPenFactory"
// -> IInkToolbarCustomPenFactory

class function TInkToolbarCustomPen.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomPen;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarCustomPenButton }

class function TInkToolbarCustomPenButton.get_CustomPenProperty: IDependencyProperty;
begin
  Result := Statics.get_CustomPenProperty;
end;

class function TInkToolbarCustomPenButton.get_ConfigurationContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ConfigurationContentProperty;
end;

// Factories for : "InkToolbarCustomPenButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomPenButtonFactory"
// -> IInkToolbarCustomPenButtonFactory

class function TInkToolbarCustomPenButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomPenButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarToggleButton }
// Factories for : "InkToolbarToggleButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarToggleButtonFactory"
// -> IInkToolbarToggleButtonFactory


{ TInkToolbarCustomToggleButton }
// Factories for : "InkToolbarCustomToggleButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomToggleButtonFactory"
// -> IInkToolbarCustomToggleButtonFactory

class function TInkToolbarCustomToggleButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomToggleButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarCustomToolButton }

class function TInkToolbarCustomToolButton.get_ConfigurationContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ConfigurationContentProperty;
end;

// Factories for : "InkToolbarCustomToolButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarCustomToolButtonFactory"
// -> IInkToolbarCustomToolButtonFactory

class function TInkToolbarCustomToolButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarCustomToolButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarEraserButton }

class function TInkToolbarEraserButton.get_IsClearAllVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsClearAllVisibleProperty;
end;

// Factories for : "InkToolbarEraserButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarEraserButtonFactory"
// -> IInkToolbarEraserButtonFactory

class function TInkToolbarEraserButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarEraserButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarFlyoutItem }

class function TInkToolbarFlyoutItem.get_KindProperty: IDependencyProperty;
begin
  Result := Statics.get_KindProperty;
end;

class function TInkToolbarFlyoutItem.get_IsCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCheckedProperty;
end;

// Factories for : "InkToolbarFlyoutItem"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarFlyoutItemFactory"
// -> IInkToolbarFlyoutItemFactory

class function TInkToolbarFlyoutItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarFlyoutItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarHighlighterButton }
// Factories for : "InkToolbarHighlighterButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarHighlighterButtonFactory"
// -> IInkToolbarHighlighterButtonFactory

class function TInkToolbarHighlighterButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarHighlighterButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarIsStencilButtonCheckedChangedEventArgs }

{ TInkToolbarMenuButton }

class function TInkToolbarMenuButton.get_IsExtensionGlyphShownProperty: IDependencyProperty;
begin
  Result := Statics.get_IsExtensionGlyphShownProperty;
end;

// Factories for : "InkToolbarMenuButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarMenuButtonFactory"
// -> IInkToolbarMenuButtonFactory


{ TInkToolbarPenConfigurationControl }

class function TInkToolbarPenConfigurationControl.get_PenButtonProperty: IDependencyProperty;
begin
  Result := Statics.get_PenButtonProperty;
end;

// Factories for : "InkToolbarPenConfigurationControl"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarPenConfigurationControlFactory"
// -> IInkToolbarPenConfigurationControlFactory

class function TInkToolbarPenConfigurationControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarPenConfigurationControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarPencilButton }
// Factories for : "InkToolbarPencilButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarPencilButtonFactory"
// -> IInkToolbarPencilButtonFactory

class function TInkToolbarPencilButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarPencilButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarRulerButton }

class function TInkToolbarRulerButton.get_RulerProperty: IDependencyProperty;
begin
  Result := Statics.get_RulerProperty;
end;

// Factories for : "InkToolbarRulerButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarRulerButtonFactory"
// -> IInkToolbarRulerButtonFactory

class function TInkToolbarRulerButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarRulerButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInkToolbarStencilButton }

class function TInkToolbarStencilButton.get_RulerProperty: IDependencyProperty;
begin
  Result := Statics.get_RulerProperty;
end;

class function TInkToolbarStencilButton.get_ProtractorProperty: IDependencyProperty;
begin
  Result := Statics.get_ProtractorProperty;
end;

class function TInkToolbarStencilButton.get_SelectedStencilProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedStencilProperty;
end;

class function TInkToolbarStencilButton.get_IsRulerItemVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsRulerItemVisibleProperty;
end;

class function TInkToolbarStencilButton.get_IsProtractorItemVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsProtractorItemVisibleProperty;
end;

// Factories for : "InkToolbarStencilButton"
// Factory: "Windows.UI.Xaml.Controls.IInkToolbarStencilButtonFactory"
// -> IInkToolbarStencilButtonFactory

class function TInkToolbarStencilButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInkToolbarStencilButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TItemClickEventArgs }

{ TItemsPanelTemplate }

{ TItemsPickedEventArgs }

{ TItemsPresenter }

class function TItemsPresenter.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TItemsPresenter.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TItemsPresenter.get_HeaderTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTransitionsProperty;
end;

class function TItemsPresenter.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;


class function TItemsPresenter.get_FooterProperty: IDependencyProperty;
begin
  Result := Statics2.get_FooterProperty;
end;

class function TItemsPresenter.get_FooterTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_FooterTemplateProperty;
end;

class function TItemsPresenter.get_FooterTransitionsProperty: IDependencyProperty;
begin
  Result := Statics2.get_FooterTransitionsProperty;
end;


{ TItemsStackPanel }

class function TItemsStackPanel.get_GroupPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupPaddingProperty;
end;

class function TItemsStackPanel.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TItemsStackPanel.get_GroupHeaderPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupHeaderPlacementProperty;
end;

class function TItemsStackPanel.get_CacheLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CacheLengthProperty;
end;


class function TItemsStackPanel.get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_AreStickyGroupHeadersEnabledProperty;
end;


{ TItemsWrapGrid }

class function TItemsWrapGrid.get_GroupPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupPaddingProperty;
end;

class function TItemsWrapGrid.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TItemsWrapGrid.get_MaximumRowsOrColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumRowsOrColumnsProperty;
end;

class function TItemsWrapGrid.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TItemsWrapGrid.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TItemsWrapGrid.get_GroupHeaderPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupHeaderPlacementProperty;
end;

class function TItemsWrapGrid.get_CacheLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CacheLengthProperty;
end;


class function TItemsWrapGrid.get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_AreStickyGroupHeadersEnabledProperty;
end;


{ TListBox }

class function TListBox.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;


class function TListBox.get_SingleSelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics2.get_SingleSelectionFollowsFocusProperty;
end;

// Factories for : "ListBox"
// Factory: "Windows.UI.Xaml.Controls.IListBoxFactory"
// -> IListBoxFactory

class function TListBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListBoxItem }
// Factories for : "ListBoxItem"
// Factory: "Windows.UI.Xaml.Controls.IListBoxItemFactory"
// -> IListBoxItemFactory

class function TListBoxItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBoxItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListPickerFlyout }

class function TListPickerFlyout.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TListPickerFlyout.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;

class function TListPickerFlyout.get_DisplayMemberPathProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayMemberPathProperty;
end;

class function TListPickerFlyout.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;

class function TListPickerFlyout.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TListPickerFlyout.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TListPickerFlyout.get_SelectedValueProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValueProperty;
end;

class function TListPickerFlyout.get_SelectedValuePathProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValuePathProperty;
end;


{ TListView }
// Factories for : "ListView"
// Factory: "Windows.UI.Xaml.Controls.IListViewFactory"
// -> IListViewFactory

class function TListView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewHeaderItem }
// Factories for : "ListViewHeaderItem"
// Factory: "Windows.UI.Xaml.Controls.IListViewHeaderItemFactory"
// -> IListViewHeaderItemFactory

class function TListViewHeaderItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewHeaderItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewItem }
// Factories for : "ListViewItem"
// Factory: "Windows.UI.Xaml.Controls.IListViewItemFactory"
// -> IListViewItemFactory

class function TListViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewPersistenceHelper }

class function TListViewPersistenceHelper.GetRelativeScrollPosition(listViewBase: IListViewBase; itemToKeyHandler: ListViewItemToKeyHandler): HSTRING;
begin
  Result := Statics.GetRelativeScrollPosition(listViewBase, itemToKeyHandler);
end;

class function TListViewPersistenceHelper.SetRelativeScrollPositionAsync(listViewBase: IListViewBase; relativeScrollPosition: HSTRING; keyToItemHandler: ListViewKeyToItemHandler): IAsyncAction;
begin
  Result := Statics.SetRelativeScrollPositionAsync(listViewBase, relativeScrollPosition, keyToItemHandler);
end;


{ TMaps_MapTileDataSource }
// Factories for : "Maps_MapTileDataSource"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory"
// -> Maps_IMapTileDataSourceFactory

class function TMaps_MapTileDataSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileDataSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMaps_CustomMapTileDataSource }
// Factories for : "Maps_CustomMapTileDataSource"
// Factory: "Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory"
// -> Maps_ICustomMapTileDataSourceFactory

class function TMaps_CustomMapTileDataSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ICustomMapTileDataSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMaps_HttpMapTileDataSource }
// Factories for : "Maps_HttpMapTileDataSource"
// Factory: "Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory"
// -> Maps_IHttpMapTileDataSourceFactory

class function TMaps_HttpMapTileDataSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IHttpMapTileDataSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;

class function TMaps_HttpMapTileDataSource.CreateInstanceWithUriFormatString(uriFormatString: HSTRING; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IHttpMapTileDataSource;
begin
  Result := Factory.CreateInstanceWithUriFormatString(uriFormatString, baseInterface, innerInterface);
end;


{ TMaps_LocalMapTileDataSource }
// Factories for : "Maps_LocalMapTileDataSource"
// Factory: "Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory"
// -> Maps_ILocalMapTileDataSourceFactory

class function TMaps_LocalMapTileDataSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ILocalMapTileDataSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;

class function TMaps_LocalMapTileDataSource.CreateInstanceWithUriFormatString(uriFormatString: HSTRING; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_ILocalMapTileDataSource;
begin
  Result := Factory.CreateInstanceWithUriFormatString(uriFormatString, baseInterface, innerInterface);
end;


{ TMaps_MapActualCameraChangedEventArgs }

{ TMaps_MapActualCameraChangingEventArgs }

{ TMaps_MapElement }

class function TMaps_MapElement.get_ZIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_ZIndexProperty;
end;

class function TMaps_MapElement.get_VisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_VisibleProperty;
end;


class function TMaps_MapElement.get_MapTabIndexProperty: IDependencyProperty;
begin
  Result := Statics2.get_MapTabIndexProperty;
end;


class function TMaps_MapElement.get_MapStyleSheetEntryProperty: IDependencyProperty;
begin
  Result := Statics3.get_MapStyleSheetEntryProperty;
end;

class function TMaps_MapElement.get_MapStyleSheetEntryStateProperty: IDependencyProperty;
begin
  Result := Statics3.get_MapStyleSheetEntryStateProperty;
end;

class function TMaps_MapElement.get_TagProperty: IDependencyProperty;
begin
  Result := Statics3.get_TagProperty;
end;


class function TMaps_MapElement.get_IsEnabledProperty: IDependencyProperty;
begin
  Result := Statics4.get_IsEnabledProperty;
end;

// Factories for : "Maps_MapElement"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapElementFactory"
// -> Maps_IMapElementFactory

class function TMaps_MapElement.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapElement;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMaps_MapBillboard }

class function TMaps_MapBillboard.get_LocationProperty: IDependencyProperty;
begin
  Result := Statics.get_LocationProperty;
end;

class function TMaps_MapBillboard.get_NormalizedAnchorPointProperty: IDependencyProperty;
begin
  Result := Statics.get_NormalizedAnchorPointProperty;
end;

class function TMaps_MapBillboard.get_CollisionBehaviorDesiredProperty: IDependencyProperty;
begin
  Result := Statics.get_CollisionBehaviorDesiredProperty;
end;

// Factories for : "Maps_MapBillboard"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory"
// -> Maps_IMapBillboardFactory

class function TMaps_MapBillboard.CreateInstanceFromCamera(camera: Maps_IMapCamera): Maps_IMapBillboard;
begin
  Result := Factory.CreateInstanceFromCamera(camera);
end;


{ TMaps_MapCamera }
// Factories for : "Maps_MapCamera"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapCameraFactory"
// -> Maps_IMapCameraFactory

class function TMaps_MapCamera.CreateInstanceWithLocation(location: IGeopoint): Maps_IMapCamera;
begin
  Result := Factory.CreateInstanceWithLocation(location);
end;

class function TMaps_MapCamera.CreateInstanceWithLocationAndHeading(location: IGeopoint; headingInDegrees: Double): Maps_IMapCamera;
begin
  Result := Factory.CreateInstanceWithLocationAndHeading(location, headingInDegrees);
end;

class function TMaps_MapCamera.CreateInstanceWithLocationHeadingAndPitch(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapCamera;
begin
  Result := Factory.CreateInstanceWithLocationHeadingAndPitch(location, headingInDegrees, pitchInDegrees);
end;

class function TMaps_MapCamera.CreateInstanceWithLocationHeadingPitchRollAndFieldOfView(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double; rollInDegrees: Double; fieldOfViewInDegrees: Double): Maps_IMapCamera;
begin
  Result := Factory.CreateInstanceWithLocationHeadingPitchRollAndFieldOfView(location, headingInDegrees, pitchInDegrees, rollInDegrees, fieldOfViewInDegrees);
end;


{ TMaps_MapContextRequestedEventArgs }

{ TMaps_MapControl }

class function TMaps_MapControl.get_CenterProperty: IDependencyProperty;
begin
  Result := Statics.get_CenterProperty;
end;

class function TMaps_MapControl.get_ChildrenProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildrenProperty;
end;

class function TMaps_MapControl.get_ColorSchemeProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorSchemeProperty;
end;

class function TMaps_MapControl.get_DesiredPitchProperty: IDependencyProperty;
begin
  Result := Statics.get_DesiredPitchProperty;
end;

class function TMaps_MapControl.get_HeadingProperty: IDependencyProperty;
begin
  Result := Statics.get_HeadingProperty;
end;

class function TMaps_MapControl.get_LandmarksVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_LandmarksVisibleProperty;
end;

class function TMaps_MapControl.get_LoadingStatusProperty: IDependencyProperty;
begin
  Result := Statics.get_LoadingStatusProperty;
end;

class function TMaps_MapControl.get_MapServiceTokenProperty: IDependencyProperty;
begin
  Result := Statics.get_MapServiceTokenProperty;
end;

class function TMaps_MapControl.get_PedestrianFeaturesVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_PedestrianFeaturesVisibleProperty;
end;

class function TMaps_MapControl.get_PitchProperty: IDependencyProperty;
begin
  Result := Statics.get_PitchProperty;
end;

class function TMaps_MapControl.get_StyleProperty: IDependencyProperty;
begin
  Result := Statics.get_StyleProperty;
end;

class function TMaps_MapControl.get_TrafficFlowVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_TrafficFlowVisibleProperty;
end;

class function TMaps_MapControl.get_TransformOriginProperty: IDependencyProperty;
begin
  Result := Statics.get_TransformOriginProperty;
end;

class function TMaps_MapControl.get_WatermarkModeProperty: IDependencyProperty;
begin
  Result := Statics.get_WatermarkModeProperty;
end;

class function TMaps_MapControl.get_ZoomLevelProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomLevelProperty;
end;

class function TMaps_MapControl.get_MapElementsProperty: IDependencyProperty;
begin
  Result := Statics.get_MapElementsProperty;
end;

class function TMaps_MapControl.get_RoutesProperty: IDependencyProperty;
begin
  Result := Statics.get_RoutesProperty;
end;

class function TMaps_MapControl.get_TileSourcesProperty: IDependencyProperty;
begin
  Result := Statics.get_TileSourcesProperty;
end;

class function TMaps_MapControl.get_LocationProperty: IDependencyProperty;
begin
  Result := Statics.get_LocationProperty;
end;

class function TMaps_MapControl.GetLocation(element: IDependencyObject): IGeopoint;
begin
  Result := Statics.GetLocation(element);
end;

class procedure TMaps_MapControl.SetLocation(element: IDependencyObject; value: IGeopoint);
begin
  Statics.SetLocation(element, value);
end;

class function TMaps_MapControl.get_NormalizedAnchorPointProperty: IDependencyProperty;
begin
  Result := Statics.get_NormalizedAnchorPointProperty;
end;

class function TMaps_MapControl.GetNormalizedAnchorPoint(element: IDependencyObject): TPointF;
begin
  Result := Statics.GetNormalizedAnchorPoint(element);
end;

class procedure TMaps_MapControl.SetNormalizedAnchorPoint(element: IDependencyObject; value: TPointF);
begin
  Statics.SetNormalizedAnchorPoint(element, value);
end;


class function TMaps_MapControl.get_BusinessLandmarksVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_BusinessLandmarksVisibleProperty;
end;

class function TMaps_MapControl.get_TransitFeaturesVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_TransitFeaturesVisibleProperty;
end;

class function TMaps_MapControl.get_PanInteractionModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_PanInteractionModeProperty;
end;

class function TMaps_MapControl.get_RotateInteractionModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_RotateInteractionModeProperty;
end;

class function TMaps_MapControl.get_TiltInteractionModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_TiltInteractionModeProperty;
end;

class function TMaps_MapControl.get_ZoomInteractionModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_ZoomInteractionModeProperty;
end;

class function TMaps_MapControl.get_Is3DSupportedProperty: IDependencyProperty;
begin
  Result := Statics2.get_Is3DSupportedProperty;
end;

class function TMaps_MapControl.get_IsStreetsideSupportedProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsStreetsideSupportedProperty;
end;

class function TMaps_MapControl.get_SceneProperty: IDependencyProperty;
begin
  Result := Statics2.get_SceneProperty;
end;


class function TMaps_MapControl.get_BusinessLandmarksEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_BusinessLandmarksEnabledProperty;
end;

class function TMaps_MapControl.get_TransitFeaturesEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_TransitFeaturesEnabledProperty;
end;


class function TMaps_MapControl.get_MapProjectionProperty: IDependencyProperty;
begin
  Result := Statics4.get_MapProjectionProperty;
end;

class function TMaps_MapControl.get_StyleSheetProperty: IDependencyProperty;
begin
  Result := Statics4.get_StyleSheetProperty;
end;

class function TMaps_MapControl.get_ViewPaddingProperty: IDependencyProperty;
begin
  Result := Statics4.get_ViewPaddingProperty;
end;


class function TMaps_MapControl.get_LayersProperty: IDependencyProperty;
begin
  Result := Statics5.get_LayersProperty;
end;


class function TMaps_MapControl.get_RegionProperty: IDependencyProperty;
begin
  Result := Statics6.get_RegionProperty;
end;


class function TMaps_MapControl.get_CanTiltDownProperty: IDependencyProperty;
begin
  Result := Statics7.get_CanTiltDownProperty;
end;

class function TMaps_MapControl.get_CanTiltUpProperty: IDependencyProperty;
begin
  Result := Statics7.get_CanTiltUpProperty;
end;

class function TMaps_MapControl.get_CanZoomInProperty: IDependencyProperty;
begin
  Result := Statics7.get_CanZoomInProperty;
end;

class function TMaps_MapControl.get_CanZoomOutProperty: IDependencyProperty;
begin
  Result := Statics7.get_CanZoomOutProperty;
end;


{ TMaps_MapControlBusinessLandmarkClickEventArgs }

{ TMaps_MapControlBusinessLandmarkPointerEnteredEventArgs }

{ TMaps_MapControlBusinessLandmarkPointerExitedEventArgs }

{ TMaps_MapControlBusinessLandmarkRightTappedEventArgs }

{ TMaps_MapControlDataHelper }

class function TMaps_MapControlDataHelper.CreateMapControl(rasterRenderMode: Boolean): Maps_IMapControl;
begin
  Result := Statics.CreateMapControl(rasterRenderMode);
end;

// Factories for : "Maps_MapControlDataHelper"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory"
// -> Maps_IMapControlDataHelperFactory

class function TMaps_MapControlDataHelper.CreateInstance(map: Maps_IMapControl): Maps_IMapControlDataHelper;
begin
  Result := Factory.CreateInstance(map);
end;


{ TMaps_MapControlTransitFeatureClickEventArgs }

{ TMaps_MapControlTransitFeaturePointerEnteredEventArgs }

{ TMaps_MapControlTransitFeaturePointerExitedEventArgs }

{ TMaps_MapControlTransitFeatureRightTappedEventArgs }

{ TMaps_MapCustomExperience }
// Factories for : "Maps_MapCustomExperience"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory"
// -> Maps_IMapCustomExperienceFactory

class function TMaps_MapCustomExperience.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapCustomExperience;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMaps_MapCustomExperienceChangedEventArgs }

{ TMaps_MapElement3D }

class function TMaps_MapElement3D.get_LocationProperty: IDependencyProperty;
begin
  Result := Statics.get_LocationProperty;
end;

class function TMaps_MapElement3D.get_HeadingProperty: IDependencyProperty;
begin
  Result := Statics.get_HeadingProperty;
end;

class function TMaps_MapElement3D.get_PitchProperty: IDependencyProperty;
begin
  Result := Statics.get_PitchProperty;
end;

class function TMaps_MapElement3D.get_RollProperty: IDependencyProperty;
begin
  Result := Statics.get_RollProperty;
end;

class function TMaps_MapElement3D.get_ScaleProperty: IDependencyProperty;
begin
  Result := Statics.get_ScaleProperty;
end;


{ TMaps_MapElementClickEventArgs }

{ TMaps_MapElementPointerEnteredEventArgs }

{ TMaps_MapElementPointerExitedEventArgs }

{ TMaps_MapLayer }

class function TMaps_MapLayer.get_MapTabIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_MapTabIndexProperty;
end;

class function TMaps_MapLayer.get_VisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_VisibleProperty;
end;

class function TMaps_MapLayer.get_ZIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_ZIndexProperty;
end;

// Factories for : "Maps_MapLayer"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapLayerFactory"
// -> Maps_IMapLayerFactory

class function TMaps_MapLayer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapLayer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMaps_MapElementsLayer }

class function TMaps_MapElementsLayer.get_MapElementsProperty: IDependencyProperty;
begin
  Result := Statics.get_MapElementsProperty;
end;


{ TMaps_MapElementsLayerClickEventArgs }

{ TMaps_MapElementsLayerContextRequestedEventArgs }

{ TMaps_MapElementsLayerPointerEnteredEventArgs }

{ TMaps_MapElementsLayerPointerExitedEventArgs }

{ TMaps_MapIcon }

class function TMaps_MapIcon.get_LocationProperty: IDependencyProperty;
begin
  Result := Statics.get_LocationProperty;
end;

class function TMaps_MapIcon.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TMaps_MapIcon.get_NormalizedAnchorPointProperty: IDependencyProperty;
begin
  Result := Statics.get_NormalizedAnchorPointProperty;
end;


class function TMaps_MapIcon.get_CollisionBehaviorDesiredProperty: IDependencyProperty;
begin
  Result := Statics2.get_CollisionBehaviorDesiredProperty;
end;


{ TMaps_MapInputEventArgs }

{ TMaps_MapItemsControl }

class function TMaps_MapItemsControl.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TMaps_MapItemsControl.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

class function TMaps_MapItemsControl.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;


{ TMaps_MapModel3D }

class function TMaps_MapModel3D.CreateFrom3MFAsync(source: IRandomAccessStreamReference): IAsyncOperation_1__Maps_IMapModel3D;
begin
  Result := Statics.CreateFrom3MFAsync(source);
end;

class function TMaps_MapModel3D.CreateFrom3MFAsync(source: IRandomAccessStreamReference; shadingOption: Maps_MapModel3DShadingOption): IAsyncOperation_1__Maps_IMapModel3D;
begin
  Result := Statics.CreateFrom3MFAsync(source, shadingOption);
end;

// Factories for : "Maps_MapModel3D"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory"
// -> Maps_IMapModel3DFactory

class function TMaps_MapModel3D.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapModel3D;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMaps_MapPolygon }

class function TMaps_MapPolygon.get_PathProperty: IDependencyProperty;
begin
  Result := Statics.get_PathProperty;
end;

class function TMaps_MapPolygon.get_StrokeThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_StrokeThicknessProperty;
end;

class function TMaps_MapPolygon.get_StrokeDashedProperty: IDependencyProperty;
begin
  Result := Statics.get_StrokeDashedProperty;
end;


{ TMaps_MapPolyline }

class function TMaps_MapPolyline.get_PathProperty: IDependencyProperty;
begin
  Result := Statics.get_PathProperty;
end;

class function TMaps_MapPolyline.get_StrokeDashedProperty: IDependencyProperty;
begin
  Result := Statics.get_StrokeDashedProperty;
end;


{ TMaps_MapRightTappedEventArgs }

{ TMaps_MapRouteView }
// Factories for : "Maps_MapRouteView"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory"
// -> Maps_IMapRouteViewFactory

class function TMaps_MapRouteView.CreateInstanceWithMapRoute(route: Maps_IMapRoute; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapRouteView;
begin
  Result := Factory.CreateInstanceWithMapRoute(route, baseInterface, innerInterface);
end;


{ TMaps_MapScene }

class function TMaps_MapScene.CreateFromBoundingBox(bounds: IGeoboundingBox): Maps_IMapScene;
begin
  Result := Statics.CreateFromBoundingBox(bounds);
end;

class function TMaps_MapScene.CreateFromBoundingBox(bounds: IGeoboundingBox; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene;
begin
  Result := Statics.CreateFromBoundingBox(bounds, headingInDegrees, pitchInDegrees);
end;

class function TMaps_MapScene.CreateFromCamera(camera: Maps_IMapCamera): Maps_IMapScene;
begin
  Result := Statics.CreateFromCamera(camera);
end;

class function TMaps_MapScene.CreateFromLocation(location: IGeopoint): Maps_IMapScene;
begin
  Result := Statics.CreateFromLocation(location);
end;

class function TMaps_MapScene.CreateFromLocation(location: IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene;
begin
  Result := Statics.CreateFromLocation(location, headingInDegrees, pitchInDegrees);
end;

class function TMaps_MapScene.CreateFromLocationAndRadius(location: IGeopoint; radiusInMeters: Double): Maps_IMapScene;
begin
  Result := Statics.CreateFromLocationAndRadius(location, radiusInMeters);
end;

class function TMaps_MapScene.CreateFromLocationAndRadius(location: IGeopoint; radiusInMeters: Double; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene;
begin
  Result := Statics.CreateFromLocationAndRadius(location, radiusInMeters, headingInDegrees, pitchInDegrees);
end;

class function TMaps_MapScene.CreateFromLocations(locations: IIterable_1__IGeopoint): Maps_IMapScene;
begin
  Result := Statics.CreateFromLocations(locations);
end;

class function TMaps_MapScene.CreateFromLocations(locations: IIterable_1__IGeopoint; headingInDegrees: Double; pitchInDegrees: Double): Maps_IMapScene;
begin
  Result := Statics.CreateFromLocations(locations, headingInDegrees, pitchInDegrees);
end;


{ TMaps_MapStyleSheet }

class function TMaps_MapStyleSheet.Aerial: Maps_IMapStyleSheet;
begin
  Result := Statics.Aerial;
end;

class function TMaps_MapStyleSheet.AerialWithOverlay: Maps_IMapStyleSheet;
begin
  Result := Statics.AerialWithOverlay;
end;

class function TMaps_MapStyleSheet.RoadLight: Maps_IMapStyleSheet;
begin
  Result := Statics.RoadLight;
end;

class function TMaps_MapStyleSheet.RoadDark: Maps_IMapStyleSheet;
begin
  Result := Statics.RoadDark;
end;

class function TMaps_MapStyleSheet.RoadHighContrastLight: Maps_IMapStyleSheet;
begin
  Result := Statics.RoadHighContrastLight;
end;

class function TMaps_MapStyleSheet.RoadHighContrastDark: Maps_IMapStyleSheet;
begin
  Result := Statics.RoadHighContrastDark;
end;

class function TMaps_MapStyleSheet.Combine(styleSheets: IIterable_1__Maps_IMapStyleSheet): Maps_IMapStyleSheet;
begin
  Result := Statics.Combine(styleSheets);
end;

class function TMaps_MapStyleSheet.ParseFromJson(styleAsJson: HSTRING): Maps_IMapStyleSheet;
begin
  Result := Statics.ParseFromJson(styleAsJson);
end;

class function TMaps_MapStyleSheet.TryParseFromJson(styleAsJson: HSTRING; out styleSheet: Maps_IMapStyleSheet): Boolean;
begin
  Result := Statics.TryParseFromJson(styleAsJson, styleSheet);
end;


{ TMaps_MapStyleSheetEntries }

class function TMaps_MapStyleSheetEntries.get_Area: HSTRING;
begin
  Result := Statics.get_Area;
end;

class function TMaps_MapStyleSheetEntries.get_Airport: HSTRING;
begin
  Result := Statics.get_Airport;
end;

class function TMaps_MapStyleSheetEntries.get_Cemetery: HSTRING;
begin
  Result := Statics.get_Cemetery;
end;

class function TMaps_MapStyleSheetEntries.get_Continent: HSTRING;
begin
  Result := Statics.get_Continent;
end;

class function TMaps_MapStyleSheetEntries.get_Education: HSTRING;
begin
  Result := Statics.get_Education;
end;

class function TMaps_MapStyleSheetEntries.get_IndigenousPeoplesReserve: HSTRING;
begin
  Result := Statics.get_IndigenousPeoplesReserve;
end;

class function TMaps_MapStyleSheetEntries.get_Island: HSTRING;
begin
  Result := Statics.get_Island;
end;

class function TMaps_MapStyleSheetEntries.get_Medical: HSTRING;
begin
  Result := Statics.get_Medical;
end;

class function TMaps_MapStyleSheetEntries.get_Military: HSTRING;
begin
  Result := Statics.get_Military;
end;

class function TMaps_MapStyleSheetEntries.get_Nautical: HSTRING;
begin
  Result := Statics.get_Nautical;
end;

class function TMaps_MapStyleSheetEntries.get_Neighborhood: HSTRING;
begin
  Result := Statics.get_Neighborhood;
end;

class function TMaps_MapStyleSheetEntries.get_Runway: HSTRING;
begin
  Result := Statics.get_Runway;
end;

class function TMaps_MapStyleSheetEntries.get_Sand: HSTRING;
begin
  Result := Statics.get_Sand;
end;

class function TMaps_MapStyleSheetEntries.get_ShoppingCenter: HSTRING;
begin
  Result := Statics.get_ShoppingCenter;
end;

class function TMaps_MapStyleSheetEntries.get_Stadium: HSTRING;
begin
  Result := Statics.get_Stadium;
end;

class function TMaps_MapStyleSheetEntries.get_Vegetation: HSTRING;
begin
  Result := Statics.get_Vegetation;
end;

class function TMaps_MapStyleSheetEntries.get_Forest: HSTRING;
begin
  Result := Statics.get_Forest;
end;

class function TMaps_MapStyleSheetEntries.get_GolfCourse: HSTRING;
begin
  Result := Statics.get_GolfCourse;
end;

class function TMaps_MapStyleSheetEntries.get_Park: HSTRING;
begin
  Result := Statics.get_Park;
end;

class function TMaps_MapStyleSheetEntries.get_PlayingField: HSTRING;
begin
  Result := Statics.get_PlayingField;
end;

class function TMaps_MapStyleSheetEntries.get_Reserve: HSTRING;
begin
  Result := Statics.get_Reserve;
end;

class function TMaps_MapStyleSheetEntries.get_Point: HSTRING;
begin
  Result := Statics.get_Point;
end;

class function TMaps_MapStyleSheetEntries.get_NaturalPoint: HSTRING;
begin
  Result := Statics.get_NaturalPoint;
end;

class function TMaps_MapStyleSheetEntries.get_Peak: HSTRING;
begin
  Result := Statics.get_Peak;
end;

class function TMaps_MapStyleSheetEntries.get_VolcanicPeak: HSTRING;
begin
  Result := Statics.get_VolcanicPeak;
end;

class function TMaps_MapStyleSheetEntries.get_WaterPoint: HSTRING;
begin
  Result := Statics.get_WaterPoint;
end;

class function TMaps_MapStyleSheetEntries.get_PointOfInterest: HSTRING;
begin
  Result := Statics.get_PointOfInterest;
end;

class function TMaps_MapStyleSheetEntries.get_Business: HSTRING;
begin
  Result := Statics.get_Business;
end;

class function TMaps_MapStyleSheetEntries.get_FoodPoint: HSTRING;
begin
  Result := Statics.get_FoodPoint;
end;

class function TMaps_MapStyleSheetEntries.get_PopulatedPlace: HSTRING;
begin
  Result := Statics.get_PopulatedPlace;
end;

class function TMaps_MapStyleSheetEntries.get_Capital: HSTRING;
begin
  Result := Statics.get_Capital;
end;

class function TMaps_MapStyleSheetEntries.get_AdminDistrictCapital: HSTRING;
begin
  Result := Statics.get_AdminDistrictCapital;
end;

class function TMaps_MapStyleSheetEntries.get_CountryRegionCapital: HSTRING;
begin
  Result := Statics.get_CountryRegionCapital;
end;

class function TMaps_MapStyleSheetEntries.get_RoadShield: HSTRING;
begin
  Result := Statics.get_RoadShield;
end;

class function TMaps_MapStyleSheetEntries.get_RoadExit: HSTRING;
begin
  Result := Statics.get_RoadExit;
end;

class function TMaps_MapStyleSheetEntries.get_Transit: HSTRING;
begin
  Result := Statics.get_Transit;
end;

class function TMaps_MapStyleSheetEntries.get_Political: HSTRING;
begin
  Result := Statics.get_Political;
end;

class function TMaps_MapStyleSheetEntries.get_CountryRegion: HSTRING;
begin
  Result := Statics.get_CountryRegion;
end;

class function TMaps_MapStyleSheetEntries.get_AdminDistrict: HSTRING;
begin
  Result := Statics.get_AdminDistrict;
end;

class function TMaps_MapStyleSheetEntries.get_District: HSTRING;
begin
  Result := Statics.get_District;
end;

class function TMaps_MapStyleSheetEntries.get_Structure: HSTRING;
begin
  Result := Statics.get_Structure;
end;

class function TMaps_MapStyleSheetEntries.get_Building: HSTRING;
begin
  Result := Statics.get_Building;
end;

class function TMaps_MapStyleSheetEntries.get_EducationBuilding: HSTRING;
begin
  Result := Statics.get_EducationBuilding;
end;

class function TMaps_MapStyleSheetEntries.get_MedicalBuilding: HSTRING;
begin
  Result := Statics.get_MedicalBuilding;
end;

class function TMaps_MapStyleSheetEntries.get_TransitBuilding: HSTRING;
begin
  Result := Statics.get_TransitBuilding;
end;

class function TMaps_MapStyleSheetEntries.get_Transportation: HSTRING;
begin
  Result := Statics.get_Transportation;
end;

class function TMaps_MapStyleSheetEntries.get_Road: HSTRING;
begin
  Result := Statics.get_Road;
end;

class function TMaps_MapStyleSheetEntries.get_ControlledAccessHighway: HSTRING;
begin
  Result := Statics.get_ControlledAccessHighway;
end;

class function TMaps_MapStyleSheetEntries.get_HighSpeedRamp: HSTRING;
begin
  Result := Statics.get_HighSpeedRamp;
end;

class function TMaps_MapStyleSheetEntries.get_Highway: HSTRING;
begin
  Result := Statics.get_Highway;
end;

class function TMaps_MapStyleSheetEntries.get_MajorRoad: HSTRING;
begin
  Result := Statics.get_MajorRoad;
end;

class function TMaps_MapStyleSheetEntries.get_ArterialRoad: HSTRING;
begin
  Result := Statics.get_ArterialRoad;
end;

class function TMaps_MapStyleSheetEntries.get_Street: HSTRING;
begin
  Result := Statics.get_Street;
end;

class function TMaps_MapStyleSheetEntries.get_Ramp: HSTRING;
begin
  Result := Statics.get_Ramp;
end;

class function TMaps_MapStyleSheetEntries.get_UnpavedStreet: HSTRING;
begin
  Result := Statics.get_UnpavedStreet;
end;

class function TMaps_MapStyleSheetEntries.get_TollRoad: HSTRING;
begin
  Result := Statics.get_TollRoad;
end;

class function TMaps_MapStyleSheetEntries.get_Railway: HSTRING;
begin
  Result := Statics.get_Railway;
end;

class function TMaps_MapStyleSheetEntries.get_Trail: HSTRING;
begin
  Result := Statics.get_Trail;
end;

class function TMaps_MapStyleSheetEntries.get_WaterRoute: HSTRING;
begin
  Result := Statics.get_WaterRoute;
end;

class function TMaps_MapStyleSheetEntries.get_Water: HSTRING;
begin
  Result := Statics.get_Water;
end;

class function TMaps_MapStyleSheetEntries.get_River: HSTRING;
begin
  Result := Statics.get_River;
end;

class function TMaps_MapStyleSheetEntries.get_RouteLine: HSTRING;
begin
  Result := Statics.get_RouteLine;
end;

class function TMaps_MapStyleSheetEntries.get_WalkingRoute: HSTRING;
begin
  Result := Statics.get_WalkingRoute;
end;

class function TMaps_MapStyleSheetEntries.get_DrivingRoute: HSTRING;
begin
  Result := Statics.get_DrivingRoute;
end;


{ TMaps_MapStyleSheetEntryStates }

class function TMaps_MapStyleSheetEntryStates.get_Disabled: HSTRING;
begin
  Result := Statics.get_Disabled;
end;

class function TMaps_MapStyleSheetEntryStates.get_Hover: HSTRING;
begin
  Result := Statics.get_Hover;
end;

class function TMaps_MapStyleSheetEntryStates.get_Selected: HSTRING;
begin
  Result := Statics.get_Selected;
end;


{ TMaps_MapTargetCameraChangedEventArgs }

{ TMaps_MapTileBitmapRequest }

{ TMaps_MapTileBitmapRequestDeferral }

{ TMaps_MapTileBitmapRequestedEventArgs }

{ TMaps_MapTileSource }

class function TMaps_MapTileSource.get_DataSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_DataSourceProperty;
end;

class function TMaps_MapTileSource.get_LayerProperty: IDependencyProperty;
begin
  Result := Statics.get_LayerProperty;
end;

class function TMaps_MapTileSource.get_ZoomLevelRangeProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomLevelRangeProperty;
end;

class function TMaps_MapTileSource.get_BoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_BoundsProperty;
end;

class function TMaps_MapTileSource.get_AllowOverstretchProperty: IDependencyProperty;
begin
  Result := Statics.get_AllowOverstretchProperty;
end;

class function TMaps_MapTileSource.get_IsFadingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFadingEnabledProperty;
end;

class function TMaps_MapTileSource.get_IsTransparencyEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTransparencyEnabledProperty;
end;

class function TMaps_MapTileSource.get_IsRetryEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsRetryEnabledProperty;
end;

class function TMaps_MapTileSource.get_ZIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_ZIndexProperty;
end;

class function TMaps_MapTileSource.get_TilePixelSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_TilePixelSizeProperty;
end;

class function TMaps_MapTileSource.get_VisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_VisibleProperty;
end;


class function TMaps_MapTileSource.get_AnimationStateProperty: IDependencyProperty;
begin
  Result := Statics2.get_AnimationStateProperty;
end;

class function TMaps_MapTileSource.get_AutoPlayProperty: IDependencyProperty;
begin
  Result := Statics2.get_AutoPlayProperty;
end;

class function TMaps_MapTileSource.get_FrameCountProperty: IDependencyProperty;
begin
  Result := Statics2.get_FrameCountProperty;
end;

class function TMaps_MapTileSource.get_FrameDurationProperty: IDependencyProperty;
begin
  Result := Statics2.get_FrameDurationProperty;
end;

// Factories for : "Maps_MapTileSource"
// Factory: "Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory"
// -> Maps_IMapTileSourceFactory

class function TMaps_MapTileSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;

class function TMaps_MapTileSource.CreateInstanceWithDataSource(dataSource: Maps_IMapTileDataSource; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource;
begin
  Result := Factory.CreateInstanceWithDataSource(dataSource, baseInterface, innerInterface);
end;

class function TMaps_MapTileSource.CreateInstanceWithDataSourceAndZoomRange(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource;
begin
  Result := Factory.CreateInstanceWithDataSourceAndZoomRange(dataSource, zoomLevelRange, baseInterface, innerInterface);
end;

class function TMaps_MapTileSource.CreateInstanceWithDataSourceZoomRangeAndBounds(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; bounds: IGeoboundingBox; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource;
begin
  Result := Factory.CreateInstanceWithDataSourceZoomRangeAndBounds(dataSource, zoomLevelRange, bounds, baseInterface, innerInterface);
end;

class function TMaps_MapTileSource.CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize(dataSource: Maps_IMapTileDataSource; zoomLevelRange: Maps_MapZoomLevelRange; bounds: IGeoboundingBox; tileSizeInPixels: Integer; baseInterface: IInspectable; out innerInterface: IInspectable): Maps_IMapTileSource;
begin
  Result := Factory.CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize(dataSource, zoomLevelRange, bounds, tileSizeInPixels, baseInterface, innerInterface);
end;


{ TMaps_MapTileUriRequest }

{ TMaps_MapTileUriRequestDeferral }

{ TMaps_MapTileUriRequestedEventArgs }

{ TMaps_StreetsideExperience }
// Factories for : "Maps_StreetsideExperience"
// Factory: "Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory"
// -> Maps_IStreetsideExperienceFactory

class function TMaps_StreetsideExperience.CreateInstanceWithPanorama(panorama: Maps_IStreetsidePanorama): Maps_IStreetsideExperience;
begin
  Result := Factory.CreateInstanceWithPanorama(panorama);
end;

class function TMaps_StreetsideExperience.CreateInstanceWithPanoramaHeadingPitchAndFieldOfView(panorama: Maps_IStreetsidePanorama; headingInDegrees: Double; pitchInDegrees: Double; fieldOfViewInDegrees: Double): Maps_IStreetsideExperience;
begin
  Result := Factory.CreateInstanceWithPanoramaHeadingPitchAndFieldOfView(panorama, headingInDegrees, pitchInDegrees, fieldOfViewInDegrees);
end;


{ TMaps_StreetsidePanorama }

class function TMaps_StreetsidePanorama.FindNearbyAsync(location: IGeopoint): IAsyncOperation_1__Maps_IStreetsidePanorama;
begin
  Result := Statics.FindNearbyAsync(location);
end;

class function TMaps_StreetsidePanorama.FindNearbyAsync(location: IGeopoint; radiusInMeters: Double): IAsyncOperation_1__Maps_IStreetsidePanorama;
begin
  Result := Statics.FindNearbyAsync(location, radiusInMeters);
end;


{ TMediaElement }

class function TMediaElement.get_PosterSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_PosterSourceProperty;
end;

class function TMediaElement.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TMediaElement.get_IsMutedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsMutedProperty;
end;

class function TMediaElement.get_IsAudioOnlyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAudioOnlyProperty;
end;

class function TMediaElement.get_AutoPlayProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoPlayProperty;
end;

class function TMediaElement.get_VolumeProperty: IDependencyProperty;
begin
  Result := Statics.get_VolumeProperty;
end;

class function TMediaElement.get_BalanceProperty: IDependencyProperty;
begin
  Result := Statics.get_BalanceProperty;
end;

class function TMediaElement.get_NaturalVideoHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_NaturalVideoHeightProperty;
end;

class function TMediaElement.get_NaturalVideoWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_NaturalVideoWidthProperty;
end;

class function TMediaElement.get_NaturalDurationProperty: IDependencyProperty;
begin
  Result := Statics.get_NaturalDurationProperty;
end;

class function TMediaElement.get_PositionProperty: IDependencyProperty;
begin
  Result := Statics.get_PositionProperty;
end;

class function TMediaElement.get_DownloadProgressProperty: IDependencyProperty;
begin
  Result := Statics.get_DownloadProgressProperty;
end;

class function TMediaElement.get_BufferingProgressProperty: IDependencyProperty;
begin
  Result := Statics.get_BufferingProgressProperty;
end;

class function TMediaElement.get_DownloadProgressOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_DownloadProgressOffsetProperty;
end;

class function TMediaElement.get_CurrentStateProperty: IDependencyProperty;
begin
  Result := Statics.get_CurrentStateProperty;
end;

class function TMediaElement.get_CanSeekProperty: IDependencyProperty;
begin
  Result := Statics.get_CanSeekProperty;
end;

class function TMediaElement.get_CanPauseProperty: IDependencyProperty;
begin
  Result := Statics.get_CanPauseProperty;
end;

class function TMediaElement.get_AudioStreamCountProperty: IDependencyProperty;
begin
  Result := Statics.get_AudioStreamCountProperty;
end;

class function TMediaElement.get_AudioStreamIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_AudioStreamIndexProperty;
end;

class function TMediaElement.get_PlaybackRateProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaybackRateProperty;
end;

class function TMediaElement.get_IsLoopingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsLoopingProperty;
end;

class function TMediaElement.get_PlayToSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_PlayToSourceProperty;
end;

class function TMediaElement.get_DefaultPlaybackRateProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultPlaybackRateProperty;
end;

class function TMediaElement.get_AspectRatioWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_AspectRatioWidthProperty;
end;

class function TMediaElement.get_AspectRatioHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_AspectRatioHeightProperty;
end;

class function TMediaElement.get_RealTimePlaybackProperty: IDependencyProperty;
begin
  Result := Statics.get_RealTimePlaybackProperty;
end;

class function TMediaElement.get_AudioCategoryProperty: IDependencyProperty;
begin
  Result := Statics.get_AudioCategoryProperty;
end;

class function TMediaElement.get_AudioDeviceTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_AudioDeviceTypeProperty;
end;

class function TMediaElement.get_ProtectionManagerProperty: IDependencyProperty;
begin
  Result := Statics.get_ProtectionManagerProperty;
end;

class function TMediaElement.get_Stereo3DVideoPackingModeProperty: IDependencyProperty;
begin
  Result := Statics.get_Stereo3DVideoPackingModeProperty;
end;

class function TMediaElement.get_Stereo3DVideoRenderModeProperty: IDependencyProperty;
begin
  Result := Statics.get_Stereo3DVideoRenderModeProperty;
end;

class function TMediaElement.get_IsStereo3DVideoProperty: IDependencyProperty;
begin
  Result := Statics.get_IsStereo3DVideoProperty;
end;

class function TMediaElement.get_ActualStereo3DVideoPackingModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ActualStereo3DVideoPackingModeProperty;
end;


class function TMediaElement.get_AreTransportControlsEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_AreTransportControlsEnabledProperty;
end;

class function TMediaElement.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics2.get_StretchProperty;
end;

class function TMediaElement.get_IsFullWindowProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsFullWindowProperty;
end;

class function TMediaElement.get_PlayToPreferredSourceUriProperty: IDependencyProperty;
begin
  Result := Statics2.get_PlayToPreferredSourceUriProperty;
end;


{ TMediaPlayerElement }

class function TMediaPlayerElement.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TMediaPlayerElement.get_AreTransportControlsEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_AreTransportControlsEnabledProperty;
end;

class function TMediaPlayerElement.get_PosterSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_PosterSourceProperty;
end;

class function TMediaPlayerElement.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TMediaPlayerElement.get_AutoPlayProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoPlayProperty;
end;

class function TMediaPlayerElement.get_IsFullWindowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFullWindowProperty;
end;

class function TMediaPlayerElement.get_MediaPlayerProperty: IDependencyProperty;
begin
  Result := Statics.get_MediaPlayerProperty;
end;

// Factories for : "MediaPlayerElement"
// Factory: "Windows.UI.Xaml.Controls.IMediaPlayerElementFactory"
// -> IMediaPlayerElementFactory

class function TMediaPlayerElement.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerElement;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMediaPlayerPresenter }

class function TMediaPlayerPresenter.get_MediaPlayerProperty: IDependencyProperty;
begin
  Result := Statics.get_MediaPlayerProperty;
end;

class function TMediaPlayerPresenter.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TMediaPlayerPresenter.get_IsFullWindowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFullWindowProperty;
end;

// Factories for : "MediaPlayerPresenter"
// Factory: "Windows.UI.Xaml.Controls.IMediaPlayerPresenterFactory"
// -> IMediaPlayerPresenterFactory

class function TMediaPlayerPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMediaTransportControls }

class function TMediaTransportControls.get_IsFullWindowButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFullWindowButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsFullWindowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFullWindowEnabledProperty;
end;

class function TMediaTransportControls.get_IsZoomButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsZoomEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomEnabledProperty;
end;

class function TMediaTransportControls.get_IsFastForwardButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastForwardButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsFastForwardEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastForwardEnabledProperty;
end;

class function TMediaTransportControls.get_IsFastRewindButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastRewindButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsFastRewindEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastRewindEnabledProperty;
end;

class function TMediaTransportControls.get_IsStopButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsStopButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsStopEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsStopEnabledProperty;
end;

class function TMediaTransportControls.get_IsVolumeButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVolumeButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsVolumeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVolumeEnabledProperty;
end;

class function TMediaTransportControls.get_IsPlaybackRateButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPlaybackRateButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsPlaybackRateEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPlaybackRateEnabledProperty;
end;

class function TMediaTransportControls.get_IsSeekBarVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSeekBarVisibleProperty;
end;

class function TMediaTransportControls.get_IsSeekEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSeekEnabledProperty;
end;

class function TMediaTransportControls.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;


class function TMediaTransportControls.get_IsSkipForwardButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsSkipForwardButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsSkipForwardEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsSkipForwardEnabledProperty;
end;

class function TMediaTransportControls.get_IsSkipBackwardButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsSkipBackwardButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsSkipBackwardEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsSkipBackwardEnabledProperty;
end;

class function TMediaTransportControls.get_IsNextTrackButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsNextTrackButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsPreviousTrackButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsPreviousTrackButtonVisibleProperty;
end;

class function TMediaTransportControls.get_FastPlayFallbackBehaviourProperty: IDependencyProperty;
begin
  Result := Statics2.get_FastPlayFallbackBehaviourProperty;
end;


class function TMediaTransportControls.get_ShowAndHideAutomaticallyProperty: IDependencyProperty;
begin
  Result := Statics3.get_ShowAndHideAutomaticallyProperty;
end;

class function TMediaTransportControls.get_IsRepeatEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsRepeatEnabledProperty;
end;

class function TMediaTransportControls.get_IsRepeatButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsRepeatButtonVisibleProperty;
end;


class function TMediaTransportControls.get_IsCompactOverlayButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics4.get_IsCompactOverlayButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsCompactOverlayEnabledProperty: IDependencyProperty;
begin
  Result := Statics4.get_IsCompactOverlayEnabledProperty;
end;

// Factories for : "MediaTransportControls"
// Factory: "Windows.UI.Xaml.Controls.IMediaTransportControlsFactory"
// -> IMediaTransportControlsFactory

class function TMediaTransportControls.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaTransportControls;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMediaTransportControlsHelper }

class function TMediaTransportControlsHelper.get_DropoutOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_DropoutOrderProperty;
end;

class function TMediaTransportControlsHelper.GetDropoutOrder(element: IUIElement): IReference_1__Integer;
begin
  Result := Statics.GetDropoutOrder(element);
end;

class procedure TMediaTransportControlsHelper.SetDropoutOrder(element: IUIElement; value: IReference_1__Integer);
begin
  Statics.SetDropoutOrder(element, value);
end;


{ TMenuBar }

class function TMenuBar.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

// Factories for : "MenuBar"
// Factory: "Windows.UI.Xaml.Controls.IMenuBarFactory"
// -> IMenuBarFactory

class function TMenuBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuBarItem }

class function TMenuBarItem.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TMenuBarItem.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

// Factories for : "MenuBarItem"
// Factory: "Windows.UI.Xaml.Controls.IMenuBarItemFactory"
// -> IMenuBarItemFactory

class function TMenuBarItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyout }

class function TMenuFlyout.get_MenuFlyoutPresenterStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuFlyoutPresenterStyleProperty;
end;

// Factories for : "MenuFlyout"
// Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutFactory"
// -> IMenuFlyoutFactory

class function TMenuFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuBarItemFlyout }
// Factories for : "MenuBarItemFlyout"
// Factory: "Windows.UI.Xaml.Controls.IMenuBarItemFlyoutFactory"
// -> IMenuBarItemFlyoutFactory

class function TMenuBarItemFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItemFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutItemBase }
// Factories for : "MenuFlyoutItemBase"
// Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory"
// -> IMenuFlyoutItemBaseFactory


{ TMenuFlyoutItem }

class function TMenuFlyoutItem.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TMenuFlyoutItem.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TMenuFlyoutItem.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;


class function TMenuFlyoutItem.get_IconProperty: IDependencyProperty;
begin
  Result := Statics2.get_IconProperty;
end;


class function TMenuFlyoutItem.get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty;
begin
  Result := Statics3.get_KeyboardAcceleratorTextOverrideProperty;
end;

// Factories for : "MenuFlyoutItem"
// Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory"
// -> IMenuFlyoutItemFactory

class function TMenuFlyoutItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutPresenter }

class function TMenuFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;

// Factories for : "MenuFlyoutPresenter"
// Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory"
// -> IMenuFlyoutPresenterFactory

class function TMenuFlyoutPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutSeparator }
// Factories for : "MenuFlyoutSeparator"
// Factory: "Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory"
// -> IMenuFlyoutSeparatorFactory

class function TMenuFlyoutSeparator.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutSeparator;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutSubItem }

class function TMenuFlyoutSubItem.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;


class function TMenuFlyoutSubItem.get_IconProperty: IDependencyProperty;
begin
  Result := Statics2.get_IconProperty;
end;


{ TNavigationView }

class function TNavigationView.get_IsPaneOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPaneOpenProperty;
end;

class function TNavigationView.get_CompactModeThresholdWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactModeThresholdWidthProperty;
end;

class function TNavigationView.get_ExpandedModeThresholdWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ExpandedModeThresholdWidthProperty;
end;

class function TNavigationView.get_PaneFooterProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneFooterProperty;
end;

class function TNavigationView.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TNavigationView.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TNavigationView.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TNavigationView.get_IsSettingsVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSettingsVisibleProperty;
end;

class function TNavigationView.get_IsPaneToggleButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPaneToggleButtonVisibleProperty;
end;

class function TNavigationView.get_AlwaysShowHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_AlwaysShowHeaderProperty;
end;

class function TNavigationView.get_CompactPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactPaneLengthProperty;
end;

class function TNavigationView.get_OpenPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_OpenPaneLengthProperty;
end;

class function TNavigationView.get_PaneToggleButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneToggleButtonStyleProperty;
end;

class function TNavigationView.get_MenuItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemsProperty;
end;

class function TNavigationView.get_MenuItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemsSourceProperty;
end;

class function TNavigationView.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TNavigationView.get_SettingsItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SettingsItemProperty;
end;

class function TNavigationView.get_AutoSuggestBoxProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoSuggestBoxProperty;
end;

class function TNavigationView.get_MenuItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemTemplateProperty;
end;

class function TNavigationView.get_MenuItemTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemTemplateSelectorProperty;
end;

class function TNavigationView.get_MenuItemContainerStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemContainerStyleProperty;
end;

class function TNavigationView.get_MenuItemContainerStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemContainerStyleSelectorProperty;
end;


class function TNavigationView.get_IsBackButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsBackButtonVisibleProperty;
end;

class function TNavigationView.get_IsBackEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsBackEnabledProperty;
end;

class function TNavigationView.get_PaneTitleProperty: IDependencyProperty;
begin
  Result := Statics2.get_PaneTitleProperty;
end;


class function TNavigationView.get_PaneDisplayModeProperty: IDependencyProperty;
begin
  Result := Statics3.get_PaneDisplayModeProperty;
end;

class function TNavigationView.get_PaneHeaderProperty: IDependencyProperty;
begin
  Result := Statics3.get_PaneHeaderProperty;
end;

class function TNavigationView.get_PaneCustomContentProperty: IDependencyProperty;
begin
  Result := Statics3.get_PaneCustomContentProperty;
end;

class function TNavigationView.get_ContentOverlayProperty: IDependencyProperty;
begin
  Result := Statics3.get_ContentOverlayProperty;
end;

class function TNavigationView.get_IsPaneVisibleProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsPaneVisibleProperty;
end;

class function TNavigationView.get_SelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics3.get_SelectionFollowsFocusProperty;
end;

class function TNavigationView.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics3.get_TemplateSettingsProperty;
end;

class function TNavigationView.get_ShoulderNavigationEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_ShoulderNavigationEnabledProperty;
end;

class function TNavigationView.get_OverflowLabelModeProperty: IDependencyProperty;
begin
  Result := Statics3.get_OverflowLabelModeProperty;
end;

// Factories for : "NavigationView"
// Factory: "Windows.UI.Xaml.Controls.INavigationViewFactory"
// -> INavigationViewFactory

class function TNavigationView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewItemBase }
// Factories for : "NavigationViewItemBase"
// Factory: "Windows.UI.Xaml.Controls.INavigationViewItemBaseFactory"
// -> INavigationViewItemBaseFactory


{ TNavigationViewItem }

class function TNavigationViewItem.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TNavigationViewItem.get_CompactPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactPaneLengthProperty;
end;


class function TNavigationViewItem.get_SelectsOnInvokedProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectsOnInvokedProperty;
end;

// Factories for : "NavigationViewItem"
// Factory: "Windows.UI.Xaml.Controls.INavigationViewItemFactory"
// -> INavigationViewItemFactory

class function TNavigationViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewItemHeader }
// Factories for : "NavigationViewItemHeader"
// Factory: "Windows.UI.Xaml.Controls.INavigationViewItemHeaderFactory"
// -> INavigationViewItemHeaderFactory

class function TNavigationViewItemHeader.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemHeader;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewItemInvokedEventArgs }

{ TNavigationViewItemSeparator }
// Factories for : "NavigationViewItemSeparator"
// Factory: "Windows.UI.Xaml.Controls.INavigationViewItemSeparatorFactory"
// -> INavigationViewItemSeparatorFactory

class function TNavigationViewItemSeparator.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemSeparator;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewList }
// Factories for : "NavigationViewList"
// Factory: "Windows.UI.Xaml.Controls.INavigationViewListFactory"
// -> INavigationViewListFactory

class function TNavigationViewList.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewList;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewTemplateSettings }

class function TNavigationViewTemplateSettings.get_TopPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_TopPaddingProperty;
end;

class function TNavigationViewTemplateSettings.get_OverflowButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_OverflowButtonVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_PaneToggleButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneToggleButtonVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_BackButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_BackButtonVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_TopPaneVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_TopPaneVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_LeftPaneVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftPaneVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_SingleSelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_SingleSelectionFollowsFocusProperty;
end;

// Factories for : "NavigationViewTemplateSettings"
// Factory: "Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory"
// -> INavigationViewTemplateSettingsFactory

class function TNavigationViewTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TUserControl }

class function TUserControl.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

// Factories for : "UserControl"
// Factory: "Windows.UI.Xaml.Controls.IUserControlFactory"
// -> IUserControlFactory

class function TUserControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUserControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPage }

class function TPage.get_FrameProperty: IDependencyProperty;
begin
  Result := Statics.get_FrameProperty;
end;

class function TPage.get_TopAppBarProperty: IDependencyProperty;
begin
  Result := Statics.get_TopAppBarProperty;
end;

class function TPage.get_BottomAppBarProperty: IDependencyProperty;
begin
  Result := Statics.get_BottomAppBarProperty;
end;

// Factories for : "Page"
// Factory: "Windows.UI.Xaml.Controls.IPageFactory"
// -> IPageFactory

class function TPage.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPage;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TParallaxView }

class function TParallaxView.get_ChildProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildProperty;
end;

class function TParallaxView.get_HorizontalSourceEndOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSourceEndOffsetProperty;
end;

class function TParallaxView.get_HorizontalSourceOffsetKindProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSourceOffsetKindProperty;
end;

class function TParallaxView.get_HorizontalSourceStartOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSourceStartOffsetProperty;
end;

class function TParallaxView.get_MaxHorizontalShiftRatioProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHorizontalShiftRatioProperty;
end;

class function TParallaxView.get_HorizontalShiftProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalShiftProperty;
end;

class function TParallaxView.get_IsHorizontalShiftClampedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHorizontalShiftClampedProperty;
end;

class function TParallaxView.get_IsVerticalShiftClampedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVerticalShiftClampedProperty;
end;

class function TParallaxView.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TParallaxView.get_VerticalSourceEndOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSourceEndOffsetProperty;
end;

class function TParallaxView.get_VerticalSourceOffsetKindProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSourceOffsetKindProperty;
end;

class function TParallaxView.get_VerticalSourceStartOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSourceStartOffsetProperty;
end;

class function TParallaxView.get_MaxVerticalShiftRatioProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxVerticalShiftRatioProperty;
end;

class function TParallaxView.get_VerticalShiftProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalShiftProperty;
end;

// Factories for : "ParallaxView"
// Factory: "Windows.UI.Xaml.Controls.IParallaxViewFactory"
// -> IParallaxViewFactory

class function TParallaxView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IParallaxView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPasswordBox }

class function TPasswordBox.get_PasswordProperty: IDependencyProperty;
begin
  Result := Statics.get_PasswordProperty;
end;

class function TPasswordBox.get_PasswordCharProperty: IDependencyProperty;
begin
  Result := Statics.get_PasswordCharProperty;
end;

class function TPasswordBox.get_IsPasswordRevealButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPasswordRevealButtonEnabledProperty;
end;

class function TPasswordBox.get_MaxLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLengthProperty;
end;


class function TPasswordBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderProperty;
end;

class function TPasswordBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderTemplateProperty;
end;

class function TPasswordBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics2.get_PlaceholderTextProperty;
end;

class function TPasswordBox.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectionHighlightColorProperty;
end;

class function TPasswordBox.get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty;
begin
  Result := Statics2.get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
end;


class function TPasswordBox.get_PasswordRevealModeProperty: IDependencyProperty;
begin
  Result := Statics3.get_PasswordRevealModeProperty;
end;

class function TPasswordBox.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics3.get_TextReadingOrderProperty;
end;

class function TPasswordBox.get_InputScopeProperty: IDependencyProperty;
begin
  Result := Statics3.get_InputScopeProperty;
end;


class function TPasswordBox.get_CanPasteClipboardContentProperty: IDependencyProperty;
begin
  Result := Statics4.get_CanPasteClipboardContentProperty;
end;

class function TPasswordBox.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics4.get_SelectionFlyoutProperty;
end;

class function TPasswordBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics4.get_DescriptionProperty;
end;


{ TPathIcon }

class function TPathIcon.get_DataProperty: IDependencyProperty;
begin
  Result := Statics.get_DataProperty;
end;

// Factories for : "PathIcon"
// Factory: "Windows.UI.Xaml.Controls.IPathIconFactory"
// -> IPathIconFactory

class function TPathIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPathIconSource }

class function TPathIconSource.get_DataProperty: IDependencyProperty;
begin
  Result := Statics.get_DataProperty;
end;

// Factories for : "PathIconSource"
// Factory: "Windows.UI.Xaml.Controls.IPathIconSourceFactory"
// -> IPathIconSourceFactory

class function TPathIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPersonPicture }

class function TPersonPicture.get_BadgeNumberProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeNumberProperty;
end;

class function TPersonPicture.get_BadgeGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeGlyphProperty;
end;

class function TPersonPicture.get_BadgeImageSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeImageSourceProperty;
end;

class function TPersonPicture.get_BadgeTextProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeTextProperty;
end;

class function TPersonPicture.get_IsGroupProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupProperty;
end;

class function TPersonPicture.get_ContactProperty: IDependencyProperty;
begin
  Result := Statics.get_ContactProperty;
end;

class function TPersonPicture.get_DisplayNameProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayNameProperty;
end;

class function TPersonPicture.get_InitialsProperty: IDependencyProperty;
begin
  Result := Statics.get_InitialsProperty;
end;

class function TPersonPicture.get_PreferSmallImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PreferSmallImageProperty;
end;

class function TPersonPicture.get_ProfilePictureProperty: IDependencyProperty;
begin
  Result := Statics.get_ProfilePictureProperty;
end;

// Factories for : "PersonPicture"
// Factory: "Windows.UI.Xaml.Controls.IPersonPictureFactory"
// -> IPersonPictureFactory

class function TPersonPicture.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPersonPicture;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPickerConfirmedEventArgs }

{ TPickerFlyout }

class function TPickerFlyout.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TPickerFlyout.get_ConfirmationButtonsVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_ConfirmationButtonsVisibleProperty;
end;


{ TPivot }

class function TPivot.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TPivot.get_TitleTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleTemplateProperty;
end;

class function TPivot.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TPivot.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TPivot.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TPivot.get_IsLockedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsLockedProperty;
end;

class function TPivot.get_SlideInAnimationGroupProperty: IDependencyProperty;
begin
  Result := Statics.get_SlideInAnimationGroupProperty;
end;

class function TPivot.GetSlideInAnimationGroup(element: IFrameworkElement): PivotSlideInAnimationGroup;
begin
  Result := Statics.GetSlideInAnimationGroup(element);
end;

class procedure TPivot.SetSlideInAnimationGroup(element: IFrameworkElement; value: PivotSlideInAnimationGroup);
begin
  Statics.SetSlideInAnimationGroup(element, value);
end;


class function TPivot.get_LeftHeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_LeftHeaderProperty;
end;

class function TPivot.get_LeftHeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_LeftHeaderTemplateProperty;
end;

class function TPivot.get_RightHeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_RightHeaderProperty;
end;

class function TPivot.get_RightHeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_RightHeaderTemplateProperty;
end;


class function TPivot.get_HeaderFocusVisualPlacementProperty: IDependencyProperty;
begin
  Result := Statics3.get_HeaderFocusVisualPlacementProperty;
end;

class function TPivot.get_IsHeaderItemsCarouselEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsHeaderItemsCarouselEnabledProperty;
end;

// Factories for : "Pivot"
// Factory: "Windows.UI.Xaml.Controls.IPivotFactory"
// -> IPivotFactory

class function TPivot.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivot;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPivotItem }

class function TPivotItem.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

// Factories for : "PivotItem"
// Factory: "Windows.UI.Xaml.Controls.IPivotItemFactory"
// -> IPivotItemFactory

class function TPivotItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivotItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPivotItemEventArgs }

{ TPrimitives_CalendarPanel }

{ TVirtualizingPanel }
// Factories for : "VirtualizingPanel"
// Factory: "Windows.UI.Xaml.Controls.IVirtualizingPanelFactory"
// -> IVirtualizingPanelFactory


{ TPrimitives_CarouselPanel }
// Factories for : "Primitives_CarouselPanel"
// Factory: "Windows.UI.Xaml.Controls.Primitives.ICarouselPanelFactory"
// -> Primitives_ICarouselPanelFactory

class function TPrimitives_CarouselPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICarouselPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_RangeBase }

class function TPrimitives_RangeBase.get_MinimumProperty: IDependencyProperty;
begin
  Result := Statics.get_MinimumProperty;
end;

class function TPrimitives_RangeBase.get_MaximumProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumProperty;
end;

class function TPrimitives_RangeBase.get_SmallChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_SmallChangeProperty;
end;

class function TPrimitives_RangeBase.get_LargeChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_LargeChangeProperty;
end;

class function TPrimitives_RangeBase.get_ValueProperty: IDependencyProperty;
begin
  Result := Statics.get_ValueProperty;
end;

// Factories for : "Primitives_RangeBase"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IRangeBaseFactory"
// -> Primitives_IRangeBaseFactory

class function TPrimitives_RangeBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IRangeBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSlider }

class function TSlider.get_IntermediateValueProperty: IDependencyProperty;
begin
  Result := Statics.get_IntermediateValueProperty;
end;

class function TSlider.get_StepFrequencyProperty: IDependencyProperty;
begin
  Result := Statics.get_StepFrequencyProperty;
end;

class function TSlider.get_SnapsToProperty: IDependencyProperty;
begin
  Result := Statics.get_SnapsToProperty;
end;

class function TSlider.get_TickFrequencyProperty: IDependencyProperty;
begin
  Result := Statics.get_TickFrequencyProperty;
end;

class function TSlider.get_TickPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_TickPlacementProperty;
end;

class function TSlider.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TSlider.get_IsDirectionReversedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDirectionReversedProperty;
end;

class function TSlider.get_IsThumbToolTipEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsThumbToolTipEnabledProperty;
end;

class function TSlider.get_ThumbToolTipValueConverterProperty: IDependencyProperty;
begin
  Result := Statics.get_ThumbToolTipValueConverterProperty;
end;


class function TSlider.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderProperty;
end;

class function TSlider.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderTemplateProperty;
end;

// Factories for : "Slider"
// Factory: "Windows.UI.Xaml.Controls.ISliderFactory"
// -> ISliderFactory

class function TSlider.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISlider;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ColorPickerSlider }

class function TPrimitives_ColorPickerSlider.get_ColorChannelProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorChannelProperty;
end;

// Factories for : "Primitives_ColorPickerSlider"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory"
// -> Primitives_IColorPickerSliderFactory

class function TPrimitives_ColorPickerSlider.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorPickerSlider;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ColorSpectrum }

class function TPrimitives_ColorSpectrum.get_ColorProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorProperty;
end;

class function TPrimitives_ColorSpectrum.get_HsvColorProperty: IDependencyProperty;
begin
  Result := Statics.get_HsvColorProperty;
end;

class function TPrimitives_ColorSpectrum.get_MinHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinHueProperty;
end;

class function TPrimitives_ColorSpectrum.get_MaxHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHueProperty;
end;

class function TPrimitives_ColorSpectrum.get_MinSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MinSaturationProperty;
end;

class function TPrimitives_ColorSpectrum.get_MaxSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxSaturationProperty;
end;

class function TPrimitives_ColorSpectrum.get_MinValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinValueProperty;
end;

class function TPrimitives_ColorSpectrum.get_MaxValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxValueProperty;
end;

class function TPrimitives_ColorSpectrum.get_ShapeProperty: IDependencyProperty;
begin
  Result := Statics.get_ShapeProperty;
end;

class function TPrimitives_ColorSpectrum.get_ComponentsProperty: IDependencyProperty;
begin
  Result := Statics.get_ComponentsProperty;
end;

// Factories for : "Primitives_ColorSpectrum"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IColorSpectrumFactory"
// -> Primitives_IColorSpectrumFactory

class function TPrimitives_ColorSpectrum.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorSpectrum;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_CommandBarFlyoutCommandBar }
// Factories for : "Primitives_CommandBarFlyoutCommandBar"
// Factory: "Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory"
// -> Primitives_ICommandBarFlyoutCommandBarFactory

class function TPrimitives_CommandBarFlyoutCommandBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICommandBarFlyoutCommandBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_DragCompletedEventArgs }
// Factories for : "Primitives_DragCompletedEventArgs"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory"
// -> Primitives_IDragCompletedEventArgsFactory

class function TPrimitives_DragCompletedEventArgs.CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange: Double; verticalChange: Double; canceled: Boolean; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragCompletedEventArgs;
begin
  Result := Factory.CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange, verticalChange, canceled, baseInterface, innerInterface);
end;


{ TPrimitives_DragDeltaEventArgs }
// Factories for : "Primitives_DragDeltaEventArgs"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory"
// -> Primitives_IDragDeltaEventArgsFactory

class function TPrimitives_DragDeltaEventArgs.CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange: Double; verticalChange: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragDeltaEventArgs;
begin
  Result := Factory.CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange, verticalChange, baseInterface, innerInterface);
end;


{ TPrimitives_DragStartedEventArgs }
// Factories for : "Primitives_DragStartedEventArgs"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory"
// -> Primitives_IDragStartedEventArgsFactory

class function TPrimitives_DragStartedEventArgs.CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset: Double; verticalOffset: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragStartedEventArgs;
begin
  Result := Factory.CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset, verticalOffset, baseInterface, innerInterface);
end;


{ TPrimitives_FlyoutShowOptions }
// Factories for : "Primitives_FlyoutShowOptions"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory"
// -> Primitives_IFlyoutShowOptionsFactory

class function TPrimitives_FlyoutShowOptions.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutShowOptions;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_GeneratorPositionHelper }

class function TPrimitives_GeneratorPositionHelper.FromIndexAndOffset(index: Integer; offset: Integer): Primitives_GeneratorPosition;
begin
  Result := Statics.FromIndexAndOffset(index, offset);
end;


{ TPrimitives_GridViewItemPresenter }

class function TPrimitives_GridViewItemPresenter.get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionCheckMarkVisualEnabledProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_CheckHintBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckHintBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_CheckSelectingBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckSelectingBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_CheckBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DragBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DragForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragForegroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_FocusBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusBorderBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_PlaceholderBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_PointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedForegroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedPointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedPointerOverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBorderBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBorderThicknessProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DisabledOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledOpacityProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DragOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DragOpacityProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_ReorderHintOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_ReorderHintOffsetProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_GridViewItemPresenterHorizontalContentAlignmentProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_GridViewItemPresenterVerticalContentAlignmentProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_GridViewItemPresenterPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_GridViewItemPresenterPaddingProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_PointerOverBackgroundMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundMarginProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_ContentMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentMarginProperty;
end;

// Factories for : "Primitives_GridViewItemPresenter"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory"
// -> Primitives_IGridViewItemPresenterFactory

class function TPrimitives_GridViewItemPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IGridViewItemPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_JumpListItemBackgroundConverter }

class function TPrimitives_JumpListItemBackgroundConverter.get_EnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_EnabledProperty;
end;

class function TPrimitives_JumpListItemBackgroundConverter.get_DisabledProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledProperty;
end;


{ TPrimitives_JumpListItemForegroundConverter }

class function TPrimitives_JumpListItemForegroundConverter.get_EnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_EnabledProperty;
end;

class function TPrimitives_JumpListItemForegroundConverter.get_DisabledProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledProperty;
end;


{ TPrimitives_LayoutInformation }

class function TPrimitives_LayoutInformation.GetLayoutExceptionElement(dispatcher: IInspectable): IUIElement;
begin
  Result := Statics.GetLayoutExceptionElement(dispatcher);
end;

class function TPrimitives_LayoutInformation.GetLayoutSlot(element: IFrameworkElement): TRectF;
begin
  Result := Statics.GetLayoutSlot(element);
end;


class function TPrimitives_LayoutInformation.GetAvailableSize(element: IUIElement): TSizeF;
begin
  Result := Statics2.GetAvailableSize(element);
end;


{ TPrimitives_ListViewItemPresenter }

class function TPrimitives_ListViewItemPresenter.get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionCheckMarkVisualEnabledProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckHintBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckHintBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckSelectingBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckSelectingBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DragBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DragForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragForegroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_FocusBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PlaceholderBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedForegroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedPointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedPointerOverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBorderThicknessProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DisabledOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledOpacityProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DragOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DragOpacityProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ReorderHintOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_ReorderHintOffsetProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_ListViewItemPresenterHorizontalContentAlignmentProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_ListViewItemPresenterVerticalContentAlignmentProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ListViewItemPresenterPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_ListViewItemPresenterPaddingProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PointerOverBackgroundMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundMarginProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ContentMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentMarginProperty;
end;


class function TPrimitives_ListViewItemPresenter.get_SelectedPressedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectedPressedBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PressedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics2.get_PressedBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxBrushProperty: IDependencyProperty;
begin
  Result := Statics2.get_CheckBoxBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_FocusSecondaryBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics2.get_FocusSecondaryBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_CheckModeProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PointerOverForegroundProperty: IDependencyProperty;
begin
  Result := Statics2.get_PointerOverForegroundProperty;
end;


class function TPrimitives_ListViewItemPresenter.get_RevealBackgroundProperty: IDependencyProperty;
begin
  Result := Statics3.get_RevealBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_RevealBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics3.get_RevealBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_RevealBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics3.get_RevealBorderThicknessProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_RevealBackgroundShowsAboveContentProperty: IDependencyProperty;
begin
  Result := Statics3.get_RevealBackgroundShowsAboveContentProperty;
end;

// Factories for : "Primitives_ListViewItemPresenter"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory"
// -> Primitives_IListViewItemPresenterFactory

class function TPrimitives_ListViewItemPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IListViewItemPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_LoopingSelector }

class function TPrimitives_LoopingSelector.get_ShouldLoopProperty: IDependencyProperty;
begin
  Result := Statics.get_ShouldLoopProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

class function TPrimitives_LoopingSelector.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TPrimitives_LoopingSelector.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;


{ TPrimitives_NavigationViewItemPresenter }

class function TPrimitives_NavigationViewItemPresenter.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

// Factories for : "Primitives_NavigationViewItemPresenter"
// Factory: "Windows.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory"
// -> Primitives_INavigationViewItemPresenterFactory

class function TPrimitives_NavigationViewItemPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_OrientedVirtualizingPanel }
// Factories for : "Primitives_OrientedVirtualizingPanel"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory"
// -> Primitives_IOrientedVirtualizingPanelFactory


{ TPrimitives_PivotHeaderItem }
// Factories for : "Primitives_PivotHeaderItem"
// Factory: "Windows.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory"
// -> Primitives_IPivotHeaderItemFactory

class function TPrimitives_PivotHeaderItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPivotHeaderItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_PivotHeaderPanel }

{ TPrimitives_PivotPanel }

{ TPrimitives_Popup }

class function TPrimitives_Popup.get_ChildProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildProperty;
end;

class function TPrimitives_Popup.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TPrimitives_Popup.get_HorizontalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOffsetProperty;
end;

class function TPrimitives_Popup.get_VerticalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOffsetProperty;
end;

class function TPrimitives_Popup.get_ChildTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildTransitionsProperty;
end;

class function TPrimitives_Popup.get_IsLightDismissEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsLightDismissEnabledProperty;
end;


class function TPrimitives_Popup.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_LightDismissOverlayModeProperty;
end;


class function TPrimitives_Popup.get_ShouldConstrainToRootBoundsProperty: IDependencyProperty;
begin
  Result := Statics3.get_ShouldConstrainToRootBoundsProperty;
end;


{ TPrimitives_RepeatButton }

class function TPrimitives_RepeatButton.get_DelayProperty: IDependencyProperty;
begin
  Result := Statics.get_DelayProperty;
end;

class function TPrimitives_RepeatButton.get_IntervalProperty: IDependencyProperty;
begin
  Result := Statics.get_IntervalProperty;
end;


{ TPrimitives_ScrollBar }

class function TPrimitives_ScrollBar.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TPrimitives_ScrollBar.get_ViewportSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_ViewportSizeProperty;
end;

class function TPrimitives_ScrollBar.get_IndicatorModeProperty: IDependencyProperty;
begin
  Result := Statics.get_IndicatorModeProperty;
end;


{ TPrimitives_ScrollEventArgs }

{ TPrimitives_Thumb }

class function TPrimitives_Thumb.get_IsDraggingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDraggingProperty;
end;


{ TPrimitives_TickBar }

class function TPrimitives_TickBar.get_FillProperty: IDependencyProperty;
begin
  Result := Statics.get_FillProperty;
end;


{ TProgressBar }

class function TProgressBar.get_IsIndeterminateProperty: IDependencyProperty;
begin
  Result := Statics.get_IsIndeterminateProperty;
end;

class function TProgressBar.get_ShowErrorProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowErrorProperty;
end;

class function TProgressBar.get_ShowPausedProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowPausedProperty;
end;

// Factories for : "ProgressBar"
// Factory: "Windows.UI.Xaml.Controls.IProgressBarFactory"
// -> IProgressBarFactory

class function TProgressBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TProgressRing }

class function TProgressRing.get_IsActiveProperty: IDependencyProperty;
begin
  Result := Statics.get_IsActiveProperty;
end;


{ TRatingControl }

class function TRatingControl.get_CaptionProperty: IDependencyProperty;
begin
  Result := Statics.get_CaptionProperty;
end;

class function TRatingControl.get_InitialSetValueProperty: IDependencyProperty;
begin
  Result := Statics.get_InitialSetValueProperty;
end;

class function TRatingControl.get_IsClearEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsClearEnabledProperty;
end;

class function TRatingControl.get_IsReadOnlyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsReadOnlyProperty;
end;

class function TRatingControl.get_MaxRatingProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxRatingProperty;
end;

class function TRatingControl.get_PlaceholderValueProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderValueProperty;
end;

class function TRatingControl.get_ItemInfoProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemInfoProperty;
end;

class function TRatingControl.get_ValueProperty: IDependencyProperty;
begin
  Result := Statics.get_ValueProperty;
end;

// Factories for : "RatingControl"
// Factory: "Windows.UI.Xaml.Controls.IRatingControlFactory"
// -> IRatingControlFactory

class function TRatingControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRatingItemInfo }
// Factories for : "RatingItemInfo"
// Factory: "Windows.UI.Xaml.Controls.IRatingItemInfoFactory"
// -> IRatingItemInfoFactory

class function TRatingItemInfo.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemInfo;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRatingItemFontInfo }

class function TRatingItemFontInfo.get_DisabledGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledGlyphProperty;
end;

class function TRatingItemFontInfo.get_GlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphProperty;
end;

class function TRatingItemFontInfo.get_PlaceholderGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderGlyphProperty;
end;

class function TRatingItemFontInfo.get_PointerOverGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverGlyphProperty;
end;

class function TRatingItemFontInfo.get_PointerOverPlaceholderGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverPlaceholderGlyphProperty;
end;

class function TRatingItemFontInfo.get_UnsetGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_UnsetGlyphProperty;
end;

// Factories for : "RatingItemFontInfo"
// Factory: "Windows.UI.Xaml.Controls.IRatingItemFontInfoFactory"
// -> IRatingItemFontInfoFactory

class function TRatingItemFontInfo.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemFontInfo;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRatingItemImageInfo }

class function TRatingItemImageInfo.get_DisabledImageProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledImageProperty;
end;

class function TRatingItemImageInfo.get_ImageProperty: IDependencyProperty;
begin
  Result := Statics.get_ImageProperty;
end;

class function TRatingItemImageInfo.get_PlaceholderImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderImageProperty;
end;

class function TRatingItemImageInfo.get_PointerOverImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverImageProperty;
end;

class function TRatingItemImageInfo.get_PointerOverPlaceholderImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverPlaceholderImageProperty;
end;

class function TRatingItemImageInfo.get_UnsetImageProperty: IDependencyProperty;
begin
  Result := Statics.get_UnsetImageProperty;
end;

// Factories for : "RatingItemImageInfo"
// Factory: "Windows.UI.Xaml.Controls.IRatingItemImageInfoFactory"
// -> IRatingItemImageInfoFactory

class function TRatingItemImageInfo.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemImageInfo;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRefreshContainer }

class function TRefreshContainer.get_VisualizerProperty: IDependencyProperty;
begin
  Result := Statics.get_VisualizerProperty;
end;

class function TRefreshContainer.get_PullDirectionProperty: IDependencyProperty;
begin
  Result := Statics.get_PullDirectionProperty;
end;

// Factories for : "RefreshContainer"
// Factory: "Windows.UI.Xaml.Controls.IRefreshContainerFactory"
// -> IRefreshContainerFactory

class function TRefreshContainer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshContainer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRefreshVisualizer }

class function TRefreshVisualizer.get_InfoProviderProperty: IDependencyProperty;
begin
  Result := Statics.get_InfoProviderProperty;
end;

class function TRefreshVisualizer.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TRefreshVisualizer.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TRefreshVisualizer.get_StateProperty: IDependencyProperty;
begin
  Result := Statics.get_StateProperty;
end;

// Factories for : "RefreshVisualizer"
// Factory: "Windows.UI.Xaml.Controls.IRefreshVisualizerFactory"
// -> IRefreshVisualizerFactory

class function TRefreshVisualizer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshVisualizer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRelativePanel }

class function TRelativePanel.get_LeftOfProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftOfProperty;
end;

class function TRelativePanel.GetLeftOf(element: IUIElement): IInspectable;
begin
  Result := Statics.GetLeftOf(element);
end;

class procedure TRelativePanel.SetLeftOf(element: IUIElement; value: IInspectable);
begin
  Statics.SetLeftOf(element, value);
end;

class function TRelativePanel.get_AboveProperty: IDependencyProperty;
begin
  Result := Statics.get_AboveProperty;
end;

class function TRelativePanel.GetAbove(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAbove(element);
end;

class procedure TRelativePanel.SetAbove(element: IUIElement; value: IInspectable);
begin
  Statics.SetAbove(element, value);
end;

class function TRelativePanel.get_RightOfProperty: IDependencyProperty;
begin
  Result := Statics.get_RightOfProperty;
end;

class function TRelativePanel.GetRightOf(element: IUIElement): IInspectable;
begin
  Result := Statics.GetRightOf(element);
end;

class procedure TRelativePanel.SetRightOf(element: IUIElement; value: IInspectable);
begin
  Statics.SetRightOf(element, value);
end;

class function TRelativePanel.get_BelowProperty: IDependencyProperty;
begin
  Result := Statics.get_BelowProperty;
end;

class function TRelativePanel.GetBelow(element: IUIElement): IInspectable;
begin
  Result := Statics.GetBelow(element);
end;

class procedure TRelativePanel.SetBelow(element: IUIElement; value: IInspectable);
begin
  Statics.SetBelow(element, value);
end;

class function TRelativePanel.get_AlignHorizontalCenterWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignHorizontalCenterWithProperty;
end;

class function TRelativePanel.GetAlignHorizontalCenterWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignHorizontalCenterWith(element);
end;

class procedure TRelativePanel.SetAlignHorizontalCenterWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignHorizontalCenterWith(element, value);
end;

class function TRelativePanel.get_AlignVerticalCenterWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignVerticalCenterWithProperty;
end;

class function TRelativePanel.GetAlignVerticalCenterWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignVerticalCenterWith(element);
end;

class procedure TRelativePanel.SetAlignVerticalCenterWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignVerticalCenterWith(element, value);
end;

class function TRelativePanel.get_AlignLeftWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignLeftWithProperty;
end;

class function TRelativePanel.GetAlignLeftWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignLeftWith(element);
end;

class procedure TRelativePanel.SetAlignLeftWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignLeftWith(element, value);
end;

class function TRelativePanel.get_AlignTopWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignTopWithProperty;
end;

class function TRelativePanel.GetAlignTopWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignTopWith(element);
end;

class procedure TRelativePanel.SetAlignTopWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignTopWith(element, value);
end;

class function TRelativePanel.get_AlignRightWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignRightWithProperty;
end;

class function TRelativePanel.GetAlignRightWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignRightWith(element);
end;

class procedure TRelativePanel.SetAlignRightWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignRightWith(element, value);
end;

class function TRelativePanel.get_AlignBottomWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignBottomWithProperty;
end;

class function TRelativePanel.GetAlignBottomWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignBottomWith(element);
end;

class procedure TRelativePanel.SetAlignBottomWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignBottomWith(element, value);
end;

class function TRelativePanel.get_AlignLeftWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignLeftWithPanelProperty;
end;

class function TRelativePanel.GetAlignLeftWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignLeftWithPanel(element);
end;

class procedure TRelativePanel.SetAlignLeftWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignLeftWithPanel(element, value);
end;

class function TRelativePanel.get_AlignTopWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignTopWithPanelProperty;
end;

class function TRelativePanel.GetAlignTopWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignTopWithPanel(element);
end;

class procedure TRelativePanel.SetAlignTopWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignTopWithPanel(element, value);
end;

class function TRelativePanel.get_AlignRightWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignRightWithPanelProperty;
end;

class function TRelativePanel.GetAlignRightWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignRightWithPanel(element);
end;

class procedure TRelativePanel.SetAlignRightWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignRightWithPanel(element, value);
end;

class function TRelativePanel.get_AlignBottomWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignBottomWithPanelProperty;
end;

class function TRelativePanel.GetAlignBottomWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignBottomWithPanel(element);
end;

class procedure TRelativePanel.SetAlignBottomWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignBottomWithPanel(element, value);
end;

class function TRelativePanel.get_AlignHorizontalCenterWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignHorizontalCenterWithPanelProperty;
end;

class function TRelativePanel.GetAlignHorizontalCenterWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignHorizontalCenterWithPanel(element);
end;

class procedure TRelativePanel.SetAlignHorizontalCenterWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignHorizontalCenterWithPanel(element, value);
end;

class function TRelativePanel.get_AlignVerticalCenterWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignVerticalCenterWithPanelProperty;
end;

class function TRelativePanel.GetAlignVerticalCenterWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignVerticalCenterWithPanel(element);
end;

class procedure TRelativePanel.SetAlignVerticalCenterWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignVerticalCenterWithPanel(element, value);
end;

class function TRelativePanel.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TRelativePanel.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TRelativePanel.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TRelativePanel.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;


class function TRelativePanel.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics2.get_BackgroundSizingProperty;
end;

// Factories for : "RelativePanel"
// Factory: "Windows.UI.Xaml.Controls.IRelativePanelFactory"
// -> IRelativePanelFactory

class function TRelativePanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRelativePanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRichEditBox }

class function TRichEditBox.get_IsReadOnlyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsReadOnlyProperty;
end;

class function TRichEditBox.get_AcceptsReturnProperty: IDependencyProperty;
begin
  Result := Statics.get_AcceptsReturnProperty;
end;

class function TRichEditBox.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TRichEditBox.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TRichEditBox.get_IsSpellCheckEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSpellCheckEnabledProperty;
end;

class function TRichEditBox.get_IsTextPredictionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextPredictionEnabledProperty;
end;

class function TRichEditBox.get_InputScopeProperty: IDependencyProperty;
begin
  Result := Statics.get_InputScopeProperty;
end;


class function TRichEditBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderProperty;
end;

class function TRichEditBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderTemplateProperty;
end;

class function TRichEditBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics2.get_PlaceholderTextProperty;
end;

class function TRichEditBox.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectionHighlightColorProperty;
end;

class function TRichEditBox.get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty;
begin
  Result := Statics2.get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
end;

class function TRichEditBox.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsColorFontEnabledProperty;
end;


class function TRichEditBox.get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty;
begin
  Result := Statics3.get_DesiredCandidateWindowAlignmentProperty;
end;

class function TRichEditBox.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics3.get_TextReadingOrderProperty;
end;


class function TRichEditBox.get_ClipboardCopyFormatProperty: IDependencyProperty;
begin
  Result := Statics4.get_ClipboardCopyFormatProperty;
end;


class function TRichEditBox.get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty;
begin
  Result := Statics5.get_SelectionHighlightColorWhenNotFocusedProperty;
end;

class function TRichEditBox.get_MaxLengthProperty: IDependencyProperty;
begin
  Result := Statics5.get_MaxLengthProperty;
end;


class function TRichEditBox.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics6.get_HorizontalTextAlignmentProperty;
end;

class function TRichEditBox.get_CharacterCasingProperty: IDependencyProperty;
begin
  Result := Statics6.get_CharacterCasingProperty;
end;

class function TRichEditBox.get_DisabledFormattingAcceleratorsProperty: IDependencyProperty;
begin
  Result := Statics6.get_DisabledFormattingAcceleratorsProperty;
end;


class function TRichEditBox.get_ContentLinkForegroundColorProperty: IDependencyProperty;
begin
  Result := Statics7.get_ContentLinkForegroundColorProperty;
end;

class function TRichEditBox.get_ContentLinkBackgroundColorProperty: IDependencyProperty;
begin
  Result := Statics7.get_ContentLinkBackgroundColorProperty;
end;

class function TRichEditBox.get_ContentLinkProvidersProperty: IDependencyProperty;
begin
  Result := Statics7.get_ContentLinkProvidersProperty;
end;

class function TRichEditBox.get_HandwritingViewProperty: IDependencyProperty;
begin
  Result := Statics7.get_HandwritingViewProperty;
end;

class function TRichEditBox.get_IsHandwritingViewEnabledProperty: IDependencyProperty;
begin
  Result := Statics7.get_IsHandwritingViewEnabledProperty;
end;


class function TRichEditBox.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics8.get_SelectionFlyoutProperty;
end;

class function TRichEditBox.get_ProofingMenuFlyoutProperty: IDependencyProperty;
begin
  Result := Statics8.get_ProofingMenuFlyoutProperty;
end;

class function TRichEditBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics8.get_DescriptionProperty;
end;

// Factories for : "RichEditBox"
// Factory: "Windows.UI.Xaml.Controls.IRichEditBoxFactory"
// -> IRichEditBoxFactory

class function TRichEditBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRichEditBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRichTextBlock }

class function TRichTextBlock.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TRichTextBlock.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TRichTextBlock.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TRichTextBlock.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TRichTextBlock.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TRichTextBlock.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TRichTextBlock.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TRichTextBlock.get_TextTrimmingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextTrimmingProperty;
end;

class function TRichTextBlock.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TRichTextBlock.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TRichTextBlock.get_LineHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_LineHeightProperty;
end;

class function TRichTextBlock.get_LineStackingStrategyProperty: IDependencyProperty;
begin
  Result := Statics.get_LineStackingStrategyProperty;
end;

class function TRichTextBlock.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TRichTextBlock.get_OverflowContentTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_OverflowContentTargetProperty;
end;

class function TRichTextBlock.get_IsTextSelectionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextSelectionEnabledProperty;
end;

class function TRichTextBlock.get_HasOverflowContentProperty: IDependencyProperty;
begin
  Result := Statics.get_HasOverflowContentProperty;
end;

class function TRichTextBlock.get_SelectedTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedTextProperty;
end;

class function TRichTextBlock.get_TextIndentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextIndentProperty;
end;


class function TRichTextBlock.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics2.get_MaxLinesProperty;
end;

class function TRichTextBlock.get_TextLineBoundsProperty: IDependencyProperty;
begin
  Result := Statics2.get_TextLineBoundsProperty;
end;

class function TRichTextBlock.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectionHighlightColorProperty;
end;

class function TRichTextBlock.get_OpticalMarginAlignmentProperty: IDependencyProperty;
begin
  Result := Statics2.get_OpticalMarginAlignmentProperty;
end;

class function TRichTextBlock.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsColorFontEnabledProperty;
end;

class function TRichTextBlock.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics2.get_TextReadingOrderProperty;
end;


class function TRichTextBlock.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsTextScaleFactorEnabledProperty;
end;


class function TRichTextBlock.get_TextDecorationsProperty: IDependencyProperty;
begin
  Result := Statics4.get_TextDecorationsProperty;
end;


class function TRichTextBlock.get_IsTextTrimmedProperty: IDependencyProperty;
begin
  Result := Statics5.get_IsTextTrimmedProperty;
end;

class function TRichTextBlock.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics5.get_HorizontalTextAlignmentProperty;
end;


class function TRichTextBlock.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics6.get_SelectionFlyoutProperty;
end;


{ TRichTextBlockOverflow }

class function TRichTextBlockOverflow.get_OverflowContentTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_OverflowContentTargetProperty;
end;

class function TRichTextBlockOverflow.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TRichTextBlockOverflow.get_HasOverflowContentProperty: IDependencyProperty;
begin
  Result := Statics.get_HasOverflowContentProperty;
end;


class function TRichTextBlockOverflow.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics2.get_MaxLinesProperty;
end;


class function TRichTextBlockOverflow.get_IsTextTrimmedProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsTextTrimmedProperty;
end;


{ TRowDefinition }

class function TRowDefinition.get_HeightProperty: IDependencyProperty;
begin
  Result := Statics.get_HeightProperty;
end;

class function TRowDefinition.get_MaxHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHeightProperty;
end;

class function TRowDefinition.get_MinHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MinHeightProperty;
end;


{ TScrollContentPresenter }

class function TScrollContentPresenter.get_CanContentRenderOutsideBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanContentRenderOutsideBoundsProperty;
end;

class function TScrollContentPresenter.get_SizesContentToTemplatedParentProperty: IDependencyProperty;
begin
  Result := Statics.get_SizesContentToTemplatedParentProperty;
end;


{ TScrollViewer }

class function TScrollViewer.get_HorizontalSnapPointsAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSnapPointsAlignmentProperty;
end;

class function TScrollViewer.get_VerticalSnapPointsAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSnapPointsAlignmentProperty;
end;

class function TScrollViewer.get_HorizontalSnapPointsTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSnapPointsTypeProperty;
end;

class function TScrollViewer.get_VerticalSnapPointsTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSnapPointsTypeProperty;
end;

class function TScrollViewer.get_ZoomSnapPointsTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomSnapPointsTypeProperty;
end;

class function TScrollViewer.get_HorizontalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOffsetProperty;
end;

class function TScrollViewer.get_ViewportWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ViewportWidthProperty;
end;

class function TScrollViewer.get_ScrollableWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ScrollableWidthProperty;
end;

class function TScrollViewer.get_ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_ComputedHorizontalScrollBarVisibilityProperty;
end;

class function TScrollViewer.get_ExtentWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ExtentWidthProperty;
end;

class function TScrollViewer.get_VerticalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOffsetProperty;
end;

class function TScrollViewer.get_ViewportHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ViewportHeightProperty;
end;

class function TScrollViewer.get_ScrollableHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ScrollableHeightProperty;
end;

class function TScrollViewer.get_ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_ComputedVerticalScrollBarVisibilityProperty;
end;

class function TScrollViewer.get_ExtentHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ExtentHeightProperty;
end;

class function TScrollViewer.get_MinZoomFactorProperty: IDependencyProperty;
begin
  Result := Statics.get_MinZoomFactorProperty;
end;

class function TScrollViewer.get_MaxZoomFactorProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxZoomFactorProperty;
end;

class function TScrollViewer.get_ZoomFactorProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomFactorProperty;
end;

class function TScrollViewer.get_ZoomSnapPointsProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomSnapPointsProperty;
end;

class function TScrollViewer.get_HorizontalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalScrollBarVisibilityProperty;
end;

class function TScrollViewer.GetHorizontalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility;
begin
  Result := Statics.GetHorizontalScrollBarVisibility(element);
end;

class procedure TScrollViewer.SetHorizontalScrollBarVisibility(element: IDependencyObject; horizontalScrollBarVisibility: ScrollBarVisibility);
begin
  Statics.SetHorizontalScrollBarVisibility(element, horizontalScrollBarVisibility);
end;

class function TScrollViewer.get_VerticalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalScrollBarVisibilityProperty;
end;

class function TScrollViewer.GetVerticalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility;
begin
  Result := Statics.GetVerticalScrollBarVisibility(element);
end;

class procedure TScrollViewer.SetVerticalScrollBarVisibility(element: IDependencyObject; verticalScrollBarVisibility: ScrollBarVisibility);
begin
  Statics.SetVerticalScrollBarVisibility(element, verticalScrollBarVisibility);
end;

class function TScrollViewer.get_IsHorizontalRailEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHorizontalRailEnabledProperty;
end;

class function TScrollViewer.GetIsHorizontalRailEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsHorizontalRailEnabled(element);
end;

class procedure TScrollViewer.SetIsHorizontalRailEnabled(element: IDependencyObject; isHorizontalRailEnabled: Boolean);
begin
  Statics.SetIsHorizontalRailEnabled(element, isHorizontalRailEnabled);
end;

class function TScrollViewer.get_IsVerticalRailEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVerticalRailEnabledProperty;
end;

class function TScrollViewer.GetIsVerticalRailEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsVerticalRailEnabled(element);
end;

class procedure TScrollViewer.SetIsVerticalRailEnabled(element: IDependencyObject; isVerticalRailEnabled: Boolean);
begin
  Statics.SetIsVerticalRailEnabled(element, isVerticalRailEnabled);
end;

class function TScrollViewer.get_IsHorizontalScrollChainingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHorizontalScrollChainingEnabledProperty;
end;

class function TScrollViewer.GetIsHorizontalScrollChainingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsHorizontalScrollChainingEnabled(element);
end;

class procedure TScrollViewer.SetIsHorizontalScrollChainingEnabled(element: IDependencyObject; isHorizontalScrollChainingEnabled: Boolean);
begin
  Statics.SetIsHorizontalScrollChainingEnabled(element, isHorizontalScrollChainingEnabled);
end;

class function TScrollViewer.get_IsVerticalScrollChainingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVerticalScrollChainingEnabledProperty;
end;

class function TScrollViewer.GetIsVerticalScrollChainingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsVerticalScrollChainingEnabled(element);
end;

class procedure TScrollViewer.SetIsVerticalScrollChainingEnabled(element: IDependencyObject; isVerticalScrollChainingEnabled: Boolean);
begin
  Statics.SetIsVerticalScrollChainingEnabled(element, isVerticalScrollChainingEnabled);
end;

class function TScrollViewer.get_IsZoomChainingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomChainingEnabledProperty;
end;

class function TScrollViewer.GetIsZoomChainingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsZoomChainingEnabled(element);
end;

class procedure TScrollViewer.SetIsZoomChainingEnabled(element: IDependencyObject; isZoomChainingEnabled: Boolean);
begin
  Statics.SetIsZoomChainingEnabled(element, isZoomChainingEnabled);
end;

class function TScrollViewer.get_IsScrollInertiaEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsScrollInertiaEnabledProperty;
end;

class function TScrollViewer.GetIsScrollInertiaEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsScrollInertiaEnabled(element);
end;

class procedure TScrollViewer.SetIsScrollInertiaEnabled(element: IDependencyObject; isScrollInertiaEnabled: Boolean);
begin
  Statics.SetIsScrollInertiaEnabled(element, isScrollInertiaEnabled);
end;

class function TScrollViewer.get_IsZoomInertiaEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomInertiaEnabledProperty;
end;

class function TScrollViewer.GetIsZoomInertiaEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsZoomInertiaEnabled(element);
end;

class procedure TScrollViewer.SetIsZoomInertiaEnabled(element: IDependencyObject; isZoomInertiaEnabled: Boolean);
begin
  Statics.SetIsZoomInertiaEnabled(element, isZoomInertiaEnabled);
end;

class function TScrollViewer.get_HorizontalScrollModeProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalScrollModeProperty;
end;

class function TScrollViewer.GetHorizontalScrollMode(element: IDependencyObject): ScrollMode;
begin
  Result := Statics.GetHorizontalScrollMode(element);
end;

class procedure TScrollViewer.SetHorizontalScrollMode(element: IDependencyObject; horizontalScrollMode: ScrollMode);
begin
  Statics.SetHorizontalScrollMode(element, horizontalScrollMode);
end;

class function TScrollViewer.get_VerticalScrollModeProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalScrollModeProperty;
end;

class function TScrollViewer.GetVerticalScrollMode(element: IDependencyObject): ScrollMode;
begin
  Result := Statics.GetVerticalScrollMode(element);
end;

class procedure TScrollViewer.SetVerticalScrollMode(element: IDependencyObject; verticalScrollMode: ScrollMode);
begin
  Statics.SetVerticalScrollMode(element, verticalScrollMode);
end;

class function TScrollViewer.get_ZoomModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomModeProperty;
end;

class function TScrollViewer.GetZoomMode(element: IDependencyObject): ZoomMode;
begin
  Result := Statics.GetZoomMode(element);
end;

class procedure TScrollViewer.SetZoomMode(element: IDependencyObject; zoomMode: ZoomMode);
begin
  Statics.SetZoomMode(element, zoomMode);
end;

class function TScrollViewer.get_IsDeferredScrollingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDeferredScrollingEnabledProperty;
end;

class function TScrollViewer.GetIsDeferredScrollingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsDeferredScrollingEnabled(element);
end;

class procedure TScrollViewer.SetIsDeferredScrollingEnabled(element: IDependencyObject; isDeferredScrollingEnabled: Boolean);
begin
  Statics.SetIsDeferredScrollingEnabled(element, isDeferredScrollingEnabled);
end;

class function TScrollViewer.get_BringIntoViewOnFocusChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_BringIntoViewOnFocusChangeProperty;
end;

class function TScrollViewer.GetBringIntoViewOnFocusChange(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetBringIntoViewOnFocusChange(element);
end;

class procedure TScrollViewer.SetBringIntoViewOnFocusChange(element: IDependencyObject; bringIntoViewOnFocusChange: Boolean);
begin
  Statics.SetBringIntoViewOnFocusChange(element, bringIntoViewOnFocusChange);
end;


class function TScrollViewer.get_TopLeftHeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_TopLeftHeaderProperty;
end;

class function TScrollViewer.get_LeftHeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_LeftHeaderProperty;
end;

class function TScrollViewer.get_TopHeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_TopHeaderProperty;
end;


class function TScrollViewer.get_ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty;
begin
  Result := Statics3.get_ReduceViewportForCoreInputViewOcclusionsProperty;
end;

class function TScrollViewer.get_HorizontalAnchorRatioProperty: IDependencyProperty;
begin
  Result := Statics3.get_HorizontalAnchorRatioProperty;
end;

class function TScrollViewer.get_VerticalAnchorRatioProperty: IDependencyProperty;
begin
  Result := Statics3.get_VerticalAnchorRatioProperty;
end;

class function TScrollViewer.get_CanContentRenderOutsideBoundsProperty: IDependencyProperty;
begin
  Result := Statics3.get_CanContentRenderOutsideBoundsProperty;
end;

class function TScrollViewer.GetCanContentRenderOutsideBounds(element: IDependencyObject): Boolean;
begin
  Result := Statics3.GetCanContentRenderOutsideBounds(element);
end;

class procedure TScrollViewer.SetCanContentRenderOutsideBounds(element: IDependencyObject; canContentRenderOutsideBounds: Boolean);
begin
  Statics3.SetCanContentRenderOutsideBounds(element, canContentRenderOutsideBounds);
end;


{ TScrollViewerViewChangedEventArgs }

{ TSearchBox }

class function TSearchBox.get_SearchHistoryEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_SearchHistoryEnabledProperty;
end;

class function TSearchBox.get_SearchHistoryContextProperty: IDependencyProperty;
begin
  Result := Statics.get_SearchHistoryContextProperty;
end;

class function TSearchBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TSearchBox.get_QueryTextProperty: IDependencyProperty;
begin
  Result := Statics.get_QueryTextProperty;
end;

class function TSearchBox.get_FocusOnKeyboardInputProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusOnKeyboardInputProperty;
end;

class function TSearchBox.get_ChooseSuggestionOnEnterProperty: IDependencyProperty;
begin
  Result := Statics.get_ChooseSuggestionOnEnterProperty;
end;

// Factories for : "SearchBox"
// Factory: "Windows.UI.Xaml.Controls.ISearchBoxFactory"
// -> ISearchBoxFactory

class function TSearchBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISearchBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSearchBoxResultSuggestionChosenEventArgs }

{ TSectionsInViewChangedEventArgs }
// Factories for : "SectionsInViewChangedEventArgs"
// Factory: "Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory"
// -> ISectionsInViewChangedEventArgsFactory


{ TSelectionChangedEventArgs }
// Factories for : "SelectionChangedEventArgs"
// Factory: "Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory"
// -> ISelectionChangedEventArgsFactory

class function TSelectionChangedEventArgs.CreateInstanceWithRemovedItemsAndAddedItems(removedItems: IVector_1__IInspectable; addedItems: IVector_1__IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): ISelectionChangedEventArgs;
begin
  Result := Factory.CreateInstanceWithRemovedItemsAndAddedItems(removedItems, addedItems, baseInterface, innerInterface);
end;


{ TSemanticZoom }

class function TSemanticZoom.get_ZoomedInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomedInViewProperty;
end;

class function TSemanticZoom.get_ZoomedOutViewProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomedOutViewProperty;
end;

class function TSemanticZoom.get_IsZoomedInViewActiveProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomedInViewActiveProperty;
end;

class function TSemanticZoom.get_CanChangeViewsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanChangeViewsProperty;
end;

class function TSemanticZoom.get_IsZoomOutButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomOutButtonEnabledProperty;
end;


{ TSemanticZoomLocation }

{ TSemanticZoomViewChangedEventArgs }

{ TSettingsFlyout }

class function TSettingsFlyout.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TSettingsFlyout.get_HeaderBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderBackgroundProperty;
end;

class function TSettingsFlyout.get_HeaderForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderForegroundProperty;
end;

class function TSettingsFlyout.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

// Factories for : "SettingsFlyout"
// Factory: "Windows.UI.Xaml.Controls.ISettingsFlyoutFactory"
// -> ISettingsFlyoutFactory

class function TSettingsFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISettingsFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSplitButton }

class function TSplitButton.get_FlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_FlyoutProperty;
end;

class function TSplitButton.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TSplitButton.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;

// Factories for : "SplitButton"
// Factory: "Windows.UI.Xaml.Controls.ISplitButtonFactory"
// -> ISplitButtonFactory

class function TSplitButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSplitButtonAutomationPeer }
// Factories for : "SplitButtonAutomationPeer"
// Factory: "Windows.UI.Xaml.Controls.ISplitButtonAutomationPeerFactory"
// -> ISplitButtonAutomationPeerFactory

class function TSplitButtonAutomationPeer.CreateInstance(owner: ISplitButton; baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButtonAutomationPeer;
begin
  Result := Factory.CreateInstance(owner, baseInterface, innerInterface);
end;


{ TSplitView }

class function TSplitView.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TSplitView.get_PaneProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneProperty;
end;

class function TSplitView.get_IsPaneOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPaneOpenProperty;
end;

class function TSplitView.get_OpenPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_OpenPaneLengthProperty;
end;

class function TSplitView.get_CompactPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactPaneLengthProperty;
end;

class function TSplitView.get_PanePlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PanePlacementProperty;
end;

class function TSplitView.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TSplitView.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;

class function TSplitView.get_PaneBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneBackgroundProperty;
end;


class function TSplitView.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_LightDismissOverlayModeProperty;
end;

// Factories for : "SplitView"
// Factory: "Windows.UI.Xaml.Controls.ISplitViewFactory"
// -> ISplitViewFactory

class function TSplitView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TStackPanel }

class function TStackPanel.get_AreScrollSnapPointsRegularProperty: IDependencyProperty;
begin
  Result := Statics.get_AreScrollSnapPointsRegularProperty;
end;

class function TStackPanel.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;


class function TStackPanel.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics2.get_BorderBrushProperty;
end;

class function TStackPanel.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics2.get_BorderThicknessProperty;
end;

class function TStackPanel.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics2.get_CornerRadiusProperty;
end;

class function TStackPanel.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics2.get_PaddingProperty;
end;


class function TStackPanel.get_SpacingProperty: IDependencyProperty;
begin
  Result := Statics3.get_SpacingProperty;
end;


class function TStackPanel.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics4.get_BackgroundSizingProperty;
end;

// Factories for : "StackPanel"
// Factory: "Windows.UI.Xaml.Controls.IStackPanelFactory"
// -> IStackPanelFactory

class function TStackPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TStyleSelector }
// Factories for : "StyleSelector"
// Factory: "Windows.UI.Xaml.Controls.IStyleSelectorFactory"
// -> IStyleSelectorFactory

class function TStyleSelector.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStyleSelector;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwapChainBackgroundPanel }
// Factories for : "SwapChainBackgroundPanel"
// Factory: "Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory"
// -> ISwapChainBackgroundPanelFactory

class function TSwapChainBackgroundPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainBackgroundPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwapChainPanel }

class function TSwapChainPanel.get_CompositionScaleXProperty: IDependencyProperty;
begin
  Result := Statics.get_CompositionScaleXProperty;
end;

class function TSwapChainPanel.get_CompositionScaleYProperty: IDependencyProperty;
begin
  Result := Statics.get_CompositionScaleYProperty;
end;

// Factories for : "SwapChainPanel"
// Factory: "Windows.UI.Xaml.Controls.ISwapChainPanelFactory"
// -> ISwapChainPanelFactory

class function TSwapChainPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwipeControl }

class function TSwipeControl.get_LeftItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftItemsProperty;
end;

class function TSwipeControl.get_RightItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_RightItemsProperty;
end;

class function TSwipeControl.get_TopItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_TopItemsProperty;
end;

class function TSwipeControl.get_BottomItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_BottomItemsProperty;
end;

// Factories for : "SwipeControl"
// Factory: "Windows.UI.Xaml.Controls.ISwipeControlFactory"
// -> ISwipeControlFactory

class function TSwipeControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwipeItem }

class function TSwipeItem.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

class function TSwipeItem.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TSwipeItem.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TSwipeItem.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TSwipeItem.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TSwipeItem.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;

class function TSwipeItem.get_BehaviorOnInvokedProperty: IDependencyProperty;
begin
  Result := Statics.get_BehaviorOnInvokedProperty;
end;

// Factories for : "SwipeItem"
// Factory: "Windows.UI.Xaml.Controls.ISwipeItemFactory"
// -> ISwipeItemFactory

class function TSwipeItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwipeItems }

class function TSwipeItems.get_ModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ModeProperty;
end;

// Factories for : "SwipeItems"
// Factory: "Windows.UI.Xaml.Controls.ISwipeItemsFactory"
// -> ISwipeItemsFactory

class function TSwipeItems.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItems;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSymbolIcon }

class function TSymbolIcon.get_SymbolProperty: IDependencyProperty;
begin
  Result := Statics.get_SymbolProperty;
end;

// Factories for : "SymbolIcon"
// Factory: "Windows.UI.Xaml.Controls.ISymbolIconFactory"
// -> ISymbolIconFactory

class function TSymbolIcon.CreateInstanceWithSymbol(symbol: Symbol): ISymbolIcon;
begin
  Result := Factory.CreateInstanceWithSymbol(symbol);
end;


{ TSymbolIconSource }

class function TSymbolIconSource.get_SymbolProperty: IDependencyProperty;
begin
  Result := Statics.get_SymbolProperty;
end;

// Factories for : "SymbolIconSource"
// Factory: "Windows.UI.Xaml.Controls.ISymbolIconSourceFactory"
// -> ISymbolIconSourceFactory

class function TSymbolIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISymbolIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTextBlock }

class function TTextBlock.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TTextBlock.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TTextBlock.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TTextBlock.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TTextBlock.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TTextBlock.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TTextBlock.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TTextBlock.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TTextBlock.get_TextTrimmingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextTrimmingProperty;
end;

class function TTextBlock.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TTextBlock.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TTextBlock.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TTextBlock.get_LineHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_LineHeightProperty;
end;

class function TTextBlock.get_LineStackingStrategyProperty: IDependencyProperty;
begin
  Result := Statics.get_LineStackingStrategyProperty;
end;

class function TTextBlock.get_IsTextSelectionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextSelectionEnabledProperty;
end;

class function TTextBlock.get_SelectedTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedTextProperty;
end;


class function TTextBlock.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectionHighlightColorProperty;
end;

class function TTextBlock.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics2.get_MaxLinesProperty;
end;

class function TTextBlock.get_TextLineBoundsProperty: IDependencyProperty;
begin
  Result := Statics2.get_TextLineBoundsProperty;
end;

class function TTextBlock.get_OpticalMarginAlignmentProperty: IDependencyProperty;
begin
  Result := Statics2.get_OpticalMarginAlignmentProperty;
end;

class function TTextBlock.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsColorFontEnabledProperty;
end;

class function TTextBlock.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics2.get_TextReadingOrderProperty;
end;


class function TTextBlock.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics3.get_IsTextScaleFactorEnabledProperty;
end;


class function TTextBlock.get_TextDecorationsProperty: IDependencyProperty;
begin
  Result := Statics4.get_TextDecorationsProperty;
end;


class function TTextBlock.get_IsTextTrimmedProperty: IDependencyProperty;
begin
  Result := Statics5.get_IsTextTrimmedProperty;
end;

class function TTextBlock.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics5.get_HorizontalTextAlignmentProperty;
end;


class function TTextBlock.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics6.get_SelectionFlyoutProperty;
end;


{ TTextBox }

class function TTextBox.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TTextBox.get_MaxLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLengthProperty;
end;

class function TTextBox.get_IsReadOnlyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsReadOnlyProperty;
end;

class function TTextBox.get_AcceptsReturnProperty: IDependencyProperty;
begin
  Result := Statics.get_AcceptsReturnProperty;
end;

class function TTextBox.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TTextBox.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TTextBox.get_IsSpellCheckEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSpellCheckEnabledProperty;
end;

class function TTextBox.get_IsTextPredictionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextPredictionEnabledProperty;
end;

class function TTextBox.get_InputScopeProperty: IDependencyProperty;
begin
  Result := Statics.get_InputScopeProperty;
end;


class function TTextBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderProperty;
end;

class function TTextBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_HeaderTemplateProperty;
end;

class function TTextBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics2.get_PlaceholderTextProperty;
end;

class function TTextBox.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectionHighlightColorProperty;
end;

class function TTextBox.get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty;
begin
  Result := Statics2.get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
end;

class function TTextBox.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsColorFontEnabledProperty;
end;


class function TTextBox.get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty;
begin
  Result := Statics3.get_DesiredCandidateWindowAlignmentProperty;
end;

class function TTextBox.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics3.get_TextReadingOrderProperty;
end;


class function TTextBox.get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty;
begin
  Result := Statics4.get_SelectionHighlightColorWhenNotFocusedProperty;
end;


class function TTextBox.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics5.get_HorizontalTextAlignmentProperty;
end;

class function TTextBox.get_CharacterCasingProperty: IDependencyProperty;
begin
  Result := Statics5.get_CharacterCasingProperty;
end;

class function TTextBox.get_PlaceholderForegroundProperty: IDependencyProperty;
begin
  Result := Statics5.get_PlaceholderForegroundProperty;
end;


class function TTextBox.get_HandwritingViewProperty: IDependencyProperty;
begin
  Result := Statics6.get_HandwritingViewProperty;
end;

class function TTextBox.get_IsHandwritingViewEnabledProperty: IDependencyProperty;
begin
  Result := Statics6.get_IsHandwritingViewEnabledProperty;
end;


class function TTextBox.get_CanPasteClipboardContentProperty: IDependencyProperty;
begin
  Result := Statics7.get_CanPasteClipboardContentProperty;
end;

class function TTextBox.get_CanUndoProperty: IDependencyProperty;
begin
  Result := Statics7.get_CanUndoProperty;
end;

class function TTextBox.get_CanRedoProperty: IDependencyProperty;
begin
  Result := Statics7.get_CanRedoProperty;
end;

class function TTextBox.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics7.get_SelectionFlyoutProperty;
end;

class function TTextBox.get_ProofingMenuFlyoutProperty: IDependencyProperty;
begin
  Result := Statics7.get_ProofingMenuFlyoutProperty;
end;

class function TTextBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics7.get_DescriptionProperty;
end;

// Factories for : "TextBox"
// Factory: "Windows.UI.Xaml.Controls.ITextBoxFactory"
// -> ITextBoxFactory

class function TTextBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTextCommandBarFlyout }
// Factories for : "TextCommandBarFlyout"
// Factory: "Windows.UI.Xaml.Controls.ITextCommandBarFlyoutFactory"
// -> ITextCommandBarFlyoutFactory

class function TTextCommandBarFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextCommandBarFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTimePickedEventArgs }

{ TTimePicker }

class function TTimePicker.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TTimePicker.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TTimePicker.get_ClockIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_ClockIdentifierProperty;
end;

class function TTimePicker.get_MinuteIncrementProperty: IDependencyProperty;
begin
  Result := Statics.get_MinuteIncrementProperty;
end;

class function TTimePicker.get_TimeProperty: IDependencyProperty;
begin
  Result := Statics.get_TimeProperty;
end;


class function TTimePicker.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_LightDismissOverlayModeProperty;
end;


class function TTimePicker.get_SelectedTimeProperty: IDependencyProperty;
begin
  Result := Statics3.get_SelectedTimeProperty;
end;

// Factories for : "TimePicker"
// Factory: "Windows.UI.Xaml.Controls.ITimePickerFactory"
// -> ITimePickerFactory

class function TTimePicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITimePicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTimePickerFlyout }

class function TTimePickerFlyout.get_ClockIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_ClockIdentifierProperty;
end;

class function TTimePickerFlyout.get_TimeProperty: IDependencyProperty;
begin
  Result := Statics.get_TimeProperty;
end;

class function TTimePickerFlyout.get_MinuteIncrementProperty: IDependencyProperty;
begin
  Result := Statics.get_MinuteIncrementProperty;
end;


{ TTimePickerFlyoutPresenter }

class function TTimePickerFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;


{ TToggleMenuFlyoutItem }

class function TToggleMenuFlyoutItem.get_IsCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCheckedProperty;
end;

// Factories for : "ToggleMenuFlyoutItem"
// Factory: "Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory"
// -> IToggleMenuFlyoutItemFactory

class function TToggleMenuFlyoutItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleMenuFlyoutItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TToggleSplitButton }
// Factories for : "ToggleSplitButton"
// Factory: "Windows.UI.Xaml.Controls.IToggleSplitButtonFactory"
// -> IToggleSplitButtonFactory

class function TToggleSplitButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TToggleSplitButtonAutomationPeer }
// Factories for : "ToggleSplitButtonAutomationPeer"
// Factory: "Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory"
// -> IToggleSplitButtonAutomationPeerFactory

class function TToggleSplitButtonAutomationPeer.CreateInstance(owner: IToggleSplitButton; baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButtonAutomationPeer;
begin
  Result := Factory.CreateInstance(owner, baseInterface, innerInterface);
end;


{ TToggleSwitch }

class function TToggleSwitch.get_IsOnProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOnProperty;
end;

class function TToggleSwitch.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TToggleSwitch.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TToggleSwitch.get_OnContentProperty: IDependencyProperty;
begin
  Result := Statics.get_OnContentProperty;
end;

class function TToggleSwitch.get_OnContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_OnContentTemplateProperty;
end;

class function TToggleSwitch.get_OffContentProperty: IDependencyProperty;
begin
  Result := Statics.get_OffContentProperty;
end;

class function TToggleSwitch.get_OffContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_OffContentTemplateProperty;
end;


{ TToolTip }

class function TToolTip.get_HorizontalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOffsetProperty;
end;

class function TToolTip.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TToolTip.get_PlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementProperty;
end;

class function TToolTip.get_PlacementTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementTargetProperty;
end;

class function TToolTip.get_VerticalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOffsetProperty;
end;


class function TToolTip.get_PlacementRectProperty: IDependencyProperty;
begin
  Result := Statics2.get_PlacementRectProperty;
end;

// Factories for : "ToolTip"
// Factory: "Windows.UI.Xaml.Controls.IToolTipFactory"
// -> IToolTipFactory

class function TToolTip.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToolTip;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TToolTipService }

class function TToolTipService.get_PlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementProperty;
end;

class function TToolTipService.GetPlacement(element: IDependencyObject): Primitives_PlacementMode;
begin
  Result := Statics.GetPlacement(element);
end;

class procedure TToolTipService.SetPlacement(element: IDependencyObject; value: Primitives_PlacementMode);
begin
  Statics.SetPlacement(element, value);
end;

class function TToolTipService.get_PlacementTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementTargetProperty;
end;

class function TToolTipService.GetPlacementTarget(element: IDependencyObject): IUIElement;
begin
  Result := Statics.GetPlacementTarget(element);
end;

class procedure TToolTipService.SetPlacementTarget(element: IDependencyObject; value: IUIElement);
begin
  Statics.SetPlacementTarget(element, value);
end;

class function TToolTipService.get_ToolTipProperty: IDependencyProperty;
begin
  Result := Statics.get_ToolTipProperty;
end;

class function TToolTipService.GetToolTip(element: IDependencyObject): IInspectable;
begin
  Result := Statics.GetToolTip(element);
end;

class procedure TToolTipService.SetToolTip(element: IDependencyObject; value: IInspectable);
begin
  Statics.SetToolTip(element, value);
end;


{ TTreeView }

class function TTreeView.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;


class function TTreeView.get_CanDragItemsProperty: IDependencyProperty;
begin
  Result := Statics2.get_CanDragItemsProperty;
end;

class function TTreeView.get_CanReorderItemsProperty: IDependencyProperty;
begin
  Result := Statics2.get_CanReorderItemsProperty;
end;

class function TTreeView.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemTemplateProperty;
end;

class function TTreeView.get_ItemTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemTemplateSelectorProperty;
end;

class function TTreeView.get_ItemContainerStyleProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemContainerStyleProperty;
end;

class function TTreeView.get_ItemContainerStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemContainerStyleSelectorProperty;
end;

class function TTreeView.get_ItemContainerTransitionsProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemContainerTransitionsProperty;
end;

class function TTreeView.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemsSourceProperty;
end;

// Factories for : "TreeView"
// Factory: "Windows.UI.Xaml.Controls.ITreeViewFactory"
// -> ITreeViewFactory

class function TTreeView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewItem }

class function TTreeViewItem.get_GlyphOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphOpacityProperty;
end;

class function TTreeViewItem.get_GlyphBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphBrushProperty;
end;

class function TTreeViewItem.get_ExpandedGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_ExpandedGlyphProperty;
end;

class function TTreeViewItem.get_CollapsedGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_CollapsedGlyphProperty;
end;

class function TTreeViewItem.get_GlyphSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphSizeProperty;
end;

class function TTreeViewItem.get_IsExpandedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsExpandedProperty;
end;

class function TTreeViewItem.get_TreeViewItemTemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TreeViewItemTemplateSettingsProperty;
end;


class function TTreeViewItem.get_HasUnrealizedChildrenProperty: IDependencyProperty;
begin
  Result := Statics2.get_HasUnrealizedChildrenProperty;
end;

class function TTreeViewItem.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemsSourceProperty;
end;

// Factories for : "TreeViewItem"
// Factory: "Windows.UI.Xaml.Controls.ITreeViewItemFactory"
// -> ITreeViewItemFactory

class function TTreeViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewItemTemplateSettings }

class function TTreeViewItemTemplateSettings.get_ExpandedGlyphVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_ExpandedGlyphVisibilityProperty;
end;

class function TTreeViewItemTemplateSettings.get_CollapsedGlyphVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_CollapsedGlyphVisibilityProperty;
end;

class function TTreeViewItemTemplateSettings.get_IndentationProperty: IDependencyProperty;
begin
  Result := Statics.get_IndentationProperty;
end;

class function TTreeViewItemTemplateSettings.get_DragItemsCountProperty: IDependencyProperty;
begin
  Result := Statics.get_DragItemsCountProperty;
end;

// Factories for : "TreeViewItemTemplateSettings"
// Factory: "Windows.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory"
// -> ITreeViewItemTemplateSettingsFactory

class function TTreeViewItemTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItemTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewList }
// Factories for : "TreeViewList"
// Factory: "Windows.UI.Xaml.Controls.ITreeViewListFactory"
// -> ITreeViewListFactory

class function TTreeViewList.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewList;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewNode }

class function TTreeViewNode.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TTreeViewNode.get_DepthProperty: IDependencyProperty;
begin
  Result := Statics.get_DepthProperty;
end;

class function TTreeViewNode.get_IsExpandedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsExpandedProperty;
end;

class function TTreeViewNode.get_HasChildrenProperty: IDependencyProperty;
begin
  Result := Statics.get_HasChildrenProperty;
end;

// Factories for : "TreeViewNode"
// Factory: "Windows.UI.Xaml.Controls.ITreeViewNodeFactory"
// -> ITreeViewNodeFactory

class function TTreeViewNode.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewNode;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTwoPaneView }

class function TTwoPaneView.get_Pane1Property: IDependencyProperty;
begin
  Result := Statics.get_Pane1Property;
end;

class function TTwoPaneView.get_Pane2Property: IDependencyProperty;
begin
  Result := Statics.get_Pane2Property;
end;

class function TTwoPaneView.get_Pane1LengthProperty: IDependencyProperty;
begin
  Result := Statics.get_Pane1LengthProperty;
end;

class function TTwoPaneView.get_Pane2LengthProperty: IDependencyProperty;
begin
  Result := Statics.get_Pane2LengthProperty;
end;

class function TTwoPaneView.get_PanePriorityProperty: IDependencyProperty;
begin
  Result := Statics.get_PanePriorityProperty;
end;

class function TTwoPaneView.get_ModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ModeProperty;
end;

class function TTwoPaneView.get_WideModeConfigurationProperty: IDependencyProperty;
begin
  Result := Statics.get_WideModeConfigurationProperty;
end;

class function TTwoPaneView.get_TallModeConfigurationProperty: IDependencyProperty;
begin
  Result := Statics.get_TallModeConfigurationProperty;
end;

class function TTwoPaneView.get_MinWideModeWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MinWideModeWidthProperty;
end;

class function TTwoPaneView.get_MinTallModeHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MinTallModeHeightProperty;
end;

// Factories for : "TwoPaneView"
// Factory: "Windows.UI.Xaml.Controls.ITwoPaneViewFactory"
// -> ITwoPaneViewFactory

class function TTwoPaneView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITwoPaneView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TVariableSizedWrapGrid }

class function TVariableSizedWrapGrid.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TVariableSizedWrapGrid.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TVariableSizedWrapGrid.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TVariableSizedWrapGrid.get_HorizontalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalChildrenAlignmentProperty;
end;

class function TVariableSizedWrapGrid.get_VerticalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalChildrenAlignmentProperty;
end;

class function TVariableSizedWrapGrid.get_MaximumRowsOrColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumRowsOrColumnsProperty;
end;

class function TVariableSizedWrapGrid.get_RowSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_RowSpanProperty;
end;

class function TVariableSizedWrapGrid.GetRowSpan(element: IUIElement): Integer;
begin
  Result := Statics.GetRowSpan(element);
end;

class procedure TVariableSizedWrapGrid.SetRowSpan(element: IUIElement; value: Integer);
begin
  Statics.SetRowSpan(element, value);
end;

class function TVariableSizedWrapGrid.get_ColumnSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnSpanProperty;
end;

class function TVariableSizedWrapGrid.GetColumnSpan(element: IUIElement): Integer;
begin
  Result := Statics.GetColumnSpan(element);
end;

class procedure TVariableSizedWrapGrid.SetColumnSpan(element: IUIElement; value: Integer);
begin
  Statics.SetColumnSpan(element, value);
end;


{ TViewbox }

class function TViewbox.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TViewbox.get_StretchDirectionProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchDirectionProperty;
end;


{ TVirtualizingStackPanel }

class function TVirtualizingStackPanel.get_AreScrollSnapPointsRegularProperty: IDependencyProperty;
begin
  Result := Statics.get_AreScrollSnapPointsRegularProperty;
end;

class function TVirtualizingStackPanel.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TVirtualizingStackPanel.get_VirtualizationModeProperty: IDependencyProperty;
begin
  Result := Statics.get_VirtualizationModeProperty;
end;

class function TVirtualizingStackPanel.GetVirtualizationMode(element: IDependencyObject): VirtualizationMode;
begin
  Result := Statics.GetVirtualizationMode(element);
end;

class procedure TVirtualizingStackPanel.SetVirtualizationMode(element: IDependencyObject; value: VirtualizationMode);
begin
  Statics.SetVirtualizationMode(element, value);
end;

class function TVirtualizingStackPanel.get_IsVirtualizingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVirtualizingProperty;
end;

class function TVirtualizingStackPanel.GetIsVirtualizing(o: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsVirtualizing(o);
end;


{ TWebView }

class function TWebView.get_AnyScriptNotifyUri: IVector_1__IUriRuntimeClass;
begin
  Result := Statics.get_AnyScriptNotifyUri;
end;

class function TWebView.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TWebView.get_AllowedScriptNotifyUrisProperty: IDependencyProperty;
begin
  Result := Statics.get_AllowedScriptNotifyUrisProperty;
end;

class function TWebView.get_DataTransferPackageProperty: IDependencyProperty;
begin
  Result := Statics.get_DataTransferPackageProperty;
end;


class function TWebView.get_CanGoBackProperty: IDependencyProperty;
begin
  Result := Statics2.get_CanGoBackProperty;
end;

class function TWebView.get_CanGoForwardProperty: IDependencyProperty;
begin
  Result := Statics2.get_CanGoForwardProperty;
end;

class function TWebView.get_DocumentTitleProperty: IDependencyProperty;
begin
  Result := Statics2.get_DocumentTitleProperty;
end;

class function TWebView.get_DefaultBackgroundColorProperty: IDependencyProperty;
begin
  Result := Statics2.get_DefaultBackgroundColorProperty;
end;


class function TWebView.get_ContainsFullScreenElementProperty: IDependencyProperty;
begin
  Result := Statics3.get_ContainsFullScreenElementProperty;
end;


class function TWebView.get_DefaultExecutionMode: WebViewExecutionMode;
begin
  Result := Statics4.get_DefaultExecutionMode;
end;

class function TWebView.ClearTemporaryWebDataAsync: IAsyncAction;
begin
  Result := Statics4.ClearTemporaryWebDataAsync;
end;


class function TWebView.get_XYFocusLeftProperty: IDependencyProperty;
begin
  Result := Statics5.get_XYFocusLeftProperty;
end;

class function TWebView.get_XYFocusRightProperty: IDependencyProperty;
begin
  Result := Statics5.get_XYFocusRightProperty;
end;

class function TWebView.get_XYFocusUpProperty: IDependencyProperty;
begin
  Result := Statics5.get_XYFocusUpProperty;
end;

class function TWebView.get_XYFocusDownProperty: IDependencyProperty;
begin
  Result := Statics5.get_XYFocusDownProperty;
end;

// Factories for : "WebView"
// Factory: "Windows.UI.Xaml.Controls.IWebViewFactory4"
// -> IWebViewFactory4

class function TWebView.CreateInstanceWithExecutionMode(executionMode: WebViewExecutionMode): IWebView;
begin
  Result := Factory.CreateInstanceWithExecutionMode(executionMode);
end;


{ TWebViewBrush }

class function TWebViewBrush.get_SourceNameProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceNameProperty;
end;


{ TWrapGrid }

class function TWrapGrid.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TWrapGrid.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TWrapGrid.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TWrapGrid.get_HorizontalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalChildrenAlignmentProperty;
end;

class function TWrapGrid.get_VerticalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalChildrenAlignmentProperty;
end;

class function TWrapGrid.get_MaximumRowsOrColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumRowsOrColumnsProperty;
end;


end.
